{"mappings":"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","sources":["client/dist/kinectron.umd.js","node_modules/peerjs-js-binarypack/dist/binarypack.mjs","node_modules/webrtc-adapter/src/js/utils.js","node_modules/webrtc-adapter/src/js/chrome/getusermedia.js","node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js","node_modules/webrtc-adapter/src/js/firefox/getusermedia.js","node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js","node_modules/webrtc-adapter/src/js/firefox/getdisplaymedia.js","node_modules/webrtc-adapter/src/js/safari/safari_shim.js","node_modules/sdp/sdp.js","node_modules/webrtc-adapter/src/js/common_shim.js","node_modules/webrtc-adapter/src/js/adapter_core.js","node_modules/webrtc-adapter/src/js/adapter_factory.js","node_modules/peerjs/dist/bundler.mjs","client/src/peer/errors.js","client/src/peer/peerConfig.js","client/src/peer/ngrokState.js","client/src/utils/debug.js","client/src/peer/peerConnection.js","client/src/utils/imageProcessing.js","client/src/streams/streamHandlers.js","client/src/index.js","client/src/kinectron.js"],"sourcesContent":[null,"class $e8379818650e2442$export$93654d4f2d6cd524 {\n    constructor(){\n        this.encoder = new TextEncoder();\n        this._pieces = [];\n        this._parts = [];\n    }\n    append_buffer(data) {\n        this.flush();\n        this._parts.push(data);\n    }\n    append(data) {\n        this._pieces.push(data);\n    }\n    flush() {\n        if (this._pieces.length > 0) {\n            const buf = new Uint8Array(this._pieces);\n            this._parts.push(buf);\n            this._pieces = [];\n        }\n    }\n    toArrayBuffer() {\n        const buffer = [];\n        for (const part of this._parts)buffer.push(part);\n        return $e8379818650e2442$var$concatArrayBuffers(buffer).buffer;\n    }\n}\nfunction $e8379818650e2442$var$concatArrayBuffers(bufs) {\n    let size = 0;\n    for (const buf of bufs)size += buf.byteLength;\n    const result = new Uint8Array(size);\n    let offset = 0;\n    for (const buf of bufs){\n        const view = new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n        result.set(view, offset);\n        offset += buf.byteLength;\n    }\n    return result;\n}\n\n\nfunction $0cfd7828ad59115f$export$417857010dc9287f(data) {\n    const unpacker = new $0cfd7828ad59115f$var$Unpacker(data);\n    return unpacker.unpack();\n}\nfunction $0cfd7828ad59115f$export$2a703dbb0cb35339(data) {\n    const packer = new $0cfd7828ad59115f$export$b9ec4b114aa40074();\n    const res = packer.pack(data);\n    if (res instanceof Promise) return res.then(()=>packer.getBuffer());\n    return packer.getBuffer();\n}\nclass $0cfd7828ad59115f$var$Unpacker {\n    constructor(data){\n        this.index = 0;\n        this.dataBuffer = data;\n        this.dataView = new Uint8Array(this.dataBuffer);\n        this.length = this.dataBuffer.byteLength;\n    }\n    unpack() {\n        const type = this.unpack_uint8();\n        if (type < 0x80) return type;\n        else if ((type ^ 0xe0) < 0x20) return (type ^ 0xe0) - 0x20;\n        let size;\n        if ((size = type ^ 0xa0) <= 0x0f) return this.unpack_raw(size);\n        else if ((size = type ^ 0xb0) <= 0x0f) return this.unpack_string(size);\n        else if ((size = type ^ 0x90) <= 0x0f) return this.unpack_array(size);\n        else if ((size = type ^ 0x80) <= 0x0f) return this.unpack_map(size);\n        switch(type){\n            case 0xc0:\n                return null;\n            case 0xc1:\n                return undefined;\n            case 0xc2:\n                return false;\n            case 0xc3:\n                return true;\n            case 0xca:\n                return this.unpack_float();\n            case 0xcb:\n                return this.unpack_double();\n            case 0xcc:\n                return this.unpack_uint8();\n            case 0xcd:\n                return this.unpack_uint16();\n            case 0xce:\n                return this.unpack_uint32();\n            case 0xcf:\n                return this.unpack_uint64();\n            case 0xd0:\n                return this.unpack_int8();\n            case 0xd1:\n                return this.unpack_int16();\n            case 0xd2:\n                return this.unpack_int32();\n            case 0xd3:\n                return this.unpack_int64();\n            case 0xd4:\n                return undefined;\n            case 0xd5:\n                return undefined;\n            case 0xd6:\n                return undefined;\n            case 0xd7:\n                return undefined;\n            case 0xd8:\n                size = this.unpack_uint16();\n                return this.unpack_string(size);\n            case 0xd9:\n                size = this.unpack_uint32();\n                return this.unpack_string(size);\n            case 0xda:\n                size = this.unpack_uint16();\n                return this.unpack_raw(size);\n            case 0xdb:\n                size = this.unpack_uint32();\n                return this.unpack_raw(size);\n            case 0xdc:\n                size = this.unpack_uint16();\n                return this.unpack_array(size);\n            case 0xdd:\n                size = this.unpack_uint32();\n                return this.unpack_array(size);\n            case 0xde:\n                size = this.unpack_uint16();\n                return this.unpack_map(size);\n            case 0xdf:\n                size = this.unpack_uint32();\n                return this.unpack_map(size);\n        }\n    }\n    unpack_uint8() {\n        const byte = this.dataView[this.index] & 0xff;\n        this.index++;\n        return byte;\n    }\n    unpack_uint16() {\n        const bytes = this.read(2);\n        const uint16 = (bytes[0] & 0xff) * 256 + (bytes[1] & 0xff);\n        this.index += 2;\n        return uint16;\n    }\n    unpack_uint32() {\n        const bytes = this.read(4);\n        const uint32 = ((bytes[0] * 256 + bytes[1]) * 256 + bytes[2]) * 256 + bytes[3];\n        this.index += 4;\n        return uint32;\n    }\n    unpack_uint64() {\n        const bytes = this.read(8);\n        const uint64 = ((((((bytes[0] * 256 + bytes[1]) * 256 + bytes[2]) * 256 + bytes[3]) * 256 + bytes[4]) * 256 + bytes[5]) * 256 + bytes[6]) * 256 + bytes[7];\n        this.index += 8;\n        return uint64;\n    }\n    unpack_int8() {\n        const uint8 = this.unpack_uint8();\n        return uint8 < 0x80 ? uint8 : uint8 - 256;\n    }\n    unpack_int16() {\n        const uint16 = this.unpack_uint16();\n        return uint16 < 0x8000 ? uint16 : uint16 - 65536;\n    }\n    unpack_int32() {\n        const uint32 = this.unpack_uint32();\n        return uint32 < 2 ** 31 ? uint32 : uint32 - 2 ** 32;\n    }\n    unpack_int64() {\n        const uint64 = this.unpack_uint64();\n        return uint64 < 2 ** 63 ? uint64 : uint64 - 2 ** 64;\n    }\n    unpack_raw(size) {\n        if (this.length < this.index + size) throw new Error(`BinaryPackFailure: index is out of range ${this.index} ${size} ${this.length}`);\n        const buf = this.dataBuffer.slice(this.index, this.index + size);\n        this.index += size;\n        return buf;\n    }\n    unpack_string(size) {\n        const bytes = this.read(size);\n        let i = 0;\n        let str = \"\";\n        let c;\n        let code;\n        while(i < size){\n            c = bytes[i];\n            // The length of a UTF-8 sequence is specified in the first byte:\n            // 0xxxxxxx means length 1,\n            // 110xxxxx means length 2,\n            // 1110xxxx means length 3,\n            // 11110xxx means length 4.\n            // 10xxxxxx is for non-initial bytes.\n            if (c < 0xa0) {\n                // One-byte sequence: bits 0xxxxxxx\n                code = c;\n                i++;\n            } else if ((c ^ 0xc0) < 0x20) {\n                // Two-byte sequence: bits 110xxxxx 10xxxxxx\n                code = (c & 0x1f) << 6 | bytes[i + 1] & 0x3f;\n                i += 2;\n            } else if ((c ^ 0xe0) < 0x10) {\n                // Three-byte sequence: bits 1110xxxx 10xxxxxx 10xxxxxx\n                code = (c & 0x0f) << 12 | (bytes[i + 1] & 0x3f) << 6 | bytes[i + 2] & 0x3f;\n                i += 3;\n            } else {\n                // Four-byte sequence: bits 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n                code = (c & 0x07) << 18 | (bytes[i + 1] & 0x3f) << 12 | (bytes[i + 2] & 0x3f) << 6 | bytes[i + 3] & 0x3f;\n                i += 4;\n            }\n            str += String.fromCodePoint(code);\n        }\n        this.index += size;\n        return str;\n    }\n    unpack_array(size) {\n        const objects = new Array(size);\n        for(let i = 0; i < size; i++)objects[i] = this.unpack();\n        return objects;\n    }\n    unpack_map(size) {\n        const map = {};\n        for(let i = 0; i < size; i++){\n            const key = this.unpack();\n            map[key] = this.unpack();\n        }\n        return map;\n    }\n    unpack_float() {\n        const uint32 = this.unpack_uint32();\n        const sign = uint32 >> 31;\n        const exp = (uint32 >> 23 & 0xff) - 127;\n        const fraction = uint32 & 0x7fffff | 0x800000;\n        return (sign === 0 ? 1 : -1) * fraction * 2 ** (exp - 23);\n    }\n    unpack_double() {\n        const h32 = this.unpack_uint32();\n        const l32 = this.unpack_uint32();\n        const sign = h32 >> 31;\n        const exp = (h32 >> 20 & 0x7ff) - 1023;\n        const hfrac = h32 & 0xfffff | 0x100000;\n        const frac = hfrac * 2 ** (exp - 20) + l32 * 2 ** (exp - 52);\n        return (sign === 0 ? 1 : -1) * frac;\n    }\n    read(length) {\n        const j = this.index;\n        if (j + length <= this.length) return this.dataView.subarray(j, j + length);\n        else throw new Error(\"BinaryPackFailure: read index out of range\");\n    }\n}\nclass $0cfd7828ad59115f$export$b9ec4b114aa40074 {\n    getBuffer() {\n        return this._bufferBuilder.toArrayBuffer();\n    }\n    pack(value) {\n        if (typeof value === \"string\") this.pack_string(value);\n        else if (typeof value === \"number\") {\n            if (Math.floor(value) === value) this.pack_integer(value);\n            else this.pack_double(value);\n        } else if (typeof value === \"boolean\") {\n            if (value === true) this._bufferBuilder.append(0xc3);\n            else if (value === false) this._bufferBuilder.append(0xc2);\n        } else if (value === undefined) this._bufferBuilder.append(0xc0);\n        else if (typeof value === \"object\") {\n            if (value === null) this._bufferBuilder.append(0xc0);\n            else {\n                const constructor = value.constructor;\n                if (value instanceof Array) {\n                    const res = this.pack_array(value);\n                    if (res instanceof Promise) return res.then(()=>this._bufferBuilder.flush());\n                } else if (value instanceof ArrayBuffer) this.pack_bin(new Uint8Array(value));\n                else if (\"BYTES_PER_ELEMENT\" in value) {\n                    const v = value;\n                    this.pack_bin(new Uint8Array(v.buffer, v.byteOffset, v.byteLength));\n                } else if (value instanceof Date) this.pack_string(value.toString());\n                else if (value instanceof Blob) return value.arrayBuffer().then((buffer)=>{\n                    this.pack_bin(new Uint8Array(buffer));\n                    this._bufferBuilder.flush();\n                });\n                else if (constructor == Object || constructor.toString().startsWith(\"class\")) {\n                    const res = this.pack_object(value);\n                    if (res instanceof Promise) return res.then(()=>this._bufferBuilder.flush());\n                } else throw new Error(`Type \"${constructor.toString()}\" not yet supported`);\n            }\n        } else throw new Error(`Type \"${typeof value}\" not yet supported`);\n        this._bufferBuilder.flush();\n    }\n    pack_bin(blob) {\n        const length = blob.length;\n        if (length <= 0x0f) this.pack_uint8(0xa0 + length);\n        else if (length <= 0xffff) {\n            this._bufferBuilder.append(0xda);\n            this.pack_uint16(length);\n        } else if (length <= 0xffffffff) {\n            this._bufferBuilder.append(0xdb);\n            this.pack_uint32(length);\n        } else throw new Error(\"Invalid length\");\n        this._bufferBuilder.append_buffer(blob);\n    }\n    pack_string(str) {\n        const encoded = this._textEncoder.encode(str);\n        const length = encoded.length;\n        if (length <= 0x0f) this.pack_uint8(0xb0 + length);\n        else if (length <= 0xffff) {\n            this._bufferBuilder.append(0xd8);\n            this.pack_uint16(length);\n        } else if (length <= 0xffffffff) {\n            this._bufferBuilder.append(0xd9);\n            this.pack_uint32(length);\n        } else throw new Error(\"Invalid length\");\n        this._bufferBuilder.append_buffer(encoded);\n    }\n    pack_array(ary) {\n        const length = ary.length;\n        if (length <= 0x0f) this.pack_uint8(0x90 + length);\n        else if (length <= 0xffff) {\n            this._bufferBuilder.append(0xdc);\n            this.pack_uint16(length);\n        } else if (length <= 0xffffffff) {\n            this._bufferBuilder.append(0xdd);\n            this.pack_uint32(length);\n        } else throw new Error(\"Invalid length\");\n        const packNext = (index)=>{\n            if (index < length) {\n                const res = this.pack(ary[index]);\n                if (res instanceof Promise) return res.then(()=>packNext(index + 1));\n                return packNext(index + 1);\n            }\n        };\n        return packNext(0);\n    }\n    pack_integer(num) {\n        if (num >= -32 && num <= 0x7f) this._bufferBuilder.append(num & 0xff);\n        else if (num >= 0x00 && num <= 0xff) {\n            this._bufferBuilder.append(0xcc);\n            this.pack_uint8(num);\n        } else if (num >= -128 && num <= 0x7f) {\n            this._bufferBuilder.append(0xd0);\n            this.pack_int8(num);\n        } else if (num >= 0x0000 && num <= 0xffff) {\n            this._bufferBuilder.append(0xcd);\n            this.pack_uint16(num);\n        } else if (num >= -32768 && num <= 0x7fff) {\n            this._bufferBuilder.append(0xd1);\n            this.pack_int16(num);\n        } else if (num >= 0x00000000 && num <= 0xffffffff) {\n            this._bufferBuilder.append(0xce);\n            this.pack_uint32(num);\n        } else if (num >= -2147483648 && num <= 0x7fffffff) {\n            this._bufferBuilder.append(0xd2);\n            this.pack_int32(num);\n        } else if (num >= -9223372036854776000 && num <= 0x7fffffffffffffff) {\n            this._bufferBuilder.append(0xd3);\n            this.pack_int64(num);\n        } else if (num >= 0x0000000000000000 && num <= 0xffffffffffffffff) {\n            this._bufferBuilder.append(0xcf);\n            this.pack_uint64(num);\n        } else throw new Error(\"Invalid integer\");\n    }\n    pack_double(num) {\n        let sign = 0;\n        if (num < 0) {\n            sign = 1;\n            num = -num;\n        }\n        const exp = Math.floor(Math.log(num) / Math.LN2);\n        const frac0 = num / 2 ** exp - 1;\n        const frac1 = Math.floor(frac0 * 2 ** 52);\n        const b32 = 2 ** 32;\n        const h32 = sign << 31 | exp + 1023 << 20 | frac1 / b32 & 0x0fffff;\n        const l32 = frac1 % b32;\n        this._bufferBuilder.append(0xcb);\n        this.pack_int32(h32);\n        this.pack_int32(l32);\n    }\n    pack_object(obj) {\n        const keys = Object.keys(obj);\n        const length = keys.length;\n        if (length <= 0x0f) this.pack_uint8(0x80 + length);\n        else if (length <= 0xffff) {\n            this._bufferBuilder.append(0xde);\n            this.pack_uint16(length);\n        } else if (length <= 0xffffffff) {\n            this._bufferBuilder.append(0xdf);\n            this.pack_uint32(length);\n        } else throw new Error(\"Invalid length\");\n        const packNext = (index)=>{\n            if (index < keys.length) {\n                const prop = keys[index];\n                // eslint-disable-next-line no-prototype-builtins\n                if (obj.hasOwnProperty(prop)) {\n                    this.pack(prop);\n                    const res = this.pack(obj[prop]);\n                    if (res instanceof Promise) return res.then(()=>packNext(index + 1));\n                }\n                return packNext(index + 1);\n            }\n        };\n        return packNext(0);\n    }\n    pack_uint8(num) {\n        this._bufferBuilder.append(num);\n    }\n    pack_uint16(num) {\n        this._bufferBuilder.append(num >> 8);\n        this._bufferBuilder.append(num & 0xff);\n    }\n    pack_uint32(num) {\n        const n = num & 0xffffffff;\n        this._bufferBuilder.append((n & 0xff000000) >>> 24);\n        this._bufferBuilder.append((n & 0x00ff0000) >>> 16);\n        this._bufferBuilder.append((n & 0x0000ff00) >>> 8);\n        this._bufferBuilder.append(n & 0x000000ff);\n    }\n    pack_uint64(num) {\n        const high = num / 2 ** 32;\n        const low = num % 2 ** 32;\n        this._bufferBuilder.append((high & 0xff000000) >>> 24);\n        this._bufferBuilder.append((high & 0x00ff0000) >>> 16);\n        this._bufferBuilder.append((high & 0x0000ff00) >>> 8);\n        this._bufferBuilder.append(high & 0x000000ff);\n        this._bufferBuilder.append((low & 0xff000000) >>> 24);\n        this._bufferBuilder.append((low & 0x00ff0000) >>> 16);\n        this._bufferBuilder.append((low & 0x0000ff00) >>> 8);\n        this._bufferBuilder.append(low & 0x000000ff);\n    }\n    pack_int8(num) {\n        this._bufferBuilder.append(num & 0xff);\n    }\n    pack_int16(num) {\n        this._bufferBuilder.append((num & 0xff00) >> 8);\n        this._bufferBuilder.append(num & 0xff);\n    }\n    pack_int32(num) {\n        this._bufferBuilder.append(num >>> 24 & 0xff);\n        this._bufferBuilder.append((num & 0x00ff0000) >>> 16);\n        this._bufferBuilder.append((num & 0x0000ff00) >>> 8);\n        this._bufferBuilder.append(num & 0x000000ff);\n    }\n    pack_int64(num) {\n        const high = Math.floor(num / 2 ** 32);\n        const low = num % 2 ** 32;\n        this._bufferBuilder.append((high & 0xff000000) >>> 24);\n        this._bufferBuilder.append((high & 0x00ff0000) >>> 16);\n        this._bufferBuilder.append((high & 0x0000ff00) >>> 8);\n        this._bufferBuilder.append(high & 0x000000ff);\n        this._bufferBuilder.append((low & 0xff000000) >>> 24);\n        this._bufferBuilder.append((low & 0x00ff0000) >>> 16);\n        this._bufferBuilder.append((low & 0x0000ff00) >>> 8);\n        this._bufferBuilder.append(low & 0x000000ff);\n    }\n    constructor(){\n        this._bufferBuilder = new (0, $e8379818650e2442$export$93654d4f2d6cd524)();\n        this._textEncoder = new TextEncoder();\n    }\n}\n\n\nexport {$0cfd7828ad59115f$export$417857010dc9287f as unpack, $0cfd7828ad59115f$export$2a703dbb0cb35339 as pack, $0cfd7828ad59115f$export$b9ec4b114aa40074 as Packer};\n//# sourceMappingURL=binarypack.mjs.map\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nlet logDisabled_ = true;\nlet deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nexport function extractVersion(uastring, expr, pos) {\n  const match = uastring.match(expr);\n  return match && match.length >= pos && parseFloat(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nexport function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  const nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    const wrappedCallback = (e) => {\n      const modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        if (cb.handleEvent) {\n          cb.handleEvent(modifiedEvent);\n        } else {\n          cb(modifiedEvent);\n        }\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    if (!this._eventMap[eventNameToWrap]) {\n      this._eventMap[eventNameToWrap] = new Map();\n    }\n    this._eventMap[eventNameToWrap].set(cb, wrappedCallback);\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  const nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[eventNameToWrap]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    if (!this._eventMap[eventNameToWrap].has(cb)) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    const unwrappedCb = this._eventMap[eventNameToWrap].get(cb);\n    this._eventMap[eventNameToWrap].delete(cb);\n    if (this._eventMap[eventNameToWrap].size === 0) {\n      delete this._eventMap[eventNameToWrap];\n    }\n    if (Object.keys(this._eventMap).length === 0) {\n      delete this._eventMap;\n    }\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n          this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n          this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nexport function disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return (bool) ? 'adapter.js logging disabled' :\n    'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nexport function disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\n\nexport function log() {\n  if (typeof window === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nexport function deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n      ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nexport function detectBrowser(window) {\n  // Returned result object.\n  const result = {browser: null, version: null};\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator ||\n      !window.navigator.userAgent) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  const {navigator} = window;\n\n  // Prefer navigator.userAgentData.\n  if (navigator.userAgentData && navigator.userAgentData.brands) {\n    const chromium = navigator.userAgentData.brands.find((brand) => {\n      return brand.brand === 'Chromium';\n    });\n    if (chromium) {\n      return {browser: 'chrome', version: parseInt(chromium.version, 10)};\n    }\n  }\n\n  if (navigator.mozGetUserMedia) { // Firefox.\n    result.browser = 'firefox';\n    result.version = parseInt(extractVersion(navigator.userAgent,\n      /Firefox\\/(\\d+)\\./, 1));\n  } else if (navigator.webkitGetUserMedia ||\n      (window.isSecureContext === false && window.webkitRTCPeerConnection)) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n    // more complicated fallback to webkitRTCPeerConnection.\n    result.browser = 'chrome';\n    result.version = parseInt(extractVersion(navigator.userAgent,\n      /Chrom(e|ium)\\/(\\d+)\\./, 2));\n  } else if (window.RTCPeerConnection &&\n      navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n    result.browser = 'safari';\n    result.version = parseInt(extractVersion(navigator.userAgent,\n      /AppleWebKit\\/(\\d+)\\./, 1));\n    result.supportsUnifiedPlan = window.RTCRtpTransceiver &&\n        'currentDirection' in window.RTCRtpTransceiver.prototype;\n    // Only for internal usage.\n    result._safariVersion = extractVersion(navigator.userAgent,\n      /Version\\/(\\d+(\\.?\\d+))/, 1);\n  } else { // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n\n/**\n * Checks if something is an object.\n *\n * @param {*} val The something you want to check.\n * @return true if val is an object, false otherwise.\n */\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\nexport function compactObject(data) {\n  if (!isObject(data)) {\n    return data;\n  }\n\n  return Object.keys(data).reduce(function(accumulator, key) {\n    const isObj = isObject(data[key]);\n    const value = isObj ? compactObject(data[key]) : data[key];\n    const isEmptyObject = isObj && !Object.keys(value).length;\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n    return Object.assign(accumulator, {[key]: value});\n  }, {});\n}\n\n/* iterates the stats graph recursively. */\nexport function walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(name => {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(id => {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nexport function filterStats(result, track, outbound) {\n  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  const filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  const trackStats = [];\n  result.forEach(value => {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(trackStat => {\n    result.forEach(stats => {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\nconst logging = utils.log;\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  const constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    const cc = {};\n    Object.keys(c).forEach(key => {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      const r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      const oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        let oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(mix => {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  const shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      const remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      let face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      const getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        let matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n            .then(devices => {\n              devices = devices.filter(d => d.kind === 'videoinput');\n              let dev = devices.find(d => matches.some(match =>\n                d.label.toLowerCase().includes(match)));\n              if (!dev && devices.length && matches.includes('back')) {\n                dev = devices[devices.length - 1]; // more likely the back cam\n              }\n              if (dev) {\n                constraints.video.deviceId = face.exact\n                  ? {exact: dev.deviceId}\n                  : {ideal: dev.deviceId};\n              }\n              constraints.video = constraintsToChrome_(constraints.video);\n              logging('chrome: ' + JSON.stringify(constraints));\n              return func(constraints);\n            });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  const shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  const getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, c => {\n      navigator.webkitGetUserMedia(c, onSuccess, e => {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  if (navigator.mediaDevices.getUserMedia) {\n    const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(track => {\n            track.stop();\n          });\n          throw new DOMException('', 'NotFoundError');\n        }\n        return stream;\n      }, e => Promise.reject(shimError_(e))));\n    };\n  }\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\n\nexport {shimGetUserMedia} from './getusermedia';\n\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n      window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get() {\n        return this._ontrack;\n      },\n      set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    const origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        if (!this._ontrackpoly) {\n          this._ontrackpoly = (e) => {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', te => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === te.track.id);\n              } else {\n                receiver = {track: te.track};\n              }\n\n              const event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(track => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === track.id);\n              } else {\n                receiver = {track};\n              }\n              const event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n          };\n          this.addEventListener('addstream', this._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(this, arguments);\n      };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver',\n          {value: {receiver: e.receiver}});\n      }\n      return e;\n    });\n  }\n}\n\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      !('getSenders' in window.RTCPeerConnection.prototype) &&\n      'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    const shimSenderWithDtmf = function(pc, track) {\n      return {\n        track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack =\n        function addTrack(track, stream) {\n          let sender = origAddTrack.apply(this, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(this, track);\n            this._senders.push(sender);\n          }\n          return sender;\n        };\n\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack =\n        function removeTrack(sender) {\n          origRemoveTrack.apply(this, arguments);\n          const idx = this._senders.indexOf(sender);\n          if (idx !== -1) {\n            this._senders.splice(idx, 1);\n          }\n        };\n    }\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        this._senders.push(shimSenderWithDtmf(this, track));\n      });\n    };\n\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        this._senders = this._senders || [];\n        origRemoveStream.apply(this, [stream]);\n\n        stream.getTracks().forEach(track => {\n          const sender = this._senders.find(s => s.track === track);\n          if (sender) { // remove sender\n            this._senders.splice(this._senders.indexOf(sender), 1);\n          }\n        });\n      };\n  } else if (typeof window === 'object' && window.RTCPeerConnection &&\n             'getSenders' in window.RTCPeerConnection.prototype &&\n             'createDTMFSender' in window.RTCPeerConnection.prototype &&\n             window.RTCRtpSender &&\n             !('dtmf' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach(sender => sender._pc = this);\n        return senders;\n      };\n    }\n\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      const sender = this;\n      return this._pc.getStats().then(result =>\n        /* Note: this will include stats of all senders that\n         *   send a track with the same id as sender.track as\n         *   it is not possible to identify the RTCRtpSender.\n         */\n        utils.filterStats(result, sender.track, true));\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers =\n        function getReceivers() {\n          const receivers = origGetReceivers.apply(this, []);\n          receivers.forEach(receiver => receiver._pc = this);\n          return receivers;\n        };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      const receiver = this;\n      return this._pc.getStats().then(result =>\n        utils.filterStats(result, receiver.track, false));\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype &&\n      'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 &&\n        arguments[0] instanceof window.MediaStreamTrack) {\n      const track = arguments[0];\n      let sender;\n      let receiver;\n      let err;\n      this.getSenders().forEach(s => {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(r => {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || (sender && receiver)) {\n        return Promise.reject(new DOMException(\n          'There are more than one sender or receiver for the track.',\n          'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException(\n        'There is no sender or receiver for the track.',\n        'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      return Object.keys(this._shimmedLocalStreams)\n        .map(streamId => this._shimmedLocalStreams[streamId][0]);\n    };\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (!stream) {\n        return origAddTrack.apply(this, arguments);\n      }\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      const sender = origAddTrack.apply(this, arguments);\n      if (!this._shimmedLocalStreams[stream.id]) {\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n        this._shimmedLocalStreams[stream.id].push(sender);\n      }\n      return sender;\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n    });\n    const existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    const newSenders = this.getSenders()\n      .filter(newSender => existingSenders.indexOf(newSender) === -1);\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      delete this._shimmedLocalStreams[stream.id];\n      return origRemoveStream.apply(this, arguments);\n    };\n\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      if (sender) {\n        Object.keys(this._shimmedLocalStreams).forEach(streamId => {\n          const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n          if (idx !== -1) {\n            this._shimmedLocalStreams[streamId].splice(idx, 1);\n          }\n          if (this._shimmedLocalStreams[streamId].length === 1) {\n            delete this._shimmedLocalStreams[streamId];\n          }\n        });\n      }\n      return origRemoveTrack.apply(this, arguments);\n    };\n}\n\nexport function shimAddTrackRemoveTrack(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack &&\n      browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  const origGetLocalStreams = window.RTCPeerConnection.prototype\n    .getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      const nativeStreams = origGetLocalStreams.apply(this);\n      this._reverseStreams = this._reverseStreams || {};\n      return nativeStreams.map(stream => this._reverseStreams[stream.id]);\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      const newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n\n      origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);\n      delete this._reverseStreams[(this._streams[stream.id] ?\n        this._streams[stream.id].id : stream.id)];\n      delete this._streams[stream.id];\n    };\n\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      const streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(t => t === track)) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n      const oldStream = this._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(() => {\n          this.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        const newStream = new window.MediaStream([track]);\n        this._streams[stream.id] = newStream;\n        this._reverseStreams[newStream.id] = stream;\n        this.addStream(newStream);\n      }\n      return this.getSenders().find(s => s.track === track);\n    };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n        externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n        internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\n    const methodObj = {[method]() {\n      const args = arguments;\n      const isLegacyCall = arguments.length &&\n          typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [\n          (description) => {\n            const desc = replaceInternalStreamId(this, description);\n            args[0].apply(null, [desc]);\n          },\n          (err) => {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]\n        ]);\n      }\n      return nativeMethod.apply(this, arguments)\n        .then(description => replaceInternalStreamId(this, description));\n    }};\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n\n  const origSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(this, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(this, arguments[0]);\n      return origSetLocalDescription.apply(this, arguments);\n    };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  const origLocalDescription = Object.getOwnPropertyDescriptor(\n    window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype,\n    'localDescription', {\n      get() {\n        const description = origLocalDescription.get.apply(this);\n        if (description.type === '') {\n          return description;\n        }\n        return replaceInternalStreamId(this, description);\n      }\n    });\n\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      const isLocal = sender._pc === this;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n          'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      this._streams = this._streams || {};\n      let stream;\n      Object.keys(this._streams).forEach(streamid => {\n        const hasTrack = this._streams[streamid].getTracks()\n          .find(track => sender.track === track);\n        if (hasTrack) {\n          stream = this._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          this.removeStream(this._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        this.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        const methodObj = {[method]() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n            window.RTCIceCandidate :\n            window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        }};\n        window.RTCPeerConnection.prototype[method] = methodObj[method];\n      });\n  }\n}\n\n// Attempt to fix ONN in plan-b mode.\nexport function fixNegotiationNeeded(window, browserDetails) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\n    const pc = e.target;\n    if (browserDetails.version < 72 || (pc.getConfiguration &&\n        pc.getConfiguration().sdpSemantics === 'plan-b')) {\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n    }\n    return e;\n  });\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n      'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints =\n        MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        const methodObj = {[method]() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n            window.RTCIceCandidate :\n            window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        }};\n        window.RTCPeerConnection.prototype[method] = methodObj[method];\n      });\n  }\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) :\n      Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(sender => {\n        if (sender.track && stream.getTracks().includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n\nexport function shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver =\n      function addTransceiver() {\n        this.setParametersPromises = [];\n        // WebIDL input coercion and validation\n        let sendEncodings = arguments[1] && arguments[1].sendEncodings;\n        if (sendEncodings === undefined) {\n          sendEncodings = [];\n        }\n        sendEncodings = [...sendEncodings];\n        const shouldPerformCheck = sendEncodings.length > 0;\n        if (shouldPerformCheck) {\n          // If sendEncodings params are provided, validate grammar\n          sendEncodings.forEach((encodingParam) => {\n            if ('rid' in encodingParam) {\n              const ridRegex = /^[a-z0-9]{0,16}$/i;\n              if (!ridRegex.test(encodingParam.rid)) {\n                throw new TypeError('Invalid RID value provided.');\n              }\n            }\n            if ('scaleResolutionDownBy' in encodingParam) {\n              if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n                throw new RangeError('scale_resolution_down_by must be >= 1.0');\n              }\n            }\n            if ('maxFramerate' in encodingParam) {\n              if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n                throw new RangeError('max_framerate must be >= 0.0');\n              }\n            }\n          });\n        }\n        const transceiver = origAddTransceiver.apply(this, arguments);\n        if (shouldPerformCheck) {\n          // Check if the init options were applied. If not we do this in an\n          // asynchronous way and save the promise reference in a global object.\n          // This is an ugly hack, but at the same time is way more robust than\n          // checking the sender parameters before and after the createOffer\n          // Also note that after the createoffer we are not 100% sure that\n          // the params were asynchronously applied so we might miss the\n          // opportunity to recreate offer.\n          const {sender} = transceiver;\n          const params = sender.getParameters();\n          if (!('encodings' in params) ||\n              // Avoid being fooled by patched getParameters() below.\n              (params.encodings.length === 1 &&\n               Object.keys(params.encodings[0]).length === 0)) {\n            params.encodings = sendEncodings;\n            sender.sendEncodings = sendEncodings;\n            this.setParametersPromises.push(sender.setParameters(params)\n              .then(() => {\n                delete sender.sendEncodings;\n              }).catch(() => {\n                delete sender.sendEncodings;\n              })\n            );\n          }\n        }\n        return transceiver;\n      };\n  }\n}\n\nexport function shimGetParameters(window) {\n  if (!(typeof window === 'object' && window.RTCRtpSender)) {\n    return;\n  }\n  const origGetParameters = window.RTCRtpSender.prototype.getParameters;\n  if (origGetParameters) {\n    window.RTCRtpSender.prototype.getParameters =\n      function getParameters() {\n        const params = origGetParameters.apply(this, arguments);\n        if (!('encodings' in params)) {\n          params.encodings = [].concat(this.sendEncodings || [{}]);\n        }\n        return params;\n      };\n  }\n}\n\nexport function shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n        .then(() => {\n          return origCreateOffer.apply(this, arguments);\n        })\n        .finally(() => {\n          this.setParametersPromises = [];\n        });\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n\nexport function shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n        .then(() => {\n          return origCreateAnswer.apply(this, arguments);\n        })\n        .finally(() => {\n          this.setParametersPromises = [];\n        });\n    }\n    return origCreateAnswer.apply(this, arguments);\n  };\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      if (!(constraints && constraints.video)) {\n        const err = new DOMException('getDisplayMedia without video ' +\n            'constraints is undefined');\n        err.name = 'NotFoundError';\n        // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n        err.code = 8;\n        return Promise.reject(err);\n      }\n      if (constraints.video === true) {\n        constraints.video = {mediaSource: preferredMediaSource};\n      } else {\n        constraints.video.mediaSource = preferredMediaSource;\n      }\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nimport * as utils from '../utils';\n\nexport function shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams =\n      function getLocalStreams() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      // Try to emulate Chrome's behaviour of adding in audio-video order.\n      // Safari orders by track id.\n      stream.getAudioTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n      stream.getVideoTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n    };\n\n    window.RTCPeerConnection.prototype.addTrack =\n      function addTrack(track, ...streams) {\n        if (streams) {\n          streams.forEach((stream) => {\n            if (!this._localStreams) {\n              this._localStreams = [stream];\n            } else if (!this._localStreams.includes(stream)) {\n              this._localStreams.push(stream);\n            }\n          });\n        }\n        return _addTrack.apply(this, arguments);\n      };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        const index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        const tracks = stream.getTracks();\n        this.getSenders().forEach(sender => {\n          if (tracks.includes(sender.track)) {\n            this.removeTrack(sender);\n          }\n        });\n      };\n  }\n}\n\nexport function shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams =\n      function getRemoteStreams() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get() {\n        return this._onaddstream;\n      },\n      set(f) {\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = (e) => {\n          e.streams.forEach(stream => {\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.includes(stream)) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            this.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        const pc = this;\n        if (!this._onaddstreampoly) {\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            e.streams.forEach(stream => {\n              if (!pc._remoteStreams) {\n                pc._remoteStreams = [];\n              }\n              if (pc._remoteStreams.indexOf(stream) >= 0) {\n                return;\n              }\n              pc._remoteStreams.push(stream);\n              const event = new Event('addstream');\n              event.stream = stream;\n              pc.dispatchEvent(event);\n            });\n          });\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n  }\n}\n\nexport function shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  const prototype = window.RTCPeerConnection.prototype;\n  const origCreateOffer = prototype.createOffer;\n  const origCreateAnswer = prototype.createAnswer;\n  const setLocalDescription = prototype.setLocalDescription;\n  const setRemoteDescription = prototype.setRemoteDescription;\n  const addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer =\n    function createOffer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  prototype.createAnswer =\n    function createAnswer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  let withCallback = function(description, successCallback, failureCallback) {\n    const promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function(description, successCallback, failureCallback) {\n    const promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function(candidate, successCallback, failureCallback) {\n    const promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    const mediaDevices = navigator.mediaDevices;\n    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = (constraints) => {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices &&\n    navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function getUserMedia(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints)\n        .then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nexport function shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({},\n      constraints,\n      {video: utils.compactObject(constraints.video)}\n    );\n  }\n\n  return constraints;\n}\n\nexport function shimRTCIceServerUrls(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  const OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection =\n    function RTCPeerConnection(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        const newIceServers = [];\n        for (let i = 0; i < pcConfig.iceServers.length; i++) {\n          let server = pcConfig.iceServers[i];\n          if (server.urls === undefined && server.url) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in OrigPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nexport function shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      'receiver' in window.RTCTrackEvent.prototype &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimCreateOfferLegacy(window) {\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer =\n    function createOffer(offerOptions) {\n      if (offerOptions) {\n        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveAudio =\n            !!offerOptions.offerToReceiveAudio;\n        }\n        const audioTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'audio');\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('sendonly');\n            } else {\n              audioTransceiver.direction = 'sendonly';\n            }\n          } else if (audioTransceiver.direction === 'recvonly') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('inactive');\n            } else {\n              audioTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          this.addTransceiver('audio', {direction: 'recvonly'});\n        }\n\n        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveVideo =\n            !!offerOptions.offerToReceiveVideo;\n        }\n        const videoTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'video');\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('sendonly');\n            } else {\n              videoTransceiver.direction = 'sendonly';\n            }\n          } else if (videoTransceiver.direction === 'recvonly') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('inactive');\n            } else {\n              videoTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          this.addTransceiver('video', {direction: 'recvonly'});\n        }\n      }\n      return origCreateOffer.apply(this, arguments);\n    };\n}\n\nexport function shimAudioContext(window) {\n  if (typeof window !== 'object' || window.AudioContext) {\n    return;\n  }\n  window.AudioContext = window.webkitAudioContext;\n}\n\n","/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nconst SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substring(2, 12);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(line => line.trim());\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  const parts = blob.split('\\nm=');\n  return parts.map((part, index) => (index > 0 ?\n    'm=' + part : part).trim() + '\\r\\n');\n};\n\n// Returns the session description.\nSDPUtils.getDescription = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// Returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(line => line.indexOf(prefix) === 0);\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\n// Input can be prefixed with a=.\nSDPUtils.parseCandidate = function(line) {\n  let parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  const candidate = {\n    foundation: parts[0],\n    component: {1: 'rtp', 2: 'rtcp'}[parts[1]] || parts[1],\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7],\n  };\n\n  for (let i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compatibility.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag. Don't overwrite.\n        if (candidate[parts[i]] === undefined) {\n          candidate[parts[i]] = parts[i + 1];\n        }\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\n// This does not include the a= prefix!\nSDPUtils.writeCandidate = function(candidate) {\n  const sdp = [];\n  sdp.push(candidate.foundation);\n\n  const component = candidate.component;\n  if (component === 'rtp') {\n    sdp.push(1);\n  } else if (component === 'rtcp') {\n    sdp.push(2);\n  } else {\n    sdp.push(component);\n  }\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  const type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// Sample input:\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substring(14).split(' ');\n};\n\n// Parses a rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  let parts = line.substring(9).split(' ');\n  const parsed = {\n    payloadType: parseInt(parts.shift(), 10), // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generates a rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  const channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses a extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1],\n    attributes: parts.slice(2).join(' '),\n  };\n};\n\n// Generates an extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri +\n      (headerExtension.attributes ? ' ' + headerExtension.attributes : '') +\n      '\\r\\n';\n};\n\n// Parses a fmtp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  const parsed = {};\n  let kv;\n  const parts = line.substring(line.indexOf(' ') + 1).split(';');\n  for (let j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates a fmtp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  let line = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    const params = [];\n    Object.keys(codec.parameters).forEach(param => {\n      if (codec.parameters[param] !== undefined) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses a rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  const parts = line.substring(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' '),\n  };\n};\n\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  let lines = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(fb => {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses a RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  const sp = line.indexOf(' ');\n  const parts = {\n    ssrc: parseInt(line.substring(7, sp), 10),\n  };\n  const colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substring(sp + 1, colon);\n    parts.value = line.substring(colon + 1);\n  } else {\n    parts.attribute = line.substring(sp + 1);\n  }\n  return parts;\n};\n\n// Parse a ssrc-group line (see RFC 5576). Sample input:\n// a=ssrc-group:semantics 12 34\nSDPUtils.parseSsrcGroup = function(line) {\n  const parts = line.substring(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(ssrc => parseInt(ssrc, 10)),\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// Returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  const mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substring(6);\n  }\n};\n\n// Parses a fingerprint line for DTLS-SRTP.\nSDPUtils.parseFingerprint = function(line) {\n  const parts = line.substring(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1].toUpperCase(), // the definition is upper-case in RFC 4572.\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint),\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  let sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(fp => {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  const parts = keyParams.substring(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES parameters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  const ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  const pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substring(12),\n    password: pwd.substring(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  let sdp = 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n  if (params.iceLite) {\n    sdp += 'a=ice-lite\\r\\n';\n  }\n  return sdp;\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  const description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: [],\n  };\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  description.profile = mline[2];\n  for (let i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    const pt = mline[i];\n    const rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      const codec = SDPUtils.parseRtpMap(rtpmapline);\n      const fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(line => {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  const wildcardRtcpFb = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-fb:* ')\n    .map(SDPUtils.parseRtcpFb);\n  description.codecs.forEach(codec => {\n    wildcardRtcpFb.forEach(fb=> {\n      const duplicate = codec.rtcpFeedback.find(existingFeedback => {\n        return existingFeedback.type === fb.type &&\n          existingFeedback.parameter === fb.parameter;\n      });\n      if (!duplicate) {\n        codec.rtcpFeedback.push(fb);\n      }\n    });\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  let sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' ' + (caps.profile || 'UDP/TLS/RTP/SAVPF') + ' ';\n  sdp += caps.codecs.map(codec => {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(codec => {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  let maxptime = 0;\n  caps.codecs.forEach(codec => {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(extension => {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  const encodingParameters = [];\n  const description = SDPUtils.parseRtpParameters(mediaSection);\n  const hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  const hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  const ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(parts => parts.attribute === 'cname');\n  const primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  let secondarySsrc;\n\n  const flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(line => {\n      const parts = line.substring(17).split(' ');\n      return parts.map(part => parseInt(part, 10));\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(codec => {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      let encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10),\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red',\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc,\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  let bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substring(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substring(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(params => {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  const rtcpParameters = {};\n\n  // Gets the first SSRC. Note that with RTX there might be multiple\n  // SSRCs.\n  const remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(obj => obj.attribute === 'cname')[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  const rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  const mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\nSDPUtils.writeRtcpParameters = function(rtcpParameters) {\n  let sdp = '';\n  if (rtcpParameters.reducedSize) {\n    sdp += 'a=rtcp-rsize\\r\\n';\n  }\n  if (rtcpParameters.mux) {\n    sdp += 'a=rtcp-mux\\r\\n';\n  }\n  if (rtcpParameters.ssrc !== undefined && rtcpParameters.cname) {\n    sdp += 'a=ssrc:' + rtcpParameters.ssrc +\n      ' cname:' + rtcpParameters.cname + '\\r\\n';\n  }\n  return sdp;\n};\n\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  let parts;\n  const spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substring(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  const planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(msidParts => msidParts.attribute === 'msid');\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  const mline = SDPUtils.parseMLine(mediaSection);\n  const maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  let maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substring(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  const sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substring(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize,\n    };\n  }\n  const sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    const parts = sctpMapLines[0]\n      .substring(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize,\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  let output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n',\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n',\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 22);\n};\n\n// Write boiler plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  let sessionId;\n  const version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  const user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  const lines = SDPUtils.splitLines(mediaSection);\n  for (let i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substring(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  return mline[0].substring(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const parts = lines[0].substring(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' '),\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  const line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  const parts = line.substring(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5],\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  const lines = SDPUtils.splitLines(blob);\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport SDPUtils from 'sdp';\nimport * as utils from './utils';\n\nexport function shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  const NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate &&\n        args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substring(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      const nativeCandidate = new NativeRTCIceCandidate(args);\n      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      for (const key in parsedCandidate) {\n        if (!(key in nativeCandidate)) {\n          Object.defineProperty(nativeCandidate, key,\n            {value: parsedCandidate[key]});\n        }\n      }\n\n      // Override serializer to not serialize the extra attributes.\n      nativeCandidate.toJSON = function toJSON() {\n        return {\n          candidate: nativeCandidate.candidate,\n          sdpMid: nativeCandidate.sdpMid,\n          sdpMLineIndex: nativeCandidate.sdpMLineIndex,\n          usernameFragment: nativeCandidate.usernameFragment,\n        };\n      };\n      return nativeCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nexport function shimRTCIceCandidateRelayProtocol(window) {\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'relayProtocol' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      const parsedCandidate = SDPUtils.parseCandidate(e.candidate.candidate);\n      if (parsedCandidate.type === 'relay') {\n        // This is a libwebrtc-specific mapping of local type preference\n        // to relayProtocol.\n        e.candidate.relayProtocol = {\n          0: 'tls',\n          1: 'tcp',\n          2: 'udp',\n        }[parsedCandidate.priority >> 24];\n      }\n    }\n    return e;\n  });\n}\n\nexport function shimMaxMessageSize(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  const sctpInDescription = function(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    const sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(mediaSection => {\n      const mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application'\n          && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  const getRemoteFirefoxVersion = function(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    const version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  const getCanSendMaxMessageSize = function(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    let canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize =\n          browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  const getMaxMessageSize = function(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    let maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox'\n         && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    const match = SDPUtils.matchPrefix(description.sdp,\n      'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substring(19), 10);\n    } else if (browserDetails.browser === 'firefox' &&\n                remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n    function setRemoteDescription() {\n      this._sctp = null;\n      // Chrome decided to not expose .sctp in plan-b mode.\n      // As usual, adapter.js has to do an 'ugly worakaround'\n      // to cover up the mess.\n      if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n        const {sdpSemantics} = this.getConfiguration();\n        if (sdpSemantics === 'plan-b') {\n          Object.defineProperty(this, 'sctp', {\n            get() {\n              return typeof this._sctp === 'undefined' ? null : this._sctp;\n            },\n            enumerable: true,\n            configurable: true,\n          });\n        }\n      }\n\n      if (sctpInDescription(arguments[0])) {\n        // Check if the remote is FF.\n        const isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n        // Get the maximum message size the local peer is capable of sending\n        const canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n        // Get the maximum message size of the remote peer.\n        const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n        // Determine final maximum message size\n        let maxMessageSize;\n        if (canSendMMS === 0 && remoteMMS === 0) {\n          maxMessageSize = Number.POSITIVE_INFINITY;\n        } else if (canSendMMS === 0 || remoteMMS === 0) {\n          maxMessageSize = Math.max(canSendMMS, remoteMMS);\n        } else {\n          maxMessageSize = Math.min(canSendMMS, remoteMMS);\n        }\n\n        // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n        // attribute.\n        const sctp = {};\n        Object.defineProperty(sctp, 'maxMessageSize', {\n          get() {\n            return maxMessageSize;\n          }\n        });\n        this._sctp = sctp;\n      }\n\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n}\n\nexport function shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection &&\n      'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    const origDataChannelSend = dc.send;\n    dc.send = function send() {\n      const data = arguments[0];\n      const length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' &&\n          pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' +\n          pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  const origCreateDataChannel =\n    window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel =\n    function createDataChannel() {\n      const dataChannel = origCreateDataChannel.apply(this, arguments);\n      wrapDcSend(dataChannel, this);\n      return dataChannel;\n    };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', e => {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nexport function shimConnectionState(window) {\n  if (!window.RTCPeerConnection ||\n      'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get() {\n      return this._onconnectionstatechange || null;\n    },\n    set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange',\n          this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange',\n          this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {\n    const origMethod = proto[method];\n    proto[method] = function() {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = e => {\n          const pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            const newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange',\n          this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n\nexport function removeExtmapAllowMixed(window, browserDetails) {\n  /* remove a=extmap-allow-mixed for webrtc.org < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  if (browserDetails.browser === 'safari' &&\n      browserDetails._safariVersion >= 13.1) {\n    return;\n  }\n  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n  function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      const sdp = desc.sdp.split('\\n').filter((line) => {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n      // Safari enforces read-only-ness of RTCSessionDescription fields.\n      if (window.RTCSessionDescription &&\n          desc instanceof window.RTCSessionDescription) {\n        arguments[0] = new window.RTCSessionDescription({\n          type: desc.type,\n          sdp,\n        });\n      } else {\n        desc.sdp = sdp;\n      }\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\n\nexport function shimAddIceCandidateNullOrEmpty(window, browserDetails) {\n  // Support for addIceCandidate(null or undefined)\n  // as well as addIceCandidate({candidate: \"\", ...})\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=978582\n  // Note: must be called before other polyfills which change the signature.\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  if (!nativeAddIceCandidate || nativeAddIceCandidate.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.addIceCandidate =\n    function addIceCandidate() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions.\n      // Native support for ignoring exists for Chrome M77+.\n      // Safari ignores as well, exact version unknown but works in the same\n      // version that also ignores addIceCandidate(null).\n      if (((browserDetails.browser === 'chrome' && browserDetails.version < 78)\n           || (browserDetails.browser === 'firefox'\n               && browserDetails.version < 68)\n           || (browserDetails.browser === 'safari'))\n          && arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n}\n\n// Note: Make sure to call this ahead of APIs that modify\n// setLocalDescription.length\nexport function shimParameterlessSetLocalDescription(window, browserDetails) {\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  if (!nativeSetLocalDescription || nativeSetLocalDescription.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      let desc = arguments[0] || {};\n      if (typeof desc !== 'object' || (desc.type && desc.sdp)) {\n        return nativeSetLocalDescription.apply(this, arguments);\n      }\n      // The remaining steps should technically happen when SLD comes off the\n      // RTCPeerConnection's operations chain (not ahead of going on it), but\n      // this is too difficult to shim. Instead, this shim only covers the\n      // common case where the operations chain is empty. This is imperfect, but\n      // should cover many cases. Rationale: Even if we can't reduce the glare\n      // window to zero on imperfect implementations, there's value in tapping\n      // into the perfect negotiation pattern that several browsers support.\n      desc = {type: desc.type, sdp: desc.sdp};\n      if (!desc.type) {\n        switch (this.signalingState) {\n          case 'stable':\n          case 'have-local-offer':\n          case 'have-remote-pranswer':\n            desc.type = 'offer';\n            break;\n          default:\n            desc.type = 'answer';\n            break;\n        }\n      }\n      if (desc.sdp || (desc.type !== 'offer' && desc.type !== 'answer')) {\n        return nativeSetLocalDescription.apply(this, [desc]);\n      }\n      const func = desc.type === 'offer' ? this.createOffer : this.createAnswer;\n      return func.apply(this)\n        .then(d => nativeSetLocalDescription.apply(this, [d]));\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\n'use strict';\n\nimport {adapterFactory} from './adapter_factory.js';\n\nconst adapter =\n  adapterFactory({window: typeof window === 'undefined' ? undefined : window});\nexport default adapter;\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils';\n\n// Browser shims.\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\nimport * as sdp from 'sdp';\n\n// Shimming starts here.\nexport function adapterFactory({window} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimSafari: true,\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings,\n    // Expose sdp as a convenience. For production apps include directly.\n    sdp,\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      if (browserDetails.version === null) {\n        logging('Chrome shim can not determine version, not shimming.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      chromeShim.shimGetUserMedia(window, browserDetails);\n      chromeShim.shimMediaStream(window, browserDetails);\n      chromeShim.shimPeerConnection(window, browserDetails);\n      chromeShim.shimOnTrack(window, browserDetails);\n      chromeShim.shimAddTrackRemoveTrack(window, browserDetails);\n      chromeShim.shimGetSendersWithDtmf(window, browserDetails);\n      chromeShim.shimSenderReceiverGetStats(window, browserDetails);\n      chromeShim.fixNegotiationNeeded(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimRTCIceCandidateRelayProtocol(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      firefoxShim.shimGetUserMedia(window, browserDetails);\n      firefoxShim.shimPeerConnection(window, browserDetails);\n      firefoxShim.shimOnTrack(window, browserDetails);\n      firefoxShim.shimRemoveStream(window, browserDetails);\n      firefoxShim.shimSenderGetStats(window, browserDetails);\n      firefoxShim.shimReceiverGetStats(window, browserDetails);\n      firefoxShim.shimRTCDataChannel(window, browserDetails);\n      firefoxShim.shimAddTransceiver(window, browserDetails);\n      firefoxShim.shimGetParameters(window, browserDetails);\n      firefoxShim.shimCreateOffer(window, browserDetails);\n      firefoxShim.shimCreateAnswer(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      // Must be called before shimCallbackAPI.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      safariShim.shimRTCIceServerUrls(window, browserDetails);\n      safariShim.shimCreateOfferLegacy(window, browserDetails);\n      safariShim.shimCallbacksAPI(window, browserDetails);\n      safariShim.shimLocalStreamsAPI(window, browserDetails);\n      safariShim.shimRemoteStreamsAPI(window, browserDetails);\n      safariShim.shimTrackEventTransceiver(window, browserDetails);\n      safariShim.shimGetUserMedia(window, browserDetails);\n      safariShim.shimAudioContext(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimRTCIceCandidateRelayProtocol(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n","import {pack as $gCcbY$pack, unpack as $gCcbY$unpack} from \"peerjs-js-binarypack\";\nimport $gCcbY$webrtcadapter from \"webrtc-adapter\";\nimport {Encoder as $gCcbY$Encoder, decodeMultiStream as $gCcbY$decodeMultiStream} from \"@msgpack/msgpack\";\n\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nclass $fcbcc7538a6776d5$export$f1c5f4c9cb95390b {\n    constructor(){\n        this.chunkedMTU = 16300 // The original 60000 bytes setting does not work when sending data from Firefox to Chrome, which is \"cut off\" after 16384 bytes and delivered individually.\n        ;\n        // Binary stuff\n        this._dataCount = 1;\n        this.chunk = (blob)=>{\n            const chunks = [];\n            const size = blob.byteLength;\n            const total = Math.ceil(size / this.chunkedMTU);\n            let index = 0;\n            let start = 0;\n            while(start < size){\n                const end = Math.min(size, start + this.chunkedMTU);\n                const b = blob.slice(start, end);\n                const chunk = {\n                    __peerData: this._dataCount,\n                    n: index,\n                    data: b,\n                    total: total\n                };\n                chunks.push(chunk);\n                start = end;\n                index++;\n            }\n            this._dataCount++;\n            return chunks;\n        };\n    }\n}\nfunction $fcbcc7538a6776d5$export$52c89ebcdc4f53f2(bufs) {\n    let size = 0;\n    for (const buf of bufs)size += buf.byteLength;\n    const result = new Uint8Array(size);\n    let offset = 0;\n    for (const buf of bufs){\n        result.set(buf, offset);\n        offset += buf.byteLength;\n    }\n    return result;\n}\n\n\n\n\nconst $fb63e766cfafaab9$var$webRTCAdapter = //@ts-ignore\n(0, $gCcbY$webrtcadapter).default || (0, $gCcbY$webrtcadapter);\nconst $fb63e766cfafaab9$export$25be9502477c137d = new class {\n    isWebRTCSupported() {\n        return typeof RTCPeerConnection !== \"undefined\";\n    }\n    isBrowserSupported() {\n        const browser = this.getBrowser();\n        const version = this.getVersion();\n        const validBrowser = this.supportedBrowsers.includes(browser);\n        if (!validBrowser) return false;\n        if (browser === \"chrome\") return version >= this.minChromeVersion;\n        if (browser === \"firefox\") return version >= this.minFirefoxVersion;\n        if (browser === \"safari\") return !this.isIOS && version >= this.minSafariVersion;\n        return false;\n    }\n    getBrowser() {\n        return $fb63e766cfafaab9$var$webRTCAdapter.browserDetails.browser;\n    }\n    getVersion() {\n        return $fb63e766cfafaab9$var$webRTCAdapter.browserDetails.version || 0;\n    }\n    isUnifiedPlanSupported() {\n        const browser = this.getBrowser();\n        const version = $fb63e766cfafaab9$var$webRTCAdapter.browserDetails.version || 0;\n        if (browser === \"chrome\" && version < this.minChromeVersion) return false;\n        if (browser === \"firefox\" && version >= this.minFirefoxVersion) return true;\n        if (!window.RTCRtpTransceiver || !(\"currentDirection\" in RTCRtpTransceiver.prototype)) return false;\n        let tempPc;\n        let supported = false;\n        try {\n            tempPc = new RTCPeerConnection();\n            tempPc.addTransceiver(\"audio\");\n            supported = true;\n        } catch (e) {} finally{\n            if (tempPc) tempPc.close();\n        }\n        return supported;\n    }\n    toString() {\n        return `Supports:\n    browser:${this.getBrowser()}\n    version:${this.getVersion()}\n    isIOS:${this.isIOS}\n    isWebRTCSupported:${this.isWebRTCSupported()}\n    isBrowserSupported:${this.isBrowserSupported()}\n    isUnifiedPlanSupported:${this.isUnifiedPlanSupported()}`;\n    }\n    constructor(){\n        this.isIOS = typeof navigator !== \"undefined\" ? [\n            \"iPad\",\n            \"iPhone\",\n            \"iPod\"\n        ].includes(navigator.platform) : false;\n        this.supportedBrowsers = [\n            \"firefox\",\n            \"chrome\",\n            \"safari\"\n        ];\n        this.minFirefoxVersion = 59;\n        this.minChromeVersion = 72;\n        this.minSafariVersion = 605;\n    }\n}();\n\n\nconst $9a84a32bf0bf36bb$export$f35f128fd59ea256 = (id)=>{\n    // Allow empty ids\n    return !id || /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.test(id);\n};\n\n\nconst $0e5fd1585784c252$export$4e61f672936bec77 = ()=>Math.random().toString(36).slice(2);\n\n\nconst $4f4134156c446392$var$DEFAULT_CONFIG = {\n    iceServers: [\n        {\n            urls: \"stun:stun.l.google.com:19302\"\n        },\n        {\n            urls: [\n                \"turn:eu-0.turn.peerjs.com:3478\",\n                \"turn:us-0.turn.peerjs.com:3478\"\n            ],\n            username: \"peerjs\",\n            credential: \"peerjsp\"\n        }\n    ],\n    sdpSemantics: \"unified-plan\"\n};\nclass $4f4134156c446392$export$f8f26dd395d7e1bd extends (0, $fcbcc7538a6776d5$export$f1c5f4c9cb95390b) {\n    noop() {}\n    blobToArrayBuffer(blob, cb) {\n        const fr = new FileReader();\n        fr.onload = function(evt) {\n            if (evt.target) cb(evt.target.result);\n        };\n        fr.readAsArrayBuffer(blob);\n        return fr;\n    }\n    binaryStringToArrayBuffer(binary) {\n        const byteArray = new Uint8Array(binary.length);\n        for(let i = 0; i < binary.length; i++)byteArray[i] = binary.charCodeAt(i) & 0xff;\n        return byteArray.buffer;\n    }\n    isSecure() {\n        return location.protocol === \"https:\";\n    }\n    constructor(...args){\n        super(...args);\n        this.CLOUD_HOST = \"0.peerjs.com\";\n        this.CLOUD_PORT = 443;\n        // Browsers that need chunking:\n        this.chunkedBrowsers = {\n            Chrome: 1,\n            chrome: 1\n        };\n        // Returns browser-agnostic default config\n        this.defaultConfig = $4f4134156c446392$var$DEFAULT_CONFIG;\n        this.browser = (0, $fb63e766cfafaab9$export$25be9502477c137d).getBrowser();\n        this.browserVersion = (0, $fb63e766cfafaab9$export$25be9502477c137d).getVersion();\n        this.pack = $gCcbY$pack;\n        this.unpack = $gCcbY$unpack;\n        /**\n\t * A hash of WebRTC features mapped to booleans that correspond to whether the feature is supported by the current browser.\n\t *\n\t * :::caution\n\t * Only the properties documented here are guaranteed to be present on `util.supports`\n\t * :::\n\t */ this.supports = function() {\n            const supported = {\n                browser: (0, $fb63e766cfafaab9$export$25be9502477c137d).isBrowserSupported(),\n                webRTC: (0, $fb63e766cfafaab9$export$25be9502477c137d).isWebRTCSupported(),\n                audioVideo: false,\n                data: false,\n                binaryBlob: false,\n                reliable: false\n            };\n            if (!supported.webRTC) return supported;\n            let pc;\n            try {\n                pc = new RTCPeerConnection($4f4134156c446392$var$DEFAULT_CONFIG);\n                supported.audioVideo = true;\n                let dc;\n                try {\n                    dc = pc.createDataChannel(\"_PEERJSTEST\", {\n                        ordered: true\n                    });\n                    supported.data = true;\n                    supported.reliable = !!dc.ordered;\n                    // Binary test\n                    try {\n                        dc.binaryType = \"blob\";\n                        supported.binaryBlob = !(0, $fb63e766cfafaab9$export$25be9502477c137d).isIOS;\n                    } catch (e) {}\n                } catch (e) {} finally{\n                    if (dc) dc.close();\n                }\n            } catch (e) {} finally{\n                if (pc) pc.close();\n            }\n            return supported;\n        }();\n        // Ensure alphanumeric ids\n        this.validateId = (0, $9a84a32bf0bf36bb$export$f35f128fd59ea256);\n        this.randomToken = (0, $0e5fd1585784c252$export$4e61f672936bec77);\n    }\n}\nconst $4f4134156c446392$export$7debb50ef11d5e0b = new $4f4134156c446392$export$f8f26dd395d7e1bd();\n\n\n\nconst $257947e92926277a$var$LOG_PREFIX = \"PeerJS: \";\nvar $257947e92926277a$export$243e62d78d3b544d;\n(function(LogLevel) {\n    /**\n\t * Prints no logs.\n\t */ LogLevel[LogLevel[\"Disabled\"] = 0] = \"Disabled\";\n    /**\n\t * Prints only errors.\n\t */ LogLevel[LogLevel[\"Errors\"] = 1] = \"Errors\";\n    /**\n\t * Prints errors and warnings.\n\t */ LogLevel[LogLevel[\"Warnings\"] = 2] = \"Warnings\";\n    /**\n\t * Prints all logs.\n\t */ LogLevel[LogLevel[\"All\"] = 3] = \"All\";\n})($257947e92926277a$export$243e62d78d3b544d || ($257947e92926277a$export$243e62d78d3b544d = {}));\nclass $257947e92926277a$var$Logger {\n    get logLevel() {\n        return this._logLevel;\n    }\n    set logLevel(logLevel) {\n        this._logLevel = logLevel;\n    }\n    log(...args) {\n        if (this._logLevel >= 3) this._print(3, ...args);\n    }\n    warn(...args) {\n        if (this._logLevel >= 2) this._print(2, ...args);\n    }\n    error(...args) {\n        if (this._logLevel >= 1) this._print(1, ...args);\n    }\n    setLogFunction(fn) {\n        this._print = fn;\n    }\n    _print(logLevel, ...rest) {\n        const copy = [\n            $257947e92926277a$var$LOG_PREFIX,\n            ...rest\n        ];\n        for(const i in copy)if (copy[i] instanceof Error) copy[i] = \"(\" + copy[i].name + \") \" + copy[i].message;\n        if (logLevel >= 3) console.log(...copy);\n        else if (logLevel >= 2) console.warn(\"WARNING\", ...copy);\n        else if (logLevel >= 1) console.error(\"ERROR\", ...copy);\n    }\n    constructor(){\n        this._logLevel = 0;\n    }\n}\nvar $257947e92926277a$export$2e2bcd8739ae039 = new $257947e92926277a$var$Logger();\n\n\nvar $c4dcfd1d1ea86647$exports = {};\n\"use strict\";\nvar $c4dcfd1d1ea86647$var$has = Object.prototype.hasOwnProperty, $c4dcfd1d1ea86647$var$prefix = \"~\";\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */ function $c4dcfd1d1ea86647$var$Events() {}\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n    $c4dcfd1d1ea86647$var$Events.prototype = Object.create(null);\n    //\n    // This hack is needed because the `__proto__` property is still inherited in\n    // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n    //\n    if (!new $c4dcfd1d1ea86647$var$Events().__proto__) $c4dcfd1d1ea86647$var$prefix = false;\n}\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */ function $c4dcfd1d1ea86647$var$EE(fn, context, once) {\n    this.fn = fn;\n    this.context = context;\n    this.once = once || false;\n}\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */ function $c4dcfd1d1ea86647$var$addListener(emitter, event, fn, context, once) {\n    if (typeof fn !== \"function\") throw new TypeError(\"The listener must be a function\");\n    var listener = new $c4dcfd1d1ea86647$var$EE(fn, context || emitter, once), evt = $c4dcfd1d1ea86647$var$prefix ? $c4dcfd1d1ea86647$var$prefix + event : event;\n    if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n    else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n    else emitter._events[evt] = [\n        emitter._events[evt],\n        listener\n    ];\n    return emitter;\n}\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */ function $c4dcfd1d1ea86647$var$clearEvent(emitter, evt) {\n    if (--emitter._eventsCount === 0) emitter._events = new $c4dcfd1d1ea86647$var$Events();\n    else delete emitter._events[evt];\n}\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */ function $c4dcfd1d1ea86647$var$EventEmitter() {\n    this._events = new $c4dcfd1d1ea86647$var$Events();\n    this._eventsCount = 0;\n}\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */ $c4dcfd1d1ea86647$var$EventEmitter.prototype.eventNames = function eventNames() {\n    var names = [], events, name;\n    if (this._eventsCount === 0) return names;\n    for(name in events = this._events)if ($c4dcfd1d1ea86647$var$has.call(events, name)) names.push($c4dcfd1d1ea86647$var$prefix ? name.slice(1) : name);\n    if (Object.getOwnPropertySymbols) return names.concat(Object.getOwnPropertySymbols(events));\n    return names;\n};\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */ $c4dcfd1d1ea86647$var$EventEmitter.prototype.listeners = function listeners(event) {\n    var evt = $c4dcfd1d1ea86647$var$prefix ? $c4dcfd1d1ea86647$var$prefix + event : event, handlers = this._events[evt];\n    if (!handlers) return [];\n    if (handlers.fn) return [\n        handlers.fn\n    ];\n    for(var i = 0, l = handlers.length, ee = new Array(l); i < l; i++)ee[i] = handlers[i].fn;\n    return ee;\n};\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */ $c4dcfd1d1ea86647$var$EventEmitter.prototype.listenerCount = function listenerCount(event) {\n    var evt = $c4dcfd1d1ea86647$var$prefix ? $c4dcfd1d1ea86647$var$prefix + event : event, listeners = this._events[evt];\n    if (!listeners) return 0;\n    if (listeners.fn) return 1;\n    return listeners.length;\n};\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */ $c4dcfd1d1ea86647$var$EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n    var evt = $c4dcfd1d1ea86647$var$prefix ? $c4dcfd1d1ea86647$var$prefix + event : event;\n    if (!this._events[evt]) return false;\n    var listeners = this._events[evt], len = arguments.length, args, i;\n    if (listeners.fn) {\n        if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n        switch(len){\n            case 1:\n                return listeners.fn.call(listeners.context), true;\n            case 2:\n                return listeners.fn.call(listeners.context, a1), true;\n            case 3:\n                return listeners.fn.call(listeners.context, a1, a2), true;\n            case 4:\n                return listeners.fn.call(listeners.context, a1, a2, a3), true;\n            case 5:\n                return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n            case 6:\n                return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n        }\n        for(i = 1, args = new Array(len - 1); i < len; i++)args[i - 1] = arguments[i];\n        listeners.fn.apply(listeners.context, args);\n    } else {\n        var length = listeners.length, j;\n        for(i = 0; i < length; i++){\n            if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n            switch(len){\n                case 1:\n                    listeners[i].fn.call(listeners[i].context);\n                    break;\n                case 2:\n                    listeners[i].fn.call(listeners[i].context, a1);\n                    break;\n                case 3:\n                    listeners[i].fn.call(listeners[i].context, a1, a2);\n                    break;\n                case 4:\n                    listeners[i].fn.call(listeners[i].context, a1, a2, a3);\n                    break;\n                default:\n                    if (!args) for(j = 1, args = new Array(len - 1); j < len; j++)args[j - 1] = arguments[j];\n                    listeners[i].fn.apply(listeners[i].context, args);\n            }\n        }\n    }\n    return true;\n};\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */ $c4dcfd1d1ea86647$var$EventEmitter.prototype.on = function on(event, fn, context) {\n    return $c4dcfd1d1ea86647$var$addListener(this, event, fn, context, false);\n};\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */ $c4dcfd1d1ea86647$var$EventEmitter.prototype.once = function once(event, fn, context) {\n    return $c4dcfd1d1ea86647$var$addListener(this, event, fn, context, true);\n};\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */ $c4dcfd1d1ea86647$var$EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n    var evt = $c4dcfd1d1ea86647$var$prefix ? $c4dcfd1d1ea86647$var$prefix + event : event;\n    if (!this._events[evt]) return this;\n    if (!fn) {\n        $c4dcfd1d1ea86647$var$clearEvent(this, evt);\n        return this;\n    }\n    var listeners = this._events[evt];\n    if (listeners.fn) {\n        if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) $c4dcfd1d1ea86647$var$clearEvent(this, evt);\n    } else {\n        for(var i = 0, events = [], length = listeners.length; i < length; i++)if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) events.push(listeners[i]);\n        //\n        // Reset the array, or remove it completely if we have no more listeners.\n        //\n        if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n        else $c4dcfd1d1ea86647$var$clearEvent(this, evt);\n    }\n    return this;\n};\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */ $c4dcfd1d1ea86647$var$EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n    var evt;\n    if (event) {\n        evt = $c4dcfd1d1ea86647$var$prefix ? $c4dcfd1d1ea86647$var$prefix + event : event;\n        if (this._events[evt]) $c4dcfd1d1ea86647$var$clearEvent(this, evt);\n    } else {\n        this._events = new $c4dcfd1d1ea86647$var$Events();\n        this._eventsCount = 0;\n    }\n    return this;\n};\n//\n// Alias methods names because people roll like that.\n//\n$c4dcfd1d1ea86647$var$EventEmitter.prototype.off = $c4dcfd1d1ea86647$var$EventEmitter.prototype.removeListener;\n$c4dcfd1d1ea86647$var$EventEmitter.prototype.addListener = $c4dcfd1d1ea86647$var$EventEmitter.prototype.on;\n//\n// Expose the prefix.\n//\n$c4dcfd1d1ea86647$var$EventEmitter.prefixed = $c4dcfd1d1ea86647$var$prefix;\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\n$c4dcfd1d1ea86647$var$EventEmitter.EventEmitter = $c4dcfd1d1ea86647$var$EventEmitter;\n$c4dcfd1d1ea86647$exports = $c4dcfd1d1ea86647$var$EventEmitter;\n\n\n\nvar $78455e22dea96b8c$exports = {};\n\n$parcel$export($78455e22dea96b8c$exports, \"ConnectionType\", () => $78455e22dea96b8c$export$3157d57b4135e3bc);\n$parcel$export($78455e22dea96b8c$exports, \"PeerErrorType\", () => $78455e22dea96b8c$export$9547aaa2e39030ff);\n$parcel$export($78455e22dea96b8c$exports, \"BaseConnectionErrorType\", () => $78455e22dea96b8c$export$7974935686149686);\n$parcel$export($78455e22dea96b8c$exports, \"DataConnectionErrorType\", () => $78455e22dea96b8c$export$49ae800c114df41d);\n$parcel$export($78455e22dea96b8c$exports, \"SerializationType\", () => $78455e22dea96b8c$export$89f507cf986a947);\n$parcel$export($78455e22dea96b8c$exports, \"SocketEventType\", () => $78455e22dea96b8c$export$3b5c4a4b6354f023);\n$parcel$export($78455e22dea96b8c$exports, \"ServerMessageType\", () => $78455e22dea96b8c$export$adb4a1754da6f10d);\nvar $78455e22dea96b8c$export$3157d57b4135e3bc;\n(function(ConnectionType) {\n    ConnectionType[\"Data\"] = \"data\";\n    ConnectionType[\"Media\"] = \"media\";\n})($78455e22dea96b8c$export$3157d57b4135e3bc || ($78455e22dea96b8c$export$3157d57b4135e3bc = {}));\nvar $78455e22dea96b8c$export$9547aaa2e39030ff;\n(function(PeerErrorType) {\n    /**\n\t * The client's browser does not support some or all WebRTC features that you are trying to use.\n\t */ PeerErrorType[\"BrowserIncompatible\"] = \"browser-incompatible\";\n    /**\n\t * You've already disconnected this peer from the server and can no longer make any new connections on it.\n\t */ PeerErrorType[\"Disconnected\"] = \"disconnected\";\n    /**\n\t * The ID passed into the Peer constructor contains illegal characters.\n\t */ PeerErrorType[\"InvalidID\"] = \"invalid-id\";\n    /**\n\t * The API key passed into the Peer constructor contains illegal characters or is not in the system (cloud server only).\n\t */ PeerErrorType[\"InvalidKey\"] = \"invalid-key\";\n    /**\n\t * Lost or cannot establish a connection to the signalling server.\n\t */ PeerErrorType[\"Network\"] = \"network\";\n    /**\n\t * The peer you're trying to connect to does not exist.\n\t */ PeerErrorType[\"PeerUnavailable\"] = \"peer-unavailable\";\n    /**\n\t * PeerJS is being used securely, but the cloud server does not support SSL. Use a custom PeerServer.\n\t */ PeerErrorType[\"SslUnavailable\"] = \"ssl-unavailable\";\n    /**\n\t * Unable to reach the server.\n\t */ PeerErrorType[\"ServerError\"] = \"server-error\";\n    /**\n\t * An error from the underlying socket.\n\t */ PeerErrorType[\"SocketError\"] = \"socket-error\";\n    /**\n\t * The underlying socket closed unexpectedly.\n\t */ PeerErrorType[\"SocketClosed\"] = \"socket-closed\";\n    /**\n\t * The ID passed into the Peer constructor is already taken.\n\t *\n\t * :::caution\n\t * This error is not fatal if your peer has open peer-to-peer connections.\n\t * This can happen if you attempt to {@apilink Peer.reconnect} a peer that has been disconnected from the server,\n\t * but its old ID has now been taken.\n\t * :::\n\t */ PeerErrorType[\"UnavailableID\"] = \"unavailable-id\";\n    /**\n\t * Native WebRTC errors.\n\t */ PeerErrorType[\"WebRTC\"] = \"webrtc\";\n})($78455e22dea96b8c$export$9547aaa2e39030ff || ($78455e22dea96b8c$export$9547aaa2e39030ff = {}));\nvar $78455e22dea96b8c$export$7974935686149686;\n(function(BaseConnectionErrorType) {\n    BaseConnectionErrorType[\"NegotiationFailed\"] = \"negotiation-failed\";\n    BaseConnectionErrorType[\"ConnectionClosed\"] = \"connection-closed\";\n})($78455e22dea96b8c$export$7974935686149686 || ($78455e22dea96b8c$export$7974935686149686 = {}));\nvar $78455e22dea96b8c$export$49ae800c114df41d;\n(function(DataConnectionErrorType) {\n    DataConnectionErrorType[\"NotOpenYet\"] = \"not-open-yet\";\n    DataConnectionErrorType[\"MessageToBig\"] = \"message-too-big\";\n})($78455e22dea96b8c$export$49ae800c114df41d || ($78455e22dea96b8c$export$49ae800c114df41d = {}));\nvar $78455e22dea96b8c$export$89f507cf986a947;\n(function(SerializationType) {\n    SerializationType[\"Binary\"] = \"binary\";\n    SerializationType[\"BinaryUTF8\"] = \"binary-utf8\";\n    SerializationType[\"JSON\"] = \"json\";\n    SerializationType[\"None\"] = \"raw\";\n})($78455e22dea96b8c$export$89f507cf986a947 || ($78455e22dea96b8c$export$89f507cf986a947 = {}));\nvar $78455e22dea96b8c$export$3b5c4a4b6354f023;\n(function(SocketEventType) {\n    SocketEventType[\"Message\"] = \"message\";\n    SocketEventType[\"Disconnected\"] = \"disconnected\";\n    SocketEventType[\"Error\"] = \"error\";\n    SocketEventType[\"Close\"] = \"close\";\n})($78455e22dea96b8c$export$3b5c4a4b6354f023 || ($78455e22dea96b8c$export$3b5c4a4b6354f023 = {}));\nvar $78455e22dea96b8c$export$adb4a1754da6f10d;\n(function(ServerMessageType) {\n    ServerMessageType[\"Heartbeat\"] = \"HEARTBEAT\";\n    ServerMessageType[\"Candidate\"] = \"CANDIDATE\";\n    ServerMessageType[\"Offer\"] = \"OFFER\";\n    ServerMessageType[\"Answer\"] = \"ANSWER\";\n    ServerMessageType[\"Open\"] = \"OPEN\";\n    ServerMessageType[\"Error\"] = \"ERROR\";\n    ServerMessageType[\"IdTaken\"] = \"ID-TAKEN\";\n    ServerMessageType[\"InvalidKey\"] = \"INVALID-KEY\";\n    ServerMessageType[\"Leave\"] = \"LEAVE\";\n    ServerMessageType[\"Expire\"] = \"EXPIRE\";\n})($78455e22dea96b8c$export$adb4a1754da6f10d || ($78455e22dea96b8c$export$adb4a1754da6f10d = {}));\n\n\nvar $f5f881ec4575f1fc$exports = {};\n$f5f881ec4575f1fc$exports = JSON.parse('{\"name\":\"peerjs\",\"version\":\"1.5.4\",\"keywords\":[\"peerjs\",\"webrtc\",\"p2p\",\"rtc\"],\"description\":\"PeerJS client\",\"homepage\":\"https://peerjs.com\",\"bugs\":{\"url\":\"https://github.com/peers/peerjs/issues\"},\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/peers/peerjs\"},\"license\":\"MIT\",\"contributors\":[\"Michelle Bu <michelle@michellebu.com>\",\"afrokick <devbyru@gmail.com>\",\"ericz <really.ez@gmail.com>\",\"Jairo <kidandcat@gmail.com>\",\"Jonas Gloning <34194370+jonasgloning@users.noreply.github.com>\",\"Jairo Caro-Accino Viciana <jairo@galax.be>\",\"Carlos Caballero <carlos.caballero.gonzalez@gmail.com>\",\"hc <hheennrryy@gmail.com>\",\"Muhammad Asif <capripio@gmail.com>\",\"PrashoonB <prashoonbhattacharjee@gmail.com>\",\"Harsh Bardhan Mishra <47351025+HarshCasper@users.noreply.github.com>\",\"akotynski <aleksanderkotbury@gmail.com>\",\"lmb <i@lmb.io>\",\"Jairooo <jairocaro@msn.com>\",\"Moritz St\\xfcckler <moritz.stueckler@gmail.com>\",\"Simon <crydotsnakegithub@gmail.com>\",\"Denis Lukov <denismassters@gmail.com>\",\"Philipp Hancke <fippo@andyet.net>\",\"Hans Oksendahl <hansoksendahl@gmail.com>\",\"Jess <jessachandler@gmail.com>\",\"khankuan <khankuan@gmail.com>\",\"DUODVK <kurmanov.work@gmail.com>\",\"XiZhao <kwang1imsa@gmail.com>\",\"Matthias Lohr <matthias@lohr.me>\",\"=frank tree <=frnktrb@googlemail.com>\",\"Andre Eckardt <aeckardt@outlook.com>\",\"Chris Cowan <agentme49@gmail.com>\",\"Alex Chuev <alex@chuev.com>\",\"alxnull <alxnull@e.mail.de>\",\"Yemel Jardi <angel.jardi@gmail.com>\",\"Ben Parnell <benjaminparnell.94@gmail.com>\",\"Benny Lichtner <bennlich@gmail.com>\",\"fresheneesz <bitetrudpublic@gmail.com>\",\"bob.barstead@exaptive.com <bob.barstead@exaptive.com>\",\"chandika <chandika@gmail.com>\",\"emersion <contact@emersion.fr>\",\"Christopher Van <cvan@users.noreply.github.com>\",\"eddieherm <edhermoso@gmail.com>\",\"Eduardo Pinho <enet4mikeenet@gmail.com>\",\"Evandro Zanatta <ezanatta@tray.net.br>\",\"Gardner Bickford <gardner@users.noreply.github.com>\",\"Gian Luca <gianluca.cecchi@cynny.com>\",\"PatrickJS <github@gdi2290.com>\",\"jonnyf <github@jonathanfoss.co.uk>\",\"Hizkia Felix <hizkifw@gmail.com>\",\"Hristo Oskov <hristo.oskov@gmail.com>\",\"Isaac Madwed <i.madwed@gmail.com>\",\"Ilya Konanykhin <ilya.konanykhin@gmail.com>\",\"jasonbarry <jasbarry@me.com>\",\"Jonathan Burke <jonathan.burke.1311@googlemail.com>\",\"Josh Hamit <josh.hamit@gmail.com>\",\"Jordan Austin <jrax86@gmail.com>\",\"Joel Wetzell <jwetzell@yahoo.com>\",\"xizhao <kevin.wang@cloudera.com>\",\"Alberto Torres <kungfoobar@gmail.com>\",\"Jonathan Mayol <mayoljonathan@gmail.com>\",\"Jefferson Felix <me@jsfelix.dev>\",\"Rolf Erik Lekang <me@rolflekang.com>\",\"Kevin Mai-Husan Chia <mhchia@users.noreply.github.com>\",\"Pepijn de Vos <pepijndevos@gmail.com>\",\"JooYoung <qkdlql@naver.com>\",\"Tobias Speicher <rootcommander@gmail.com>\",\"Steve Blaurock <sblaurock@gmail.com>\",\"Kyrylo Shegeda <shegeda@ualberta.ca>\",\"Diwank Singh Tomer <singh@diwank.name>\",\"So\\u0308ren Balko <Soeren.Balko@gmail.com>\",\"Arpit Solanki <solankiarpit1997@gmail.com>\",\"Yuki Ito <yuki@gnnk.net>\",\"Artur Zayats <zag2art@gmail.com>\"],\"funding\":{\"type\":\"opencollective\",\"url\":\"https://opencollective.com/peer\"},\"collective\":{\"type\":\"opencollective\",\"url\":\"https://opencollective.com/peer\"},\"files\":[\"dist/*\"],\"sideEffects\":[\"lib/global.ts\",\"lib/supports.ts\"],\"main\":\"dist/bundler.cjs\",\"module\":\"dist/bundler.mjs\",\"browser-minified\":\"dist/peerjs.min.js\",\"browser-unminified\":\"dist/peerjs.js\",\"browser-minified-msgpack\":\"dist/serializer.msgpack.mjs\",\"types\":\"dist/types.d.ts\",\"engines\":{\"node\":\">= 14\"},\"targets\":{\"types\":{\"source\":\"lib/exports.ts\"},\"main\":{\"source\":\"lib/exports.ts\",\"sourceMap\":{\"inlineSources\":true}},\"module\":{\"source\":\"lib/exports.ts\",\"includeNodeModules\":[\"eventemitter3\"],\"sourceMap\":{\"inlineSources\":true}},\"browser-minified\":{\"context\":\"browser\",\"outputFormat\":\"global\",\"optimize\":true,\"engines\":{\"browsers\":\"chrome >= 83, edge >= 83, firefox >= 80, safari >= 15\"},\"source\":\"lib/global.ts\"},\"browser-unminified\":{\"context\":\"browser\",\"outputFormat\":\"global\",\"optimize\":false,\"engines\":{\"browsers\":\"chrome >= 83, edge >= 83, firefox >= 80, safari >= 15\"},\"source\":\"lib/global.ts\"},\"browser-minified-msgpack\":{\"context\":\"browser\",\"outputFormat\":\"esmodule\",\"isLibrary\":true,\"optimize\":true,\"engines\":{\"browsers\":\"chrome >= 83, edge >= 83, firefox >= 102, safari >= 15\"},\"source\":\"lib/dataconnection/StreamConnection/MsgPack.ts\"}},\"scripts\":{\"contributors\":\"git-authors-cli --print=false && prettier --write package.json && git add package.json package-lock.json && git commit -m \\\\\"chore(contributors): update and sort contributors list\\\\\"\",\"check\":\"tsc --noEmit && tsc -p e2e/tsconfig.json --noEmit\",\"watch\":\"parcel watch\",\"build\":\"rm -rf dist && parcel build\",\"prepublishOnly\":\"npm run build\",\"test\":\"jest\",\"test:watch\":\"jest --watch\",\"coverage\":\"jest --coverage --collectCoverageFrom=\\\\\"./lib/**\\\\\"\",\"format\":\"prettier --write .\",\"format:check\":\"prettier --check .\",\"semantic-release\":\"semantic-release\",\"e2e\":\"wdio run e2e/wdio.local.conf.ts\",\"e2e:bstack\":\"wdio run e2e/wdio.bstack.conf.ts\"},\"devDependencies\":{\"@parcel/config-default\":\"^2.9.3\",\"@parcel/packager-ts\":\"^2.9.3\",\"@parcel/transformer-typescript-tsc\":\"^2.9.3\",\"@parcel/transformer-typescript-types\":\"^2.9.3\",\"@semantic-release/changelog\":\"^6.0.1\",\"@semantic-release/git\":\"^10.0.1\",\"@swc/core\":\"^1.3.27\",\"@swc/jest\":\"^0.2.24\",\"@types/jasmine\":\"^4.3.4\",\"@wdio/browserstack-service\":\"^8.11.2\",\"@wdio/cli\":\"^8.11.2\",\"@wdio/globals\":\"^8.11.2\",\"@wdio/jasmine-framework\":\"^8.11.2\",\"@wdio/local-runner\":\"^8.11.2\",\"@wdio/spec-reporter\":\"^8.11.2\",\"@wdio/types\":\"^8.10.4\",\"http-server\":\"^14.1.1\",\"jest\":\"^29.3.1\",\"jest-environment-jsdom\":\"^29.3.1\",\"mock-socket\":\"^9.0.0\",\"parcel\":\"^2.9.3\",\"prettier\":\"^3.0.0\",\"semantic-release\":\"^21.0.0\",\"ts-node\":\"^10.9.1\",\"typescript\":\"^5.0.0\",\"wdio-geckodriver-service\":\"^5.0.1\"},\"dependencies\":{\"@msgpack/msgpack\":\"^2.8.0\",\"eventemitter3\":\"^4.0.7\",\"peerjs-js-binarypack\":\"^2.1.0\",\"webrtc-adapter\":\"^9.0.0\"},\"alias\":{\"process\":false,\"buffer\":false}}');\n\n\nclass $8f5bfa60836d261d$export$4798917dbf149b79 extends (0, $c4dcfd1d1ea86647$exports.EventEmitter) {\n    constructor(secure, host, port, path, key, pingInterval = 5000){\n        super();\n        this.pingInterval = pingInterval;\n        this._disconnected = true;\n        this._messagesQueue = [];\n        const wsProtocol = secure ? \"wss://\" : \"ws://\";\n        this._baseUrl = wsProtocol + host + \":\" + port + path + \"peerjs?key=\" + key;\n    }\n    start(id, token) {\n        this._id = id;\n        const wsUrl = `${this._baseUrl}&id=${id}&token=${token}`;\n        if (!!this._socket || !this._disconnected) return;\n        this._socket = new WebSocket(wsUrl + \"&version=\" + (0, $f5f881ec4575f1fc$exports.version));\n        this._disconnected = false;\n        this._socket.onmessage = (event)=>{\n            let data;\n            try {\n                data = JSON.parse(event.data);\n                (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Server message received:\", data);\n            } catch (e) {\n                (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Invalid server message\", event.data);\n                return;\n            }\n            this.emit((0, $78455e22dea96b8c$export$3b5c4a4b6354f023).Message, data);\n        };\n        this._socket.onclose = (event)=>{\n            if (this._disconnected) return;\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Socket closed.\", event);\n            this._cleanup();\n            this._disconnected = true;\n            this.emit((0, $78455e22dea96b8c$export$3b5c4a4b6354f023).Disconnected);\n        };\n        // Take care of the queue of connections if necessary and make sure Peer knows\n        // socket is open.\n        this._socket.onopen = ()=>{\n            if (this._disconnected) return;\n            this._sendQueuedMessages();\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Socket open\");\n            this._scheduleHeartbeat();\n        };\n    }\n    _scheduleHeartbeat() {\n        this._wsPingTimer = setTimeout(()=>{\n            this._sendHeartbeat();\n        }, this.pingInterval);\n    }\n    _sendHeartbeat() {\n        if (!this._wsOpen()) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Cannot send heartbeat, because socket closed`);\n            return;\n        }\n        const message = JSON.stringify({\n            type: (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Heartbeat\n        });\n        this._socket.send(message);\n        this._scheduleHeartbeat();\n    }\n    /** Is the websocket currently open? */ _wsOpen() {\n        return !!this._socket && this._socket.readyState === 1;\n    }\n    /** Send queued messages. */ _sendQueuedMessages() {\n        //Create copy of queue and clear it,\n        //because send method push the message back to queue if smth will go wrong\n        const copiedQueue = [\n            ...this._messagesQueue\n        ];\n        this._messagesQueue = [];\n        for (const message of copiedQueue)this.send(message);\n    }\n    /** Exposed send for DC & Peer. */ send(data) {\n        if (this._disconnected) return;\n        // If we didn't get an ID yet, we can't yet send anything so we should queue\n        // up these messages.\n        if (!this._id) {\n            this._messagesQueue.push(data);\n            return;\n        }\n        if (!data.type) {\n            this.emit((0, $78455e22dea96b8c$export$3b5c4a4b6354f023).Error, \"Invalid message\");\n            return;\n        }\n        if (!this._wsOpen()) return;\n        const message = JSON.stringify(data);\n        this._socket.send(message);\n    }\n    close() {\n        if (this._disconnected) return;\n        this._cleanup();\n        this._disconnected = true;\n    }\n    _cleanup() {\n        if (this._socket) {\n            this._socket.onopen = this._socket.onmessage = this._socket.onclose = null;\n            this._socket.close();\n            this._socket = undefined;\n        }\n        clearTimeout(this._wsPingTimer);\n    }\n}\n\n\n\n\n\n\nclass $b82fb8fc0514bfc1$export$89e6bb5ad64bf4a {\n    constructor(connection){\n        this.connection = connection;\n    }\n    /** Returns a PeerConnection object set up correctly (for data, media). */ startConnection(options) {\n        const peerConnection = this._startPeerConnection();\n        // Set the connection's PC.\n        this.connection.peerConnection = peerConnection;\n        if (this.connection.type === (0, $78455e22dea96b8c$export$3157d57b4135e3bc).Media && options._stream) this._addTracksToConnection(options._stream, peerConnection);\n        // What do we need to do now?\n        if (options.originator) {\n            const dataConnection = this.connection;\n            const config = {\n                ordered: !!options.reliable\n            };\n            const dataChannel = peerConnection.createDataChannel(dataConnection.label, config);\n            dataConnection._initializeDataChannel(dataChannel);\n            this._makeOffer();\n        } else this.handleSDP(\"OFFER\", options.sdp);\n    }\n    /** Start a PC. */ _startPeerConnection() {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Creating RTCPeerConnection.\");\n        const peerConnection = new RTCPeerConnection(this.connection.provider.options.config);\n        this._setupListeners(peerConnection);\n        return peerConnection;\n    }\n    /** Set up various WebRTC listeners. */ _setupListeners(peerConnection) {\n        const peerId = this.connection.peer;\n        const connectionId = this.connection.connectionId;\n        const connectionType = this.connection.type;\n        const provider = this.connection.provider;\n        // ICE CANDIDATES.\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Listening for ICE candidates.\");\n        peerConnection.onicecandidate = (evt)=>{\n            if (!evt.candidate || !evt.candidate.candidate) return;\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Received ICE candidates for ${peerId}:`, evt.candidate);\n            provider.socket.send({\n                type: (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Candidate,\n                payload: {\n                    candidate: evt.candidate,\n                    type: connectionType,\n                    connectionId: connectionId\n                },\n                dst: peerId\n            });\n        };\n        peerConnection.oniceconnectionstatechange = ()=>{\n            switch(peerConnection.iceConnectionState){\n                case \"failed\":\n                    (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"iceConnectionState is failed, closing connections to \" + peerId);\n                    this.connection.emitError((0, $78455e22dea96b8c$export$7974935686149686).NegotiationFailed, \"Negotiation of connection to \" + peerId + \" failed.\");\n                    this.connection.close();\n                    break;\n                case \"closed\":\n                    (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"iceConnectionState is closed, closing connections to \" + peerId);\n                    this.connection.emitError((0, $78455e22dea96b8c$export$7974935686149686).ConnectionClosed, \"Connection to \" + peerId + \" closed.\");\n                    this.connection.close();\n                    break;\n                case \"disconnected\":\n                    (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"iceConnectionState changed to disconnected on the connection with \" + peerId);\n                    break;\n                case \"completed\":\n                    peerConnection.onicecandidate = ()=>{};\n                    break;\n            }\n            this.connection.emit(\"iceStateChanged\", peerConnection.iceConnectionState);\n        };\n        // DATACONNECTION.\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Listening for data channel\");\n        // Fired between offer and answer, so options should already be saved\n        // in the options hash.\n        peerConnection.ondatachannel = (evt)=>{\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Received data channel\");\n            const dataChannel = evt.channel;\n            const connection = provider.getConnection(peerId, connectionId);\n            connection._initializeDataChannel(dataChannel);\n        };\n        // MEDIACONNECTION.\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Listening for remote stream\");\n        peerConnection.ontrack = (evt)=>{\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Received remote stream\");\n            const stream = evt.streams[0];\n            const connection = provider.getConnection(peerId, connectionId);\n            if (connection.type === (0, $78455e22dea96b8c$export$3157d57b4135e3bc).Media) {\n                const mediaConnection = connection;\n                this._addStreamToMediaConnection(stream, mediaConnection);\n            }\n        };\n    }\n    cleanup() {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Cleaning up PeerConnection to \" + this.connection.peer);\n        const peerConnection = this.connection.peerConnection;\n        if (!peerConnection) return;\n        this.connection.peerConnection = null;\n        //unsubscribe from all PeerConnection's events\n        peerConnection.onicecandidate = peerConnection.oniceconnectionstatechange = peerConnection.ondatachannel = peerConnection.ontrack = ()=>{};\n        const peerConnectionNotClosed = peerConnection.signalingState !== \"closed\";\n        let dataChannelNotClosed = false;\n        const dataChannel = this.connection.dataChannel;\n        if (dataChannel) dataChannelNotClosed = !!dataChannel.readyState && dataChannel.readyState !== \"closed\";\n        if (peerConnectionNotClosed || dataChannelNotClosed) peerConnection.close();\n    }\n    async _makeOffer() {\n        const peerConnection = this.connection.peerConnection;\n        const provider = this.connection.provider;\n        try {\n            const offer = await peerConnection.createOffer(this.connection.options.constraints);\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Created offer.\");\n            if (this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === \"function\") offer.sdp = this.connection.options.sdpTransform(offer.sdp) || offer.sdp;\n            try {\n                await peerConnection.setLocalDescription(offer);\n                (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Set localDescription:\", offer, `for:${this.connection.peer}`);\n                let payload = {\n                    sdp: offer,\n                    type: this.connection.type,\n                    connectionId: this.connection.connectionId,\n                    metadata: this.connection.metadata\n                };\n                if (this.connection.type === (0, $78455e22dea96b8c$export$3157d57b4135e3bc).Data) {\n                    const dataConnection = this.connection;\n                    payload = {\n                        ...payload,\n                        label: dataConnection.label,\n                        reliable: dataConnection.reliable,\n                        serialization: dataConnection.serialization\n                    };\n                }\n                provider.socket.send({\n                    type: (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Offer,\n                    payload: payload,\n                    dst: this.connection.peer\n                });\n            } catch (err) {\n                // TODO: investigate why _makeOffer is being called from the answer\n                if (err != \"OperationError: Failed to set local offer sdp: Called in wrong state: kHaveRemoteOffer\") {\n                    provider.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).WebRTC, err);\n                    (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Failed to setLocalDescription, \", err);\n                }\n            }\n        } catch (err_1) {\n            provider.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).WebRTC, err_1);\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Failed to createOffer, \", err_1);\n        }\n    }\n    async _makeAnswer() {\n        const peerConnection = this.connection.peerConnection;\n        const provider = this.connection.provider;\n        try {\n            const answer = await peerConnection.createAnswer();\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Created answer.\");\n            if (this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === \"function\") answer.sdp = this.connection.options.sdpTransform(answer.sdp) || answer.sdp;\n            try {\n                await peerConnection.setLocalDescription(answer);\n                (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Set localDescription:`, answer, `for:${this.connection.peer}`);\n                provider.socket.send({\n                    type: (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Answer,\n                    payload: {\n                        sdp: answer,\n                        type: this.connection.type,\n                        connectionId: this.connection.connectionId\n                    },\n                    dst: this.connection.peer\n                });\n            } catch (err) {\n                provider.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).WebRTC, err);\n                (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Failed to setLocalDescription, \", err);\n            }\n        } catch (err_1) {\n            provider.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).WebRTC, err_1);\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Failed to create answer, \", err_1);\n        }\n    }\n    /** Handle an SDP. */ async handleSDP(type, sdp) {\n        sdp = new RTCSessionDescription(sdp);\n        const peerConnection = this.connection.peerConnection;\n        const provider = this.connection.provider;\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Setting remote description\", sdp);\n        const self = this;\n        try {\n            await peerConnection.setRemoteDescription(sdp);\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Set remoteDescription:${type} for:${this.connection.peer}`);\n            if (type === \"OFFER\") await self._makeAnswer();\n        } catch (err) {\n            provider.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).WebRTC, err);\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Failed to setRemoteDescription, \", err);\n        }\n    }\n    /** Handle a candidate. */ async handleCandidate(ice) {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(`handleCandidate:`, ice);\n        try {\n            await this.connection.peerConnection.addIceCandidate(ice);\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Added ICE candidate for:${this.connection.peer}`);\n        } catch (err) {\n            this.connection.provider.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).WebRTC, err);\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Failed to handleCandidate, \", err);\n        }\n    }\n    _addTracksToConnection(stream, peerConnection) {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(`add tracks from stream ${stream.id} to peer connection`);\n        if (!peerConnection.addTrack) return (0, $257947e92926277a$export$2e2bcd8739ae039).error(`Your browser does't support RTCPeerConnection#addTrack. Ignored.`);\n        stream.getTracks().forEach((track)=>{\n            peerConnection.addTrack(track, stream);\n        });\n    }\n    _addStreamToMediaConnection(stream, mediaConnection) {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(`add stream ${stream.id} to media connection ${mediaConnection.connectionId}`);\n        mediaConnection.addStream(stream);\n    }\n}\n\n\n\n\n\nclass $23779d1881157a18$export$6a678e589c8a4542 extends (0, $c4dcfd1d1ea86647$exports.EventEmitter) {\n    /**\n\t * Emits a typed error message.\n\t *\n\t * @internal\n\t */ emitError(type, err) {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).error(\"Error:\", err);\n        // @ts-ignore\n        this.emit(\"error\", new $23779d1881157a18$export$98871882f492de82(`${type}`, err));\n    }\n}\nclass $23779d1881157a18$export$98871882f492de82 extends Error {\n    /**\n\t * @internal\n\t */ constructor(type, err){\n        if (typeof err === \"string\") super(err);\n        else {\n            super();\n            Object.assign(this, err);\n        }\n        this.type = type;\n    }\n}\n\n\nclass $5045192fc6d387ba$export$23a2a68283c24d80 extends (0, $23779d1881157a18$export$6a678e589c8a4542) {\n    /**\n\t * Whether the media connection is active (e.g. your call has been answered).\n\t * You can check this if you want to set a maximum wait time for a one-sided call.\n\t */ get open() {\n        return this._open;\n    }\n    constructor(/**\n\t\t * The ID of the peer on the other end of this connection.\n\t\t */ peer, provider, options){\n        super();\n        this.peer = peer;\n        this.provider = provider;\n        this.options = options;\n        this._open = false;\n        this.metadata = options.metadata;\n    }\n}\n\n\nclass $5c1d08c7c57da9a3$export$4a84e95a2324ac29 extends (0, $5045192fc6d387ba$export$23a2a68283c24d80) {\n    static #_ = this.ID_PREFIX = \"mc_\";\n    /**\n\t * For media connections, this is always 'media'.\n\t */ get type() {\n        return (0, $78455e22dea96b8c$export$3157d57b4135e3bc).Media;\n    }\n    get localStream() {\n        return this._localStream;\n    }\n    get remoteStream() {\n        return this._remoteStream;\n    }\n    constructor(peerId, provider, options){\n        super(peerId, provider, options);\n        this._localStream = this.options._stream;\n        this.connectionId = this.options.connectionId || $5c1d08c7c57da9a3$export$4a84e95a2324ac29.ID_PREFIX + (0, $4f4134156c446392$export$7debb50ef11d5e0b).randomToken();\n        this._negotiator = new (0, $b82fb8fc0514bfc1$export$89e6bb5ad64bf4a)(this);\n        if (this._localStream) this._negotiator.startConnection({\n            _stream: this._localStream,\n            originator: true\n        });\n    }\n    /** Called by the Negotiator when the DataChannel is ready. */ _initializeDataChannel(dc) {\n        this.dataChannel = dc;\n        this.dataChannel.onopen = ()=>{\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`DC#${this.connectionId} dc connection success`);\n            this.emit(\"willCloseOnRemote\");\n        };\n        this.dataChannel.onclose = ()=>{\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`DC#${this.connectionId} dc closed for:`, this.peer);\n            this.close();\n        };\n    }\n    addStream(remoteStream) {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Receiving stream\", remoteStream);\n        this._remoteStream = remoteStream;\n        super.emit(\"stream\", remoteStream); // Should we call this `open`?\n    }\n    /**\n\t * @internal\n\t */ handleMessage(message) {\n        const type = message.type;\n        const payload = message.payload;\n        switch(message.type){\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Answer:\n                // Forward to negotiator\n                this._negotiator.handleSDP(type, payload.sdp);\n                this._open = true;\n                break;\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Candidate:\n                this._negotiator.handleCandidate(payload.candidate);\n                break;\n            default:\n                (0, $257947e92926277a$export$2e2bcd8739ae039).warn(`Unrecognized message type:${type} from peer:${this.peer}`);\n                break;\n        }\n    }\n    /**\n     * When receiving a {@apilink PeerEvents | `call`} event on a peer, you can call\n     * `answer` on the media connection provided by the callback to accept the call\n     * and optionally send your own media stream.\n\n     *\n     * @param stream A WebRTC media stream.\n     * @param options\n     * @returns\n     */ answer(stream, options = {}) {\n        if (this._localStream) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).warn(\"Local stream already exists on this MediaConnection. Are you answering a call twice?\");\n            return;\n        }\n        this._localStream = stream;\n        if (options && options.sdpTransform) this.options.sdpTransform = options.sdpTransform;\n        this._negotiator.startConnection({\n            ...this.options._payload,\n            _stream: stream\n        });\n        // Retrieve lost messages stored because PeerConnection not set up.\n        const messages = this.provider._getMessages(this.connectionId);\n        for (const message of messages)this.handleMessage(message);\n        this._open = true;\n    }\n    /**\n\t * Exposed functionality for users.\n\t */ /**\n\t * Closes the media connection.\n\t */ close() {\n        if (this._negotiator) {\n            this._negotiator.cleanup();\n            this._negotiator = null;\n        }\n        this._localStream = null;\n        this._remoteStream = null;\n        if (this.provider) {\n            this.provider._removeConnection(this);\n            this.provider = null;\n        }\n        if (this.options && this.options._stream) this.options._stream = null;\n        if (!this.open) return;\n        this._open = false;\n        super.emit(\"close\");\n    }\n}\n\n\n\n\n\n\nclass $abf266641927cd89$export$2c4e825dc9120f87 {\n    constructor(_options){\n        this._options = _options;\n    }\n    _buildRequest(method) {\n        const protocol = this._options.secure ? \"https\" : \"http\";\n        const { host: host, port: port, path: path, key: key } = this._options;\n        const url = new URL(`${protocol}://${host}:${port}${path}${key}/${method}`);\n        // TODO: Why timestamp, why random?\n        url.searchParams.set(\"ts\", `${Date.now()}${Math.random()}`);\n        url.searchParams.set(\"version\", (0, $f5f881ec4575f1fc$exports.version));\n        return fetch(url.href, {\n            referrerPolicy: this._options.referrerPolicy\n        });\n    }\n    /** Get a unique ID from the server via XHR and initialize with it. */ async retrieveId() {\n        try {\n            const response = await this._buildRequest(\"id\");\n            if (response.status !== 200) throw new Error(`Error. Status:${response.status}`);\n            return response.text();\n        } catch (error) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).error(\"Error retrieving ID\", error);\n            let pathError = \"\";\n            if (this._options.path === \"/\" && this._options.host !== (0, $4f4134156c446392$export$7debb50ef11d5e0b).CLOUD_HOST) pathError = \" If you passed in a `path` to your self-hosted PeerServer, you'll also need to pass in that same path when creating a new Peer.\";\n            throw new Error(\"Could not get an ID from the server.\" + pathError);\n        }\n    }\n    /** @deprecated */ async listAllPeers() {\n        try {\n            const response = await this._buildRequest(\"peers\");\n            if (response.status !== 200) {\n                if (response.status === 401) {\n                    let helpfulError = \"\";\n                    if (this._options.host === (0, $4f4134156c446392$export$7debb50ef11d5e0b).CLOUD_HOST) helpfulError = \"It looks like you're using the cloud server. You can email team@peerjs.com to enable peer listing for your API key.\";\n                    else helpfulError = \"You need to enable `allow_discovery` on your self-hosted PeerServer to use this feature.\";\n                    throw new Error(\"It doesn't look like you have permission to list peers IDs. \" + helpfulError);\n                }\n                throw new Error(`Error. Status:${response.status}`);\n            }\n            return response.json();\n        } catch (error) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).error(\"Error retrieving list peers\", error);\n            throw new Error(\"Could not get list peers from the server.\" + error);\n        }\n    }\n}\n\n\n\n\n\n\n\n\n\n\nclass $6366c4ca161bc297$export$d365f7ad9d7df9c9 extends (0, $5045192fc6d387ba$export$23a2a68283c24d80) {\n    static #_ = this.ID_PREFIX = \"dc_\";\n    static #_2 = this.MAX_BUFFERED_AMOUNT = 8388608;\n    get type() {\n        return (0, $78455e22dea96b8c$export$3157d57b4135e3bc).Data;\n    }\n    constructor(peerId, provider, options){\n        super(peerId, provider, options);\n        this.connectionId = this.options.connectionId || $6366c4ca161bc297$export$d365f7ad9d7df9c9.ID_PREFIX + (0, $0e5fd1585784c252$export$4e61f672936bec77)();\n        this.label = this.options.label || this.connectionId;\n        this.reliable = !!this.options.reliable;\n        this._negotiator = new (0, $b82fb8fc0514bfc1$export$89e6bb5ad64bf4a)(this);\n        this._negotiator.startConnection(this.options._payload || {\n            originator: true,\n            reliable: this.reliable\n        });\n    }\n    /** Called by the Negotiator when the DataChannel is ready. */ _initializeDataChannel(dc) {\n        this.dataChannel = dc;\n        this.dataChannel.onopen = ()=>{\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`DC#${this.connectionId} dc connection success`);\n            this._open = true;\n            this.emit(\"open\");\n        };\n        this.dataChannel.onmessage = (e)=>{\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`DC#${this.connectionId} dc onmessage:`, e.data);\n        // this._handleDataMessage(e);\n        };\n        this.dataChannel.onclose = ()=>{\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`DC#${this.connectionId} dc closed for:`, this.peer);\n            this.close();\n        };\n    }\n    /**\n\t * Exposed functionality for users.\n\t */ /** Allows user to close connection. */ close(options) {\n        if (options?.flush) {\n            this.send({\n                __peerData: {\n                    type: \"close\"\n                }\n            });\n            return;\n        }\n        if (this._negotiator) {\n            this._negotiator.cleanup();\n            this._negotiator = null;\n        }\n        if (this.provider) {\n            this.provider._removeConnection(this);\n            this.provider = null;\n        }\n        if (this.dataChannel) {\n            this.dataChannel.onopen = null;\n            this.dataChannel.onmessage = null;\n            this.dataChannel.onclose = null;\n            this.dataChannel = null;\n        }\n        if (!this.open) return;\n        this._open = false;\n        super.emit(\"close\");\n    }\n    /** Allows user to send data. */ send(data, chunked = false) {\n        if (!this.open) {\n            this.emitError((0, $78455e22dea96b8c$export$49ae800c114df41d).NotOpenYet, \"Connection is not open. You should listen for the `open` event before sending messages.\");\n            return;\n        }\n        return this._send(data, chunked);\n    }\n    async handleMessage(message) {\n        const payload = message.payload;\n        switch(message.type){\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Answer:\n                await this._negotiator.handleSDP(message.type, payload.sdp);\n                break;\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Candidate:\n                await this._negotiator.handleCandidate(payload.candidate);\n                break;\n            default:\n                (0, $257947e92926277a$export$2e2bcd8739ae039).warn(\"Unrecognized message type:\", message.type, \"from peer:\", this.peer);\n                break;\n        }\n    }\n}\n\n\nclass $a229bedbcaa6ca23$export$ff7c9d4c11d94e8b extends (0, $6366c4ca161bc297$export$d365f7ad9d7df9c9) {\n    get bufferSize() {\n        return this._bufferSize;\n    }\n    _initializeDataChannel(dc) {\n        super._initializeDataChannel(dc);\n        this.dataChannel.binaryType = \"arraybuffer\";\n        this.dataChannel.addEventListener(\"message\", (e)=>this._handleDataMessage(e));\n    }\n    _bufferedSend(msg) {\n        if (this._buffering || !this._trySend(msg)) {\n            this._buffer.push(msg);\n            this._bufferSize = this._buffer.length;\n        }\n    }\n    // Returns true if the send succeeds.\n    _trySend(msg) {\n        if (!this.open) return false;\n        if (this.dataChannel.bufferedAmount > (0, $6366c4ca161bc297$export$d365f7ad9d7df9c9).MAX_BUFFERED_AMOUNT) {\n            this._buffering = true;\n            setTimeout(()=>{\n                this._buffering = false;\n                this._tryBuffer();\n            }, 50);\n            return false;\n        }\n        try {\n            this.dataChannel.send(msg);\n        } catch (e) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).error(`DC#:${this.connectionId} Error when sending:`, e);\n            this._buffering = true;\n            this.close();\n            return false;\n        }\n        return true;\n    }\n    // Try to send the first message in the buffer.\n    _tryBuffer() {\n        if (!this.open) return;\n        if (this._buffer.length === 0) return;\n        const msg = this._buffer[0];\n        if (this._trySend(msg)) {\n            this._buffer.shift();\n            this._bufferSize = this._buffer.length;\n            this._tryBuffer();\n        }\n    }\n    close(options) {\n        if (options?.flush) {\n            this.send({\n                __peerData: {\n                    type: \"close\"\n                }\n            });\n            return;\n        }\n        this._buffer = [];\n        this._bufferSize = 0;\n        super.close();\n    }\n    constructor(...args){\n        super(...args);\n        this._buffer = [];\n        this._bufferSize = 0;\n        this._buffering = false;\n    }\n}\n\n\n\n\nclass $9fcfddb3ae148f88$export$f0a5a64d5bb37108 extends (0, $a229bedbcaa6ca23$export$ff7c9d4c11d94e8b) {\n    close(options) {\n        super.close(options);\n        this._chunkedData = {};\n    }\n    constructor(peerId, provider, options){\n        super(peerId, provider, options);\n        this.chunker = new (0, $fcbcc7538a6776d5$export$f1c5f4c9cb95390b)();\n        this.serialization = (0, $78455e22dea96b8c$export$89f507cf986a947).Binary;\n        this._chunkedData = {};\n    }\n    // Handles a DataChannel message.\n    _handleDataMessage({ data: data }) {\n        const deserializedData = (0, $gCcbY$unpack)(data);\n        // PeerJS specific message\n        const peerData = deserializedData[\"__peerData\"];\n        if (peerData) {\n            if (peerData.type === \"close\") {\n                this.close();\n                return;\n            }\n            // Chunked data -- piece things back together.\n            // @ts-ignore\n            this._handleChunk(deserializedData);\n            return;\n        }\n        this.emit(\"data\", deserializedData);\n    }\n    _handleChunk(data) {\n        const id = data.__peerData;\n        const chunkInfo = this._chunkedData[id] || {\n            data: [],\n            count: 0,\n            total: data.total\n        };\n        chunkInfo.data[data.n] = new Uint8Array(data.data);\n        chunkInfo.count++;\n        this._chunkedData[id] = chunkInfo;\n        if (chunkInfo.total === chunkInfo.count) {\n            // Clean up before making the recursive call to `_handleDataMessage`.\n            delete this._chunkedData[id];\n            // We've received all the chunks--time to construct the complete data.\n            // const data = new Blob(chunkInfo.data);\n            const data = (0, $fcbcc7538a6776d5$export$52c89ebcdc4f53f2)(chunkInfo.data);\n            this._handleDataMessage({\n                data: data\n            });\n        }\n    }\n    _send(data, chunked) {\n        const blob = (0, $gCcbY$pack)(data);\n        if (blob instanceof Promise) return this._send_blob(blob);\n        if (!chunked && blob.byteLength > this.chunker.chunkedMTU) {\n            this._sendChunks(blob);\n            return;\n        }\n        this._bufferedSend(blob);\n    }\n    async _send_blob(blobPromise) {\n        const blob = await blobPromise;\n        if (blob.byteLength > this.chunker.chunkedMTU) {\n            this._sendChunks(blob);\n            return;\n        }\n        this._bufferedSend(blob);\n    }\n    _sendChunks(blob) {\n        const blobs = this.chunker.chunk(blob);\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(`DC#${this.connectionId} Try to send ${blobs.length} chunks...`);\n        for (const blob of blobs)this.send(blob, true);\n    }\n}\n\n\n\n\nclass $bbaee3f15f714663$export$6f88fe47d32c9c94 extends (0, $a229bedbcaa6ca23$export$ff7c9d4c11d94e8b) {\n    _handleDataMessage({ data: data }) {\n        super.emit(\"data\", data);\n    }\n    _send(data, _chunked) {\n        this._bufferedSend(data);\n    }\n    constructor(...args){\n        super(...args);\n        this.serialization = (0, $78455e22dea96b8c$export$89f507cf986a947).None;\n    }\n}\n\n\n\n\n\nclass $817f931e3f9096cf$export$48880ac635f47186 extends (0, $a229bedbcaa6ca23$export$ff7c9d4c11d94e8b) {\n    // Handles a DataChannel message.\n    _handleDataMessage({ data: data }) {\n        const deserializedData = this.parse(this.decoder.decode(data));\n        // PeerJS specific message\n        const peerData = deserializedData[\"__peerData\"];\n        if (peerData && peerData.type === \"close\") {\n            this.close();\n            return;\n        }\n        this.emit(\"data\", deserializedData);\n    }\n    _send(data, _chunked) {\n        const encodedData = this.encoder.encode(this.stringify(data));\n        if (encodedData.byteLength >= (0, $4f4134156c446392$export$7debb50ef11d5e0b).chunkedMTU) {\n            this.emitError((0, $78455e22dea96b8c$export$49ae800c114df41d).MessageToBig, \"Message too big for JSON channel\");\n            return;\n        }\n        this._bufferedSend(encodedData);\n    }\n    constructor(...args){\n        super(...args);\n        this.serialization = (0, $78455e22dea96b8c$export$89f507cf986a947).JSON;\n        this.encoder = new TextEncoder();\n        this.decoder = new TextDecoder();\n        this.stringify = JSON.stringify;\n        this.parse = JSON.parse;\n    }\n}\n\n\n\nclass $416260bce337df90$var$PeerOptions {\n}\nclass $416260bce337df90$export$ecd1fc136c422448 extends (0, $23779d1881157a18$export$6a678e589c8a4542) {\n    static #_ = this.DEFAULT_KEY = \"peerjs\";\n    /**\n\t * The brokering ID of this peer\n\t *\n\t * If no ID was specified in {@apilink Peer | the constructor},\n\t * this will be `undefined` until the {@apilink PeerEvents | `open`} event is emitted.\n\t */ get id() {\n        return this._id;\n    }\n    get options() {\n        return this._options;\n    }\n    get open() {\n        return this._open;\n    }\n    /**\n\t * @internal\n\t */ get socket() {\n        return this._socket;\n    }\n    /**\n\t * A hash of all connections associated with this peer, keyed by the remote peer's ID.\n\t * @deprecated\n\t * Return type will change from Object to Map<string,[]>\n\t */ get connections() {\n        const plainConnections = Object.create(null);\n        for (const [k, v] of this._connections)plainConnections[k] = v;\n        return plainConnections;\n    }\n    /**\n\t * true if this peer and all of its connections can no longer be used.\n\t */ get destroyed() {\n        return this._destroyed;\n    }\n    /**\n\t * false if there is an active connection to the PeerServer.\n\t */ get disconnected() {\n        return this._disconnected;\n    }\n    constructor(id, options){\n        super();\n        this._serializers = {\n            raw: (0, $bbaee3f15f714663$export$6f88fe47d32c9c94),\n            json: (0, $817f931e3f9096cf$export$48880ac635f47186),\n            binary: (0, $9fcfddb3ae148f88$export$f0a5a64d5bb37108),\n            \"binary-utf8\": (0, $9fcfddb3ae148f88$export$f0a5a64d5bb37108),\n            default: (0, $9fcfddb3ae148f88$export$f0a5a64d5bb37108)\n        };\n        this._id = null;\n        this._lastServerId = null;\n        // States.\n        this._destroyed = false // Connections have been killed\n        ;\n        this._disconnected = false // Connection to PeerServer killed but P2P connections still active\n        ;\n        this._open = false // Sockets and such are not yet open.\n        ;\n        this._connections = new Map() // All connections for this peer.\n        ;\n        this._lostMessages = new Map() // src => [list of messages]\n        ;\n        let userId;\n        // Deal with overloading\n        if (id && id.constructor == Object) options = id;\n        else if (id) userId = id.toString();\n        // Configurize options\n        options = {\n            debug: 0,\n            host: (0, $4f4134156c446392$export$7debb50ef11d5e0b).CLOUD_HOST,\n            port: (0, $4f4134156c446392$export$7debb50ef11d5e0b).CLOUD_PORT,\n            path: \"/\",\n            key: $416260bce337df90$export$ecd1fc136c422448.DEFAULT_KEY,\n            token: (0, $4f4134156c446392$export$7debb50ef11d5e0b).randomToken(),\n            config: (0, $4f4134156c446392$export$7debb50ef11d5e0b).defaultConfig,\n            referrerPolicy: \"strict-origin-when-cross-origin\",\n            serializers: {},\n            ...options\n        };\n        this._options = options;\n        this._serializers = {\n            ...this._serializers,\n            ...this.options.serializers\n        };\n        // Detect relative URL host.\n        if (this._options.host === \"/\") this._options.host = window.location.hostname;\n        // Set path correctly.\n        if (this._options.path) {\n            if (this._options.path[0] !== \"/\") this._options.path = \"/\" + this._options.path;\n            if (this._options.path[this._options.path.length - 1] !== \"/\") this._options.path += \"/\";\n        }\n        // Set whether we use SSL to same as current host\n        if (this._options.secure === undefined && this._options.host !== (0, $4f4134156c446392$export$7debb50ef11d5e0b).CLOUD_HOST) this._options.secure = (0, $4f4134156c446392$export$7debb50ef11d5e0b).isSecure();\n        else if (this._options.host == (0, $4f4134156c446392$export$7debb50ef11d5e0b).CLOUD_HOST) this._options.secure = true;\n        // Set a custom log function if present\n        if (this._options.logFunction) (0, $257947e92926277a$export$2e2bcd8739ae039).setLogFunction(this._options.logFunction);\n        (0, $257947e92926277a$export$2e2bcd8739ae039).logLevel = this._options.debug || 0;\n        this._api = new (0, $abf266641927cd89$export$2c4e825dc9120f87)(options);\n        this._socket = this._createServerConnection();\n        // Sanity checks\n        // Ensure WebRTC supported\n        if (!(0, $4f4134156c446392$export$7debb50ef11d5e0b).supports.audioVideo && !(0, $4f4134156c446392$export$7debb50ef11d5e0b).supports.data) {\n            this._delayedAbort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).BrowserIncompatible, \"The current browser does not support WebRTC\");\n            return;\n        }\n        // Ensure alphanumeric id\n        if (!!userId && !(0, $4f4134156c446392$export$7debb50ef11d5e0b).validateId(userId)) {\n            this._delayedAbort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).InvalidID, `ID \"${userId}\" is invalid`);\n            return;\n        }\n        if (userId) this._initialize(userId);\n        else this._api.retrieveId().then((id)=>this._initialize(id)).catch((error)=>this._abort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).ServerError, error));\n    }\n    _createServerConnection() {\n        const socket = new (0, $8f5bfa60836d261d$export$4798917dbf149b79)(this._options.secure, this._options.host, this._options.port, this._options.path, this._options.key, this._options.pingInterval);\n        socket.on((0, $78455e22dea96b8c$export$3b5c4a4b6354f023).Message, (data)=>{\n            this._handleMessage(data);\n        });\n        socket.on((0, $78455e22dea96b8c$export$3b5c4a4b6354f023).Error, (error)=>{\n            this._abort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).SocketError, error);\n        });\n        socket.on((0, $78455e22dea96b8c$export$3b5c4a4b6354f023).Disconnected, ()=>{\n            if (this.disconnected) return;\n            this.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).Network, \"Lost connection to server.\");\n            this.disconnect();\n        });\n        socket.on((0, $78455e22dea96b8c$export$3b5c4a4b6354f023).Close, ()=>{\n            if (this.disconnected) return;\n            this._abort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).SocketClosed, \"Underlying socket is already closed.\");\n        });\n        return socket;\n    }\n    /** Initialize a connection with the server. */ _initialize(id) {\n        this._id = id;\n        this.socket.start(id, this._options.token);\n    }\n    /** Handles messages from the server. */ _handleMessage(message) {\n        const type = message.type;\n        const payload = message.payload;\n        const peerId = message.src;\n        switch(type){\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Open:\n                this._lastServerId = this.id;\n                this._open = true;\n                this.emit(\"open\", this.id);\n                break;\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Error:\n                this._abort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).ServerError, payload.msg);\n                break;\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).IdTaken:\n                this._abort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).UnavailableID, `ID \"${this.id}\" is taken`);\n                break;\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).InvalidKey:\n                this._abort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).InvalidKey, `API KEY \"${this._options.key}\" is invalid`);\n                break;\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Leave:\n                (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Received leave message from ${peerId}`);\n                this._cleanupPeer(peerId);\n                this._connections.delete(peerId);\n                break;\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Expire:\n                this.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).PeerUnavailable, `Could not connect to peer ${peerId}`);\n                break;\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Offer:\n                {\n                    // we should consider switching this to CALL/CONNECT, but this is the least breaking option.\n                    const connectionId = payload.connectionId;\n                    let connection = this.getConnection(peerId, connectionId);\n                    if (connection) {\n                        connection.close();\n                        (0, $257947e92926277a$export$2e2bcd8739ae039).warn(`Offer received for existing Connection ID:${connectionId}`);\n                    }\n                    // Create a new connection.\n                    if (payload.type === (0, $78455e22dea96b8c$export$3157d57b4135e3bc).Media) {\n                        const mediaConnection = new (0, $5c1d08c7c57da9a3$export$4a84e95a2324ac29)(peerId, this, {\n                            connectionId: connectionId,\n                            _payload: payload,\n                            metadata: payload.metadata\n                        });\n                        connection = mediaConnection;\n                        this._addConnection(peerId, connection);\n                        this.emit(\"call\", mediaConnection);\n                    } else if (payload.type === (0, $78455e22dea96b8c$export$3157d57b4135e3bc).Data) {\n                        const dataConnection = new this._serializers[payload.serialization](peerId, this, {\n                            connectionId: connectionId,\n                            _payload: payload,\n                            metadata: payload.metadata,\n                            label: payload.label,\n                            serialization: payload.serialization,\n                            reliable: payload.reliable\n                        });\n                        connection = dataConnection;\n                        this._addConnection(peerId, connection);\n                        this.emit(\"connection\", dataConnection);\n                    } else {\n                        (0, $257947e92926277a$export$2e2bcd8739ae039).warn(`Received malformed connection type:${payload.type}`);\n                        return;\n                    }\n                    // Find messages.\n                    const messages = this._getMessages(connectionId);\n                    for (const message of messages)connection.handleMessage(message);\n                    break;\n                }\n            default:\n                {\n                    if (!payload) {\n                        (0, $257947e92926277a$export$2e2bcd8739ae039).warn(`You received a malformed message from ${peerId} of type ${type}`);\n                        return;\n                    }\n                    const connectionId = payload.connectionId;\n                    const connection = this.getConnection(peerId, connectionId);\n                    if (connection && connection.peerConnection) // Pass it on.\n                    connection.handleMessage(message);\n                    else if (connectionId) // Store for possible later use\n                    this._storeMessage(connectionId, message);\n                    else (0, $257947e92926277a$export$2e2bcd8739ae039).warn(\"You received an unrecognized message:\", message);\n                    break;\n                }\n        }\n    }\n    /** Stores messages without a set up connection, to be claimed later. */ _storeMessage(connectionId, message) {\n        if (!this._lostMessages.has(connectionId)) this._lostMessages.set(connectionId, []);\n        this._lostMessages.get(connectionId).push(message);\n    }\n    /**\n\t * Retrieve messages from lost message store\n\t * @internal\n\t */ //TODO Change it to private\n    _getMessages(connectionId) {\n        const messages = this._lostMessages.get(connectionId);\n        if (messages) {\n            this._lostMessages.delete(connectionId);\n            return messages;\n        }\n        return [];\n    }\n    /**\n\t * Connects to the remote peer specified by id and returns a data connection.\n\t * @param peer The brokering ID of the remote peer (their {@apilink Peer.id}).\n\t * @param options for specifying details about Peer Connection\n\t */ connect(peer, options = {}) {\n        options = {\n            serialization: \"default\",\n            ...options\n        };\n        if (this.disconnected) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).warn(\"You cannot connect to a new Peer because you called .disconnect() on this Peer and ended your connection with the server. You can create a new Peer to reconnect, or call reconnect on this peer if you believe its ID to still be available.\");\n            this.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).Disconnected, \"Cannot connect to new Peer after disconnecting from server.\");\n            return;\n        }\n        const dataConnection = new this._serializers[options.serialization](peer, this, options);\n        this._addConnection(peer, dataConnection);\n        return dataConnection;\n    }\n    /**\n\t * Calls the remote peer specified by id and returns a media connection.\n\t * @param peer The brokering ID of the remote peer (their peer.id).\n\t * @param stream The caller's media stream\n\t * @param options Metadata associated with the connection, passed in by whoever initiated the connection.\n\t */ call(peer, stream, options = {}) {\n        if (this.disconnected) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).warn(\"You cannot connect to a new Peer because you called .disconnect() on this Peer and ended your connection with the server. You can create a new Peer to reconnect.\");\n            this.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).Disconnected, \"Cannot connect to new Peer after disconnecting from server.\");\n            return;\n        }\n        if (!stream) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).error(\"To call a peer, you must provide a stream from your browser's `getUserMedia`.\");\n            return;\n        }\n        const mediaConnection = new (0, $5c1d08c7c57da9a3$export$4a84e95a2324ac29)(peer, this, {\n            ...options,\n            _stream: stream\n        });\n        this._addConnection(peer, mediaConnection);\n        return mediaConnection;\n    }\n    /** Add a data/media connection to this peer. */ _addConnection(peerId, connection) {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(`add connection ${connection.type}:${connection.connectionId} to peerId:${peerId}`);\n        if (!this._connections.has(peerId)) this._connections.set(peerId, []);\n        this._connections.get(peerId).push(connection);\n    }\n    //TODO should be private\n    _removeConnection(connection) {\n        const connections = this._connections.get(connection.peer);\n        if (connections) {\n            const index = connections.indexOf(connection);\n            if (index !== -1) connections.splice(index, 1);\n        }\n        //remove from lost messages\n        this._lostMessages.delete(connection.connectionId);\n    }\n    /** Retrieve a data/media connection for this peer. */ getConnection(peerId, connectionId) {\n        const connections = this._connections.get(peerId);\n        if (!connections) return null;\n        for (const connection of connections){\n            if (connection.connectionId === connectionId) return connection;\n        }\n        return null;\n    }\n    _delayedAbort(type, message) {\n        setTimeout(()=>{\n            this._abort(type, message);\n        }, 0);\n    }\n    /**\n\t * Emits an error message and destroys the Peer.\n\t * The Peer is not destroyed if it's in a disconnected state, in which case\n\t * it retains its disconnected state and its existing connections.\n\t */ _abort(type, message) {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).error(\"Aborting!\");\n        this.emitError(type, message);\n        if (!this._lastServerId) this.destroy();\n        else this.disconnect();\n    }\n    /**\n\t * Destroys the Peer: closes all active connections as well as the connection\n\t * to the server.\n\t *\n\t * :::caution\n\t * This cannot be undone; the respective peer object will no longer be able\n\t * to create or receive any connections, its ID will be forfeited on the server,\n\t * and all of its data and media connections will be closed.\n\t * :::\n\t */ destroy() {\n        if (this.destroyed) return;\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Destroy peer with ID:${this.id}`);\n        this.disconnect();\n        this._cleanup();\n        this._destroyed = true;\n        this.emit(\"close\");\n    }\n    /** Disconnects every connection on this peer. */ _cleanup() {\n        for (const peerId of this._connections.keys()){\n            this._cleanupPeer(peerId);\n            this._connections.delete(peerId);\n        }\n        this.socket.removeAllListeners();\n    }\n    /** Closes all connections to this peer. */ _cleanupPeer(peerId) {\n        const connections = this._connections.get(peerId);\n        if (!connections) return;\n        for (const connection of connections)connection.close();\n    }\n    /**\n\t * Disconnects the Peer's connection to the PeerServer. Does not close any\n\t *  active connections.\n\t * Warning: The peer can no longer create or accept connections after being\n\t *  disconnected. It also cannot reconnect to the server.\n\t */ disconnect() {\n        if (this.disconnected) return;\n        const currentId = this.id;\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Disconnect peer with ID:${currentId}`);\n        this._disconnected = true;\n        this._open = false;\n        this.socket.close();\n        this._lastServerId = currentId;\n        this._id = null;\n        this.emit(\"disconnected\", currentId);\n    }\n    /** Attempts to reconnect with the same ID.\n\t *\n\t * Only {@apilink Peer.disconnect | disconnected peers} can be reconnected.\n\t * Destroyed peers cannot be reconnected.\n\t * If the connection fails (as an example, if the peer's old ID is now taken),\n\t * the peer's existing connections will not close, but any associated errors events will fire.\n\t */ reconnect() {\n        if (this.disconnected && !this.destroyed) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Attempting reconnection to server with ID ${this._lastServerId}`);\n            this._disconnected = false;\n            this._initialize(this._lastServerId);\n        } else if (this.destroyed) throw new Error(\"This peer cannot reconnect to the server. It has already been destroyed.\");\n        else if (!this.disconnected && !this.open) // Do nothing. We're still connecting the first time.\n        (0, $257947e92926277a$export$2e2bcd8739ae039).error(\"In a hurry? We're still trying to make the initial connection!\");\n        else throw new Error(`Peer ${this.id} cannot reconnect because it is not disconnected from the server!`);\n    }\n    /**\n\t * Get a list of available peer IDs. If you're running your own server, you'll\n\t * want to set allow_discovery: true in the PeerServer options. If you're using\n\t * the cloud server, email team@peerjs.com to get the functionality enabled for\n\t * your key.\n\t */ listAllPeers(cb = (_)=>{}) {\n        this._api.listAllPeers().then((peers)=>cb(peers)).catch((error)=>this._abort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).ServerError, error));\n    }\n}\n\n\n\n\n\n\nclass $20dbe68149d7aad9$export$72aa44612e2200cd extends (0, $6366c4ca161bc297$export$d365f7ad9d7df9c9) {\n    constructor(peerId, provider, options){\n        super(peerId, provider, {\n            ...options,\n            reliable: true\n        });\n        this._CHUNK_SIZE = 32768;\n        this._splitStream = new TransformStream({\n            transform: (chunk, controller)=>{\n                for(let split = 0; split < chunk.length; split += this._CHUNK_SIZE)controller.enqueue(chunk.subarray(split, split + this._CHUNK_SIZE));\n            }\n        });\n        this._rawSendStream = new WritableStream({\n            write: async (chunk, controller)=>{\n                const openEvent = new Promise((resolve)=>this.dataChannel.addEventListener(\"bufferedamountlow\", resolve, {\n                        once: true\n                    }));\n                // if we can send the chunk now, send it\n                // if not, we wait until at least half of the sending buffer is free again\n                await (this.dataChannel.bufferedAmount <= (0, $6366c4ca161bc297$export$d365f7ad9d7df9c9).MAX_BUFFERED_AMOUNT - chunk.byteLength || openEvent);\n                // TODO: what can go wrong here?\n                try {\n                    this.dataChannel.send(chunk);\n                } catch (e) {\n                    (0, $257947e92926277a$export$2e2bcd8739ae039).error(`DC#:${this.connectionId} Error when sending:`, e);\n                    controller.error(e);\n                    this.close();\n                }\n            }\n        });\n        this.writer = this._splitStream.writable.getWriter();\n        this._rawReadStream = new ReadableStream({\n            start: (controller)=>{\n                this.once(\"open\", ()=>{\n                    this.dataChannel.addEventListener(\"message\", (e)=>{\n                        controller.enqueue(e.data);\n                    });\n                });\n            }\n        });\n        this._splitStream.readable.pipeTo(this._rawSendStream);\n    }\n    _initializeDataChannel(dc) {\n        super._initializeDataChannel(dc);\n        this.dataChannel.binaryType = \"arraybuffer\";\n        this.dataChannel.bufferedAmountLowThreshold = (0, $6366c4ca161bc297$export$d365f7ad9d7df9c9).MAX_BUFFERED_AMOUNT / 2;\n    }\n}\n\n\nclass $6e39230ab36396ad$export$80f5de1a66c4d624 extends (0, $20dbe68149d7aad9$export$72aa44612e2200cd) {\n    constructor(peerId, provider, options){\n        super(peerId, provider, options);\n        this.serialization = \"MsgPack\";\n        this._encoder = new (0, $gCcbY$Encoder)();\n        (async ()=>{\n            for await (const msg of (0, $gCcbY$decodeMultiStream)(this._rawReadStream)){\n                // @ts-ignore\n                if (msg.__peerData?.type === \"close\") {\n                    this.close();\n                    return;\n                }\n                this.emit(\"data\", msg);\n            }\n        })();\n    }\n    _send(data) {\n        return this.writer.write(this._encoder.encode(data));\n    }\n}\n\n\nclass $1e0aff16be2c328e$export$d72c7bf8eef50853 extends (0, $416260bce337df90$export$ecd1fc136c422448) {\n    constructor(...args){\n        super(...args);\n        this._serializers = {\n            MsgPack: $6e39230ab36396ad$export$80f5de1a66c4d624,\n            default: (0, $6e39230ab36396ad$export$80f5de1a66c4d624)\n        };\n    }\n}\n\n\n\n\n\n\n\nvar $dd0187d7f28e386f$export$2e2bcd8739ae039 = (0, $416260bce337df90$export$ecd1fc136c422448);\n\n\nexport {$dd0187d7f28e386f$export$2e2bcd8739ae039 as default, $4f4134156c446392$export$7debb50ef11d5e0b as util, $a229bedbcaa6ca23$export$ff7c9d4c11d94e8b as BufferedConnection, $20dbe68149d7aad9$export$72aa44612e2200cd as StreamConnection, $6e39230ab36396ad$export$80f5de1a66c4d624 as MsgPack, $416260bce337df90$export$ecd1fc136c422448 as Peer, $1e0aff16be2c328e$export$d72c7bf8eef50853 as MsgPackPeer, $23779d1881157a18$export$98871882f492de82 as PeerError, $78455e22dea96b8c$export$3157d57b4135e3bc as ConnectionType, $78455e22dea96b8c$export$9547aaa2e39030ff as PeerErrorType, $78455e22dea96b8c$export$7974935686149686 as BaseConnectionErrorType, $78455e22dea96b8c$export$49ae800c114df41d as DataConnectionErrorType, $78455e22dea96b8c$export$89f507cf986a947 as SerializationType, $78455e22dea96b8c$export$3b5c4a4b6354f023 as SocketEventType, $78455e22dea96b8c$export$adb4a1754da6f10d as ServerMessageType};\n//# sourceMappingURL=bundler.mjs.map\n","/**\r\n * Base class for ngrok-related errors\r\n */\r\nexport class NgrokError extends Error {\r\n  /**\r\n   * @param {string} message - Error message\r\n   * @param {Object} details - Additional error details\r\n   */\r\n  constructor(message, details = {}) {\r\n    super(message);\r\n    this.name = 'NgrokError';\r\n    this.details = details;\r\n    this.timestamp = new Date().toISOString();\r\n    this.troubleshooting = [\r\n      'Verify the ngrok tunnel is running',\r\n      'Check if the ngrok URL is correct',\r\n      'Ensure the Kinectron application is running',\r\n    ];\r\n  }\r\n}\r\n\r\n/**\r\n * Error for ngrok connection failures\r\n */\r\nexport class NgrokConnectionError extends NgrokError {\r\n  constructor(message, details = {}) {\r\n    super(message, {\r\n      ...details,\r\n      type: 'connection_error',\r\n    });\r\n    this.name = 'NgrokConnectionError';\r\n    this.troubleshooting = [\r\n      'Check if the ngrok tunnel is still active',\r\n      'Verify your internet connection',\r\n      'Try restarting the ngrok tunnel',\r\n      'Ensure no firewall is blocking the connection',\r\n    ];\r\n  }\r\n}\r\n\r\n/**\r\n * Error for ngrok connection timeouts\r\n */\r\nexport class NgrokTimeoutError extends NgrokError {\r\n  constructor(message, details = {}) {\r\n    super(message, {\r\n      ...details,\r\n      type: 'timeout_error',\r\n    });\r\n    this.name = 'NgrokTimeoutError';\r\n    this.troubleshooting = [\r\n      'The connection attempt timed out',\r\n      'Check your internet connection speed',\r\n      'Verify the Kinectron server is running',\r\n      'Try increasing the connection timeout',\r\n    ];\r\n  }\r\n}\r\n\r\n/**\r\n * Error for invalid ngrok configuration or URLs\r\n */\r\nexport class NgrokValidationError extends NgrokError {\r\n  constructor(message, details = {}) {\r\n    super(message, {\r\n      ...details,\r\n      type: 'validation_error',\r\n    });\r\n    this.name = 'NgrokValidationError';\r\n    this.troubleshooting = [\r\n      'Ensure the URL includes \"ngrok-free.app\"',\r\n      'Copy the URL directly from the Kinectron application',\r\n      'Make sure to include the full domain name',\r\n    ];\r\n  }\r\n}\r\n\r\n/**\r\n * Error codes and their descriptions\r\n */\r\nexport const NgrokErrorCodes = {\r\n  INVALID_URL: {\r\n    code: 'NGROK_001',\r\n    message: 'Invalid ngrok URL format',\r\n  },\r\n  CONNECTION_FAILED: {\r\n    code: 'NGROK_002',\r\n    message: 'Failed to establish ngrok connection',\r\n  },\r\n  CONNECTION_TIMEOUT: {\r\n    code: 'NGROK_003',\r\n    message: 'Connection attempt timed out',\r\n  },\r\n  TUNNEL_CLOSED: {\r\n    code: 'NGROK_004',\r\n    message: 'Ngrok tunnel was closed',\r\n  },\r\n  SERVER_UNREACHABLE: {\r\n    code: 'NGROK_005',\r\n    message: 'Unable to reach Kinectron server',\r\n  },\r\n};\r\n","import { NgrokValidationError, NgrokErrorCodes } from './errors.js';\r\n\r\n/**\r\n * Validates a ngrok URL format\r\n * @param {string} url - The URL to validate\r\n * @throws {NgrokValidationError} If URL is invalid\r\n */\r\nfunction validateNgrokUrl(url) {\r\n  if (!url.includes('ngrok-free.app')) {\r\n    throw new NgrokValidationError(\r\n      NgrokErrorCodes.INVALID_URL.message,\r\n      {\r\n        code: NgrokErrorCodes.INVALID_URL.code,\r\n        url,\r\n        reason: 'URL must include ngrok-free.app domain',\r\n      },\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {Object} PeerNetworkConfig\r\n * @property {string} host - The host address for the peer server\r\n * @property {number|string} port - The port number for the peer server\r\n * @property {string} path - The path for the peer server\r\n * @property {boolean} [secure] - Whether to use secure connection\r\n * @property {string} [role] - Role identifier for the connection (e.g., 'modern-test', 'legacy-test')\r\n */\r\n\r\n/**\r\n * Default peer network configuration\r\n * @type {PeerNetworkConfig}\r\n */\r\nexport const DEFAULT_PEER_CONFIG = {\r\n  host: '127.0.0.1',\r\n  port: 9001,\r\n  path: '/',\r\n  secure: false,\r\n  debug: 3, // Enable detailed logging\r\n  role: 'default', // Default role identifier\r\n  // For local connections, we don't need STUN/TURN servers\r\n  // This matches the original kinectron implementation\r\n  config: {\r\n    iceServers: [],\r\n    sdpSemantics: 'unified-plan',\r\n  },\r\n};\r\n\r\n/**\r\n * Default peer ID for the Kinectron server\r\n * @type {string}\r\n */\r\nexport const DEFAULT_PEER_ID = 'kinectron';\r\n\r\n/**\r\n * Validates and processes peer network configuration\r\n * @param {Object} config - User provided network configuration\r\n * @returns {PeerNetworkConfig} Processed network configuration\r\n */\r\nexport function processPeerConfig(config) {\r\n  if (!config) return DEFAULT_PEER_CONFIG;\r\n\r\n  // Handle ngrok addresses\r\n  if (typeof config === 'string' && config.includes('ngrok')) {\r\n    try {\r\n      validateNgrokUrl(config);\r\n      return {\r\n        host: config,\r\n        port: '443',\r\n        path: '/',\r\n        secure: true,\r\n        debug: 3,\r\n        config: {\r\n          iceServers: [],\r\n          sdpSemantics: 'unified-plan',\r\n        },\r\n      };\r\n    } catch (error) {\r\n      // Add connection context to validation errors\r\n      if (error instanceof NgrokValidationError) {\r\n        error.details.context = 'peer_config_validation';\r\n        error.details.timestamp = new Date().toISOString();\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Handle IP addresses or custom configs\r\n  if (typeof config === 'string') {\r\n    return {\r\n      ...DEFAULT_PEER_CONFIG,\r\n      host: config,\r\n    };\r\n  }\r\n\r\n  // Handle full custom config objects\r\n  return {\r\n    ...DEFAULT_PEER_CONFIG,\r\n    ...config,\r\n  };\r\n}\r\n","/**\r\n * Represents a client-side ngrok connection state error\r\n */\r\nexport class NgrokClientError extends Error {\r\n  constructor(message, details = {}) {\r\n    super(message);\r\n    this.name = 'NgrokClientError';\r\n    this.details = details;\r\n    this.timestamp = new Date().toISOString();\r\n    this.troubleshooting = [\r\n      'Check if the ngrok tunnel is running',\r\n      'Verify the URL is correct',\r\n      'Ensure the Kinectron application is running',\r\n    ];\r\n  }\r\n}\r\n\r\n/**\r\n * Manages client-side ngrok connection state and metrics\r\n */\r\nexport class NgrokClientState {\r\n  /**\r\n   * Available connection states\r\n   */\r\n  static STATES = {\r\n    DISCONNECTED: 'disconnected',\r\n    VALIDATING: 'validating',\r\n    CONNECTING: 'connecting',\r\n    CONNECTED: 'connected',\r\n    RECONNECTING: 'reconnecting',\r\n    ERROR: 'error',\r\n  };\r\n\r\n  /**\r\n   * Valid state transitions\r\n   */\r\n  static VALID_TRANSITIONS = {\r\n    [NgrokClientState.STATES.DISCONNECTED]: [\r\n      NgrokClientState.STATES.VALIDATING,\r\n      NgrokClientState.STATES.CONNECTING,\r\n    ],\r\n    [NgrokClientState.STATES.VALIDATING]: [\r\n      NgrokClientState.STATES.CONNECTING,\r\n      NgrokClientState.STATES.ERROR,\r\n    ],\r\n    [NgrokClientState.STATES.CONNECTING]: [\r\n      NgrokClientState.STATES.CONNECTED,\r\n      NgrokClientState.STATES.RECONNECTING,\r\n      NgrokClientState.STATES.ERROR,\r\n      NgrokClientState.STATES.CONNECTING, // Allow re-entering connecting state\r\n    ],\r\n    [NgrokClientState.STATES.CONNECTED]: [\r\n      NgrokClientState.STATES.DISCONNECTED,\r\n      NgrokClientState.STATES.RECONNECTING,\r\n      NgrokClientState.STATES.ERROR,\r\n      NgrokClientState.STATES.CONNECTED, // Allow self-transition to refresh state\r\n    ],\r\n    [NgrokClientState.STATES.RECONNECTING]: [\r\n      NgrokClientState.STATES.CONNECTED,\r\n      NgrokClientState.STATES.CONNECTING,\r\n      NgrokClientState.STATES.ERROR,\r\n    ],\r\n    [NgrokClientState.STATES.ERROR]: [\r\n      NgrokClientState.STATES.DISCONNECTED,\r\n      NgrokClientState.STATES.CONNECTING,\r\n    ],\r\n  };\r\n\r\n  constructor() {\r\n    this.currentState = null; // Start with no state\r\n    this.metadata = {\r\n      url: null,\r\n      startTime: null,\r\n      lastStateChange: new Date(),\r\n      errorHistory: [],\r\n      metrics: {\r\n        latency: {\r\n          current: 0,\r\n          average: 0,\r\n          samples: [],\r\n        },\r\n        connectionQuality: 'unknown',\r\n        reconnects: {\r\n          count: 0,\r\n          lastAttempt: null,\r\n        },\r\n        errors: {\r\n          total: 0,\r\n          byType: {},\r\n        },\r\n      },\r\n    };\r\n\r\n    // Event handlers\r\n    this.handlers = {\r\n      stateChange: new Set(),\r\n      error: new Set(),\r\n      metrics: new Set(),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Add event listener\r\n   * @param {string} event - Event type\r\n   * @param {Function} handler - Event handler\r\n   */\r\n  on(event, handler) {\r\n    if (this.handlers[event]) {\r\n      this.handlers[event].add(handler);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove event listener\r\n   * @param {string} event - Event type\r\n   * @param {Function} handler - Event handler\r\n   */\r\n  off(event, handler) {\r\n    if (this.handlers[event]) {\r\n      this.handlers[event].delete(handler);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emit event to handlers\r\n   * @private\r\n   * @param {string} event - Event type\r\n   * @param {*} data - Event data\r\n   */\r\n  _emit(event, data) {\r\n    if (this.handlers[event]) {\r\n      this.handlers[event].forEach((handler) => handler(data));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get current state\r\n   * @returns {string} Current state\r\n   */\r\n  getState() {\r\n    return this.currentState;\r\n  }\r\n\r\n  /**\r\n   * Get state metadata\r\n   * @returns {Object} State metadata\r\n   */\r\n  getMetadata() {\r\n    return {\r\n      ...this.metadata,\r\n      currentState: this.currentState,\r\n      uptime: this._calculateUptime(),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Update connection metrics\r\n   * @param {Object} metrics - New metrics\r\n   */\r\n  updateMetrics(metrics) {\r\n    // Update latency\r\n    if (metrics.latency !== undefined) {\r\n      this.metadata.metrics.latency.current = metrics.latency;\r\n      this.metadata.metrics.latency.samples.push({\r\n        value: metrics.latency,\r\n        timestamp: new Date(),\r\n      });\r\n\r\n      // Keep last 10 samples\r\n      if (this.metadata.metrics.latency.samples.length > 10) {\r\n        this.metadata.metrics.latency.samples.shift();\r\n      }\r\n\r\n      // Calculate average\r\n      this.metadata.metrics.latency.average =\r\n        this.metadata.metrics.latency.samples.reduce(\r\n          (sum, sample) => sum + sample.value,\r\n          0,\r\n        ) / this.metadata.metrics.latency.samples.length;\r\n    }\r\n\r\n    // Update connection quality based on metrics\r\n    this._updateConnectionQuality();\r\n\r\n    // Emit metrics update\r\n    this._emit('metrics', this.metadata.metrics);\r\n  }\r\n\r\n  /**\r\n   * Set connection state\r\n   * @param {string} newState - New state\r\n   * @param {Object} details - Transition details\r\n   * @throws {NgrokClientError} If transition is invalid\r\n   */\r\n  setState(newState, details = {}) {\r\n    if (!this._isValidTransition(newState)) {\r\n      throw new NgrokClientError(\r\n        `Invalid state transition from ${this.currentState} to ${newState}`,\r\n        {\r\n          from: this.currentState,\r\n          to: newState,\r\n          details,\r\n        },\r\n      );\r\n    }\r\n\r\n    const oldState = this.currentState;\r\n    this.currentState = newState;\r\n    this.metadata.lastStateChange = new Date();\r\n\r\n    // Update metadata based on state\r\n    if (newState === NgrokClientState.STATES.CONNECTED) {\r\n      if (!this.metadata.startTime) {\r\n        this.metadata.startTime = new Date();\r\n      }\r\n    } else if (newState === NgrokClientState.STATES.RECONNECTING) {\r\n      this.metadata.metrics.reconnects.count++;\r\n      this.metadata.metrics.reconnects.lastAttempt = new Date();\r\n    }\r\n\r\n    // Emit state change event\r\n    this._emit('stateChange', {\r\n      from: oldState,\r\n      to: newState,\r\n      timestamp: this.metadata.lastStateChange,\r\n      details,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Record an error\r\n   * @param {Error} error - Error to record\r\n   * @param {Object} context - Error context\r\n   */\r\n  recordError(error, context = {}) {\r\n    const errorRecord = {\r\n      name: error.name,\r\n      message: error.message,\r\n      timestamp: new Date(),\r\n      context,\r\n      state: this.currentState,\r\n    };\r\n\r\n    // Add to error history (keep last 10)\r\n    this.metadata.errorHistory.unshift(errorRecord);\r\n    if (this.metadata.errorHistory.length > 10) {\r\n      this.metadata.errorHistory.pop();\r\n    }\r\n\r\n    // Update error metrics\r\n    this.metadata.metrics.errors.total++;\r\n    this.metadata.metrics.errors.byType[error.name] =\r\n      (this.metadata.metrics.errors.byType[error.name] || 0) + 1;\r\n\r\n    // Emit error event\r\n    this._emit('error', errorRecord);\r\n  }\r\n\r\n  /**\r\n   * Reset state to initial values\r\n   */\r\n  reset() {\r\n    this.currentState = null;\r\n    this.metadata = {\r\n      url: null,\r\n      startTime: null,\r\n      lastStateChange: new Date(),\r\n      errorHistory: [],\r\n      metrics: {\r\n        latency: {\r\n          current: 0,\r\n          average: 0,\r\n          samples: [],\r\n        },\r\n        connectionQuality: 'unknown',\r\n        reconnects: {\r\n          count: 0,\r\n          lastAttempt: null,\r\n        },\r\n        errors: {\r\n          total: 0,\r\n          byType: {},\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate connection uptime\r\n   * @private\r\n   * @returns {number} Uptime in milliseconds\r\n   */\r\n  _calculateUptime() {\r\n    if (\r\n      !this.metadata.startTime ||\r\n      this.currentState !== NgrokClientState.STATES.CONNECTED\r\n    ) {\r\n      return 0;\r\n    }\r\n    return Date.now() - this.metadata.startTime.getTime();\r\n  }\r\n\r\n  /**\r\n   * Update connection quality based on metrics\r\n   * @private\r\n   */\r\n  _updateConnectionQuality() {\r\n    const avgLatency = this.metadata.metrics.latency.average;\r\n    const recentErrors = this.metadata.errorHistory.filter(\r\n      (e) => Date.now() - new Date(e.timestamp).getTime() < 60000, // Last minute\r\n    ).length;\r\n\r\n    if (recentErrors > 2) {\r\n      this.metadata.metrics.connectionQuality = 'poor';\r\n    } else if (avgLatency > 1000) {\r\n      // 1 second\r\n      this.metadata.metrics.connectionQuality = 'unstable';\r\n    } else if (avgLatency > 500) {\r\n      // 500ms\r\n      this.metadata.metrics.connectionQuality = 'fair';\r\n    } else {\r\n      this.metadata.metrics.connectionQuality = 'good';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if state transition is valid\r\n   * @private\r\n   * @param {string} newState - State to transition to\r\n   * @returns {boolean} Whether transition is valid\r\n   */\r\n  _isValidTransition(newState) {\r\n    // Allow any initial state transition\r\n    if (this.currentState === null) {\r\n      return true;\r\n    }\r\n    const validNextStates =\r\n      NgrokClientState.VALID_TRANSITIONS[this.currentState];\r\n    return validNextStates && validNextStates.includes(newState);\r\n  }\r\n}\r\n","/**\r\n * Debug configuration for Kinectron client\r\n * Controls logging output for different components\r\n *\r\n * @namespace DEBUG\r\n */\r\n\r\nexport const DEBUG = {\r\n  /**\r\n   * Master switch for frame-related logging\r\n   * Controls logs about frame processing, transmission, and visualization\r\n   * @type {boolean}\r\n   */\r\n  FRAMES: false,\r\n\r\n  /**\r\n   * Master switch for handler-related logging\r\n   * Controls logs about stream handlers and event processing\r\n   * @type {boolean}\r\n   */\r\n  HANDLERS: false,\r\n\r\n  /**\r\n   * Master switch for peer connection logs\r\n   * Controls logs about WebRTC connections, state changes, and data channels\r\n   * @type {boolean}\r\n   */\r\n  PEER: false,\r\n\r\n  /**\r\n   * For performance-related logs\r\n   * Controls logs about timing, frame rates, and processing efficiency\r\n   * @type {boolean}\r\n   */\r\n  PERFORMANCE: false,\r\n\r\n  /**\r\n   * For data integrity logs\r\n   * Controls logs about data validation, transformation, and verification\r\n   * @type {boolean}\r\n   */\r\n  DATA: false,\r\n\r\n  /**\r\n   * For network-related logs\r\n   * Controls logs about network status, bandwidth, and transmission\r\n   * @type {boolean}\r\n   */\r\n  NETWORK: false,\r\n\r\n  /**\r\n   * Enable all debug flags\r\n   * Turns on all logging categories for comprehensive debugging\r\n   * @returns {void}\r\n   * @example\r\n   * // Enable all debug logs\r\n   * DEBUG.enableAll();\r\n   */\r\n  enableAll: function () {\r\n    Object.keys(this).forEach((key) => {\r\n      if (typeof this[key] === 'boolean') this[key] = true;\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Disable all debug flags\r\n   * Turns off all logging categories for clean console output\r\n   * @returns {void}\r\n   * @example\r\n   * // Disable all debug logs\r\n   * DEBUG.disableAll();\r\n   */\r\n  disableAll: function () {\r\n    Object.keys(this).forEach((key) => {\r\n      if (typeof this[key] === 'boolean') this[key] = false;\r\n    });\r\n  },\r\n};\r\n\r\n/**\r\n * Logging utility functions that check debug flags\r\n * Provides category-specific logging with automatic flag checking\r\n *\r\n * @namespace log\r\n */\r\nexport const log = {\r\n  /**\r\n   * Log error messages (always visible regardless of debug flags)\r\n   * Use for critical errors that should always be visible\r\n   *\r\n   * @param {string} message - The error message\r\n   * @param {...any} args - Additional arguments to log\r\n   * @returns {void}\r\n   * @example\r\n   * log.error('Failed to connect to server:', error);\r\n   */\r\n  error: function (message, ...args) {\r\n    console.error(message, ...args);\r\n  },\r\n\r\n  /**\r\n   * Log warning messages (always visible regardless of debug flags)\r\n   * Use for potential issues that should always be visible\r\n   *\r\n   * @param {string} message - The warning message\r\n   * @param {...any} args - Additional arguments to log\r\n   * @returns {void}\r\n   * @example\r\n   * log.warn('Connection attempt timed out, retrying...');\r\n   */\r\n  warn: function (message, ...args) {\r\n    console.warn(message, ...args);\r\n  },\r\n\r\n  /**\r\n   * Log informational messages (always visible regardless of debug flags)\r\n   * Use for important status updates that should always be visible\r\n   *\r\n   * @param {string} message - The info message\r\n   * @param {...any} args - Additional arguments to log\r\n   * @returns {void}\r\n   * @example\r\n   * log.info('Connected to Kinectron server');\r\n   */\r\n  info: function (message, ...args) {\r\n    console.log(message, ...args);\r\n  },\r\n\r\n  /**\r\n   * Log debug messages for a specific category\r\n   * Only logs if the specified debug flag is enabled\r\n   *\r\n   * @param {string} flag - The debug flag to check\r\n   * @param {string} message - The debug message\r\n   * @param {...any} args - Additional arguments to log\r\n   * @returns {void}\r\n   * @example\r\n   * log.debug('PERFORMANCE', 'Frame processing took:', processingTime, 'ms');\r\n   */\r\n  debug: function (flag, message, ...args) {\r\n    if (DEBUG[flag]) {\r\n      console.debug(`[${flag}] ${message}`, ...args);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Log frame-related messages\r\n   * Only logs if the FRAMES debug flag is enabled\r\n   *\r\n   * @param {string} message - The frame-related message\r\n   * @param {...any} args - Additional arguments to log\r\n   * @returns {void}\r\n   * @example\r\n   * log.frame('Received color frame with dimensions:', width, 'x', height);\r\n   */\r\n  frame: function (message, ...args) {\r\n    if (DEBUG.FRAMES) {\r\n      console.debug(`[FRAMES] ${message}`, ...args);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Log handler-related messages\r\n   * Only logs if the HANDLERS debug flag is enabled\r\n   *\r\n   * @param {string} message - The handler-related message\r\n   * @param {...any} args - Additional arguments to log\r\n   * @returns {void}\r\n   * @example\r\n   * log.handler('Creating body handler with callback');\r\n   */\r\n  handler: function (message, ...args) {\r\n    if (DEBUG.HANDLERS) {\r\n      console.debug(`[HANDLERS] ${message}`, ...args);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Log peer connection-related messages\r\n   * Only logs if the PEER debug flag is enabled\r\n   *\r\n   * @param {string} message - The peer-related message\r\n   * @param {...any} args - Additional arguments to log\r\n   * @returns {void}\r\n   * @example\r\n   * log.peer('Connected to peer:', peerId);\r\n   */\r\n  peer: function (message, ...args) {\r\n    if (DEBUG.PEER) {\r\n      console.debug(`[PEER] ${message}`, ...args);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Log performance-related messages\r\n   * Only logs if the PERFORMANCE debug flag is enabled\r\n   *\r\n   * @param {string} message - The performance-related message\r\n   * @param {...any} args - Additional arguments to log\r\n   * @returns {void}\r\n   * @example\r\n   * log.performance('Frame rate:', frameRate, 'fps');\r\n   */\r\n  performance: function (message, ...args) {\r\n    if (DEBUG.PERFORMANCE) {\r\n      console.debug(`[PERFORMANCE] ${message}`, ...args);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Log data integrity-related messages\r\n   * Only logs if the DATA debug flag is enabled\r\n   *\r\n   * @param {string} message - The data-related message\r\n   * @param {...any} args - Additional arguments to log\r\n   * @returns {void}\r\n   * @example\r\n   * log.data('Unpacking raw depth data with dimensions:', width, 'x', height);\r\n   */\r\n  data: function (message, ...args) {\r\n    if (DEBUG.DATA) {\r\n      console.debug(`[DATA] ${message}`, ...args);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Log network-related messages\r\n   * Only logs if the NETWORK debug flag is enabled\r\n   *\r\n   * @param {string} message - The network-related message\r\n   * @param {...any} args - Additional arguments to log\r\n   * @returns {void}\r\n   * @example\r\n   * log.network('Data channel buffer size:', bufferAmount, 'bytes');\r\n   */\r\n  network: function (message, ...args) {\r\n    if (DEBUG.NETWORK) {\r\n      console.debug(`[NETWORK] ${message}`, ...args);\r\n    }\r\n  },\r\n};\r\n","import Peer from 'peerjs';\r\nimport { DEFAULT_PEER_ID, processPeerConfig } from './peerConfig.js';\r\nimport { NgrokClientState, NgrokClientError } from './ngrokState.js';\r\nimport { DEBUG } from '../utils/debug.js';\r\n\r\n/**\r\n * @typedef {import('./peerConfig.js').PeerNetworkConfig} PeerNetworkConfig\r\n */\r\n\r\n/**\r\n * Enhanced peer-to-peer connection handler with improved reliability\r\n */\r\nexport class PeerConnection {\r\n  /**\r\n   * @param {string|PeerNetworkConfig} [networkConfig] - Network configuration or host address\r\n   * @param {string} [peerId] - ID of the peer to connect to\r\n   */\r\n  constructor(networkConfig, peerId) {\r\n    /** @private */\r\n    this.peer = null;\r\n    /** @private */\r\n    this.connection = null;\r\n    /** @private */\r\n    this.targetPeerId = peerId || DEFAULT_PEER_ID;\r\n    /** @private */\r\n    this.config = processPeerConfig(networkConfig);\r\n    /** @private */\r\n    this.messageHandlers = new Map();\r\n    /** @private */\r\n    this.messageQueue = [];\r\n    /** @private */\r\n    this.maxQueueSize = 100;\r\n    /** @private */\r\n    this.lastPingTime = 0;\r\n    /** @private */\r\n    this.pingInterval = null;\r\n    /** @private */\r\n    this.healthCheckInterval = null;\r\n    /** @private */\r\n    this.clientId = this.generateClientId();\r\n    /** @private */\r\n    this.state = new NgrokClientState();\r\n\r\n    // Forward state events to message handlers\r\n    this.state.on('stateChange', (data) => {\r\n      const handler = this.messageHandlers.get('stateChange');\r\n      if (handler) handler(data);\r\n    });\r\n\r\n    this.state.on('error', (data) => {\r\n      const handler = this.messageHandlers.get('error');\r\n      if (handler) handler(data);\r\n    });\r\n\r\n    this.state.on('metrics', (data) => {\r\n      const handler = this.messageHandlers.get('metrics');\r\n      if (handler) handler(data);\r\n    });\r\n\r\n    this.initialize();\r\n  }\r\n\r\n  /**\r\n   * Generate a consistent client ID\r\n   * @private\r\n   * @returns {string} Client ID\r\n   */\r\n  generateClientId() {\r\n    // Generate unique ID for each instance\r\n    const timestamp = Date.now().toString(36);\r\n    const random = Math.random().toString(36).substr(2, 5);\r\n    const prefix = this.config.host?.includes('ngrok')\r\n      ? 'ngrok'\r\n      : 'local';\r\n    const role = this.config.role || 'default';\r\n    return `${prefix}-${role}-${timestamp}-${random}`;\r\n  }\r\n\r\n  /**\r\n   * Get current connection state\r\n   * @returns {Object} Current state information\r\n   */\r\n  getState() {\r\n    return this.state.getMetadata();\r\n  }\r\n\r\n  /**\r\n   * Initialize the peer connection with enhanced reliability\r\n   * @private\r\n   */\r\n  initialize() {\r\n    try {\r\n      if (this.peer) {\r\n        console.warn('Peer already initialized');\r\n        return;\r\n      }\r\n\r\n      if (DEBUG.PEER) {\r\n        console.log('Initializing peer with config:', this.config);\r\n      }\r\n\r\n      // Check if this is an ngrok connection\r\n      const isNgrok =\r\n        typeof this.config.host === 'string' &&\r\n        this.config.host.includes('ngrok');\r\n\r\n      if (isNgrok) {\r\n        // Set state to validating for ngrok connections\r\n        this.state.setState(NgrokClientState.STATES.VALIDATING);\r\n\r\n        // Validate ngrok URL format\r\n        if (!this.config.host.includes('ngrok-free.app')) {\r\n          throw new NgrokClientError('Invalid ngrok URL format', {\r\n            url: this.config.host,\r\n            reason: 'URL must include ngrok-free.app domain',\r\n          });\r\n        }\r\n      }\r\n\r\n      // Create peer instance with consistent ID\r\n      this.peer = new Peer(this.clientId, {\r\n        ...this.config,\r\n        // Basic reliability options\r\n        reliable: true,\r\n        retries: 2,\r\n        timeout: isNgrok ? 5000 : 3000,\r\n        debug: 0, // Reduced from 3 to 0 to suppress verbose logs\r\n      });\r\n\r\n      // Move to connecting state (skip validation for local connections)\r\n      if (!isNgrok) {\r\n        this.state.setState(NgrokClientState.STATES.CONNECTING);\r\n      }\r\n\r\n      this.setupPeerEventHandlers();\r\n      this.startHealthCheck();\r\n    } catch (error) {\r\n      console.error('Peer initialization error:', error);\r\n      this.handleError(error);\r\n      this.state.setState(NgrokClientState.STATES.ERROR, {\r\n        error: error.message,\r\n        context: 'initialization',\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set up event handlers for the peer instance\r\n   * @private\r\n   */\r\n  setupPeerEventHandlers() {\r\n    this.peer.on('open', (id) => {\r\n      if (DEBUG.PEER) {\r\n        console.log('My peer ID is:', id);\r\n      }\r\n      // Already in CONNECTING state, proceed with connection\r\n      this.connect();\r\n    });\r\n\r\n    this.peer.on('error', (error) => {\r\n      console.error('Peer connection error:', error);\r\n\r\n      // Handle ID taken error by generating new ID\r\n      if (error.type === 'unavailable-id') {\r\n        if (DEBUG.PEER) {\r\n          console.log('Client ID taken, generating new ID');\r\n        }\r\n        this.clientId = this.generateClientId();\r\n        this._cleanup(false);\r\n        this.initialize();\r\n        return;\r\n      }\r\n\r\n      this.handleError(error);\r\n\r\n      // Set error state\r\n      this.state.setState(NgrokClientState.STATES.ERROR, {\r\n        error: error.message,\r\n        type: error.type,\r\n      });\r\n\r\n      // Attempt reconnection if appropriate\r\n      if (this.shouldAttemptReconnection(error)) {\r\n        this._handleReconnection(error);\r\n      }\r\n    });\r\n\r\n    this.peer.on('disconnected', () => {\r\n      if (DEBUG.PEER) {\r\n        console.log('Peer disconnected from server');\r\n      }\r\n      this.state.setState(NgrokClientState.STATES.DISCONNECTED, {\r\n        reason: 'peer_disconnected',\r\n      });\r\n      this._handleReconnection({ type: 'disconnected' });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Start health check interval\r\n   * @private\r\n   */\r\n  startHealthCheck() {\r\n    // Clear any existing intervals\r\n    if (this.healthCheckInterval) {\r\n      clearInterval(this.healthCheckInterval);\r\n    }\r\n    if (this.pingInterval) {\r\n      clearInterval(this.pingInterval);\r\n    }\r\n\r\n    // Start health check\r\n    this.healthCheckInterval = setInterval(() => {\r\n      if (\r\n        this.state.getState() === NgrokClientState.STATES.CONNECTED &&\r\n        this.connection\r\n      ) {\r\n        this.checkConnectionHealth();\r\n      }\r\n    }, 10000);\r\n\r\n    // Start ping interval\r\n    this.pingInterval = setInterval(() => {\r\n      if (\r\n        this.state.getState() === NgrokClientState.STATES.CONNECTED &&\r\n        this.connection?.open\r\n      ) {\r\n        this.sendPing();\r\n      }\r\n    }, 5000);\r\n  }\r\n\r\n  /**\r\n   * Check connection health\r\n   * @private\r\n   */\r\n  async checkConnectionHealth() {\r\n    if (!this.connection?.open) {\r\n      console.warn('Connection appears dead, attempting recovery');\r\n      await this.handleConnectionFailure();\r\n      return;\r\n    }\r\n\r\n    // Check last ping time\r\n    const timeSinceLastPing = Date.now() - this.lastPingTime;\r\n    if (timeSinceLastPing > 15000) {\r\n      // No ping response for 15 seconds\r\n      console.warn('No ping response, connection may be dead');\r\n      await this.handleConnectionFailure();\r\n    }\r\n\r\n    // Update connection metrics\r\n    this.state.updateMetrics({\r\n      latency: timeSinceLastPing,\r\n      timestamp: new Date(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Send ping to peer\r\n   * @private\r\n   */\r\n  sendPing() {\r\n    try {\r\n      this.connection.send({\r\n        event: 'ping',\r\n        data: { timestamp: Date.now() },\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to send ping:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle connection failure\r\n   * @private\r\n   */\r\n  async handleConnectionFailure() {\r\n    if (this.connection) {\r\n      try {\r\n        this.connection.close();\r\n      } catch (error) {\r\n        console.error('Error closing connection:', error);\r\n      }\r\n      this.connection = null;\r\n    }\r\n\r\n    this.state.setState(NgrokClientState.STATES.RECONNECTING, {\r\n      reason: 'connection_failure',\r\n      timestamp: new Date(),\r\n    });\r\n\r\n    await this._handleReconnection({ type: 'connection_failure' });\r\n  }\r\n\r\n  /**\r\n   * Handle errors with enhanced information\r\n   * @private\r\n   * @param {Error} error - The error that occurred\r\n   */\r\n  handleError(error) {\r\n    // Record error in state\r\n    this.state.recordError(error, {\r\n      type: error.type || 'server-error',\r\n      state: this.state.getState(),\r\n      timestamp: new Date().toISOString(),\r\n    });\r\n\r\n    // Forward to message handler\r\n    const handler = this.messageHandlers.get('error');\r\n    if (handler) {\r\n      const errorInfo = {\r\n        status: 'error',\r\n        error: this._getErrorMessage(error),\r\n        details: {\r\n          type: error.type || 'server-error',\r\n          state: this.state.getState(),\r\n          timestamp: new Date().toISOString(),\r\n        },\r\n      };\r\n      handler(errorInfo);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get user-friendly error message\r\n   * @private\r\n   * @param {Error} error - The error object\r\n   * @returns {string} User-friendly error message\r\n   */\r\n  _getErrorMessage(error) {\r\n    const errorMessages = {\r\n      network: 'Network error - Could not connect to peer server',\r\n      'invalid-id':\r\n        'Invalid ID - The peer ID is invalid or already taken',\r\n      'unavailable-id':\r\n        'ID Unavailable - The peer ID is already taken',\r\n      'browser-incompatible':\r\n        'Browser Incompatible - WebRTC is not supported',\r\n      'connection-failure':\r\n        'Connection failed - Unable to establish or maintain connection',\r\n      disconnected: 'Disconnected - Lost connection to peer server',\r\n    };\r\n\r\n    return (\r\n      errorMessages[error.type] ||\r\n      error.message ||\r\n      'Peer connection error'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Determine if reconnection should be attempted\r\n   * @private\r\n   * @param {Error} error - The error that occurred\r\n   * @returns {boolean} Whether to attempt reconnection\r\n   */\r\n  shouldAttemptReconnection(error) {\r\n    // Don't reconnect for certain error types\r\n    const fatalErrors = [\r\n      'browser-incompatible',\r\n      'invalid-id',\r\n      'invalid-key',\r\n    ];\r\n    if (fatalErrors.includes(error.type)) {\r\n      return false;\r\n    }\r\n\r\n    return this.state.getMetadata().metrics.reconnects.count < 3;\r\n  }\r\n\r\n  /**\r\n   * Set connection timeout with enhanced retry logic\r\n   * @private\r\n   */\r\n  _setConnectionTimeout() {\r\n    const timeoutDuration = 15000; // 15 second timeout for ngrok connections\r\n\r\n    setTimeout(() => {\r\n      if (\r\n        this.state.getState() !== NgrokClientState.STATES.CONNECTED\r\n      ) {\r\n        if (DEBUG.PEER) {\r\n          console.log('Connection attempt timed out');\r\n        }\r\n\r\n        if (this.shouldAttemptReconnection({ type: 'timeout' })) {\r\n          this._handleReconnection({ type: 'timeout' });\r\n        } else {\r\n          this.handleError({\r\n            type: 'timeout',\r\n            message: 'Connection timeout - Max attempts reached',\r\n          });\r\n        }\r\n      }\r\n    }, timeoutDuration);\r\n  }\r\n\r\n  /**\r\n   * Handle reconnection logic with improved retry strategy\r\n   * @private\r\n   * @param {Error} error - The error that triggered reconnection\r\n   */\r\n  async _handleReconnection(error) {\r\n    // Update state to reconnecting\r\n    this.state.setState(NgrokClientState.STATES.RECONNECTING, {\r\n      error: error.message,\r\n      attempt: this.state.getMetadata().metrics.reconnects.count + 1,\r\n    });\r\n\r\n    // Use exponential backoff with jitter\r\n    const baseDelay = Math.min(\r\n      2000 *\r\n        Math.pow(\r\n          1.5,\r\n          this.state.getMetadata().metrics.reconnects.count,\r\n        ),\r\n      15000,\r\n    );\r\n    const jitter = baseDelay * 0.2 * (Math.random() * 2 - 1);\r\n    const delay = Math.max(2000, baseDelay + jitter);\r\n\r\n    if (DEBUG.PEER) {\r\n      console.log(\r\n        `Attempting reconnection ${\r\n          this.state.getMetadata().metrics.reconnects.count + 1\r\n        } of 3 in ${Math.round(delay)}ms`,\r\n      );\r\n    }\r\n\r\n    // Wait for delay\r\n    await new Promise((resolve) => setTimeout(resolve, delay));\r\n\r\n    if (\r\n      this.state.getState() === NgrokClientState.STATES.RECONNECTING\r\n    ) {\r\n      if (DEBUG.PEER) {\r\n        console.log('Attempting to reconnect...');\r\n      }\r\n\r\n      // Clean up existing resources\r\n      await this._cleanup(false);\r\n\r\n      // Only try to reconnect if we haven't exceeded max attempts\r\n      if (this.shouldAttemptReconnection(error)) {\r\n        // Move back to connecting state\r\n        this.state.setState(NgrokClientState.STATES.CONNECTING);\r\n        this.initialize();\r\n      } else {\r\n        if (DEBUG.PEER) {\r\n          console.log('Max reconnection attempts reached');\r\n        }\r\n        this.state.setState(NgrokClientState.STATES.ERROR, {\r\n          error: 'Maximum reconnection attempts reached',\r\n          type: 'max_retries',\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clean up resources\r\n   * @private\r\n   * @param {boolean} [isClosing=true] - Whether this is a final cleanup\r\n   */\r\n  async _cleanup(isClosing = true) {\r\n    // Clean up existing peer\r\n    if (this.peer) {\r\n      this.peer.destroy();\r\n      this.peer = null;\r\n    }\r\n\r\n    // Clean up existing connection\r\n    if (this.connection) {\r\n      this.connection.close();\r\n      this.connection = null;\r\n    }\r\n\r\n    // Clear intervals if doing final cleanup\r\n    if (isClosing) {\r\n      if (this.healthCheckInterval) {\r\n        clearInterval(this.healthCheckInterval);\r\n        this.healthCheckInterval = null;\r\n      }\r\n      if (this.pingInterval) {\r\n        clearInterval(this.pingInterval);\r\n        this.pingInterval = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Connect to target peer with enhanced reliability\r\n   */\r\n  connect() {\r\n    try {\r\n      // Check if we already have a connection\r\n      if (this.peer.connections[this.targetPeerId]?.length > 0) {\r\n        const existingConn =\r\n          this.peer.connections[this.targetPeerId][0];\r\n        if (existingConn.open) {\r\n          if (DEBUG.PEER) {\r\n            console.log('Reusing existing connection');\r\n          }\r\n          this.connection = existingConn;\r\n          this.setupConnectionHandlers();\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Create new connection\r\n      if (DEBUG.PEER) {\r\n        console.log('Creating new connection to:', this.targetPeerId);\r\n      }\r\n      this.connection = this.peer.connect(this.targetPeerId, {\r\n        reliable: true,\r\n        serialization: 'binary', // Explicitly set to binary\r\n      });\r\n\r\n      this.setupConnectionHandlers();\r\n      this._setConnectionTimeout();\r\n    } catch (error) {\r\n      console.error('Error establishing connection:', error);\r\n      this._handleReconnection(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set up handlers for the peer connection\r\n   * @private\r\n   */\r\n  setupConnectionHandlers() {\r\n    this.connection.on('open', () => {\r\n      if (DEBUG.PEER) {\r\n        console.log('Connected to peer:', this.targetPeerId);\r\n      }\r\n\r\n      // Update state - Note: NgrokClientState allows connected->connected transition\r\n      // to handle multiple data channels opening on the same connection\r\n      this.state.setState(NgrokClientState.STATES.CONNECTED, {\r\n        peerId: this.targetPeerId,\r\n        timestamp: new Date(),\r\n      });\r\n\r\n      // Process any queued messages\r\n      this.processMessageQueue();\r\n\r\n      // Emit ready event\r\n      const handler = this.messageHandlers.get('ready');\r\n      if (handler) {\r\n        handler({\r\n          status: 'connected',\r\n          peerId: this.targetPeerId,\r\n          state: this.state.getState(),\r\n          timestamp: new Date().toISOString(),\r\n        });\r\n      }\r\n    });\r\n\r\n    this.connection.on('data', (data) => {\r\n      if (data.event === 'pong') {\r\n        this.lastPingTime = Date.now();\r\n        // Update latency metrics\r\n        const latency = Date.now() - data.data.timestamp;\r\n        this.state.updateMetrics({ latency });\r\n        return;\r\n      }\r\n      if (DEBUG.PEER) {\r\n        console.log('Received data from peer:', data);\r\n      }\r\n      this.handleIncomingData(data);\r\n    });\r\n\r\n    this.connection.on('close', () => {\r\n      if (DEBUG.PEER) {\r\n        console.log('Peer connection closed');\r\n      }\r\n\r\n      if (!this._isClosing) {\r\n        this.state.setState(NgrokClientState.STATES.DISCONNECTED, {\r\n          reason: 'connection_closed',\r\n        });\r\n        this._handleReconnection({ type: 'connection_closed' });\r\n      }\r\n    });\r\n\r\n    this.connection.on('error', (error) => {\r\n      console.error('Data connection error:', error);\r\n\r\n      this.state.setState(NgrokClientState.STATES.ERROR, {\r\n        error: error.message,\r\n        type: error.type,\r\n      });\r\n\r\n      this.handleError(error);\r\n      this._handleReconnection(error);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle incoming data from peer with enhanced error handling\r\n   * @private\r\n   * @param {Object} data - Data received from peer\r\n   * @param {string} data.event - Event type\r\n   * @param {*} data.data - Event data\r\n   */\r\n  handleIncomingData(data) {\r\n    try {\r\n      if (DEBUG.PEER) {\r\n        console.log(\r\n          'PeerConnection: Received event:',\r\n          data.event,\r\n          'with data:',\r\n          data.data,\r\n        );\r\n      }\r\n\r\n      // First, try to find a specific handler for this event\r\n      const handler = this.messageHandlers.get(data.event);\r\n\r\n      if (handler) {\r\n        if (DEBUG.PEER) {\r\n          console.log(\r\n            'PeerConnection: Found specific handler for event:',\r\n            data.event,\r\n          );\r\n        }\r\n        handler({\r\n          ...data.data,\r\n          timestamp: Date.now(),\r\n          state: this.state.getState(),\r\n        });\r\n      } else {\r\n        if (DEBUG.PEER) {\r\n          console.log(\r\n            'PeerConnection: No specific handler for event:',\r\n            data.event,\r\n            'forwarding to data handler',\r\n          );\r\n        }\r\n        // If no specific handler is found, forward the event to the data handler\r\n        // This ensures all events are forwarded to the Kinectron class\r\n        const dataHandler = this.messageHandlers.get('data');\r\n\r\n        // if (data.event === 'bodyFrame') debugger;\r\n\r\n        if (dataHandler) {\r\n          dataHandler(data);\r\n        } else {\r\n          console.warn(\r\n            'PeerConnection: No data handler found for event:',\r\n            data.event,\r\n          );\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error handling incoming data:', error);\r\n      this.handleError({\r\n        type: 'data_handling_error',\r\n        message: 'Error processing received data',\r\n        originalError: error,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Process queued messages\r\n   * @private\r\n   */\r\n  async processMessageQueue() {\r\n    while (\r\n      this.messageQueue.length > 0 &&\r\n      this.state.getState() === NgrokClientState.STATES.CONNECTED\r\n    ) {\r\n      const message = this.messageQueue.shift();\r\n      try {\r\n        await this.send(message.event, message.data);\r\n      } catch (error) {\r\n        console.error('Failed to send queued message:', error);\r\n        // Re-queue message if connection is still open\r\n        if (\r\n          this.state.getState() ===\r\n            NgrokClientState.STATES.CONNECTED &&\r\n          this.messageQueue.length < this.maxQueueSize\r\n        ) {\r\n          this.messageQueue.push(message);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register a handler for a specific event type with validation\r\n   * @param {string} event - Event type to handle\r\n   * @param {Function} handler - Handler function for the event\r\n   */\r\n  on(event, handler) {\r\n    if (typeof handler !== 'function') {\r\n      throw new Error('Handler must be a function');\r\n    }\r\n    this.messageHandlers.set(event, handler);\r\n  }\r\n\r\n  /**\r\n   * Send data to peer with enhanced reliability\r\n   * @param {string} event - Event type\r\n   * @param {*} data - Data to send\r\n   * @returns {Promise<void>}\r\n   */\r\n  async send(event, data) {\r\n    return new Promise((resolve, reject) => {\r\n      if (\r\n        this.state.getState() !== NgrokClientState.STATES.CONNECTED ||\r\n        !this.connection?.open\r\n      ) {\r\n        // Queue message if not connected\r\n        if (this.messageQueue.length < this.maxQueueSize) {\r\n          this.messageQueue.push({ event, data });\r\n          resolve(); // Resolve since message was queued\r\n        } else {\r\n          reject(new Error('Message queue full'));\r\n        }\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const message = {\r\n          event,\r\n          data,\r\n          timestamp: Date.now(),\r\n        };\r\n\r\n        const timeout = setTimeout(() => {\r\n          reject(new Error('Send timeout'));\r\n        }, 5000);\r\n\r\n        this.connection.send(message);\r\n        clearTimeout(timeout);\r\n        resolve();\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Close the peer connection with graceful shutdown\r\n   */\r\n  async close() {\r\n    this._isClosing = true;\r\n\r\n    // Send shutdown message if possible\r\n    if (this.connection?.open) {\r\n      try {\r\n        await this.send('shutdown', { reason: 'client_close' });\r\n      } catch (error) {\r\n        console.error('Error sending shutdown message:', error);\r\n      }\r\n    }\r\n\r\n    // Clean up resources\r\n    await this._cleanup(true);\r\n\r\n    // Reset state\r\n    this.state.reset();\r\n    this.messageQueue = [];\r\n    this._isClosing = false;\r\n  }\r\n\r\n  /**\r\n   * Check if peer is connected\r\n   * @returns {boolean} Connection status\r\n   */\r\n  isConnected() {\r\n    return (\r\n      this.state.getState() === NgrokClientState.STATES.CONNECTED &&\r\n      this.connection?.open\r\n    );\r\n  }\r\n}\r\n","/**\r\n * Utility functions for processing image data from different streams\r\n */\r\n\r\nimport { DEBUG, log } from './debug.js';\r\n\r\n/**\r\n * Process image data from a frame\r\n * @param {Object} frameData - The frame data containing image information\r\n * @param {number} width - The width of the image\r\n * @param {number} height - The height of the image\r\n * @param {Function} callback - Callback to receive the processed image\r\n */\r\nexport function processImageData(frameData, callback) {\r\n  // Check for both imagedata and imageData formats\r\n  const imagedata = frameData.imagedata || frameData.imageData;\r\n\r\n  if (!frameData || !imagedata) {\r\n    log.warn('Invalid frame data received:', frameData);\r\n    return;\r\n  }\r\n\r\n  const { width, height } = imagedata;\r\n\r\n  // Create a canvas to convert image data to a data URL\r\n  const canvas = document.createElement('canvas');\r\n  const ctx = canvas.getContext('2d');\r\n\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n\r\n  try {\r\n    // Check if data is a string (data URL)\r\n    if (typeof imagedata.data === 'string') {\r\n      log.data('Processing image data from data URL');\r\n      createImageFromDataUrl(\r\n        imagedata.data,\r\n        width,\r\n        height,\r\n        (src) => {\r\n          // Call the user callback with processed frame\r\n          callback({\r\n            src,\r\n            width,\r\n            height,\r\n            raw: imagedata,\r\n            timestamp: frameData.timestamp || Date.now(),\r\n          });\r\n        },\r\n        (err) => {\r\n          log.error('Error loading image from data URL:', err);\r\n          // Try to call callback anyway with the raw data\r\n          callback({\r\n            src: imagedata.data,\r\n            width,\r\n            height,\r\n            raw: imagedata,\r\n            timestamp: frameData.timestamp || Date.now(),\r\n          });\r\n        },\r\n      );\r\n    } else {\r\n      log.data('Processing image data from raw pixel data');\r\n      // Handle raw pixel data\r\n      const pixelData = convertToUint8ClampedArray(imagedata.data);\r\n      const imgData = new ImageData(pixelData, width, height);\r\n\r\n      // Put the image data on the canvas\r\n      ctx.putImageData(imgData, 0, 0);\r\n\r\n      // Convert to data URL for easy display\r\n      const src = canvas.toDataURL('image/jpeg');\r\n\r\n      // Call the user callback with processed frame\r\n      callback({\r\n        src,\r\n        width,\r\n        height,\r\n        raw: imagedata,\r\n        timestamp: frameData.timestamp || Date.now(),\r\n      });\r\n    }\r\n  } catch (error) {\r\n    log.error('Error processing frame:', error);\r\n    log.error('Frame data:', imagedata);\r\n  }\r\n}\r\n\r\n/**\r\n * Create an image from a data URL\r\n * @param {string} dataUrl - The data URL\r\n * @param {number} width - The width of the image\r\n * @param {number} height - The height of the image\r\n * @param {Function} onSuccess - Success callback with the data URL\r\n * @param {Function} onError - Error callback\r\n */\r\nexport function createImageFromDataUrl(\r\n  dataUrl,\r\n  width,\r\n  height,\r\n  onSuccess,\r\n  onError,\r\n) {\r\n  const canvas = document.createElement('canvas');\r\n  const ctx = canvas.getContext('2d');\r\n\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n\r\n  // Create an image from the data URL\r\n  const img = new Image();\r\n\r\n  img.onload = () => {\r\n    // Draw the image to the canvas\r\n    ctx.drawImage(img, 0, 0, width, height);\r\n\r\n    // Use the original data URL\r\n    onSuccess(dataUrl);\r\n  };\r\n\r\n  // Set error handler\r\n  img.onerror = (err) => {\r\n    if (onError) {\r\n      onError(err);\r\n    }\r\n  };\r\n\r\n  // Start loading the image\r\n  img.src = dataUrl;\r\n}\r\n\r\n/**\r\n * Convert various data formats to Uint8ClampedArray\r\n * @param {*} data - The data to convert\r\n * @returns {Uint8ClampedArray} - The converted data\r\n */\r\nexport function convertToUint8ClampedArray(data) {\r\n  if (data instanceof Uint8ClampedArray) {\r\n    return data;\r\n  } else if (data instanceof Uint8Array) {\r\n    return new Uint8ClampedArray(data);\r\n  } else if (Array.isArray(data)) {\r\n    return new Uint8ClampedArray(data);\r\n  } else {\r\n    // Handle case where data is an object (e.g., from JSON)\r\n    return new Uint8ClampedArray(Object.values(data));\r\n  }\r\n}\r\n","/**\r\n * Stream handler factory functions\r\n */\r\n\r\nimport * as imageUtils from '../utils/imageProcessing.js';\r\nimport { DEBUG, log } from '../utils/debug.js';\r\n\r\n/**\r\n * Create a frame handler for image-based streams\r\n * @param {string} streamType - The type of stream ('color', 'depth', 'key', etc.)\r\n * @param {Function} callback - The callback to receive processed frames\r\n * @returns {Function} - The frame handler function\r\n */\r\nexport function createFrameHandler(streamType, callback) {\r\n  return (data) => {\r\n    // Extract the actual frame data\r\n    const frameData = data.data || data;\r\n\r\n    log.handler(\r\n      `Frame handler for ${streamType} received:`,\r\n      frameData,\r\n    );\r\n\r\n    // Check for both imagedata and imageData formats\r\n    const hasImageData = frameData.imagedata || frameData.imageData;\r\n\r\n    // Only process frames with matching name\r\n    if (frameData.name === streamType && hasImageData) {\r\n      // Normalize the data structure to ensure imagedata exists\r\n      if (frameData.imageData && !frameData.imagedata) {\r\n        frameData.imagedata = frameData.imageData;\r\n      }\r\n\r\n      // Process the image data\r\n      imageUtils.processImageData(frameData, callback);\r\n    } else {\r\n      log.warn(\r\n        `Received frame event but it's not a valid ${streamType} frame:`,\r\n        'name=',\r\n        frameData.name,\r\n        'has imagedata=',\r\n        !!(frameData.imagedata || frameData.imageData),\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Create a handler for raw depth data\r\n * @param {Function} callback - The callback to receive processed frames\r\n * @param {Function} unpackFunction - Function to unpack raw depth data\r\n * @returns {Function} - The raw depth handler function\r\n */\r\nexport function createRawDepthHandler(callback, unpackFunction) {\r\n  return (data) => {\r\n    if (data && data.imagedata) {\r\n      // Process the data regardless of isPacked flag\r\n      // The new implementation always unpacks the data\r\n      unpackFunction(\r\n        data.imagedata,\r\n        data.width,\r\n        data.height,\r\n        data.width, // originalWidth is the same as width in new implementation\r\n        data.testValues, // Pass test values to unpacking function\r\n      )\r\n        .then((depthValues) => {\r\n          // Call the callback with the unpacked data\r\n          callback({\r\n            ...data,\r\n            depthValues: depthValues,\r\n            timestamp: data.timestamp || Date.now(),\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          log.error('Error unpacking raw depth data:', error);\r\n          // Still call the callback with the original data\r\n          callback({\r\n            ...data,\r\n            error: 'Failed to unpack depth data: ' + error.message,\r\n            timestamp: data.timestamp || Date.now(),\r\n          });\r\n        });\r\n    } else if (data && data.rawDepthData) {\r\n      // Legacy format - raw depth data is already in a usable format\r\n      callback({\r\n        ...data,\r\n        timestamp: data.timestamp || Date.now(),\r\n      });\r\n    } else {\r\n      log.warn(\r\n        'Received raw depth frame with invalid data format:',\r\n        data,\r\n      );\r\n      callback({\r\n        ...data,\r\n        error: 'Invalid data format',\r\n        timestamp: data.timestamp || Date.now(),\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Create a handler for body tracking data\r\n * @param {Function} callback - The callback to receive processed frames\r\n * @returns {Function} - The body handler function\r\n */\r\nexport function createBodyHandler(callback) {\r\n  log.handler('Creating body handler with callback:', callback);\r\n\r\n  return (eventData) => {\r\n    const bodyData = eventData.data;\r\n    if (bodyData && bodyData.bodies) {\r\n      // Body data is already in a usable format (array of body objects)\r\n      // Just add timestamp and pass it through\r\n      callback({\r\n        bodies: bodyData.bodies,\r\n        timestamp: bodyData.timestamp || Date.now(),\r\n        floorClipPlane: bodyData.floorClipPlane,\r\n        trackingId: bodyData.trackingId,\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Create a handler for multi-frame data\r\n * @param {Function} callback - The callback to receive processed frames\r\n * @returns {Function} - The multi-frame handler function\r\n */\r\nexport function createMultiFrameHandler(callback) {\r\n  return (data) => {\r\n    if (data && data.frames) {\r\n      // Process each frame based on its type\r\n      const processedFrames = {};\r\n\r\n      // Process each frame in the multiframe data\r\n      Object.entries(data.frames).forEach(([type, frameData]) => {\r\n        if (frameData.imagedata) {\r\n          // For image-based frames, convert to data URL\r\n          const canvas = document.createElement('canvas');\r\n          const ctx = canvas.getContext('2d');\r\n          const { width, height } = frameData.imagedata;\r\n\r\n          canvas.width = width;\r\n          canvas.height = height;\r\n\r\n          // Create ImageData object from the raw data\r\n          const imgData = new ImageData(\r\n            imageUtils.convertToUint8ClampedArray(\r\n              frameData.imagedata.data,\r\n            ),\r\n            width,\r\n            height,\r\n          );\r\n\r\n          // Put the image data on the canvas\r\n          ctx.putImageData(imgData, 0, 0);\r\n\r\n          // Convert to data URL\r\n          processedFrames[type] = {\r\n            src: canvas.toDataURL('image/jpeg'),\r\n            width,\r\n            height,\r\n            raw: frameData.imagedata,\r\n          };\r\n        } else {\r\n          // For non-image data (like body tracking), pass through\r\n          processedFrames[type] = frameData;\r\n        }\r\n      });\r\n\r\n      // Call the user callback with processed frames\r\n      callback({\r\n        frames: processedFrames,\r\n        timestamp: data.timestamp || Date.now(),\r\n      });\r\n    }\r\n  };\r\n}\r\n","/**\r\n * @fileoverview Main entry point for the Kinectron client library\r\n * @version 1.0.0\r\n * @description Kinectron enables real-time streaming of Microsoft Azure Kinect data into web browsers using WebRTC.\r\n * This client library connects to a Kinectron server running on a computer with an Azure Kinect device.\r\n */\r\n\r\nimport { Kinectron } from './kinectron.js';\r\n\r\nconsole.log('You are running Kinectron API version 1.0.0');\r\n\r\n/**\r\n * Kinectron client class for connecting to a Kinectron server and accessing Azure Kinect data streams\r\n *\r\n * @module kinectron\r\n * @exports Kinectron\r\n * @example\r\n * // Using ES modules (recommended)\r\n * import Kinectron from 'kinectron';\r\n *\r\n * // Create a new Kinectron instance\r\n * const kinectron = new Kinectron('127.0.0.1');\r\n *\r\n * // Connect and initialize\r\n * kinectron.on('ready', () => {\r\n *   console.log('Connected to Kinectron server');\r\n *   kinectron.initKinect()\r\n *     .then(() => {\r\n *       // Start a color stream\r\n *       kinectron.startColor((colorFrame) => {\r\n *         // Display the color image\r\n *         document.getElementById('colorImage').src = colorFrame.src;\r\n *       });\r\n *     });\r\n * });\r\n *\r\n * // Using script tag (UMD build)\r\n * // <script src=\"https://cdn.jsdelivr.net/npm/kinectron@1.0.0/dist/kinectron.umd.js\"></script>\r\n * // const kinectron = new Kinectron('127.0.0.1');\r\n */\r\nexport default Kinectron;\r\n","import { PeerConnection } from './peer/peerConnection.js';\r\nimport { NgrokClientState } from './peer/ngrokState.js';\r\nimport { DEBUG, log } from './utils/debug.js';\r\nimport {\r\n  createFrameHandler,\r\n  createRawDepthHandler,\r\n  createBodyHandler,\r\n  createMultiFrameHandler,\r\n} from './streams/streamHandlers.js';\r\n\r\n/**\r\n * Kinectron client for connecting to a Kinectron server and accessing Azure Kinect data streams\r\n *\r\n * @class\r\n */\r\nexport class Kinectron {\r\n  /**\r\n   * Creates a new Kinectron client instance for connecting to a Kinectron server\r\n   *\r\n   * @param {Object|string} [networkConfig] - Network configuration or server IP address\r\n   * @param {string} [networkConfig.host='127.0.0.1'] - Host address for the peer server\r\n   * @param {number|string} [networkConfig.port=9001] - Port number for the peer server\r\n   * @param {string} [networkConfig.path='/'] - Path for the peer server\r\n   * @param {boolean} [networkConfig.secure=false] - Whether to use secure connection\r\n   * @param {string} [networkConfig.role='default'] - Role identifier for the connection\r\n   * @example\r\n   * // Connect to local server\r\n   * const kinectron = new Kinectron();\r\n   *\r\n   * // Connect to specific IP\r\n   * const kinectron = new Kinectron('192.168.0.1');\r\n   *\r\n   * // Connect to ngrok tunnel\r\n   * const kinectron = new Kinectron('https://abcd1234.ngrok-free.app');\r\n   *\r\n   * // Connect with custom config\r\n   * const kinectron = new Kinectron({\r\n   *   host: '192.168.0.1',\r\n   *   port: 9001,\r\n   *   secure: false\r\n   * });\r\n   */\r\n  constructor(networkConfig) {\r\n    this.peer = new PeerConnection(networkConfig);\r\n    this.messageHandlers = new Map();\r\n    this.state = null;\r\n\r\n    // Set up event handlers\r\n    this.peer.on('ready', (data) => {\r\n      this.state = data.state;\r\n      const handler = this.messageHandlers.get('ready');\r\n      if (handler) handler(data);\r\n    });\r\n\r\n    this.peer.on('error', (error) => {\r\n      const handler = this.messageHandlers.get('error');\r\n      if (handler) handler(error);\r\n    });\r\n\r\n    // Handle state changes\r\n    this.peer.on('stateChange', (data) => {\r\n      this.state = data.to;\r\n      const handler = this.messageHandlers.get('stateChange');\r\n      if (handler) handler(data);\r\n    });\r\n\r\n    // Handle metrics updates\r\n    this.peer.on('metrics', (data) => {\r\n      const handler = this.messageHandlers.get('metrics');\r\n      if (handler) handler(data);\r\n    });\r\n\r\n    // Handle incoming data\r\n    this.peer.on('data', (data) => {\r\n      const { event, data: eventData } = data;\r\n      const handler = this.messageHandlers.get(event);\r\n\r\n      if (handler) {\r\n        // if (event === 'bodyFrame') debugger;\r\n\r\n        handler(eventData);\r\n      } else {\r\n        log.warn('Kinectron: No handler found for event:', event);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Register an event handler for a specific event type\r\n   *\r\n   * @param {string} event - Event type to handle\r\n   * @param {Function} callback - Handler function for the event\r\n   * @example\r\n   * // Handle connection ready event\r\n   * kinectron.on('ready', (data) => {\r\n   *   console.log('Connected to Kinectron server!');\r\n   * });\r\n   *\r\n   * // Handle connection errors\r\n   * kinectron.on('error', (error) => {\r\n   *   console.error('Connection error:', error);\r\n   * });\r\n   *\r\n   * // Handle state changes\r\n   * kinectron.on('stateChange', (data) => {\r\n   *   console.log('Connection state changed from', data.from, 'to', data.to);\r\n   * });\r\n   */\r\n  on(event, callback) {\r\n    this.messageHandlers.set(event, callback);\r\n  }\r\n\r\n  /**\r\n   * Get the current connection state and metadata\r\n   *\r\n   * @returns {Object} Current state information including connection status, metrics, and error history\r\n   * @example\r\n   * const state = kinectron.getState();\r\n   * console.log('Connection state:', state.currentState);\r\n   * console.log('Connection quality:', state.metrics.connectionQuality);\r\n   * console.log('Latency:', state.metrics.latency.current, 'ms');\r\n   */\r\n  getState() {\r\n    return this.peer.getState();\r\n  }\r\n\r\n  /**\r\n   * Check if the client is currently connected to a Kinectron server\r\n   *\r\n   * @returns {boolean} True if connected, false otherwise\r\n   * @example\r\n   * if (kinectron.isConnected()) {\r\n   *   console.log('Connected to Kinectron server');\r\n   * } else {\r\n   *   console.log('Not connected');\r\n   * }\r\n   */\r\n  isConnected() {\r\n    return this.state === NgrokClientState.STATES.CONNECTED;\r\n  }\r\n\r\n  /**\r\n   * Set the Kinect hardware type to use\r\n   *\r\n   * @param {string} kinectType - The type of Kinect hardware ('azure' or 'windows')\r\n   * @returns {void}\r\n   * @example\r\n   * // Set to Azure Kinect\r\n   * kinectron.setKinectType('azure');\r\n   *\r\n   * // Set to Kinect for Windows v2\r\n   * kinectron.setKinectType('windows');\r\n   */\r\n  setKinectType(kinectType) {\r\n    if (!this.isConnected()) {\r\n      log.warn('Cannot set Kinect type: not connected');\r\n      return;\r\n    }\r\n    this.send('setkinect', kinectType);\r\n  }\r\n\r\n  /**\r\n   * Initialize the Kinect hardware on the server\r\n   *\r\n   * @param {Function} [callback] - Optional callback for backward compatibility\r\n   * @returns {Promise<Object>} Promise resolving to initialization result\r\n   * @throws {Error} If not connected or initialization fails\r\n   * @example\r\n   * // Using Promise-based approach (recommended)\r\n   * kinectron.initKinect()\r\n   *   .then(result => {\r\n   *     console.log('Kinect initialized:', result.success);\r\n   *     // Start streams after successful initialization\r\n   *     kinectron.startColor(handleColorFrame);\r\n   *   })\r\n   *   .catch(error => {\r\n   *     console.error('Failed to initialize Kinect:', error);\r\n   *   });\r\n   *\r\n   * // Using callback approach (legacy)\r\n   * kinectron.initKinect((result) => {\r\n   *   if (result.success) {\r\n   *     console.log('Kinect initialized successfully');\r\n   *     // Start streams after successful initialization\r\n   *     kinectron.startColor(handleColorFrame);\r\n   *   } else {\r\n   *     console.error('Failed to initialize Kinect:', result.error);\r\n   *   }\r\n   * });\r\n   */\r\n  initKinect(callback) {\r\n    if (!this.isConnected()) {\r\n      log.warn('Cannot initialize Kinect: not connected');\r\n      return Promise.reject(\r\n        new Error('Cannot initialize Kinect: not connected'),\r\n      );\r\n    }\r\n\r\n    // Create a promise that resolves when we get the kinectInitialized event\r\n    const initPromise = new Promise((resolve, reject) => {\r\n      // Set up a one-time handler for the initialization response\r\n      const handler = (data) => {\r\n        // Normalize the success value to handle nested structure\r\n        let isSuccess = false;\r\n        if (\r\n          data.success &&\r\n          typeof data.success === 'object' &&\r\n          data.success.success === true\r\n        ) {\r\n          isSuccess = true;\r\n        } else if (\r\n          typeof data.success === 'boolean' &&\r\n          data.success === true\r\n        ) {\r\n          isSuccess = true;\r\n        }\r\n\r\n        // Create a normalized result object\r\n        const normalizedResult = {\r\n          success: isSuccess,\r\n          alreadyInitialized: !!data.alreadyInitialized,\r\n          error: data.error || null,\r\n          rawData: data, // Include the original data for debugging\r\n        };\r\n\r\n        if (isSuccess || data.alreadyInitialized) {\r\n          resolve(normalizedResult);\r\n        } else {\r\n          reject(\r\n            new Error(data.error || 'Failed to initialize Kinect'),\r\n          );\r\n        }\r\n\r\n        // Remove the handler after it's been called\r\n        this.messageHandlers.delete('kinectInitialized');\r\n      };\r\n\r\n      this.messageHandlers.set('kinectInitialized', handler);\r\n\r\n      // Send initialization request to server\r\n      this.send('initkinect', {});\r\n    });\r\n\r\n    // For backward compatibility, if a callback is provided, use it\r\n    if (callback) {\r\n      initPromise\r\n        .then((data) => callback(data))\r\n        .catch((error) =>\r\n          callback({ success: false, error: error.message }),\r\n        );\r\n    }\r\n\r\n    // Return the promise for modern Promise-based usage\r\n    return initPromise;\r\n  }\r\n\r\n  /**\r\n   * Send data to the Kinectron server\r\n   *\r\n   * @param {string} event - Event type\r\n   * @param {*} data - Data to send\r\n   * @returns {void}\r\n   * @example\r\n   * // Send custom data to the server\r\n   * kinectron.send('custom-event', { message: 'Hello from client' });\r\n   */\r\n  send(event, data) {\r\n    if (!this.isConnected()) {\r\n      log.warn('Cannot send data: not connected');\r\n      return;\r\n    }\r\n    this.peer.send(event, data);\r\n  }\r\n\r\n  /**\r\n   * Start the color camera stream\r\n   *\r\n   * @param {Function} [callback] - Callback function that receives color frames\r\n   * @returns {void}\r\n   * @example\r\n   * kinectron.startColor((colorFrame) => {\r\n   *   // colorFrame contains:\r\n   *   // - src: Data URL of the color image\r\n   *   // - width: Image width\r\n   *   // - height: Image height\r\n   *   // - raw: Raw image data\r\n   *   // - timestamp: Frame timestamp\r\n   *\r\n   *   // Display the color image\r\n   *   const img = document.getElementById('colorImage');\r\n   *   img.src = colorFrame.src;\r\n   * });\r\n   */\r\n  startColor(callback) {\r\n    if (callback) {\r\n      // Set up frame handler to process color frames\r\n      this.messageHandlers.set(\r\n        'frame',\r\n        createFrameHandler('color', callback),\r\n      );\r\n    }\r\n    this.send('feed', { feed: 'color' });\r\n  }\r\n\r\n  /**\r\n   * Start the depth camera stream (processed depth image)\r\n   *\r\n   * @param {Function} [callback] - Callback function that receives depth frames\r\n   * @returns {void}\r\n   * @example\r\n   * kinectron.startDepth((depthFrame) => {\r\n   *   // depthFrame contains:\r\n   *   // - src: Data URL of the depth image (colorized)\r\n   *   // - width: Image width\r\n   *   // - height: Image height\r\n   *   // - raw: Raw image data\r\n   *   // - timestamp: Frame timestamp\r\n   *\r\n   *   // Display the depth image\r\n   *   const img = document.getElementById('depthImage');\r\n   *   img.src = depthFrame.src;\r\n   * });\r\n   */\r\n  startDepth(callback) {\r\n    if (callback) {\r\n      // Set up frame handler to process depth frames\r\n      this.messageHandlers.set(\r\n        'frame',\r\n        createFrameHandler('depth', callback),\r\n      );\r\n    }\r\n    this.send('feed', { feed: 'depth' });\r\n  }\r\n\r\n  /**\r\n   * Unpacks raw depth data from a WebP image\r\n   * @private\r\n   * @param {string} dataUrl - The data URL containing the depth data\r\n   * @param {number} width - The width of the image\r\n   * @param {number} height - The height of the image\r\n   * @param {number} originalWidth - The original width of the depth data (not used in new implementation)\r\n   * @param {Object} testValues - Test values to verify unpacking accuracy\r\n   * @returns {Promise<Uint16Array>} - Promise resolving to the unpacked depth values\r\n   */\r\n  _unpackRawDepthData(\r\n    dataUrl,\r\n    width,\r\n    height,\r\n    originalWidth,\r\n    testValues,\r\n  ) {\r\n    // Log using the imported debug module\r\n    if (DEBUG.DATA) {\r\n      log.data(\r\n        'Unpacking raw depth data with dimensions:',\r\n        width,\r\n        'x',\r\n        height,\r\n      );\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      // Create image to load the data URL\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        // Use OffscreenCanvas for efficient processing\r\n        const canvas = new OffscreenCanvas(width, height);\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        // Draw the image to the canvas\r\n        ctx.drawImage(img, 0, 0);\r\n\r\n        // Get the pixel data\r\n        const imageData = ctx.getImageData(0, 0, width, height).data;\r\n\r\n        // Create array for unpacked depth values\r\n        const depthValues = new Uint16Array(width * height);\r\n\r\n        // Process the raw depth data exactly like the app.js client code\r\n        let j = 0;\r\n        for (let i = 0; i < imageData.length; i += 4) {\r\n          // Extract depth value from R and G channels\r\n          const depth = (imageData[i + 1] << 8) | imageData[i]; // Get uint16 data from buffer\r\n          depthValues[j++] = depth;\r\n        }\r\n\r\n        // Verify test values if provided\r\n        if (testValues && DEBUG.DATA) {\r\n          const unpackedValue1000 = depthValues[1000];\r\n          const unpackedValue2000 = depthValues[2000];\r\n          const unpackedValue3000 = depthValues[3000];\r\n\r\n          log.data('Test values comparison:', {\r\n            'Index 1000': {\r\n              Original: testValues.index1000,\r\n              Unpacked: unpackedValue1000,\r\n              Difference: testValues.index1000 - unpackedValue1000,\r\n            },\r\n            'Index 2000': {\r\n              Original: testValues.index2000,\r\n              Unpacked: unpackedValue2000,\r\n              Difference: testValues.index2000 - unpackedValue2000,\r\n            },\r\n            'Index 3000': {\r\n              Original: testValues.index3000,\r\n              Unpacked: unpackedValue3000,\r\n              Difference: testValues.index3000 - unpackedValue3000,\r\n            },\r\n          });\r\n        }\r\n\r\n        resolve(depthValues);\r\n      };\r\n\r\n      img.onerror = (err) => {\r\n        reject(new Error('Failed to load depth image: ' + err));\r\n      };\r\n\r\n      img.src = dataUrl;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Start the raw depth stream (16-bit depth values)\r\n   *\r\n   * @param {Function} [callback] - Callback function that receives raw depth frames\r\n   * @returns {void}\r\n   * @example\r\n   * kinectron.startRawDepth((rawDepthFrame) => {\r\n   *   // rawDepthFrame contains:\r\n   *   // - depthValues: Uint16Array of 16-bit depth values\r\n   *   // - width: Frame width\r\n   *   // - height: Frame height\r\n   *   // - timestamp: Frame timestamp\r\n   *\r\n   *   // Access raw depth values\r\n   *   const depthValues = rawDepthFrame.depthValues;\r\n   *\r\n   *   // Example: Find minimum and maximum depth\r\n   *   let min = Infinity;\r\n   *   let max = 0;\r\n   *   for (let i = 0; i < depthValues.length; i++) {\r\n   *     if (depthValues[i] > 0) { // Ignore zero values (no data)\r\n   *       min = Math.min(min, depthValues[i]);\r\n   *       max = Math.max(max, depthValues[i]);\r\n   *     }\r\n   *   }\r\n   *   console.log(`Depth range: ${min}mm to ${max}mm`);\r\n   * });\r\n   */\r\n  startRawDepth(callback) {\r\n    if (callback) {\r\n      // Set up handler to process raw depth frames\r\n      this.messageHandlers.set(\r\n        'rawDepth',\r\n        createRawDepthHandler(\r\n          callback,\r\n          this._unpackRawDepthData.bind(this),\r\n        ),\r\n      );\r\n    }\r\n    this.send('feed', { feed: 'raw-depth' });\r\n  }\r\n\r\n  /**\r\n   * Start the body tracking stream\r\n   *\r\n   * @param {Function} [callback] - Callback function that receives body tracking frames\r\n   * @returns {void}\r\n   * @example\r\n   * kinectron.startBodies((bodyFrame) => {\r\n   *   // bodyFrame contains:\r\n   *   // - bodies: Array of tracked bodies\r\n   *   // - timestamp: Frame timestamp\r\n   *   // - floorClipPlane: Floor plane data\r\n   *   // - trackingId: Tracking session ID\r\n   *\r\n   *   // Process each tracked body\r\n   *   bodyFrame.bodies.forEach(body => {\r\n   *     // Each body contains joint positions and orientations\r\n   *     const joints = body.joints;\r\n   *\r\n   *     // Example: Get head position\r\n   *     const head = joints.find(joint => joint.name === 'head');\r\n   *     if (head) {\r\n   *       console.log('Head position:', head.position);\r\n   *     }\r\n   *   });\r\n   * });\r\n   */\r\n  startBodies(callback) {\r\n    if (callback) {\r\n      // Set up handler to process body tracking frames\r\n      this.messageHandlers.set(\r\n        'bodyFrame',\r\n        createBodyHandler(callback),\r\n      );\r\n    }\r\n    this.send('feed', { feed: 'body' });\r\n  }\r\n\r\n  /**\r\n   * Start the key (green screen) stream\r\n   *\r\n   * @param {Function} [callback] - Callback function that receives key frames\r\n   * @returns {void}\r\n   * @example\r\n   * kinectron.startKey((keyFrame) => {\r\n   *   // keyFrame contains:\r\n   *   // - src: Data URL of the key image (color with background removed)\r\n   *   // - width: Image width\r\n   *   // - height: Image height\r\n   *   // - raw: Raw image data\r\n   *   // - timestamp: Frame timestamp\r\n   *\r\n   *   // Display the key image\r\n   *   const img = document.getElementById('keyImage');\r\n   *   img.src = keyFrame.src;\r\n   * });\r\n   */\r\n  startKey(callback) {\r\n    if (callback) {\r\n      // Set up frame handler to process key frames\r\n      this.messageHandlers.set(\r\n        'frame',\r\n        createFrameHandler('key', callback),\r\n      );\r\n    }\r\n    this.send('feed', { feed: 'key' });\r\n  }\r\n\r\n  /**\r\n   * Start the depth key stream (depth data with background removed)\r\n   *\r\n   * @param {Function} [callback] - Callback function that receives depth key frames\r\n   * @returns {void}\r\n   * @example\r\n   * kinectron.startDepthKey((depthKeyFrame) => {\r\n   *   // depthKeyFrame contains:\r\n   *   // - src: Data URL of the depth key image\r\n   *   // - width: Image width\r\n   *   // - height: Image height\r\n   *   // - raw: Raw image data\r\n   *   // - timestamp: Frame timestamp\r\n   *\r\n   *   // Display the depth key image\r\n   *   const img = document.getElementById('depthKeyImage');\r\n   *   img.src = depthKeyFrame.src;\r\n   * });\r\n   */\r\n  startDepthKey(callback) {\r\n    if (callback) {\r\n      // Set up handler to process depth key frames\r\n      this.messageHandlers.set(\r\n        'depth-key', // Changed from 'depthKey' to match server's broadcast event name\r\n        createFrameHandler('depth-key', callback),\r\n      );\r\n    }\r\n    this.send('feed', { feed: 'depth-key' });\r\n  }\r\n\r\n  /**\r\n   * Start the RGBD stream (aligned color and depth)\r\n   *\r\n   * @param {Function} [callback] - Callback function that receives RGBD frames\r\n   * @returns {void}\r\n   * @example\r\n   * kinectron.startRGBD((rgbdFrame) => {\r\n   *   // rgbdFrame contains:\r\n   *   // - src: Data URL of the RGBD image\r\n   *   // - width: Image width\r\n   *   // - height: Image height\r\n   *   // - raw: Raw image data\r\n   *   // - timestamp: Frame timestamp\r\n   *\r\n   *   // Display the RGBD image\r\n   *   const img = document.getElementById('rgbdImage');\r\n   *   img.src = rgbdFrame.src;\r\n   * });\r\n   */\r\n  startRGBD(callback) {\r\n    if (callback) {\r\n      // Set up frame handler to process RGBD frames\r\n      this.messageHandlers.set(\r\n        'frame',\r\n        createFrameHandler('rgbd', callback),\r\n      );\r\n    }\r\n    this.send('feed', { feed: 'rgbd' });\r\n  }\r\n\r\n  /**\r\n   * Start multiple streams simultaneously\r\n   *\r\n   * @param {string[]} frames - Array of stream types to start ('color', 'depth', 'body', etc.)\r\n   * @param {Function} [callback] - Callback function that receives multi-frame data\r\n   * @returns {void}\r\n   * @example\r\n   * // Start color and depth streams together\r\n   * kinectron.startMultiFrame(['color', 'depth'], (multiFrame) => {\r\n   *   // multiFrame contains:\r\n   *   // - frames: Object with a property for each requested stream type\r\n   *   // - timestamp: Frame timestamp\r\n   *\r\n   *   // Access individual frames\r\n   *   const colorFrame = multiFrame.frames.color;\r\n   *   const depthFrame = multiFrame.frames.depth;\r\n   *\r\n   *   // Display the images\r\n   *   document.getElementById('colorImage').src = colorFrame.src;\r\n   *   document.getElementById('depthImage').src = depthFrame.src;\r\n   * });\r\n   */\r\n  startMultiFrame(frames, callback) {\r\n    if (callback) {\r\n      // Set up handler to process multi-frame data\r\n      this.messageHandlers.set(\r\n        'multiFrame',\r\n        createMultiFrameHandler(callback),\r\n      );\r\n    }\r\n    this.send('multi', frames);\r\n  }\r\n\r\n  /**\r\n   * Stop all active streams\r\n   *\r\n   * @returns {void}\r\n   * @example\r\n   * // Stop all active streams\r\n   * kinectron.stopAll();\r\n   */\r\n  stopAll() {\r\n    this.send('feed', { feed: 'stop-all' });\r\n  }\r\n\r\n  /**\r\n   * Close the connection and clean up resources\r\n   *\r\n   * @returns {void}\r\n   * @example\r\n   * // Close the connection when done\r\n   * kinectron.close();\r\n   */\r\n  close() {\r\n    this.peer.close();\r\n    this.messageHandlers.clear();\r\n    this.state = null;\r\n  }\r\n}\r\n"],"names":["$e8379818650e2442$export$93654d4f2d6cd524","constructor","this","encoder","TextEncoder","_pieces","_parts","append_buffer","data","flush","push","append","length","buf","Uint8Array","toArrayBuffer","buffer","part","bufs","size","byteLength","result","offset","view","byteOffset","set","$e8379818650e2442$var$concatArrayBuffers","$0cfd7828ad59115f$export$417857010dc9287f","$0cfd7828ad59115f$var$Unpacker","unpack","$0cfd7828ad59115f$export$2a703dbb0cb35339","packer","$0cfd7828ad59115f$export$b9ec4b114aa40074","res","pack","Promise","then","getBuffer","index","dataBuffer","dataView","type","unpack_uint8","unpack_raw","unpack_string","unpack_array","unpack_map","unpack_float","unpack_double","unpack_uint16","unpack_uint32","unpack_uint64","unpack_int8","unpack_int16","unpack_int32","unpack_int64","byte","bytes","read","uint16","uint32","uint64","uint8","Error","slice","c","code","i","str","String","fromCodePoint","objects","Array","map","h32","exp","j","subarray","_bufferBuilder","value","pack_string","Math","floor","pack_integer","pack_double","undefined","pack_array","ArrayBuffer","pack_bin","v","Date","toString","Blob","arrayBuffer","Object","startsWith","pack_object","blob","pack_uint8","pack_uint16","pack_uint32","encoded","_textEncoder","encode","ary","packNext","num","pack_int8","pack_int16","pack_int32","pack_int64","pack_uint64","sign","log","LN2","frac0","frac1","b32","l32","obj","keys","prop","hasOwnProperty","n","high","low","logDisabled_","deprecationWarnings_","extractVersion","uastring","expr","pos","match","parseFloat","wrapPeerConnectionEvent","window","eventNameToWrap","wrapper","RTCPeerConnection","proto","prototype","nativeAddEventListener","addEventListener","nativeEventName","cb","apply","arguments","wrappedCallback","e","modifiedEvent","handleEvent","_eventMap","Map","nativeRemoveEventListener","removeEventListener","has","unwrappedCb","get","delete","defineProperty","enumerable","configurable","disableLog","bool","disableWarnings","console","deprecated","oldMethod","newMethod","warn","isObject","val","call","compactObject","reduce","accumulator","key","isObj","isEmptyObject","assign","walkStats","stats","base","resultSet","id","forEach","name","endsWith","filterStats","track","outbound","streamStatsType","filteredResult","trackStats","trackIdentifier","trackStat","trackId","logging","utils.log","shimGetUserMedia","browserDetails","navigator","mediaDevices","constraintsToChrome_","mandatory","optional","cc","r","ideal","exact","min","max","oldname_","prefix","charAt","toUpperCase","oc","mix","advanced","concat","shimConstraints_","constraints","func","version","JSON","parse","stringify","audio","remap","a","b","video","face","facingMode","getSupportedFacingModeLies","getSupportedConstraints","matches","enumerateDevices","devices","dev","filter","d","kind","find","some","label","toLowerCase","includes","deviceId","shimError_","PermissionDeniedError","PermissionDismissedError","InvalidStateError","DevicesNotFoundError","ConstraintNotSatisfiedError","TrackStartError","MediaDeviceFailedDueToShutdown","MediaDeviceKillSwitchOn","TabCaptureError","ScreenCaptureError","DeviceCaptureError","message","constraint","constraintName","getUserMedia","onSuccess","onError","webkitGetUserMedia","bind","origGetUserMedia","cs","stream","getAudioTracks","getVideoTracks","getTracks","stop","DOMException","reject","shimMediaStream","MediaStream","webkitMediaStream","shimOnTrack","_ontrack","f","origSetRemoteDescription","setRemoteDescription","_ontrackpoly","te","receiver","getReceivers","event","Event","transceiver","streams","dispatchEvent","utils.wrapPeerConnectionEvent","shimGetSendersWithDtmf","shimSenderWithDtmf","pc","dtmf","_dtmf","createDTMFSender","_pc","getSenders","_senders","origAddTrack","addTrack","sender","origRemoveTrack","removeTrack","idx","indexOf","splice","origAddStream","addStream","origRemoveStream","removeStream","s","RTCRtpSender","origGetSenders","senders","shimSenderReceiverGetStats","RTCRtpReceiver","getStats","utils.filterStats","origGetReceivers","receivers","srcElement","origGetStats","MediaStreamTrack","err","shimAddTrackRemoveTrackWithNative","getLocalStreams","_shimmedLocalStreams","streamId","existingSenders","newSenders","newSender","shimAddTrackRemoveTrack","origGetLocalStreams","nativeStreams","_reverseStreams","_streams","newStream","replaceInternalStreamId","description","sdp","internalId","externalStream","internalStream","replace","RegExp","RTCSessionDescription","signalingState","t","oldStream","resolve","method","nativeMethod","methodObj","args","desc","origSetLocalDescription","setLocalDescription","replaceExternalStreamId","origLocalDescription","getOwnPropertyDescriptor","streamid","shimPeerConnection","webkitRTCPeerConnection","RTCIceCandidate","fixNegotiationNeeded","target","getConfiguration","sdpSemantics","utils.deprecated","nativeGetUserMedia","getSettings","nativeGetSettings","applyConstraints","nativeApplyConstraints","RTCTrackEvent","mozRTCPeerConnection","modernStatsTypes","inboundrtp","outboundrtp","candidatepair","localcandidate","remotecandidate","nativeGetStats","selector","onSucc","onErr","stat","shimSenderGetStats","shimReceiverGetStats","shimRemoveStream","shimRTCDataChannel","DataChannel","RTCDataChannel","shimAddTransceiver","origAddTransceiver","addTransceiver","setParametersPromises","sendEncodings","shouldPerformCheck","encodingParam","test","rid","TypeError","scaleResolutionDownBy","RangeError","maxFramerate","params","getParameters","encodings","setParameters","catch","shimGetParameters","origGetParameters","shimCreateOffer","origCreateOffer","createOffer","all","finally","shimCreateAnswer","origCreateAnswer","createAnswer","preferredMediaSource","getDisplayMedia","mediaSource","shimLocalStreamsAPI","_localStreams","_addTrack","tracks","shimRemoteStreamsAPI","getRemoteStreams","_remoteStreams","_onaddstream","_onaddstreampoly","shimCallbacksAPI","addIceCandidate","successCallback","failureCallback","options","promise","withCallback","candidate","_getUserMedia","shimConstraints","errcb","utils.compactObject","shimRTCIceServerUrls","OrigPeerConnection","pcConfig","pcConstraints","iceServers","newIceServers","server","urls","url","generateCertificate","shimTrackEventTransceiver","shimCreateOfferLegacy","offerOptions","offerToReceiveAudio","audioTransceiver","getTransceivers","direction","setDirection","offerToReceiveVideo","videoTransceiver","shimAudioContext","AudioContext","webkitAudioContext","SDPUtils","random","substring","localCName","generateIdentifier","splitLines","trim","split","line","splitSections","getDescription","sections","getMediaSections","shift","matchPrefix","parseCandidate","parts","foundation","component","protocol","priority","parseInt","ip","address","port","relatedAddress","relatedPort","tcpType","ufrag","usernameFragment","writeCandidate","join","parseIceOptions","parseRtpMap","parsed","payloadType","clockRate","channels","numChannels","writeRtpMap","codec","pt","preferredPayloadType","parseExtmap","uri","attributes","writeExtmap","headerExtension","preferredId","parseFmtp","kv","writeFmtp","parameters","param","parseRtcpFb","parameter","writeRtcpFb","lines","rtcpFeedback","fb","parseSsrcMedia","sp","ssrc","colon","attribute","parseSsrcGroup","semantics","ssrcs","getMid","mediaSection","mid","parseFingerprint","algorithm","getDtlsParameters","sessionpart","role","fingerprints","writeDtlsParameters","setupType","fp","parseCryptoLine","tag","cryptoSuite","keyParams","sessionParams","writeCryptoLine","writeCryptoKeyParams","parseCryptoKeyParams","keyMethod","keySalt","lifeTime","mkiValue","mkiLength","getCryptoParameters","getIceParameters","pwd","password","writeIceParameters","iceLite","parseRtpParameters","codecs","headerExtensions","fecMechanisms","rtcp","mline","profile","rtpmapline","fmtps","wildcardRtcpFb","existingFeedback","writeRtpDescription","caps","maxptime","extension","parseRtpEncodingParameters","encodingParameters","hasRed","hasUlpfec","primarySsrc","secondarySsrc","flows","apt","encParam","codecPayloadType","rtx","fec","mechanism","bandwidth","maxBitrate","parseRtcpParameters","rtcpParameters","remoteSsrc","cname","rsize","reducedSize","compound","mux","writeRtcpParameters","parseMsid","spec","planB","msidParts","parseSctpDescription","parseMLine","maxSizeLine","maxMessageSize","isNaN","sctpPort","fmt","sctpMapLines","writeSctpDescription","media","sctp","output","generateSessionId","substr","writeSessionBoilerplate","sessId","sessVer","sessUser","sessionId","getDirection","getKind","isRejected","parseOLine","username","sessionVersion","netType","addressType","isValidSDP","module","shimRTCIceCandidate","NativeRTCIceCandidate","nativeCandidate","parsedCandidate","toJSON","sdpMid","sdpMLineIndex","writable","shimRTCIceCandidateRelayProtocol","relayProtocol","shimMaxMessageSize","_sctp","browser","mLine","sctpInDescription","isFirefox","getRemoteFirefoxVersion","canSendMMS","remoteIsFirefox","canSendMaxMessageSize","getCanSendMaxMessageSize","remoteMMS","getMaxMessageSize","Number","POSITIVE_INFINITY","shimSendThrowTypeError","wrapDcSend","dc","origDataChannelSend","send","readyState","origCreateDataChannel","createDataChannel","dataChannel","channel","shimConnectionState","completed","checking","iceConnectionState","_onconnectionstatechange","origMethod","_connectionstatechangepoly","_lastConnectionState","connectionState","newEvent","removeExtmapAllowMixed","_safariVersion","nativeSRD","shimAddIceCandidateNullOrEmpty","nativeAddIceCandidate","shimParameterlessSetLocalDescription","nativeSetLocalDescription","adapter","shimChrome","shimFirefox","shimSafari","userAgent","userAgentData","brands","chromium","brand","mozGetUserMedia","isSecureContext","supportsUnifiedPlan","RTCRtpTransceiver","utils.detectBrowser","commonShim","utils.extractVersion","utils.disableLog","utils.disableWarnings","chromeShim","chromeShim.shimPeerConnection","browserShim","commonShim.shimAddIceCandidateNullOrEmpty","commonShim.shimParameterlessSetLocalDescription","chromeShim.shimGetUserMedia","chromeShim.shimMediaStream","chromeShim.shimOnTrack","chromeShim.shimAddTrackRemoveTrack","chromeShim.shimGetSendersWithDtmf","chromeShim.shimSenderReceiverGetStats","chromeShim.fixNegotiationNeeded","commonShim.shimRTCIceCandidate","commonShim.shimRTCIceCandidateRelayProtocol","commonShim.shimConnectionState","commonShim.shimMaxMessageSize","commonShim.shimSendThrowTypeError","commonShim.removeExtmapAllowMixed","firefoxShim","firefoxShim.shimPeerConnection","firefoxShim.shimGetUserMedia","firefoxShim.shimOnTrack","firefoxShim.shimRemoveStream","firefoxShim.shimSenderGetStats","firefoxShim.shimReceiverGetStats","firefoxShim.shimRTCDataChannel","firefoxShim.shimAddTransceiver","firefoxShim.shimGetParameters","firefoxShim.shimCreateOffer","firefoxShim.shimCreateAnswer","safariShim","safariShim.shimRTCIceServerUrls","safariShim.shimCreateOfferLegacy","safariShim.shimCallbacksAPI","safariShim.shimLocalStreamsAPI","safariShim.shimRemoteStreamsAPI","safariShim.shimTrackEventTransceiver","safariShim.shimGetUserMedia","safariShim.shimAudioContext","adapterFactory","$parcel$export","$fcbcc7538a6776d5$export$f1c5f4c9cb95390b","chunkedMTU","_dataCount","chunk","chunks","total","ceil","start","end","__peerData","$fb63e766cfafaab9$var$webRTCAdapter","default","$fb63e766cfafaab9$export$25be9502477c137d","isWebRTCSupported","isBrowserSupported","getBrowser","getVersion","supportedBrowsers","minChromeVersion","minFirefoxVersion","isIOS","minSafariVersion","isUnifiedPlanSupported","tempPc","supported","close","platform","$9a84a32bf0bf36bb$export$f35f128fd59ea256","$0e5fd1585784c252$export$4e61f672936bec77","$4f4134156c446392$var$DEFAULT_CONFIG","credential","$4f4134156c446392$export$7debb50ef11d5e0b","noop","blobToArrayBuffer","fr","FileReader","onload","evt","readAsArrayBuffer","binaryStringToArrayBuffer","binary","byteArray","charCodeAt","isSecure","location","super","CLOUD_HOST","CLOUD_PORT","chunkedBrowsers","Chrome","chrome","defaultConfig","browserVersion","$gCcbY$pack","$gCcbY$unpack","supports","webRTC","audioVideo","binaryBlob","reliable","ordered","binaryType","validateId","randomToken","$257947e92926277a$export$243e62d78d3b544d","LogLevel","$c4dcfd1d1ea86647$exports","$257947e92926277a$export$2e2bcd8739ae039","logLevel","_logLevel","_print","error","setLogFunction","fn","rest","copy","$c4dcfd1d1ea86647$var$has","$c4dcfd1d1ea86647$var$prefix","$c4dcfd1d1ea86647$var$Events","$c4dcfd1d1ea86647$var$EE","context","once","$c4dcfd1d1ea86647$var$addListener","emitter","listener","_events","_eventsCount","$c4dcfd1d1ea86647$var$clearEvent","$c4dcfd1d1ea86647$var$EventEmitter","create","__proto__","eventNames","events","names","getOwnPropertySymbols","listeners","handlers","l","ee","listenerCount","emit","a1","a2","a3","a4","a5","len","removeListener","on","removeAllListeners","off","addListener","prefixed","EventEmitter","$78455e22dea96b8c$export$3157d57b4135e3bc","ConnectionType","$78455e22dea96b8c$export$9547aaa2e39030ff","PeerErrorType","$78455e22dea96b8c$export$7974935686149686","BaseConnectionErrorType","$78455e22dea96b8c$export$49ae800c114df41d","DataConnectionErrorType","$78455e22dea96b8c$export$89f507cf986a947","SerializationType","$78455e22dea96b8c$export$3b5c4a4b6354f023","SocketEventType","$78455e22dea96b8c$export$adb4a1754da6f10d","ServerMessageType","$78455e22dea96b8c$exports","$f5f881ec4575f1fc$exports","$8f5bfa60836d261d$export$4798917dbf149b79","secure","host","path","pingInterval","_disconnected","_messagesQueue","wsProtocol","_baseUrl","token","_id","wsUrl","_socket","WebSocket","onmessage","Message","onclose","_cleanup","Disconnected","onopen","_sendQueuedMessages","_scheduleHeartbeat","_wsPingTimer","setTimeout","_sendHeartbeat","_wsOpen","Heartbeat","copiedQueue","clearTimeout","$b82fb8fc0514bfc1$export$89e6bb5ad64bf4a","connection","startConnection","peerConnection","_startPeerConnection","Media","_stream","_addTracksToConnection","originator","dataConnection","config","_initializeDataChannel","_makeOffer","handleSDP","provider","_setupListeners","peerId","peer","connectionId","connectionType","onicecandidate","socket","Candidate","payload","dst","oniceconnectionstatechange","emitError","NegotiationFailed","ConnectionClosed","ondatachannel","getConnection","ontrack","mediaConnection","_addStreamToMediaConnection","cleanup","peerConnectionNotClosed","dataChannelNotClosed","offer","sdpTransform","metadata","Data","serialization","Offer","WebRTC","err_1","_makeAnswer","answer","Answer","self","handleCandidate","ice","$23779d1881157a18$export$6a678e589c8a4542","$23779d1881157a18$export$98871882f492de82","$5045192fc6d387ba$export$23a2a68283c24d80","open","_open","$5c1d08c7c57da9a3$export$4a84e95a2324ac29","static","ID_PREFIX","localStream","_localStream","remoteStream","_remoteStream","_negotiator","handleMessage","_payload","messages","_getMessages","_removeConnection","$abf266641927cd89$export$2c4e825dc9120f87","_options","_buildRequest","URL","searchParams","now","fetch","href","referrerPolicy","retrieveId","response","status","text","pathError","listAllPeers","helpfulError","json","$6366c4ca161bc297$export$d365f7ad9d7df9c9","MAX_BUFFERED_AMOUNT","chunked","_send","NotOpenYet","$a229bedbcaa6ca23$export$ff7c9d4c11d94e8b","bufferSize","_bufferSize","_handleDataMessage","_bufferedSend","msg","_buffering","_trySend","_buffer","bufferedAmount","_tryBuffer","$9fcfddb3ae148f88$export$f0a5a64d5bb37108","_chunkedData","chunker","Binary","deserializedData","peerData","_handleChunk","chunkInfo","count","_send_blob","_sendChunks","blobPromise","blobs","$bbaee3f15f714663$export$6f88fe47d32c9c94","_chunked","None","$817f931e3f9096cf$export$48880ac635f47186","decoder","decode","encodedData","MessageToBig","TextDecoder","$416260bce337df90$export$ecd1fc136c422448","DEFAULT_KEY","connections","plainConnections","k","_connections","destroyed","_destroyed","disconnected","userId","_serializers","raw","_lastServerId","_lostMessages","debug","serializers","hostname","logFunction","_api","_createServerConnection","_initialize","_abort","ServerError","_delayedAbort","InvalidID","BrowserIncompatible","_handleMessage","SocketError","Network","disconnect","Close","SocketClosed","src","Open","IdTaken","UnavailableID","InvalidKey","Leave","_cleanupPeer","Expire","PeerUnavailable","_addConnection","_storeMessage","connect","destroy","currentId","reconnect","_","peers","$dd0187d7f28e386f$export$2e2bcd8739ae039","NgrokError","details","timestamp","toISOString","troubleshooting","NgrokValidationError","NgrokErrorCodes","DEFAULT_PEER_CONFIG","processPeerConfig","reason","validateNgrokUrl","NgrokClientError","NgrokClientState","DISCONNECTED","VALIDATING","CONNECTING","CONNECTED","RECONNECTING","ERROR","STATES","currentState","startTime","lastStateChange","errorHistory","metrics","latency","current","average","samples","connectionQuality","reconnects","lastAttempt","errors","byType","stateChange","Set","handler","add","_emit","getState","getMetadata","uptime","_calculateUptime","updateMetrics","sum","sample","_updateConnectionQuality","setState","newState","_isValidTransition","from","to","oldState","recordError","errorRecord","state","unshift","pop","reset","getTime","avgLatency","recentErrors","validNextStates","VALID_TRANSITIONS","PeerConnection","networkConfig","targetPeerId","messageHandlers","messageQueue","maxQueueSize","lastPingTime","healthCheckInterval","clientId","generateClientId","initialize","isNgrok","Peer","retries","timeout","setupPeerEventHandlers","startHealthCheck","handleError","shouldAttemptReconnection","_handleReconnection","clearInterval","setInterval","checkConnectionHealth","sendPing","handleConnectionFailure","timeSinceLastPing","_getErrorMessage","network","_setConnectionTimeout","attempt","baseDelay","pow","jitter","delay","isClosing","existingConn","setupConnectionHandlers","processMessageQueue","handleIncomingData","_isClosing","dataHandler","originalError","isConnected","processImageData","frameData","callback","imagedata","imageData","width","height","canvas","document","createElement","ctx","getContext","dataUrl","img","Image","drawImage","onerror","createImageFromDataUrl","pixelData","convertToUint8ClampedArray","imgData","ImageData","putImageData","toDataURL","Uint8ClampedArray","isArray","values","createFrameHandler","streamType","hasImageData","imageUtils.processImageData","eventData","setKinectType","kinectType","initKinect","initPromise","isSuccess","success","normalizedResult","alreadyInitialized","rawData","startColor","feed","startDepth","_unpackRawDepthData","originalWidth","testValues","OffscreenCanvas","getImageData","depthValues","Uint16Array","depth","startRawDepth","unpackFunction","rawDepthData","createRawDepthHandler","startBodies","bodyData","bodies","floorClipPlane","trackingId","createBodyHandler","startKey","startDepthKey","startRGBD","startMultiFrame","frames","processedFrames","entries","imageUtils.convertToUint8ClampedArray","createMultiFrameHandler","stopAll","clear"],"version":3,"file":"gettingstarted.b9a8893f.js.map","sourceRoot":"/__parcel_source_root/"}