{"mappings":"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,E,C,E,K,E,C,A,C,E,E,M,A,G,E,I,C,G,C,E,E,I,A,G,C,A,C,E,E,I,C,E,C,C,E,C,E,I,C,O,E,O,E,E,A,G,C,E,C,A,E,C,C,E,C,E,K,C,A,E,C,C,E,E,K,E,K,E,E,E,K,M,E,O,E,K,G,C,M,C,C,E,C,K,C,C,C,M,E,E,K,G,E,C,C,E,C,E,C,E,C,Q,M,E,E,E,G,C,G,G,E,I,C,G,G,Q,S,G,C,C,E,A,C,E,E,I,A,E,M,C,G,C,C,E,M,C,E,A,G,C,A,I,C,C,E,E,A,I,C,C,E,A,E,C,E,E,Q,C,G,A,I,C,C,E,E,C,C,G,C,C,E,C,C,C,E,E,C,C,E,C,C,C,E,A,E,C,E,K,C,C,C,E,C,K,C,G,A,I,C,C,E,E,E,K,C,C,C,E,C,C,E,K,C,C,C,E,C,E,E,K,C,G,G,E,K,C,C,C,E,C,C,E,K,C,C,C,E,C,E,G,C,I,C,G,K,C,C,C,E,E,E,G,C,G,G,E,I,C,G,G,Q,C,E,E,I,C,E,E,C,M,E,C,E,C,E,E,C,E,C,Q,C,E,E,C,C,G,A,E,C,C,E,C,M,C,C,E,C,M,C,M,C,C,E,C,C,C,E,C,K,E,K,C,C,C,E,C,E,E,C,C,C,E,G,S,C,E,G,C,O,a,C,M,A,U,wC,I,E,E,C,C,O,a,C,C,O,E,E,I,C,G,C,E,A,Y,O,S,S,G,C,C,O,Q,C,G,E,C,E,E,Q,E,S,E,U,C,C,O,a,C,C,W,O,I,A,E,C,E,S,E,C,E,C,C,E,C,C,C,E,E,S,C,E,O,I,Q,S,C,C,C,G,A,S,C,C,C,C,C,C,C,E,Q,O,C,G,I,C,S,C,E,E,C,M,E,K,C,E,E,E,E,E,E,A,C,E,C,C,E,C,E,E,I,C,E,K,C,E,C,C,E,G,S,C,E,O,I,Y,G,C,I,C,C,C,E,I,A,E,I,G,E,E,G,S,C,C,C,C,C,E,G,C,O,a,C,M,A,U,wC,I,E,E,E,K,C,E,G,E,E,E,E,C,O,E,C,E,E,Q,E,S,E,U,C,C,O,a,C,C,W,O,I,A,E,E,S,E,C,E,C,C,E,E,C,C,C,E,C,S,C,E,O,I,Q,S,C,C,C,E,E,I,C,C,E,E,E,E,E,G,E,E,E,E,C,C,C,S,E,C,C,C,E,G,K,C,E,E,C,C,E,C,I,K,Y,G,Q,O,C,E,K,C,C,E,I,C,E,G,E,C,C,E,C,E,C,E,C,M,E,C,E,C,C,E,C,E,C,E,C,C,S,E,C,E,E,O,E,C,S,E,C,E,E,Q,E,C,S,E,C,C,C,E,E,G,E,K,G,A,E,M,E,E,C,C,E,C,E,C,C,C,E,C,E,C,C,EnB3DM,GAAoB,SAAC,CAAY,EACrC,IAAM,EAAU,OAAO,EAEvB,MAAO,AAAY,WAAZ,GAAwB,AAAY,WAAZ,CACjC,EAqBM,GAAa,IAAI,SAAS,IAAI,YAAY,IAC1C,GAAc,IAAI,WAAW,GAAW,MAAM,EAIvC,GAA8C,WACzD,GAAI,CAGF,GAAW,OAAO,CAAC,EACpB,CAAC,MAAO,EAAQ,CACf,OAAO,EAAE,WAAW,AACrB,CACD,MAAM,AAAI,MAAM,gBAClB,IAEM,GAAY,IAAI,GAA8B,qBAE9C,GAAyB,IAAI,G,S,G,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,EAEnC,WASE,SAAA,EACmB,CAAoF,CACpF,CAAuC,CACvC,CAAyB,CACzB,CAAyB,CACzB,CAA2B,CAC3B,CAAyB,CACzB,CAAyB,CACzB,CAAsD,EAPtD,KAAA,IAAA,GAAA,CAAA,EAAkD,AAAA,GAAe,YAAmB,AAAnB,EACjE,KAAA,IAAA,GAAA,CAAA,EAAuB,KAAA,CAAvB,EACA,KAAA,IAAA,GAAA,CAAA,EYvEK,UZuEL,EACA,KAAA,IAAA,GAAA,CAAA,EYxEK,UZwEL,EACA,KAAA,IAAA,GAAA,CAAA,EYzEK,UZyEL,EACA,KAAA,IAAA,GAAA,CAAA,EY1EK,UZ0EL,EACA,KAAA,IAAA,GAAA,CAAA,EY3EK,UZ2EL,EACA,KAAA,IAAA,GAAA,CAAA,EAAA,EAAA,EAPA,IAAA,CAAA,cAAc,CAAd,EACA,IAAA,CAAA,OAAO,CAAP,EACA,IAAA,CAAA,YAAY,CAAZ,EACA,IAAA,CAAA,YAAY,CAAZ,EACA,IAAA,CAAA,cAAc,CAAd,EACA,IAAA,CAAA,YAAY,CAAZ,EACA,IAAA,CAAA,YAAY,CAAZ,EACA,IAAA,CAAA,UAAU,CAAV,EAhBX,IAAA,CAAA,QAAQ,CAAG,EACX,IAAA,CAAA,GAAG,CAAG,EAEN,IAAA,CAAA,IAAI,CAAG,GACP,IAAA,CAAA,KAAK,CAAG,GACR,IAAA,CAAA,QAAQ,CA5BS,GA6BR,IAAA,CAAA,KAAK,CAAsB,EAAE,AAW3C,CAEK,EAAA,SAAA,CAAA,iBAAiB,CAAzB,WACE,IAAI,CAAC,QAAQ,CAAG,EAChB,IAAI,CAAC,QAAQ,CA5CU,GA6CvB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAG,CAGtB,EAEQ,EAAA,SAAA,CAAA,SAAS,CAAjB,SAAkB,CAAwC,EACxD,IAAI,CAAC,KAAK,CAAG,AAAA,GAAiB,GAC9B,IAAI,CAAC,IAAI,CAAG,AAAA,SiB9Ee,CAAyD,EACtF,GAAI,aAAkB,YACpB,OAAO,IAAI,SAAS,GAGtB,IAAM,EAAa,GAAiB,GACpC,OAAO,IAAI,SAAS,EAAW,MAAM,CAAE,EAAW,UAAU,CAAE,EAAW,UAAU,CACrF,EjBuE+B,IAAI,CAAC,KAAK,EACrC,IAAI,CAAC,GAAG,CAAG,CACb,EAEQ,EAAA,SAAA,CAAA,YAAY,CAApB,SAAqB,CAAwC,EAC3D,GAAI,AAzDmB,KAyDnB,IAAI,CAAC,QAAQ,EAA4B,IAAI,CAAC,YAAY,CAAC,GAExD,CACL,IAAM,EAAgB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAC5C,EAAU,AAAA,GAAiB,GAG3B,EAAY,IAAI,WAAW,EAAc,MAAM,CAAG,EAAQ,MAAM,EACtE,EAAU,GAAG,CAAC,GACd,EAAU,GAAG,CAAC,EAAS,EAAc,MAAM,EAC3C,IAAI,CAAC,SAAS,CAAC,EAChB,MAVC,IAAI,CAAC,SAAS,CAAC,EAWnB,EAEQ,EAAA,SAAA,CAAA,YAAY,CAApB,SAAqB,CAAY,EAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAG,IAAI,CAAC,GAAG,EAAI,CAC5C,EAEQ,EAAA,SAAA,CAAA,oBAAoB,CAA5B,SAA6B,CAAiB,EACtC,IAAE,EAAI,AAAU,IAAI,CAAd,IAAA,CAAE,EAAG,AAAK,IAAI,CAAT,GAAS,CAC1B,OAAO,AAAI,WAAW,SAAA,MAAA,CAAS,EAAK,UAAU,CAAG,EAAG,QAAA,MAAA,CAAO,EAAK,UAAU,CAAA,6BAAA,MAAA,CAA4B,EAAS,KACjH,EAMO,EAAA,SAAA,CAAA,MAAM,CAAb,SAAc,CAAwC,EACpD,IAAI,CAAC,iBAAiB,GACtB,IAAI,CAAC,SAAS,CAAC,GAEf,IAAM,EAAS,IAAI,CAAC,YAAY,GAChC,GAAI,IAAI,CAAC,YAAY,CAAC,GACpB,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,EAE1C,OAAO,CACT,EAEQ,EAAA,SAAA,CAAA,WAAW,CAAnB,SAAoB,CAAwC,E,O,G,I,C,S,C,E,O,E,K,E,K,EAC1D,IAAI,CAAC,iBAAiB,GACtB,IAAI,CAAC,SAAS,CAAC,G,E,K,C,C,M,EAER,GAAA,CAAA,IAAI,CAAC,YAAY,CAAC,GAAlB,MAAA,CAAA,EAAA,EAAA,CACL,MAAA,CAAA,EAAM,IAAI,CAAC,YAAY,GAAE,A,M,E,OAAzB,EAAA,IAAA,G,C,E,E,A,M,E,M,C,E,A,C,EAEH,EAEY,EAAA,SAAA,CAAA,WAAW,CAAxB,SAAyB,CAAuD,M,E,E,E,E,E,E,E,E,O,E,I,C,E,K,E,E,K,E,E,W,I,E,E,E,E,E,E,E,O,G,I,C,S,C,E,O,E,K,E,K,EAC1E,EAAU,CAAA,E,E,K,C,C,M,E,E,I,C,I,C,C,E,E,E,G,EAEa,EAAA,GAAA,G,E,K,C,C,M,E,M,C,E,E,I,G,A,M,E,G,C,E,E,I,E,E,I,C,M,C,E,E,CACzB,GADe,EAAM,EAAA,KAAA,CACjB,EACF,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,EAG/C,IAAI,CAAC,YAAY,CAAC,GAElB,GAAI,CACF,EAAS,IAAI,CAAC,YAAY,GAC1B,EAAU,CAAA,CACX,CAAC,MAAO,EAAG,CACV,GAAI,CAAE,CAAA,aAAa,EAAA,EACjB,MAAM,CAGT,CACD,IAAI,CAAC,QAAQ,EAAI,IAAI,CAAC,GAAG,C,E,K,C,C,M,E,M,C,E,E,A,M,E,M,C,E,G,A,M,E,O,E,C,M,E,I,E,E,C,E,G,A,M,E,G,E,I,C,I,C,C,G,G,G,E,C,C,G,C,E,I,E,C,E,E,M,A,C,E,M,C,E,E,C,M,C,E,E,I,C,G,A,M,E,E,I,G,E,K,C,C,M,E,M,C,E,G,A,M,G,G,E,M,E,K,C,M,C,E,A,M,G,M,C,E,A,M,GAG3B,GAAI,EAAS,CACX,GAAI,IAAI,CAAC,YAAY,CAAC,GACpB,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,EAE/C,MAAA,CAAA,EAAO,EAAM,AACd,CAGD,MADM,EAA8B,IAAI,CAAhC,EAAQ,EAAA,QAAA,CAAE,EAAG,EAAA,GAAA,CAAE,EAAQ,EAAA,QAAA,CACzB,AAAI,WACR,gCAAA,MAAA,CAAgC,AAAA,GAAW,GAAS,QAAA,MAAA,CAAO,EAAQ,MAAA,MAAA,CAAK,EAAG,2B,C,E,E,G,C,G,C,E,O,C,E,S,C,C,C,E,S,E,C,E,G,C,E,E,I,C,G,C,M,E,C,E,E,C,C,S,E,C,E,G,C,E,E,K,C,G,C,M,E,C,E,E,C,C,S,E,C,M,C,C,E,I,C,E,E,K,E,A,C,C,E,E,K,Y,E,E,I,E,S,C,E,E,E,E,E,I,C,E,E,C,E,A,C,E,E,K,C,E,G,E,C,E,I,G,EAE9E,EAEM,EAAA,SAAA,CAAA,iBAAiB,CAAxB,SACE,CAAuD,EAEvD,OAAO,IAAI,CAAC,gBAAgB,CAAC,EAAQ,CAAA,EACvC,EAEO,EAAA,SAAA,CAAA,YAAY,CAAnB,SAAoB,CAAuD,EACzE,OAAO,IAAI,CAAC,gBAAgB,CAAC,EAAQ,CAAA,EACvC,EAEe,EAAA,SAAA,CAAA,gBAAgB,CAA/B,SAAgC,CAAuD,CAAE,CAAgB,E,O,G,I,C,U,e,E,E,E,E,E,E,E,E,O,G,I,C,S,C,E,O,E,K,E,K,EACnG,EAAwB,EACxB,EAAiB,G,E,K,C,C,M,E,E,I,C,I,C,C,E,G,G,G,EAEM,EAAA,GAAA,G,E,K,C,C,M,E,M,C,E,G,E,I,I,A,M,E,G,C,E,E,I,E,E,I,C,M,C,E,G,CACzB,GADe,EAAM,EAAA,KAAA,CACjB,GAAW,AAAmB,IAAnB,EACb,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,EAG/C,IAAI,CAAC,YAAY,CAAC,GAEd,IACF,EAAiB,IAAI,CAAC,aAAa,GACnC,EAAwB,CAAA,EACxB,IAAI,CAAC,QAAQ,I,E,K,C,C,M,E,E,I,C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","sources":["<anon>","src/index.js","src/peer/peerConnection.js","node_modules/peerjs/dist/bundler.mjs","node_modules/peerjs/dist/lib/exports.ts","node_modules/peerjs/dist/lib/util.ts","node_modules/peerjs/dist/lib/dataconnection/BufferedConnection/binaryPackChunker.ts","node_modules/peerjs/dist/lib/supports.ts","node_modules/peerjs/dist/lib/utils/validateId.ts","node_modules/peerjs/dist/lib/utils/randomToken.ts","node_modules/peerjs/dist/lib/peer.ts","node_modules/peerjs/dist/lib/logger.ts","node_modules/peerjs/dist/lib/socket.ts","node_modules/peerjs/dist/node_modules/eventemitter3/index.js","node_modules/peerjs/dist/lib/enums.ts","node_modules/peerjs/dist/package.json","node_modules/peerjs/dist/lib/mediaconnection.ts","node_modules/peerjs/dist/lib/negotiator.ts","node_modules/peerjs/dist/lib/baseconnection.ts","node_modules/peerjs/dist/lib/peerError.ts","node_modules/peerjs/dist/lib/api.ts","node_modules/peerjs/dist/lib/dataconnection/BufferedConnection/BinaryPack.ts","node_modules/peerjs/dist/lib/dataconnection/BufferedConnection/BufferedConnection.ts","node_modules/peerjs/dist/lib/dataconnection/DataConnection.ts","node_modules/peerjs/dist/lib/dataconnection/BufferedConnection/Raw.ts","node_modules/peerjs/dist/lib/dataconnection/BufferedConnection/Json.ts","node_modules/peerjs/dist/lib/cborPeer.ts","node_modules/peerjs/dist/lib/dataconnection/StreamConnection/Cbor.ts","node_modules/peerjs/dist/lib/dataconnection/StreamConnection/StreamConnection.ts","node_modules/peerjs/dist/lib/msgPackPeer.ts","node_modules/peerjs/dist/lib/dataconnection/StreamConnection/MsgPack.ts","node_modules/peerjs-js-binarypack/dist/binarypack.mjs","node_modules/peerjs-js-binarypack/lib/binarypack.ts","node_modules/peerjs-js-binarypack/lib/bufferbuilder.ts","node_modules/webrtc-adapter/src/js/adapter_core.js","node_modules/webrtc-adapter/src/js/adapter_factory.js","node_modules/webrtc-adapter/src/js/utils.js","node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js","node_modules/webrtc-adapter/src/js/chrome/getusermedia.js","node_modules/webrtc-adapter/src/js/chrome/getdisplaymedia.js","node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js","node_modules/webrtc-adapter/src/js/firefox/getusermedia.js","node_modules/webrtc-adapter/src/js/firefox/getdisplaymedia.js","node_modules/webrtc-adapter/src/js/safari/safari_shim.js","node_modules/webrtc-adapter/src/js/common_shim.js","node_modules/sdp/sdp.js","node_modules/cbor-x/index.js","node_modules/cbor-x/encode.js","node_modules/cbor-x/decode.js","node_modules/@parcel/node-resolver-core/lib/_empty.js","node_modules/cbor-x/iterators.js","node_modules/@msgpack/msgpack/dist.es5+esm/decodeAsync.mjs","node_modules/@msgpack/msgpack/src/decodeAsync.ts","node_modules/@msgpack/msgpack/dist.es5+esm/Decoder.mjs","node_modules/@msgpack/msgpack/src/Decoder.ts","node_modules/@msgpack/msgpack/dist.es5+esm/utils/prettyByte.mjs","node_modules/@msgpack/msgpack/src/utils/prettyByte.ts","node_modules/@msgpack/msgpack/dist.es5+esm/ExtensionCodec.mjs","node_modules/@msgpack/msgpack/src/ExtensionCodec.ts","node_modules/@msgpack/msgpack/dist.es5+esm/ExtData.mjs","node_modules/@msgpack/msgpack/src/ExtData.ts","node_modules/@msgpack/msgpack/dist.es5+esm/timestamp.mjs","node_modules/@msgpack/msgpack/src/timestamp.ts","node_modules/@msgpack/msgpack/dist.es5+esm/DecodeError.mjs","node_modules/@msgpack/msgpack/src/DecodeError.ts","node_modules/@msgpack/msgpack/dist.es5+esm/utils/int.mjs","node_modules/@msgpack/msgpack/src/utils/int.ts","node_modules/@msgpack/msgpack/dist.es5+esm/utils/utf8.mjs","node_modules/@msgpack/msgpack/src/utils/utf8.ts","node_modules/process/browser.js","node_modules/@msgpack/msgpack/dist.es5+esm/utils/typedArrays.mjs","node_modules/@msgpack/msgpack/src/utils/typedArrays.ts","node_modules/@msgpack/msgpack/dist.es5+esm/CachedKeyDecoder.mjs","node_modules/@msgpack/msgpack/src/CachedKeyDecoder.ts","node_modules/@msgpack/msgpack/dist.es5+esm/utils/stream.mjs","node_modules/@msgpack/msgpack/src/utils/stream.ts","node_modules/@msgpack/msgpack/dist.es5+esm/decode.mjs","node_modules/@msgpack/msgpack/src/decode.ts","node_modules/@msgpack/msgpack/dist.es5+esm/Encoder.mjs","node_modules/@msgpack/msgpack/src/Encoder.ts","src/peer/peerConfig.js","src/peer/errors.js","src/peer/ngrokState.js","src/utils/debug.js","src/kinectron.js","src/streams/streamHandlers.js","src/utils/imageProcessing.js"],"sourcesContent":["(() => {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/**\r\n * @fileoverview Main entry point for the Kinectron client library\r\n * @version 1.0.0\r\n */ class $00e82ca0068ee86a$var$$e8379818650e2442$export$93654d4f2d6cd524 {\n    constructor(){\n        this.encoder = new TextEncoder();\n        this._pieces = [];\n        this._parts = [];\n    }\n    append_buffer(data) {\n        this.flush();\n        this._parts.push(data);\n    }\n    append(data) {\n        this._pieces.push(data);\n    }\n    flush() {\n        if (this._pieces.length > 0) {\n            const buf = new Uint8Array(this._pieces);\n            this._parts.push(buf);\n            this._pieces = [];\n        }\n    }\n    toArrayBuffer() {\n        const buffer = [];\n        for (const part of this._parts)buffer.push(part);\n        return $00e82ca0068ee86a$var$$e8379818650e2442$var$concatArrayBuffers(buffer).buffer;\n    }\n}\nfunction $00e82ca0068ee86a$var$$e8379818650e2442$var$concatArrayBuffers(bufs) {\n    let size = 0;\n    for (const buf of bufs)size += buf.byteLength;\n    const result = new Uint8Array(size);\n    let offset = 0;\n    for (const buf of bufs){\n        const view = new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n        result.set(view, offset);\n        offset += buf.byteLength;\n    }\n    return result;\n}\nfunction $00e82ca0068ee86a$export$417857010dc9287f(data) {\n    const unpacker = new $00e82ca0068ee86a$var$$0cfd7828ad59115f$var$Unpacker(data);\n    return unpacker.unpack();\n}\nfunction $00e82ca0068ee86a$export$2a703dbb0cb35339(data) {\n    const packer = new $00e82ca0068ee86a$export$b9ec4b114aa40074();\n    const res = packer.pack(data);\n    if (res instanceof Promise) return res.then(()=>packer.getBuffer());\n    return packer.getBuffer();\n}\nclass $00e82ca0068ee86a$var$$0cfd7828ad59115f$var$Unpacker {\n    constructor(data){\n        this.index = 0;\n        this.dataBuffer = data;\n        this.dataView = new Uint8Array(this.dataBuffer);\n        this.length = this.dataBuffer.byteLength;\n    }\n    unpack() {\n        const type = this.unpack_uint8();\n        if (type < 0x80) return type;\n        else if ((type ^ 0xe0) < 0x20) return (type ^ 0xe0) - 0x20;\n        let size;\n        if ((size = type ^ 0xa0) <= 0x0f) return this.unpack_raw(size);\n        else if ((size = type ^ 0xb0) <= 0x0f) return this.unpack_string(size);\n        else if ((size = type ^ 0x90) <= 0x0f) return this.unpack_array(size);\n        else if ((size = type ^ 0x80) <= 0x0f) return this.unpack_map(size);\n        switch(type){\n            case 0xc0:\n                return null;\n            case 0xc1:\n                return undefined;\n            case 0xc2:\n                return false;\n            case 0xc3:\n                return true;\n            case 0xca:\n                return this.unpack_float();\n            case 0xcb:\n                return this.unpack_double();\n            case 0xcc:\n                return this.unpack_uint8();\n            case 0xcd:\n                return this.unpack_uint16();\n            case 0xce:\n                return this.unpack_uint32();\n            case 0xcf:\n                return this.unpack_uint64();\n            case 0xd0:\n                return this.unpack_int8();\n            case 0xd1:\n                return this.unpack_int16();\n            case 0xd2:\n                return this.unpack_int32();\n            case 0xd3:\n                return this.unpack_int64();\n            case 0xd4:\n                return undefined;\n            case 0xd5:\n                return undefined;\n            case 0xd6:\n                return undefined;\n            case 0xd7:\n                return undefined;\n            case 0xd8:\n                size = this.unpack_uint16();\n                return this.unpack_string(size);\n            case 0xd9:\n                size = this.unpack_uint32();\n                return this.unpack_string(size);\n            case 0xda:\n                size = this.unpack_uint16();\n                return this.unpack_raw(size);\n            case 0xdb:\n                size = this.unpack_uint32();\n                return this.unpack_raw(size);\n            case 0xdc:\n                size = this.unpack_uint16();\n                return this.unpack_array(size);\n            case 0xdd:\n                size = this.unpack_uint32();\n                return this.unpack_array(size);\n            case 0xde:\n                size = this.unpack_uint16();\n                return this.unpack_map(size);\n            case 0xdf:\n                size = this.unpack_uint32();\n                return this.unpack_map(size);\n        }\n    }\n    unpack_uint8() {\n        const byte = this.dataView[this.index] & 0xff;\n        this.index++;\n        return byte;\n    }\n    unpack_uint16() {\n        const bytes = this.read(2);\n        const uint16 = (bytes[0] & 0xff) * 256 + (bytes[1] & 0xff);\n        this.index += 2;\n        return uint16;\n    }\n    unpack_uint32() {\n        const bytes = this.read(4);\n        const uint32 = ((bytes[0] * 256 + bytes[1]) * 256 + bytes[2]) * 256 + bytes[3];\n        this.index += 4;\n        return uint32;\n    }\n    unpack_uint64() {\n        const bytes = this.read(8);\n        const uint64 = ((((((bytes[0] * 256 + bytes[1]) * 256 + bytes[2]) * 256 + bytes[3]) * 256 + bytes[4]) * 256 + bytes[5]) * 256 + bytes[6]) * 256 + bytes[7];\n        this.index += 8;\n        return uint64;\n    }\n    unpack_int8() {\n        const uint8 = this.unpack_uint8();\n        return uint8 < 0x80 ? uint8 : uint8 - 256;\n    }\n    unpack_int16() {\n        const uint16 = this.unpack_uint16();\n        return uint16 < 0x8000 ? uint16 : uint16 - 65536;\n    }\n    unpack_int32() {\n        const uint32 = this.unpack_uint32();\n        return uint32 < 2 ** 31 ? uint32 : uint32 - 2 ** 32;\n    }\n    unpack_int64() {\n        const uint64 = this.unpack_uint64();\n        return uint64 < 2 ** 63 ? uint64 : uint64 - 2 ** 64;\n    }\n    unpack_raw(size) {\n        if (this.length < this.index + size) throw new Error(`BinaryPackFailure: index is out of range ${this.index} ${size} ${this.length}`);\n        const buf = this.dataBuffer.slice(this.index, this.index + size);\n        this.index += size;\n        return buf;\n    }\n    unpack_string(size) {\n        const bytes = this.read(size);\n        let i = 0;\n        let str = \"\";\n        let c;\n        let code;\n        while(i < size){\n            c = bytes[i];\n            // The length of a UTF-8 sequence is specified in the first byte:\n            // 0xxxxxxx means length 1,\n            // 110xxxxx means length 2,\n            // 1110xxxx means length 3,\n            // 11110xxx means length 4.\n            // 10xxxxxx is for non-initial bytes.\n            if (c < 0xa0) {\n                // One-byte sequence: bits 0xxxxxxx\n                code = c;\n                i++;\n            } else if ((c ^ 0xc0) < 0x20) {\n                // Two-byte sequence: bits 110xxxxx 10xxxxxx\n                code = (c & 0x1f) << 6 | bytes[i + 1] & 0x3f;\n                i += 2;\n            } else if ((c ^ 0xe0) < 0x10) {\n                // Three-byte sequence: bits 1110xxxx 10xxxxxx 10xxxxxx\n                code = (c & 0x0f) << 12 | (bytes[i + 1] & 0x3f) << 6 | bytes[i + 2] & 0x3f;\n                i += 3;\n            } else {\n                // Four-byte sequence: bits 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n                code = (c & 0x07) << 18 | (bytes[i + 1] & 0x3f) << 12 | (bytes[i + 2] & 0x3f) << 6 | bytes[i + 3] & 0x3f;\n                i += 4;\n            }\n            str += String.fromCodePoint(code);\n        }\n        this.index += size;\n        return str;\n    }\n    unpack_array(size) {\n        const objects = new Array(size);\n        for(let i = 0; i < size; i++)objects[i] = this.unpack();\n        return objects;\n    }\n    unpack_map(size) {\n        const map = {};\n        for(let i = 0; i < size; i++){\n            const key = this.unpack();\n            map[key] = this.unpack();\n        }\n        return map;\n    }\n    unpack_float() {\n        const uint32 = this.unpack_uint32();\n        const sign = uint32 >> 31;\n        const exp = (uint32 >> 23 & 0xff) - 127;\n        const fraction = uint32 & 0x7fffff | 0x800000;\n        return (sign === 0 ? 1 : -1) * fraction * 2 ** (exp - 23);\n    }\n    unpack_double() {\n        const h32 = this.unpack_uint32();\n        const l32 = this.unpack_uint32();\n        const sign = h32 >> 31;\n        const exp = (h32 >> 20 & 0x7ff) - 1023;\n        const hfrac = h32 & 0xfffff | 0x100000;\n        const frac = hfrac * 2 ** (exp - 20) + l32 * 2 ** (exp - 52);\n        return (sign === 0 ? 1 : -1) * frac;\n    }\n    read(length) {\n        const j = this.index;\n        if (j + length <= this.length) return this.dataView.subarray(j, j + length);\n        else throw new Error(\"BinaryPackFailure: read index out of range\");\n    }\n}\nclass $00e82ca0068ee86a$export$b9ec4b114aa40074 {\n    getBuffer() {\n        return this._bufferBuilder.toArrayBuffer();\n    }\n    pack(value) {\n        if (typeof value === \"string\") this.pack_string(value);\n        else if (typeof value === \"number\") {\n            if (Math.floor(value) === value) this.pack_integer(value);\n            else this.pack_double(value);\n        } else if (typeof value === \"boolean\") {\n            if (value === true) this._bufferBuilder.append(0xc3);\n            else if (value === false) this._bufferBuilder.append(0xc2);\n        } else if (value === undefined) this._bufferBuilder.append(0xc0);\n        else if (typeof value === \"object\") {\n            if (value === null) this._bufferBuilder.append(0xc0);\n            else {\n                const constructor = value.constructor;\n                if (value instanceof Array) {\n                    const res = this.pack_array(value);\n                    if (res instanceof Promise) return res.then(()=>this._bufferBuilder.flush());\n                } else if (value instanceof ArrayBuffer) this.pack_bin(new Uint8Array(value));\n                else if (\"BYTES_PER_ELEMENT\" in value) {\n                    const v = value;\n                    this.pack_bin(new Uint8Array(v.buffer, v.byteOffset, v.byteLength));\n                } else if (value instanceof Date) this.pack_string(value.toString());\n                else if (value instanceof Blob) return value.arrayBuffer().then((buffer)=>{\n                    this.pack_bin(new Uint8Array(buffer));\n                    this._bufferBuilder.flush();\n                });\n                else if (constructor == Object || constructor.toString().startsWith(\"class\")) {\n                    const res = this.pack_object(value);\n                    if (res instanceof Promise) return res.then(()=>this._bufferBuilder.flush());\n                } else throw new Error(`Type \"${constructor.toString()}\" not yet supported`);\n            }\n        } else throw new Error(`Type \"${typeof value}\" not yet supported`);\n        this._bufferBuilder.flush();\n    }\n    pack_bin(blob) {\n        const length = blob.length;\n        if (length <= 0x0f) this.pack_uint8(0xa0 + length);\n        else if (length <= 0xffff) {\n            this._bufferBuilder.append(0xda);\n            this.pack_uint16(length);\n        } else if (length <= 0xffffffff) {\n            this._bufferBuilder.append(0xdb);\n            this.pack_uint32(length);\n        } else throw new Error(\"Invalid length\");\n        this._bufferBuilder.append_buffer(blob);\n    }\n    pack_string(str) {\n        const encoded = this._textEncoder.encode(str);\n        const length = encoded.length;\n        if (length <= 0x0f) this.pack_uint8(0xb0 + length);\n        else if (length <= 0xffff) {\n            this._bufferBuilder.append(0xd8);\n            this.pack_uint16(length);\n        } else if (length <= 0xffffffff) {\n            this._bufferBuilder.append(0xd9);\n            this.pack_uint32(length);\n        } else throw new Error(\"Invalid length\");\n        this._bufferBuilder.append_buffer(encoded);\n    }\n    pack_array(ary) {\n        const length = ary.length;\n        if (length <= 0x0f) this.pack_uint8(0x90 + length);\n        else if (length <= 0xffff) {\n            this._bufferBuilder.append(0xdc);\n            this.pack_uint16(length);\n        } else if (length <= 0xffffffff) {\n            this._bufferBuilder.append(0xdd);\n            this.pack_uint32(length);\n        } else throw new Error(\"Invalid length\");\n        const packNext = (index)=>{\n            if (index < length) {\n                const res = this.pack(ary[index]);\n                if (res instanceof Promise) return res.then(()=>packNext(index + 1));\n                return packNext(index + 1);\n            }\n        };\n        return packNext(0);\n    }\n    pack_integer(num) {\n        if (num >= -32 && num <= 0x7f) this._bufferBuilder.append(num & 0xff);\n        else if (num >= 0x00 && num <= 0xff) {\n            this._bufferBuilder.append(0xcc);\n            this.pack_uint8(num);\n        } else if (num >= -128 && num <= 0x7f) {\n            this._bufferBuilder.append(0xd0);\n            this.pack_int8(num);\n        } else if (num >= 0x0000 && num <= 0xffff) {\n            this._bufferBuilder.append(0xcd);\n            this.pack_uint16(num);\n        } else if (num >= -32768 && num <= 0x7fff) {\n            this._bufferBuilder.append(0xd1);\n            this.pack_int16(num);\n        } else if (num >= 0x00000000 && num <= 0xffffffff) {\n            this._bufferBuilder.append(0xce);\n            this.pack_uint32(num);\n        } else if (num >= -2147483648 && num <= 0x7fffffff) {\n            this._bufferBuilder.append(0xd2);\n            this.pack_int32(num);\n        } else if (num >= -9223372036854776000 && num <= 0x7fffffffffffffff) {\n            this._bufferBuilder.append(0xd3);\n            this.pack_int64(num);\n        } else if (num >= 0x0000000000000000 && num <= 0xffffffffffffffff) {\n            this._bufferBuilder.append(0xcf);\n            this.pack_uint64(num);\n        } else throw new Error(\"Invalid integer\");\n    }\n    pack_double(num) {\n        let sign = 0;\n        if (num < 0) {\n            sign = 1;\n            num = -num;\n        }\n        const exp = Math.floor(Math.log(num) / Math.LN2);\n        const frac0 = num / 2 ** exp - 1;\n        const frac1 = Math.floor(frac0 * 2 ** 52);\n        const b32 = 2 ** 32;\n        const h32 = sign << 31 | exp + 1023 << 20 | frac1 / b32 & 0x0fffff;\n        const l32 = frac1 % b32;\n        this._bufferBuilder.append(0xcb);\n        this.pack_int32(h32);\n        this.pack_int32(l32);\n    }\n    pack_object(obj) {\n        const keys = Object.keys(obj);\n        const length = keys.length;\n        if (length <= 0x0f) this.pack_uint8(0x80 + length);\n        else if (length <= 0xffff) {\n            this._bufferBuilder.append(0xde);\n            this.pack_uint16(length);\n        } else if (length <= 0xffffffff) {\n            this._bufferBuilder.append(0xdf);\n            this.pack_uint32(length);\n        } else throw new Error(\"Invalid length\");\n        const packNext = (index)=>{\n            if (index < keys.length) {\n                const prop = keys[index];\n                // eslint-disable-next-line no-prototype-builtins\n                if (obj.hasOwnProperty(prop)) {\n                    this.pack(prop);\n                    const res = this.pack(obj[prop]);\n                    if (res instanceof Promise) return res.then(()=>packNext(index + 1));\n                }\n                return packNext(index + 1);\n            }\n        };\n        return packNext(0);\n    }\n    pack_uint8(num) {\n        this._bufferBuilder.append(num);\n    }\n    pack_uint16(num) {\n        this._bufferBuilder.append(num >> 8);\n        this._bufferBuilder.append(num & 0xff);\n    }\n    pack_uint32(num) {\n        const n = num & 0xffffffff;\n        this._bufferBuilder.append((n & 0xff000000) >>> 24);\n        this._bufferBuilder.append((n & 0x00ff0000) >>> 16);\n        this._bufferBuilder.append((n & 0x0000ff00) >>> 8);\n        this._bufferBuilder.append(n & 0x000000ff);\n    }\n    pack_uint64(num) {\n        const high = num / 2 ** 32;\n        const low = num % 2 ** 32;\n        this._bufferBuilder.append((high & 0xff000000) >>> 24);\n        this._bufferBuilder.append((high & 0x00ff0000) >>> 16);\n        this._bufferBuilder.append((high & 0x0000ff00) >>> 8);\n        this._bufferBuilder.append(high & 0x000000ff);\n        this._bufferBuilder.append((low & 0xff000000) >>> 24);\n        this._bufferBuilder.append((low & 0x00ff0000) >>> 16);\n        this._bufferBuilder.append((low & 0x0000ff00) >>> 8);\n        this._bufferBuilder.append(low & 0x000000ff);\n    }\n    pack_int8(num) {\n        this._bufferBuilder.append(num & 0xff);\n    }\n    pack_int16(num) {\n        this._bufferBuilder.append((num & 0xff00) >> 8);\n        this._bufferBuilder.append(num & 0xff);\n    }\n    pack_int32(num) {\n        this._bufferBuilder.append(num >>> 24 & 0xff);\n        this._bufferBuilder.append((num & 0x00ff0000) >>> 16);\n        this._bufferBuilder.append((num & 0x0000ff00) >>> 8);\n        this._bufferBuilder.append(num & 0x000000ff);\n    }\n    pack_int64(num) {\n        const high = Math.floor(num / 2 ** 32);\n        const low = num % 2 ** 32;\n        this._bufferBuilder.append((high & 0xff000000) >>> 24);\n        this._bufferBuilder.append((high & 0x00ff0000) >>> 16);\n        this._bufferBuilder.append((high & 0x0000ff00) >>> 8);\n        this._bufferBuilder.append(high & 0x000000ff);\n        this._bufferBuilder.append((low & 0xff000000) >>> 24);\n        this._bufferBuilder.append((low & 0x00ff0000) >>> 16);\n        this._bufferBuilder.append((low & 0x0000ff00) >>> 8);\n        this._bufferBuilder.append(low & 0x000000ff);\n    }\n    constructor(){\n        this._bufferBuilder = new $00e82ca0068ee86a$var$$e8379818650e2442$export$93654d4f2d6cd524();\n        this._textEncoder = new TextEncoder();\n    }\n}\n\n\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */ /* eslint-env node */ /*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */ /*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */ /* eslint-env node */ 'use strict';\nlet $1974f6191091ae7b$var$logDisabled_ = true;\nlet $1974f6191091ae7b$var$deprecationWarnings_ = true;\nfunction $1974f6191091ae7b$export$e3c02be309be1f23(uastring, expr, pos) {\n    const match = uastring.match(expr);\n    return match && match.length >= pos && parseInt(match[pos], 10);\n}\nfunction $1974f6191091ae7b$export$1f48841962b828b1(window1, eventNameToWrap, wrapper) {\n    if (!window1.RTCPeerConnection) return;\n    const proto = window1.RTCPeerConnection.prototype;\n    const nativeAddEventListener = proto.addEventListener;\n    proto.addEventListener = function(nativeEventName, cb) {\n        if (nativeEventName !== eventNameToWrap) return nativeAddEventListener.apply(this, arguments);\n        const wrappedCallback = (e)=>{\n            const modifiedEvent = wrapper(e);\n            if (modifiedEvent) {\n                if (cb.handleEvent) cb.handleEvent(modifiedEvent);\n                else cb(modifiedEvent);\n            }\n        };\n        this._eventMap = this._eventMap || {};\n        if (!this._eventMap[eventNameToWrap]) this._eventMap[eventNameToWrap] = new Map();\n        this._eventMap[eventNameToWrap].set(cb, wrappedCallback);\n        return nativeAddEventListener.apply(this, [\n            nativeEventName,\n            wrappedCallback\n        ]);\n    };\n    const nativeRemoveEventListener = proto.removeEventListener;\n    proto.removeEventListener = function(nativeEventName, cb) {\n        if (nativeEventName !== eventNameToWrap || !this._eventMap || !this._eventMap[eventNameToWrap]) return nativeRemoveEventListener.apply(this, arguments);\n        if (!this._eventMap[eventNameToWrap].has(cb)) return nativeRemoveEventListener.apply(this, arguments);\n        const unwrappedCb = this._eventMap[eventNameToWrap].get(cb);\n        this._eventMap[eventNameToWrap].delete(cb);\n        if (this._eventMap[eventNameToWrap].size === 0) delete this._eventMap[eventNameToWrap];\n        if (Object.keys(this._eventMap).length === 0) delete this._eventMap;\n        return nativeRemoveEventListener.apply(this, [\n            nativeEventName,\n            unwrappedCb\n        ]);\n    };\n    Object.defineProperty(proto, 'on' + eventNameToWrap, {\n        get () {\n            return this['_on' + eventNameToWrap];\n        },\n        set (cb) {\n            if (this['_on' + eventNameToWrap]) {\n                this.removeEventListener(eventNameToWrap, this['_on' + eventNameToWrap]);\n                delete this['_on' + eventNameToWrap];\n            }\n            if (cb) this.addEventListener(eventNameToWrap, this['_on' + eventNameToWrap] = cb);\n        },\n        enumerable: true,\n        configurable: true\n    });\n}\nfunction $1974f6191091ae7b$export$afbfee8cc06fd3e4(bool) {\n    if (typeof bool !== 'boolean') return new Error('Argument type: ' + typeof bool + '. Please use a boolean.');\n    $1974f6191091ae7b$var$logDisabled_ = bool;\n    return bool ? 'adapter.js logging disabled' : 'adapter.js logging enabled';\n}\nfunction $1974f6191091ae7b$export$51516be4b019e41e(bool) {\n    if (typeof bool !== 'boolean') return new Error('Argument type: ' + typeof bool + '. Please use a boolean.');\n    $1974f6191091ae7b$var$deprecationWarnings_ = !bool;\n    return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\nfunction $1974f6191091ae7b$export$bef1f36f5486a6a3() {\n    if (typeof window === 'object') {\n        if ($1974f6191091ae7b$var$logDisabled_) return;\n        if (typeof console !== 'undefined' && typeof console.log === 'function') console.log.apply(console, arguments);\n    }\n}\nfunction $1974f6191091ae7b$export$cdd73fc4100a6ef4(oldMethod, newMethod) {\n    if (!$1974f6191091ae7b$var$deprecationWarnings_) return;\n    console.warn(oldMethod + ' is deprecated, please use ' + newMethod + ' instead.');\n}\nfunction $1974f6191091ae7b$export$2d31490a0c05f094(window1) {\n    // Returned result object.\n    const result = {\n        browser: null,\n        version: null\n    };\n    // Fail early if it's not a browser\n    if (typeof window1 === 'undefined' || !window1.navigator || !window1.navigator.userAgent) {\n        result.browser = 'Not a browser.';\n        return result;\n    }\n    const { navigator: navigator } = window1;\n    if (navigator.mozGetUserMedia) {\n        result.browser = 'firefox';\n        result.version = $1974f6191091ae7b$export$e3c02be309be1f23(navigator.userAgent, /Firefox\\/(\\d+)\\./, 1);\n    } else if (navigator.webkitGetUserMedia || window1.isSecureContext === false && window1.webkitRTCPeerConnection) {\n        // Chrome, Chromium, Webview, Opera.\n        // Version matches Chrome/WebRTC version.\n        // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n        // more complicated fallback to webkitRTCPeerConnection.\n        result.browser = 'chrome';\n        result.version = $1974f6191091ae7b$export$e3c02be309be1f23(navigator.userAgent, /Chrom(e|ium)\\/(\\d+)\\./, 2);\n    } else if (window1.RTCPeerConnection && navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) {\n        result.browser = 'safari';\n        result.version = $1974f6191091ae7b$export$e3c02be309be1f23(navigator.userAgent, /AppleWebKit\\/(\\d+)\\./, 1);\n        result.supportsUnifiedPlan = window1.RTCRtpTransceiver && 'currentDirection' in window1.RTCRtpTransceiver.prototype;\n    } else {\n        result.browser = 'Not a supported browser.';\n        return result;\n    }\n    return result;\n}\n/**\n * Checks if something is an object.\n *\n * @param {*} val The something you want to check.\n * @return true if val is an object, false otherwise.\n */ function $1974f6191091ae7b$var$isObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n}\nfunction $1974f6191091ae7b$export$15384eac40dc88c8(data) {\n    if (!$1974f6191091ae7b$var$isObject(data)) return data;\n    return Object.keys(data).reduce(function(accumulator, key) {\n        const isObj = $1974f6191091ae7b$var$isObject(data[key]);\n        const value = isObj ? $1974f6191091ae7b$export$15384eac40dc88c8(data[key]) : data[key];\n        const isEmptyObject = isObj && !Object.keys(value).length;\n        if (value === undefined || isEmptyObject) return accumulator;\n        return Object.assign(accumulator, {\n            [key]: value\n        });\n    }, {});\n}\nfunction $1974f6191091ae7b$export$571b373e75babb58(stats, base, resultSet) {\n    if (!base || resultSet.has(base.id)) return;\n    resultSet.set(base.id, base);\n    Object.keys(base).forEach((name)=>{\n        if (name.endsWith('Id')) $1974f6191091ae7b$export$571b373e75babb58(stats, stats.get(base[name]), resultSet);\n        else if (name.endsWith('Ids')) base[name].forEach((id)=>{\n            $1974f6191091ae7b$export$571b373e75babb58(stats, stats.get(id), resultSet);\n        });\n    });\n}\nfunction $1974f6191091ae7b$export$93439ffc3f787d51(result, track, outbound) {\n    const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n    const filteredResult = new Map();\n    if (track === null) return filteredResult;\n    const trackStats = [];\n    result.forEach((value)=>{\n        if (value.type === 'track' && value.trackIdentifier === track.id) trackStats.push(value);\n    });\n    trackStats.forEach((trackStat)=>{\n        result.forEach((stats)=>{\n            if (stats.type === streamStatsType && stats.trackId === trackStat.id) $1974f6191091ae7b$export$571b373e75babb58(result, stats, filteredResult);\n        });\n    });\n    return filteredResult;\n}\n\n\nvar $c5cc2dfcf2e6688a$exports = {};\n\n$parcel$export($c5cc2dfcf2e6688a$exports, \"shimMediaStream\", () => $c5cc2dfcf2e6688a$export$33ee24e7a300bcd1);\n$parcel$export($c5cc2dfcf2e6688a$exports, \"shimOnTrack\", () => $c5cc2dfcf2e6688a$export$f358708f68ab068);\n$parcel$export($c5cc2dfcf2e6688a$exports, \"shimGetSendersWithDtmf\", () => $c5cc2dfcf2e6688a$export$a41a030a2842f5d6);\n$parcel$export($c5cc2dfcf2e6688a$exports, \"shimGetStats\", () => $c5cc2dfcf2e6688a$export$90608323826f0b17);\n$parcel$export($c5cc2dfcf2e6688a$exports, \"shimSenderReceiverGetStats\", () => $c5cc2dfcf2e6688a$export$f2f0f2338114eb4b);\n$parcel$export($c5cc2dfcf2e6688a$exports, \"shimAddTrackRemoveTrackWithNative\", () => $c5cc2dfcf2e6688a$export$30e3cdd46f8d5100);\n$parcel$export($c5cc2dfcf2e6688a$exports, \"shimAddTrackRemoveTrack\", () => $c5cc2dfcf2e6688a$export$9588259fcf4ebc91);\n$parcel$export($c5cc2dfcf2e6688a$exports, \"shimPeerConnection\", () => $c5cc2dfcf2e6688a$export$852a08dda9a55ea7);\n$parcel$export($c5cc2dfcf2e6688a$exports, \"fixNegotiationNeeded\", () => $c5cc2dfcf2e6688a$export$341293bbeaae37cb);\n$parcel$export($c5cc2dfcf2e6688a$exports, \"shimGetUserMedia\", () => $06b34d2f08bd2516$export$1ed4910f4d37dc5e);\n$parcel$export($c5cc2dfcf2e6688a$exports, \"shimGetDisplayMedia\", () => $2001d2562bc50f3a$export$97270b87351d9c04);\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */ /* eslint-env node */ \n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */ /* eslint-env node */ \n'use strict';\nconst $06b34d2f08bd2516$var$logging = $1974f6191091ae7b$export$bef1f36f5486a6a3;\nfunction $06b34d2f08bd2516$export$1ed4910f4d37dc5e(window, browserDetails) {\n    const navigator = window && window.navigator;\n    if (!navigator.mediaDevices) return;\n    const constraintsToChrome_ = function(c) {\n        if (typeof c !== 'object' || c.mandatory || c.optional) return c;\n        const cc = {};\n        Object.keys(c).forEach((key)=>{\n            if (key === 'require' || key === 'advanced' || key === 'mediaSource') return;\n            const r = typeof c[key] === 'object' ? c[key] : {\n                ideal: c[key]\n            };\n            if (r.exact !== undefined && typeof r.exact === 'number') r.min = r.max = r.exact;\n            const oldname_ = function(prefix, name) {\n                if (prefix) return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n                return name === 'deviceId' ? 'sourceId' : name;\n            };\n            if (r.ideal !== undefined) {\n                cc.optional = cc.optional || [];\n                let oc = {};\n                if (typeof r.ideal === 'number') {\n                    oc[oldname_('min', key)] = r.ideal;\n                    cc.optional.push(oc);\n                    oc = {};\n                    oc[oldname_('max', key)] = r.ideal;\n                    cc.optional.push(oc);\n                } else {\n                    oc[oldname_('', key)] = r.ideal;\n                    cc.optional.push(oc);\n                }\n            }\n            if (r.exact !== undefined && typeof r.exact !== 'number') {\n                cc.mandatory = cc.mandatory || {};\n                cc.mandatory[oldname_('', key)] = r.exact;\n            } else [\n                'min',\n                'max'\n            ].forEach((mix)=>{\n                if (r[mix] !== undefined) {\n                    cc.mandatory = cc.mandatory || {};\n                    cc.mandatory[oldname_(mix, key)] = r[mix];\n                }\n            });\n        });\n        if (c.advanced) cc.optional = (cc.optional || []).concat(c.advanced);\n        return cc;\n    };\n    const shimConstraints_ = function(constraints, func) {\n        if (browserDetails.version >= 61) return func(constraints);\n        constraints = JSON.parse(JSON.stringify(constraints));\n        if (constraints && typeof constraints.audio === 'object') {\n            const remap = function(obj, a, b) {\n                if (a in obj && !(b in obj)) {\n                    obj[b] = obj[a];\n                    delete obj[a];\n                }\n            };\n            constraints = JSON.parse(JSON.stringify(constraints));\n            remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n            remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n            constraints.audio = constraintsToChrome_(constraints.audio);\n        }\n        if (constraints && typeof constraints.video === 'object') {\n            // Shim facingMode for mobile & surface pro.\n            let face = constraints.video.facingMode;\n            face = face && (typeof face === 'object' ? face : {\n                ideal: face\n            });\n            const getSupportedFacingModeLies = browserDetails.version < 66;\n            if (face && (face.exact === 'user' || face.exact === 'environment' || face.ideal === 'user' || face.ideal === 'environment') && !(navigator.mediaDevices.getSupportedConstraints && navigator.mediaDevices.getSupportedConstraints().facingMode && !getSupportedFacingModeLies)) {\n                delete constraints.video.facingMode;\n                let matches;\n                if (face.exact === 'environment' || face.ideal === 'environment') matches = [\n                    'back',\n                    'rear'\n                ];\n                else if (face.exact === 'user' || face.ideal === 'user') matches = [\n                    'front'\n                ];\n                if (matches) // Look for matches in label, or use last cam for back (typical).\n                return navigator.mediaDevices.enumerateDevices().then((devices)=>{\n                    devices = devices.filter((d)=>d.kind === 'videoinput');\n                    let dev = devices.find((d)=>matches.some((match)=>d.label.toLowerCase().includes(match)));\n                    if (!dev && devices.length && matches.includes('back')) dev = devices[devices.length - 1]; // more likely the back cam\n                    if (dev) constraints.video.deviceId = face.exact ? {\n                        exact: dev.deviceId\n                    } : {\n                        ideal: dev.deviceId\n                    };\n                    constraints.video = constraintsToChrome_(constraints.video);\n                    $06b34d2f08bd2516$var$logging('chrome: ' + JSON.stringify(constraints));\n                    return func(constraints);\n                });\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n        }\n        $06b34d2f08bd2516$var$logging('chrome: ' + JSON.stringify(constraints));\n        return func(constraints);\n    };\n    const shimError_ = function(e) {\n        if (browserDetails.version >= 64) return e;\n        return {\n            name: ({\n                PermissionDeniedError: 'NotAllowedError',\n                PermissionDismissedError: 'NotAllowedError',\n                InvalidStateError: 'NotAllowedError',\n                DevicesNotFoundError: 'NotFoundError',\n                ConstraintNotSatisfiedError: 'OverconstrainedError',\n                TrackStartError: 'NotReadableError',\n                MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n                MediaDeviceKillSwitchOn: 'NotAllowedError',\n                TabCaptureError: 'AbortError',\n                ScreenCaptureError: 'AbortError',\n                DeviceCaptureError: 'AbortError'\n            })[e.name] || e.name,\n            message: e.message,\n            constraint: e.constraint || e.constraintName,\n            toString () {\n                return this.name + (this.message && ': ') + this.message;\n            }\n        };\n    };\n    const getUserMedia_ = function(constraints, onSuccess, onError) {\n        shimConstraints_(constraints, (c)=>{\n            navigator.webkitGetUserMedia(c, onSuccess, (e)=>{\n                if (onError) onError(shimError_(e));\n            });\n        });\n    };\n    navigator.getUserMedia = getUserMedia_.bind(navigator);\n    // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n    // function which returns a Promise, it does not accept spec-style\n    // constraints.\n    if (navigator.mediaDevices.getUserMedia) {\n        const origGetUserMedia = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);\n        navigator.mediaDevices.getUserMedia = function(cs) {\n            return shimConstraints_(cs, (c)=>origGetUserMedia(c).then((stream)=>{\n                    if (c.audio && !stream.getAudioTracks().length || c.video && !stream.getVideoTracks().length) {\n                        stream.getTracks().forEach((track)=>{\n                            track.stop();\n                        });\n                        throw new DOMException('', 'NotFoundError');\n                    }\n                    return stream;\n                }, (e)=>Promise.reject(shimError_(e))));\n        };\n    }\n}\n\n\n/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */ /* eslint-env node */ 'use strict';\nfunction $2001d2562bc50f3a$export$97270b87351d9c04(window, getSourceId) {\n    if (window.navigator.mediaDevices && 'getDisplayMedia' in window.navigator.mediaDevices) return;\n    if (!window.navigator.mediaDevices) return;\n    // getSourceId is a function that returns a promise resolving with\n    // the sourceId of the screen/window/tab to be shared.\n    if (typeof getSourceId !== 'function') {\n        console.error(\"shimGetDisplayMedia: getSourceId argument is not a function\");\n        return;\n    }\n    window.navigator.mediaDevices.getDisplayMedia = function getDisplayMedia(constraints) {\n        return getSourceId(constraints).then((sourceId)=>{\n            const widthSpecified = constraints.video && constraints.video.width;\n            const heightSpecified = constraints.video && constraints.video.height;\n            const frameRateSpecified = constraints.video && constraints.video.frameRate;\n            constraints.video = {\n                mandatory: {\n                    chromeMediaSource: 'desktop',\n                    chromeMediaSourceId: sourceId,\n                    maxFrameRate: frameRateSpecified || 3\n                }\n            };\n            if (widthSpecified) constraints.video.mandatory.maxWidth = widthSpecified;\n            if (heightSpecified) constraints.video.mandatory.maxHeight = heightSpecified;\n            return window.navigator.mediaDevices.getUserMedia(constraints);\n        });\n    };\n}\n\n\n'use strict';\nfunction $c5cc2dfcf2e6688a$export$33ee24e7a300bcd1(window) {\n    window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\nfunction $c5cc2dfcf2e6688a$export$f358708f68ab068(window) {\n    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in window.RTCPeerConnection.prototype)) {\n        Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n            get () {\n                return this._ontrack;\n            },\n            set (f) {\n                if (this._ontrack) this.removeEventListener('track', this._ontrack);\n                this.addEventListener('track', this._ontrack = f);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        const origSetRemoteDescription = window.RTCPeerConnection.prototype.setRemoteDescription;\n        window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription() {\n            if (!this._ontrackpoly) {\n                this._ontrackpoly = (e)=>{\n                    // onaddstream does not fire when a track is added to an existing\n                    // stream. But stream.onaddtrack is implemented so we use that.\n                    e.stream.addEventListener('addtrack', (te)=>{\n                        let receiver;\n                        if (window.RTCPeerConnection.prototype.getReceivers) receiver = this.getReceivers().find((r)=>r.track && r.track.id === te.track.id);\n                        else receiver = {\n                            track: te.track\n                        };\n                        const event = new Event('track');\n                        event.track = te.track;\n                        event.receiver = receiver;\n                        event.transceiver = {\n                            receiver: receiver\n                        };\n                        event.streams = [\n                            e.stream\n                        ];\n                        this.dispatchEvent(event);\n                    });\n                    e.stream.getTracks().forEach((track)=>{\n                        let receiver;\n                        if (window.RTCPeerConnection.prototype.getReceivers) receiver = this.getReceivers().find((r)=>r.track && r.track.id === track.id);\n                        else receiver = {\n                            track: track\n                        };\n                        const event = new Event('track');\n                        event.track = track;\n                        event.receiver = receiver;\n                        event.transceiver = {\n                            receiver: receiver\n                        };\n                        event.streams = [\n                            e.stream\n                        ];\n                        this.dispatchEvent(event);\n                    });\n                };\n                this.addEventListener('addstream', this._ontrackpoly);\n            }\n            return origSetRemoteDescription.apply(this, arguments);\n        };\n    } else // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    $1974f6191091ae7b$export$1f48841962b828b1(window, 'track', (e)=>{\n        if (!e.transceiver) Object.defineProperty(e, 'transceiver', {\n            value: {\n                receiver: e.receiver\n            }\n        });\n        return e;\n    });\n}\nfunction $c5cc2dfcf2e6688a$export$a41a030a2842f5d6(window) {\n    // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n    if (typeof window === 'object' && window.RTCPeerConnection && !('getSenders' in window.RTCPeerConnection.prototype) && 'createDTMFSender' in window.RTCPeerConnection.prototype) {\n        const shimSenderWithDtmf = function(pc, track) {\n            return {\n                track: track,\n                get dtmf () {\n                    if (this._dtmf === undefined) {\n                        if (track.kind === 'audio') this._dtmf = pc.createDTMFSender(track);\n                        else this._dtmf = null;\n                    }\n                    return this._dtmf;\n                },\n                _pc: pc\n            };\n        };\n        // augment addTrack when getSenders is not available.\n        if (!window.RTCPeerConnection.prototype.getSenders) {\n            window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n                this._senders = this._senders || [];\n                return this._senders.slice(); // return a copy of the internal state.\n            };\n            const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n            window.RTCPeerConnection.prototype.addTrack = function addTrack(track, stream) {\n                let sender = origAddTrack.apply(this, arguments);\n                if (!sender) {\n                    sender = shimSenderWithDtmf(this, track);\n                    this._senders.push(sender);\n                }\n                return sender;\n            };\n            const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n            window.RTCPeerConnection.prototype.removeTrack = function removeTrack(sender) {\n                origRemoveTrack.apply(this, arguments);\n                const idx = this._senders.indexOf(sender);\n                if (idx !== -1) this._senders.splice(idx, 1);\n            };\n        }\n        const origAddStream = window.RTCPeerConnection.prototype.addStream;\n        window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n            this._senders = this._senders || [];\n            origAddStream.apply(this, [\n                stream\n            ]);\n            stream.getTracks().forEach((track)=>{\n                this._senders.push(shimSenderWithDtmf(this, track));\n            });\n        };\n        const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n        window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n            this._senders = this._senders || [];\n            origRemoveStream.apply(this, [\n                stream\n            ]);\n            stream.getTracks().forEach((track)=>{\n                const sender = this._senders.find((s)=>s.track === track);\n                if (sender) this._senders.splice(this._senders.indexOf(sender), 1);\n            });\n        };\n    } else if (typeof window === 'object' && window.RTCPeerConnection && 'getSenders' in window.RTCPeerConnection.prototype && 'createDTMFSender' in window.RTCPeerConnection.prototype && window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n        const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n        window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n            const senders = origGetSenders.apply(this, []);\n            senders.forEach((sender)=>sender._pc = this);\n            return senders;\n        };\n        Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n            get () {\n                if (this._dtmf === undefined) {\n                    if (this.track.kind === 'audio') this._dtmf = this._pc.createDTMFSender(this.track);\n                    else this._dtmf = null;\n                }\n                return this._dtmf;\n            }\n        });\n    }\n}\nfunction $c5cc2dfcf2e6688a$export$90608323826f0b17(window) {\n    if (!window.RTCPeerConnection) return;\n    const origGetStats = window.RTCPeerConnection.prototype.getStats;\n    window.RTCPeerConnection.prototype.getStats = function getStats() {\n        const [selector, onSucc, onErr] = arguments;\n        // If selector is a function then we are in the old style stats so just\n        // pass back the original getStats format to avoid breaking old users.\n        if (arguments.length > 0 && typeof selector === 'function') return origGetStats.apply(this, arguments);\n        // When spec-style getStats is supported, return those when called with\n        // either no arguments or the selector argument is null.\n        if (origGetStats.length === 0 && (arguments.length === 0 || typeof selector !== 'function')) return origGetStats.apply(this, []);\n        const fixChromeStats_ = function(response) {\n            const standardReport = {};\n            const reports = response.result();\n            reports.forEach((report)=>{\n                const standardStats = {\n                    id: report.id,\n                    timestamp: report.timestamp,\n                    type: {\n                        localcandidate: 'local-candidate',\n                        remotecandidate: 'remote-candidate'\n                    }[report.type] || report.type\n                };\n                report.names().forEach((name)=>{\n                    standardStats[name] = report.stat(name);\n                });\n                standardReport[standardStats.id] = standardStats;\n            });\n            return standardReport;\n        };\n        // shim getStats with maplike support\n        const makeMapStats = function(stats) {\n            return new Map(Object.keys(stats).map((key)=>[\n                    key,\n                    stats[key]\n                ]));\n        };\n        if (arguments.length >= 2) {\n            const successCallbackWrapper_ = function(response) {\n                onSucc(makeMapStats(fixChromeStats_(response)));\n            };\n            return origGetStats.apply(this, [\n                successCallbackWrapper_,\n                selector\n            ]);\n        }\n        // promise-support\n        return new Promise((resolve, reject)=>{\n            origGetStats.apply(this, [\n                function(response) {\n                    resolve(makeMapStats(fixChromeStats_(response)));\n                },\n                reject\n            ]);\n        }).then(onSucc, onErr);\n    };\n}\nfunction $c5cc2dfcf2e6688a$export$f2f0f2338114eb4b(window) {\n    if (!(typeof window === 'object' && window.RTCPeerConnection && window.RTCRtpSender && window.RTCRtpReceiver)) return;\n    // shim sender stats.\n    if (!('getStats' in window.RTCRtpSender.prototype)) {\n        const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n        if (origGetSenders) window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n            const senders = origGetSenders.apply(this, []);\n            senders.forEach((sender)=>sender._pc = this);\n            return senders;\n        };\n        const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n        if (origAddTrack) window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n            const sender = origAddTrack.apply(this, arguments);\n            sender._pc = this;\n            return sender;\n        };\n        window.RTCRtpSender.prototype.getStats = function getStats() {\n            const sender = this;\n            return this._pc.getStats().then((result)=>/* Note: this will include stats of all senders that\n         *   send a track with the same id as sender.track as\n         *   it is not possible to identify the RTCRtpSender.\n         */ $1974f6191091ae7b$export$93439ffc3f787d51(result, sender.track, true));\n        };\n    }\n    // shim receiver stats.\n    if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n        const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n        if (origGetReceivers) window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n            const receivers = origGetReceivers.apply(this, []);\n            receivers.forEach((receiver)=>receiver._pc = this);\n            return receivers;\n        };\n        $1974f6191091ae7b$export$1f48841962b828b1(window, 'track', (e)=>{\n            e.receiver._pc = e.srcElement;\n            return e;\n        });\n        window.RTCRtpReceiver.prototype.getStats = function getStats() {\n            const receiver = this;\n            return this._pc.getStats().then((result)=>$1974f6191091ae7b$export$93439ffc3f787d51(result, receiver.track, false));\n        };\n    }\n    if (!('getStats' in window.RTCRtpSender.prototype && 'getStats' in window.RTCRtpReceiver.prototype)) return;\n    // shim RTCPeerConnection.getStats(track).\n    const origGetStats = window.RTCPeerConnection.prototype.getStats;\n    window.RTCPeerConnection.prototype.getStats = function getStats() {\n        if (arguments.length > 0 && arguments[0] instanceof window.MediaStreamTrack) {\n            const track = arguments[0];\n            let sender;\n            let receiver;\n            let err;\n            this.getSenders().forEach((s)=>{\n                if (s.track === track) {\n                    if (sender) err = true;\n                    else sender = s;\n                }\n            });\n            this.getReceivers().forEach((r)=>{\n                if (r.track === track) {\n                    if (receiver) err = true;\n                    else receiver = r;\n                }\n                return r.track === track;\n            });\n            if (err || sender && receiver) return Promise.reject(new DOMException('There are more than one sender or receiver for the track.', 'InvalidAccessError'));\n            else if (sender) return sender.getStats();\n            else if (receiver) return receiver.getStats();\n            return Promise.reject(new DOMException('There is no sender or receiver for the track.', 'InvalidAccessError'));\n        }\n        return origGetStats.apply(this, arguments);\n    };\n}\nfunction $c5cc2dfcf2e6688a$export$30e3cdd46f8d5100(window) {\n    // shim addTrack/removeTrack with native variants in order to make\n    // the interactions with legacy getLocalStreams behave as in other browsers.\n    // Keeps a mapping stream.id => [stream, rtpsenders...]\n    window.RTCPeerConnection.prototype.getLocalStreams = function getLocalStreams() {\n        this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n        return Object.keys(this._shimmedLocalStreams).map((streamId)=>this._shimmedLocalStreams[streamId][0]);\n    };\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addTrack = function addTrack(track, stream) {\n        if (!stream) return origAddTrack.apply(this, arguments);\n        this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n        const sender = origAddTrack.apply(this, arguments);\n        if (!this._shimmedLocalStreams[stream.id]) this._shimmedLocalStreams[stream.id] = [\n            stream,\n            sender\n        ];\n        else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) this._shimmedLocalStreams[stream.id].push(sender);\n        return sender;\n    };\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n        this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n        stream.getTracks().forEach((track)=>{\n            const alreadyExists = this.getSenders().find((s)=>s.track === track);\n            if (alreadyExists) throw new DOMException('Track already exists.', 'InvalidAccessError');\n        });\n        const existingSenders = this.getSenders();\n        origAddStream.apply(this, arguments);\n        const newSenders = this.getSenders().filter((newSender)=>existingSenders.indexOf(newSender) === -1);\n        this._shimmedLocalStreams[stream.id] = [\n            stream\n        ].concat(newSenders);\n    };\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n        this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n        delete this._shimmedLocalStreams[stream.id];\n        return origRemoveStream.apply(this, arguments);\n    };\n    const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n    window.RTCPeerConnection.prototype.removeTrack = function removeTrack(sender) {\n        this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n        if (sender) Object.keys(this._shimmedLocalStreams).forEach((streamId)=>{\n            const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n            if (idx !== -1) this._shimmedLocalStreams[streamId].splice(idx, 1);\n            if (this._shimmedLocalStreams[streamId].length === 1) delete this._shimmedLocalStreams[streamId];\n        });\n        return origRemoveTrack.apply(this, arguments);\n    };\n}\nfunction $c5cc2dfcf2e6688a$export$9588259fcf4ebc91(window, browserDetails) {\n    if (!window.RTCPeerConnection) return;\n    // shim addTrack and removeTrack.\n    if (window.RTCPeerConnection.prototype.addTrack && browserDetails.version >= 65) return $c5cc2dfcf2e6688a$export$30e3cdd46f8d5100(window);\n    // also shim pc.getLocalStreams when addTrack is shimmed\n    // to return the original streams.\n    const origGetLocalStreams = window.RTCPeerConnection.prototype.getLocalStreams;\n    window.RTCPeerConnection.prototype.getLocalStreams = function getLocalStreams() {\n        const nativeStreams = origGetLocalStreams.apply(this);\n        this._reverseStreams = this._reverseStreams || {};\n        return nativeStreams.map((stream)=>this._reverseStreams[stream.id]);\n    };\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n        this._streams = this._streams || {};\n        this._reverseStreams = this._reverseStreams || {};\n        stream.getTracks().forEach((track)=>{\n            const alreadyExists = this.getSenders().find((s)=>s.track === track);\n            if (alreadyExists) throw new DOMException('Track already exists.', 'InvalidAccessError');\n        });\n        // Add identity mapping for consistency with addTrack.\n        // Unless this is being used with a stream from addTrack.\n        if (!this._reverseStreams[stream.id]) {\n            const newStream = new window.MediaStream(stream.getTracks());\n            this._streams[stream.id] = newStream;\n            this._reverseStreams[newStream.id] = stream;\n            stream = newStream;\n        }\n        origAddStream.apply(this, [\n            stream\n        ]);\n    };\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n        this._streams = this._streams || {};\n        this._reverseStreams = this._reverseStreams || {};\n        origRemoveStream.apply(this, [\n            this._streams[stream.id] || stream\n        ]);\n        delete this._reverseStreams[this._streams[stream.id] ? this._streams[stream.id].id : stream.id];\n        delete this._streams[stream.id];\n    };\n    window.RTCPeerConnection.prototype.addTrack = function addTrack(track, stream) {\n        if (this.signalingState === 'closed') throw new DOMException('The RTCPeerConnection\\'s signalingState is \\'closed\\'.', 'InvalidStateError');\n        const streams = [].slice.call(arguments, 1);\n        if (streams.length !== 1 || !streams[0].getTracks().find((t)=>t === track)) // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\"The adapter.js addTrack polyfill only supports a single  stream which is associated with the specified track.\", 'NotSupportedError');\n        const alreadyExists = this.getSenders().find((s)=>s.track === track);\n        if (alreadyExists) throw new DOMException('Track already exists.', 'InvalidAccessError');\n        this._streams = this._streams || {};\n        this._reverseStreams = this._reverseStreams || {};\n        const oldStream = this._streams[stream.id];\n        if (oldStream) {\n            // this is using odd Chrome behaviour, use with caution:\n            // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n            // Note: we rely on the high-level addTrack/dtmf shim to\n            // create the sender with a dtmf sender.\n            oldStream.addTrack(track);\n            // Trigger ONN async.\n            Promise.resolve().then(()=>{\n                this.dispatchEvent(new Event('negotiationneeded'));\n            });\n        } else {\n            const newStream = new window.MediaStream([\n                track\n            ]);\n            this._streams[stream.id] = newStream;\n            this._reverseStreams[newStream.id] = stream;\n            this.addStream(newStream);\n        }\n        return this.getSenders().find((s)=>s.track === track);\n    };\n    // replace the internal stream id with the external one and\n    // vice versa.\n    function replaceInternalStreamId(pc, description) {\n        let sdp = description.sdp;\n        Object.keys(pc._reverseStreams || []).forEach((internalId)=>{\n            const externalStream = pc._reverseStreams[internalId];\n            const internalStream = pc._streams[externalStream.id];\n            sdp = sdp.replace(new RegExp(internalStream.id, 'g'), externalStream.id);\n        });\n        return new RTCSessionDescription({\n            type: description.type,\n            sdp: sdp\n        });\n    }\n    function replaceExternalStreamId(pc, description) {\n        let sdp = description.sdp;\n        Object.keys(pc._reverseStreams || []).forEach((internalId)=>{\n            const externalStream = pc._reverseStreams[internalId];\n            const internalStream = pc._streams[externalStream.id];\n            sdp = sdp.replace(new RegExp(externalStream.id, 'g'), internalStream.id);\n        });\n        return new RTCSessionDescription({\n            type: description.type,\n            sdp: sdp\n        });\n    }\n    [\n        'createOffer',\n        'createAnswer'\n    ].forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        const methodObj = {\n            [method] () {\n                const args = arguments;\n                const isLegacyCall = arguments.length && typeof arguments[0] === 'function';\n                if (isLegacyCall) return nativeMethod.apply(this, [\n                    (description)=>{\n                        const desc = replaceInternalStreamId(this, description);\n                        args[0].apply(null, [\n                            desc\n                        ]);\n                    },\n                    (err)=>{\n                        if (args[1]) args[1].apply(null, err);\n                    },\n                    arguments[2]\n                ]);\n                return nativeMethod.apply(this, arguments).then((description)=>replaceInternalStreamId(this, description));\n            }\n        };\n        window.RTCPeerConnection.prototype[method] = methodObj[method];\n    });\n    const origSetLocalDescription = window.RTCPeerConnection.prototype.setLocalDescription;\n    window.RTCPeerConnection.prototype.setLocalDescription = function setLocalDescription() {\n        if (!arguments.length || !arguments[0].type) return origSetLocalDescription.apply(this, arguments);\n        arguments[0] = replaceExternalStreamId(this, arguments[0]);\n        return origSetLocalDescription.apply(this, arguments);\n    };\n    // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n    const origLocalDescription = Object.getOwnPropertyDescriptor(window.RTCPeerConnection.prototype, 'localDescription');\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'localDescription', {\n        get () {\n            const description = origLocalDescription.get.apply(this);\n            if (description.type === '') return description;\n            return replaceInternalStreamId(this, description);\n        }\n    });\n    window.RTCPeerConnection.prototype.removeTrack = function removeTrack(sender) {\n        if (this.signalingState === 'closed') throw new DOMException('The RTCPeerConnection\\'s signalingState is \\'closed\\'.', 'InvalidStateError');\n        // We can not yet check for sender instanceof RTCRtpSender\n        // since we shim RTPSender. So we check if sender._pc is set.\n        if (!sender._pc) throw new DOMException(\"Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.\", 'TypeError');\n        const isLocal = sender._pc === this;\n        if (!isLocal) throw new DOMException('Sender was not created by this connection.', 'InvalidAccessError');\n        // Search for the native stream the senders track belongs to.\n        this._streams = this._streams || {};\n        let stream;\n        Object.keys(this._streams).forEach((streamid)=>{\n            const hasTrack = this._streams[streamid].getTracks().find((track)=>sender.track === track);\n            if (hasTrack) stream = this._streams[streamid];\n        });\n        if (stream) {\n            if (stream.getTracks().length === 1) // if this is the last track of the stream, remove the stream. This\n            // takes care of any shimmed _senders.\n            this.removeStream(this._reverseStreams[stream.id]);\n            else // relying on the same odd chrome behaviour as above.\n            stream.removeTrack(sender.track);\n            this.dispatchEvent(new Event('negotiationneeded'));\n        }\n    };\n}\nfunction $c5cc2dfcf2e6688a$export$852a08dda9a55ea7(window, browserDetails) {\n    if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n    if (!window.RTCPeerConnection) return;\n    // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n    if (browserDetails.version < 53) [\n        'setLocalDescription',\n        'setRemoteDescription',\n        'addIceCandidate'\n    ].forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        const methodObj = {\n            [method] () {\n                arguments[0] = new (method === 'addIceCandidate' ? window.RTCIceCandidate : window.RTCSessionDescription)(arguments[0]);\n                return nativeMethod.apply(this, arguments);\n            }\n        };\n        window.RTCPeerConnection.prototype[method] = methodObj[method];\n    });\n}\nfunction $c5cc2dfcf2e6688a$export$341293bbeaae37cb(window, browserDetails) {\n    $1974f6191091ae7b$export$1f48841962b828b1(window, 'negotiationneeded', (e)=>{\n        const pc = e.target;\n        if (browserDetails.version < 72 || pc.getConfiguration && pc.getConfiguration().sdpSemantics === 'plan-b') {\n            if (pc.signalingState !== 'stable') return;\n        }\n        return e;\n    });\n}\n\n\nvar $dedea9f1dba18edb$exports = {};\n\n$parcel$export($dedea9f1dba18edb$exports, \"shimOnTrack\", () => $dedea9f1dba18edb$export$f358708f68ab068);\n$parcel$export($dedea9f1dba18edb$exports, \"shimPeerConnection\", () => $dedea9f1dba18edb$export$852a08dda9a55ea7);\n$parcel$export($dedea9f1dba18edb$exports, \"shimSenderGetStats\", () => $dedea9f1dba18edb$export$f0525502095c04ef);\n$parcel$export($dedea9f1dba18edb$exports, \"shimReceiverGetStats\", () => $dedea9f1dba18edb$export$83d69126527b1171);\n$parcel$export($dedea9f1dba18edb$exports, \"shimRemoveStream\", () => $dedea9f1dba18edb$export$825e523ef749bd8c);\n$parcel$export($dedea9f1dba18edb$exports, \"shimRTCDataChannel\", () => $dedea9f1dba18edb$export$ff9cb3bc8990e8f7);\n$parcel$export($dedea9f1dba18edb$exports, \"shimAddTransceiver\", () => $dedea9f1dba18edb$export$70c77533b6e9908d);\n$parcel$export($dedea9f1dba18edb$exports, \"shimGetParameters\", () => $dedea9f1dba18edb$export$66238223c298fbaa);\n$parcel$export($dedea9f1dba18edb$exports, \"shimCreateOffer\", () => $dedea9f1dba18edb$export$51beccf0e777b843);\n$parcel$export($dedea9f1dba18edb$exports, \"shimCreateAnswer\", () => $dedea9f1dba18edb$export$df0b46e7cef08150);\n$parcel$export($dedea9f1dba18edb$exports, \"shimGetUserMedia\", () => $24c9a4e56470d1f6$export$1ed4910f4d37dc5e);\n$parcel$export($dedea9f1dba18edb$exports, \"shimGetDisplayMedia\", () => $a0073f4dea2c38df$export$97270b87351d9c04);\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */ /* eslint-env node */ \n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */ /* eslint-env node */ \n'use strict';\nfunction $24c9a4e56470d1f6$export$1ed4910f4d37dc5e(window, browserDetails) {\n    const navigator = window && window.navigator;\n    const MediaStreamTrack = window && window.MediaStreamTrack;\n    navigator.getUserMedia = function(constraints, onSuccess, onError) {\n        // Replace Firefox 44+'s deprecation warning with unprefixed version.\n        $1974f6191091ae7b$export$cdd73fc4100a6ef4('navigator.getUserMedia', 'navigator.mediaDevices.getUserMedia');\n        navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n    };\n    if (!(browserDetails.version > 55 && 'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n        const remap = function(obj, a, b) {\n            if (a in obj && !(b in obj)) {\n                obj[b] = obj[a];\n                delete obj[a];\n            }\n        };\n        const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);\n        navigator.mediaDevices.getUserMedia = function(c) {\n            if (typeof c === 'object' && typeof c.audio === 'object') {\n                c = JSON.parse(JSON.stringify(c));\n                remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n                remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n            }\n            return nativeGetUserMedia(c);\n        };\n        if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n            const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n            MediaStreamTrack.prototype.getSettings = function() {\n                const obj = nativeGetSettings.apply(this, arguments);\n                remap(obj, 'mozAutoGainControl', 'autoGainControl');\n                remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n                return obj;\n            };\n        }\n        if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n            const nativeApplyConstraints = MediaStreamTrack.prototype.applyConstraints;\n            MediaStreamTrack.prototype.applyConstraints = function(c) {\n                if (this.kind === 'audio' && typeof c === 'object') {\n                    c = JSON.parse(JSON.stringify(c));\n                    remap(c, 'autoGainControl', 'mozAutoGainControl');\n                    remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n                }\n                return nativeApplyConstraints.apply(this, [\n                    c\n                ]);\n            };\n        }\n    }\n}\n\n\n/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */ /* eslint-env node */ 'use strict';\nfunction $a0073f4dea2c38df$export$97270b87351d9c04(window, preferredMediaSource) {\n    if (window.navigator.mediaDevices && 'getDisplayMedia' in window.navigator.mediaDevices) return;\n    if (!window.navigator.mediaDevices) return;\n    window.navigator.mediaDevices.getDisplayMedia = function getDisplayMedia(constraints) {\n        if (!(constraints && constraints.video)) {\n            const err = new DOMException(\"getDisplayMedia without video constraints is undefined\");\n            err.name = 'NotFoundError';\n            // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n            err.code = 8;\n            return Promise.reject(err);\n        }\n        if (constraints.video === true) constraints.video = {\n            mediaSource: preferredMediaSource\n        };\n        else constraints.video.mediaSource = preferredMediaSource;\n        return window.navigator.mediaDevices.getUserMedia(constraints);\n    };\n}\n\n\n'use strict';\nfunction $dedea9f1dba18edb$export$f358708f68ab068(window) {\n    if (typeof window === 'object' && window.RTCTrackEvent && 'receiver' in window.RTCTrackEvent.prototype && !('transceiver' in window.RTCTrackEvent.prototype)) Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n        get () {\n            return {\n                receiver: this.receiver\n            };\n        }\n    });\n}\nfunction $dedea9f1dba18edb$export$852a08dda9a55ea7(window, browserDetails) {\n    if (typeof window !== 'object' || !(window.RTCPeerConnection || window.mozRTCPeerConnection)) return; // probably media.peerconnection.enabled=false in about:config\n    if (!window.RTCPeerConnection && window.mozRTCPeerConnection) // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n    if (browserDetails.version < 53) // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    [\n        'setLocalDescription',\n        'setRemoteDescription',\n        'addIceCandidate'\n    ].forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        const methodObj = {\n            [method] () {\n                arguments[0] = new (method === 'addIceCandidate' ? window.RTCIceCandidate : window.RTCSessionDescription)(arguments[0]);\n                return nativeMethod.apply(this, arguments);\n            }\n        };\n        window.RTCPeerConnection.prototype[method] = methodObj[method];\n    });\n    const modernStatsTypes = {\n        inboundrtp: 'inbound-rtp',\n        outboundrtp: 'outbound-rtp',\n        candidatepair: 'candidate-pair',\n        localcandidate: 'local-candidate',\n        remotecandidate: 'remote-candidate'\n    };\n    const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n    window.RTCPeerConnection.prototype.getStats = function getStats() {\n        const [selector, onSucc, onErr] = arguments;\n        return nativeGetStats.apply(this, [\n            selector || null\n        ]).then((stats)=>{\n            if (browserDetails.version < 53 && !onSucc) // Shim only promise getStats with spec-hyphens in type names\n            // Leave callback version alone; misc old uses of forEach before Map\n            try {\n                stats.forEach((stat)=>{\n                    stat.type = modernStatsTypes[stat.type] || stat.type;\n                });\n            } catch (e) {\n                if (e.name !== 'TypeError') throw e;\n                // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n                stats.forEach((stat, i)=>{\n                    stats.set(i, Object.assign({}, stat, {\n                        type: modernStatsTypes[stat.type] || stat.type\n                    }));\n                });\n            }\n            return stats;\n        }).then(onSucc, onErr);\n    };\n}\nfunction $dedea9f1dba18edb$export$f0525502095c04ef(window) {\n    if (!(typeof window === 'object' && window.RTCPeerConnection && window.RTCRtpSender)) return;\n    if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) return;\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach((sender)=>sender._pc = this);\n        return senders;\n    };\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n    };\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n        return this.track ? this._pc.getStats(this.track) : Promise.resolve(new Map());\n    };\n}\nfunction $dedea9f1dba18edb$export$83d69126527b1171(window) {\n    if (!(typeof window === 'object' && window.RTCPeerConnection && window.RTCRtpSender)) return;\n    if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) return;\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n        const receivers = origGetReceivers.apply(this, []);\n        receivers.forEach((receiver)=>receiver._pc = this);\n        return receivers;\n    };\n    $1974f6191091ae7b$export$1f48841962b828b1(window, 'track', (e)=>{\n        e.receiver._pc = e.srcElement;\n        return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n        return this._pc.getStats(this.track);\n    };\n}\nfunction $dedea9f1dba18edb$export$825e523ef749bd8c(window) {\n    if (!window.RTCPeerConnection || 'removeStream' in window.RTCPeerConnection.prototype) return;\n    window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n        $1974f6191091ae7b$export$cdd73fc4100a6ef4('removeStream', 'removeTrack');\n        this.getSenders().forEach((sender)=>{\n            if (sender.track && stream.getTracks().includes(sender.track)) this.removeTrack(sender);\n        });\n    };\n}\nfunction $dedea9f1dba18edb$export$ff9cb3bc8990e8f7(window) {\n    // rename DataChannel to RTCDataChannel (native fix in FF60):\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n    if (window.DataChannel && !window.RTCDataChannel) window.RTCDataChannel = window.DataChannel;\n}\nfunction $dedea9f1dba18edb$export$70c77533b6e9908d(window) {\n    // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n    // Firefox ignores the init sendEncodings options passed to addTransceiver\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n    if (!(typeof window === 'object' && window.RTCPeerConnection)) return;\n    const origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n    if (origAddTransceiver) window.RTCPeerConnection.prototype.addTransceiver = function addTransceiver() {\n        this.setParametersPromises = [];\n        // WebIDL input coercion and validation\n        let sendEncodings = arguments[1] && arguments[1].sendEncodings;\n        if (sendEncodings === undefined) sendEncodings = [];\n        sendEncodings = [\n            ...sendEncodings\n        ];\n        const shouldPerformCheck = sendEncodings.length > 0;\n        if (shouldPerformCheck) // If sendEncodings params are provided, validate grammar\n        sendEncodings.forEach((encodingParam)=>{\n            if ('rid' in encodingParam) {\n                const ridRegex = /^[a-z0-9]{0,16}$/i;\n                if (!ridRegex.test(encodingParam.rid)) throw new TypeError('Invalid RID value provided.');\n            }\n            if ('scaleResolutionDownBy' in encodingParam) {\n                if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) throw new RangeError('scale_resolution_down_by must be >= 1.0');\n            }\n            if ('maxFramerate' in encodingParam) {\n                if (!(parseFloat(encodingParam.maxFramerate) >= 0)) throw new RangeError('max_framerate must be >= 0.0');\n            }\n        });\n        const transceiver = origAddTransceiver.apply(this, arguments);\n        if (shouldPerformCheck) {\n            // Check if the init options were applied. If not we do this in an\n            // asynchronous way and save the promise reference in a global object.\n            // This is an ugly hack, but at the same time is way more robust than\n            // checking the sender parameters before and after the createOffer\n            // Also note that after the createoffer we are not 100% sure that\n            // the params were asynchronously applied so we might miss the\n            // opportunity to recreate offer.\n            const { sender: sender } = transceiver;\n            const params = sender.getParameters();\n            if (!('encodings' in params) || // Avoid being fooled by patched getParameters() below.\n            params.encodings.length === 1 && Object.keys(params.encodings[0]).length === 0) {\n                params.encodings = sendEncodings;\n                sender.sendEncodings = sendEncodings;\n                this.setParametersPromises.push(sender.setParameters(params).then(()=>{\n                    delete sender.sendEncodings;\n                }).catch(()=>{\n                    delete sender.sendEncodings;\n                }));\n            }\n        }\n        return transceiver;\n    };\n}\nfunction $dedea9f1dba18edb$export$66238223c298fbaa(window) {\n    if (!(typeof window === 'object' && window.RTCRtpSender)) return;\n    const origGetParameters = window.RTCRtpSender.prototype.getParameters;\n    if (origGetParameters) window.RTCRtpSender.prototype.getParameters = function getParameters() {\n        const params = origGetParameters.apply(this, arguments);\n        if (!('encodings' in params)) params.encodings = [].concat(this.sendEncodings || [\n            {}\n        ]);\n        return params;\n    };\n}\nfunction $dedea9f1dba18edb$export$51beccf0e777b843(window) {\n    // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n    // Firefox ignores the init sendEncodings options passed to addTransceiver\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n    if (!(typeof window === 'object' && window.RTCPeerConnection)) return;\n    const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n    window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n        if (this.setParametersPromises && this.setParametersPromises.length) return Promise.all(this.setParametersPromises).then(()=>{\n            return origCreateOffer.apply(this, arguments);\n        }).finally(()=>{\n            this.setParametersPromises = [];\n        });\n        return origCreateOffer.apply(this, arguments);\n    };\n}\nfunction $dedea9f1dba18edb$export$df0b46e7cef08150(window) {\n    // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n    // Firefox ignores the init sendEncodings options passed to addTransceiver\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n    if (!(typeof window === 'object' && window.RTCPeerConnection)) return;\n    const origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n    window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n        if (this.setParametersPromises && this.setParametersPromises.length) return Promise.all(this.setParametersPromises).then(()=>{\n            return origCreateAnswer.apply(this, arguments);\n        }).finally(()=>{\n            this.setParametersPromises = [];\n        });\n        return origCreateAnswer.apply(this, arguments);\n    };\n}\n\n\nvar $ef77da9e8f828c50$exports = {};\n\n$parcel$export($ef77da9e8f828c50$exports, \"shimLocalStreamsAPI\", () => $ef77da9e8f828c50$export$8df41282f4fdcea2);\n$parcel$export($ef77da9e8f828c50$exports, \"shimRemoteStreamsAPI\", () => $ef77da9e8f828c50$export$762aa4cbb4f2f857);\n$parcel$export($ef77da9e8f828c50$exports, \"shimCallbacksAPI\", () => $ef77da9e8f828c50$export$da31df245debdd3);\n$parcel$export($ef77da9e8f828c50$exports, \"shimGetUserMedia\", () => $ef77da9e8f828c50$export$1ed4910f4d37dc5e);\n$parcel$export($ef77da9e8f828c50$exports, \"shimConstraints\", () => $ef77da9e8f828c50$export$494a01ac68ba81ac);\n$parcel$export($ef77da9e8f828c50$exports, \"shimRTCIceServerUrls\", () => $ef77da9e8f828c50$export$671a8b47b41b6f41);\n$parcel$export($ef77da9e8f828c50$exports, \"shimTrackEventTransceiver\", () => $ef77da9e8f828c50$export$85d53da088cb1b14);\n$parcel$export($ef77da9e8f828c50$exports, \"shimCreateOfferLegacy\", () => $ef77da9e8f828c50$export$d444266503fdd2d4);\n$parcel$export($ef77da9e8f828c50$exports, \"shimAudioContext\", () => $ef77da9e8f828c50$export$857cd739a7b795d2);\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */ \n'use strict';\nfunction $ef77da9e8f828c50$export$8df41282f4fdcea2(window) {\n    if (typeof window !== 'object' || !window.RTCPeerConnection) return;\n    if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) window.RTCPeerConnection.prototype.getLocalStreams = function getLocalStreams() {\n        if (!this._localStreams) this._localStreams = [];\n        return this._localStreams;\n    };\n    if (!('addStream' in window.RTCPeerConnection.prototype)) {\n        const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n        window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n            if (!this._localStreams) this._localStreams = [];\n            if (!this._localStreams.includes(stream)) this._localStreams.push(stream);\n            // Try to emulate Chrome's behaviour of adding in audio-video order.\n            // Safari orders by track id.\n            stream.getAudioTracks().forEach((track)=>_addTrack.call(this, track, stream));\n            stream.getVideoTracks().forEach((track)=>_addTrack.call(this, track, stream));\n        };\n        window.RTCPeerConnection.prototype.addTrack = function addTrack(track, ...streams) {\n            if (streams) streams.forEach((stream)=>{\n                if (!this._localStreams) this._localStreams = [\n                    stream\n                ];\n                else if (!this._localStreams.includes(stream)) this._localStreams.push(stream);\n            });\n            return _addTrack.apply(this, arguments);\n        };\n    }\n    if (!('removeStream' in window.RTCPeerConnection.prototype)) window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n        if (!this._localStreams) this._localStreams = [];\n        const index = this._localStreams.indexOf(stream);\n        if (index === -1) return;\n        this._localStreams.splice(index, 1);\n        const tracks = stream.getTracks();\n        this.getSenders().forEach((sender)=>{\n            if (tracks.includes(sender.track)) this.removeTrack(sender);\n        });\n    };\n}\nfunction $ef77da9e8f828c50$export$762aa4cbb4f2f857(window) {\n    if (typeof window !== 'object' || !window.RTCPeerConnection) return;\n    if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) window.RTCPeerConnection.prototype.getRemoteStreams = function getRemoteStreams() {\n        return this._remoteStreams ? this._remoteStreams : [];\n    };\n    if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n        Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n            get () {\n                return this._onaddstream;\n            },\n            set (f) {\n                if (this._onaddstream) {\n                    this.removeEventListener('addstream', this._onaddstream);\n                    this.removeEventListener('track', this._onaddstreampoly);\n                }\n                this.addEventListener('addstream', this._onaddstream = f);\n                this.addEventListener('track', this._onaddstreampoly = (e)=>{\n                    e.streams.forEach((stream)=>{\n                        if (!this._remoteStreams) this._remoteStreams = [];\n                        if (this._remoteStreams.includes(stream)) return;\n                        this._remoteStreams.push(stream);\n                        const event = new Event('addstream');\n                        event.stream = stream;\n                        this.dispatchEvent(event);\n                    });\n                });\n            }\n        });\n        const origSetRemoteDescription = window.RTCPeerConnection.prototype.setRemoteDescription;\n        window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription() {\n            const pc = this;\n            if (!this._onaddstreampoly) this.addEventListener('track', this._onaddstreampoly = function(e) {\n                e.streams.forEach((stream)=>{\n                    if (!pc._remoteStreams) pc._remoteStreams = [];\n                    if (pc._remoteStreams.indexOf(stream) >= 0) return;\n                    pc._remoteStreams.push(stream);\n                    const event = new Event('addstream');\n                    event.stream = stream;\n                    pc.dispatchEvent(event);\n                });\n            });\n            return origSetRemoteDescription.apply(pc, arguments);\n        };\n    }\n}\nfunction $ef77da9e8f828c50$export$da31df245debdd3(window) {\n    if (typeof window !== 'object' || !window.RTCPeerConnection) return;\n    const prototype = window.RTCPeerConnection.prototype;\n    const origCreateOffer = prototype.createOffer;\n    const origCreateAnswer = prototype.createAnswer;\n    const setLocalDescription = prototype.setLocalDescription;\n    const setRemoteDescription = prototype.setRemoteDescription;\n    const addIceCandidate = prototype.addIceCandidate;\n    prototype.createOffer = function createOffer(successCallback, failureCallback) {\n        const options = arguments.length >= 2 ? arguments[2] : arguments[0];\n        const promise = origCreateOffer.apply(this, [\n            options\n        ]);\n        if (!failureCallback) return promise;\n        promise.then(successCallback, failureCallback);\n        return Promise.resolve();\n    };\n    prototype.createAnswer = function createAnswer(successCallback, failureCallback) {\n        const options = arguments.length >= 2 ? arguments[2] : arguments[0];\n        const promise = origCreateAnswer.apply(this, [\n            options\n        ]);\n        if (!failureCallback) return promise;\n        promise.then(successCallback, failureCallback);\n        return Promise.resolve();\n    };\n    let withCallback = function(description, successCallback, failureCallback) {\n        const promise = setLocalDescription.apply(this, [\n            description\n        ]);\n        if (!failureCallback) return promise;\n        promise.then(successCallback, failureCallback);\n        return Promise.resolve();\n    };\n    prototype.setLocalDescription = withCallback;\n    withCallback = function(description, successCallback, failureCallback) {\n        const promise = setRemoteDescription.apply(this, [\n            description\n        ]);\n        if (!failureCallback) return promise;\n        promise.then(successCallback, failureCallback);\n        return Promise.resolve();\n    };\n    prototype.setRemoteDescription = withCallback;\n    withCallback = function(candidate, successCallback, failureCallback) {\n        const promise = addIceCandidate.apply(this, [\n            candidate\n        ]);\n        if (!failureCallback) return promise;\n        promise.then(successCallback, failureCallback);\n        return Promise.resolve();\n    };\n    prototype.addIceCandidate = withCallback;\n}\nfunction $ef77da9e8f828c50$export$1ed4910f4d37dc5e(window) {\n    const navigator = window && window.navigator;\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        // shim not needed in Safari 12.1\n        const mediaDevices = navigator.mediaDevices;\n        const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n        navigator.mediaDevices.getUserMedia = (constraints)=>{\n            return _getUserMedia($ef77da9e8f828c50$export$494a01ac68ba81ac(constraints));\n        };\n    }\n    if (!navigator.getUserMedia && navigator.mediaDevices && navigator.mediaDevices.getUserMedia) navigator.getUserMedia = (function getUserMedia(constraints, cb, errcb) {\n        navigator.mediaDevices.getUserMedia(constraints).then(cb, errcb);\n    }).bind(navigator);\n}\nfunction $ef77da9e8f828c50$export$494a01ac68ba81ac(constraints) {\n    if (constraints && constraints.video !== undefined) return Object.assign({}, constraints, {\n        video: $1974f6191091ae7b$export$15384eac40dc88c8(constraints.video)\n    });\n    return constraints;\n}\nfunction $ef77da9e8f828c50$export$671a8b47b41b6f41(window) {\n    if (!window.RTCPeerConnection) return;\n    // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n    const OrigPeerConnection = window.RTCPeerConnection;\n    window.RTCPeerConnection = function RTCPeerConnection(pcConfig, pcConstraints) {\n        if (pcConfig && pcConfig.iceServers) {\n            const newIceServers = [];\n            for(let i = 0; i < pcConfig.iceServers.length; i++){\n                let server = pcConfig.iceServers[i];\n                if (server.urls === undefined && server.url) {\n                    $1974f6191091ae7b$export$cdd73fc4100a6ef4('RTCIceServer.url', 'RTCIceServer.urls');\n                    server = JSON.parse(JSON.stringify(server));\n                    server.urls = server.url;\n                    delete server.url;\n                    newIceServers.push(server);\n                } else newIceServers.push(pcConfig.iceServers[i]);\n            }\n            pcConfig.iceServers = newIceServers;\n        }\n        return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n    window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n    // wrap static methods. Currently just generateCertificate.\n    if ('generateCertificate' in OrigPeerConnection) Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n        get () {\n            return OrigPeerConnection.generateCertificate;\n        }\n    });\n}\nfunction $ef77da9e8f828c50$export$85d53da088cb1b14(window) {\n    // Add event.transceiver member over deprecated event.receiver\n    if (typeof window === 'object' && window.RTCTrackEvent && 'receiver' in window.RTCTrackEvent.prototype && !('transceiver' in window.RTCTrackEvent.prototype)) Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n        get () {\n            return {\n                receiver: this.receiver\n            };\n        }\n    });\n}\nfunction $ef77da9e8f828c50$export$d444266503fdd2d4(window) {\n    const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n    window.RTCPeerConnection.prototype.createOffer = function createOffer(offerOptions) {\n        if (offerOptions) {\n            if (typeof offerOptions.offerToReceiveAudio !== 'undefined') // support bit values\n            offerOptions.offerToReceiveAudio = !!offerOptions.offerToReceiveAudio;\n            const audioTransceiver = this.getTransceivers().find((transceiver)=>transceiver.receiver.track.kind === 'audio');\n            if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n                if (audioTransceiver.direction === 'sendrecv') {\n                    if (audioTransceiver.setDirection) audioTransceiver.setDirection('sendonly');\n                    else audioTransceiver.direction = 'sendonly';\n                } else if (audioTransceiver.direction === 'recvonly') {\n                    if (audioTransceiver.setDirection) audioTransceiver.setDirection('inactive');\n                    else audioTransceiver.direction = 'inactive';\n                }\n            } else if (offerOptions.offerToReceiveAudio === true && !audioTransceiver) this.addTransceiver('audio', {\n                direction: 'recvonly'\n            });\n            if (typeof offerOptions.offerToReceiveVideo !== 'undefined') // support bit values\n            offerOptions.offerToReceiveVideo = !!offerOptions.offerToReceiveVideo;\n            const videoTransceiver = this.getTransceivers().find((transceiver)=>transceiver.receiver.track.kind === 'video');\n            if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n                if (videoTransceiver.direction === 'sendrecv') {\n                    if (videoTransceiver.setDirection) videoTransceiver.setDirection('sendonly');\n                    else videoTransceiver.direction = 'sendonly';\n                } else if (videoTransceiver.direction === 'recvonly') {\n                    if (videoTransceiver.setDirection) videoTransceiver.setDirection('inactive');\n                    else videoTransceiver.direction = 'inactive';\n                }\n            } else if (offerOptions.offerToReceiveVideo === true && !videoTransceiver) this.addTransceiver('video', {\n                direction: 'recvonly'\n            });\n        }\n        return origCreateOffer.apply(this, arguments);\n    };\n}\nfunction $ef77da9e8f828c50$export$857cd739a7b795d2(window) {\n    if (typeof window !== 'object' || window.AudioContext) return;\n    window.AudioContext = window.webkitAudioContext;\n}\n\n\nvar $09ac04e9099fa679$exports = {};\n\n$parcel$export($09ac04e9099fa679$exports, \"shimRTCIceCandidate\", () => $09ac04e9099fa679$export$cf133661e444ccfe);\n$parcel$export($09ac04e9099fa679$exports, \"shimRTCIceCandidateRelayProtocol\", () => $09ac04e9099fa679$export$fdafb8d8280e29b5);\n$parcel$export($09ac04e9099fa679$exports, \"shimMaxMessageSize\", () => $09ac04e9099fa679$export$a99147c78a56edc4);\n$parcel$export($09ac04e9099fa679$exports, \"shimSendThrowTypeError\", () => $09ac04e9099fa679$export$d461c8d5c5db5da7);\n$parcel$export($09ac04e9099fa679$exports, \"shimConnectionState\", () => $09ac04e9099fa679$export$63bb816cc75460);\n$parcel$export($09ac04e9099fa679$exports, \"removeExtmapAllowMixed\", () => $09ac04e9099fa679$export$a57d114344295149);\n$parcel$export($09ac04e9099fa679$exports, \"shimAddIceCandidateNullOrEmpty\", () => $09ac04e9099fa679$export$51d5e40b48c771c7);\n$parcel$export($09ac04e9099fa679$exports, \"shimParameterlessSetLocalDescription\", () => $09ac04e9099fa679$export$7170d04e59f9d553);\n/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */ /* eslint-env node */ var $44a3bc4c37981ae1$exports = {};\n/* eslint-env node */ 'use strict';\n// SDP helpers.\nconst $44a3bc4c37981ae1$var$SDPUtils = {};\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\n$44a3bc4c37981ae1$var$SDPUtils.generateIdentifier = function() {\n    return Math.random().toString(36).substring(2, 12);\n};\n// The RTCP CNAME used by all peerconnections from the same JS.\n$44a3bc4c37981ae1$var$SDPUtils.localCName = $44a3bc4c37981ae1$var$SDPUtils.generateIdentifier();\n// Splits SDP into lines, dealing with both CRLF and LF.\n$44a3bc4c37981ae1$var$SDPUtils.splitLines = function(blob) {\n    return blob.trim().split('\\n').map((line)=>line.trim());\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\n$44a3bc4c37981ae1$var$SDPUtils.splitSections = function(blob) {\n    const parts = blob.split('\\nm=');\n    return parts.map((part, index)=>(index > 0 ? 'm=' + part : part).trim() + '\\r\\n');\n};\n// Returns the session description.\n$44a3bc4c37981ae1$var$SDPUtils.getDescription = function(blob) {\n    const sections = $44a3bc4c37981ae1$var$SDPUtils.splitSections(blob);\n    return sections && sections[0];\n};\n// Returns the individual media sections.\n$44a3bc4c37981ae1$var$SDPUtils.getMediaSections = function(blob) {\n    const sections = $44a3bc4c37981ae1$var$SDPUtils.splitSections(blob);\n    sections.shift();\n    return sections;\n};\n// Returns lines that start with a certain prefix.\n$44a3bc4c37981ae1$var$SDPUtils.matchPrefix = function(blob, prefix) {\n    return $44a3bc4c37981ae1$var$SDPUtils.splitLines(blob).filter((line)=>line.indexOf(prefix) === 0);\n};\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\n// Input can be prefixed with a=.\n$44a3bc4c37981ae1$var$SDPUtils.parseCandidate = function(line) {\n    let parts;\n    // Parse both variants.\n    if (line.indexOf('a=candidate:') === 0) parts = line.substring(12).split(' ');\n    else parts = line.substring(10).split(' ');\n    const candidate = {\n        foundation: parts[0],\n        component: {\n            1: 'rtp',\n            2: 'rtcp'\n        }[parts[1]] || parts[1],\n        protocol: parts[2].toLowerCase(),\n        priority: parseInt(parts[3], 10),\n        ip: parts[4],\n        address: parts[4],\n        port: parseInt(parts[5], 10),\n        // skip parts[6] == 'typ'\n        type: parts[7]\n    };\n    for(let i = 8; i < parts.length; i += 2)switch(parts[i]){\n        case 'raddr':\n            candidate.relatedAddress = parts[i + 1];\n            break;\n        case 'rport':\n            candidate.relatedPort = parseInt(parts[i + 1], 10);\n            break;\n        case 'tcptype':\n            candidate.tcpType = parts[i + 1];\n            break;\n        case 'ufrag':\n            candidate.ufrag = parts[i + 1]; // for backward compatibility.\n            candidate.usernameFragment = parts[i + 1];\n            break;\n        default:\n            if (candidate[parts[i]] === undefined) candidate[parts[i]] = parts[i + 1];\n            break;\n    }\n    return candidate;\n};\n// Translates a candidate object into SDP candidate attribute.\n// This does not include the a= prefix!\n$44a3bc4c37981ae1$var$SDPUtils.writeCandidate = function(candidate) {\n    const sdp = [];\n    sdp.push(candidate.foundation);\n    const component = candidate.component;\n    if (component === 'rtp') sdp.push(1);\n    else if (component === 'rtcp') sdp.push(2);\n    else sdp.push(component);\n    sdp.push(candidate.protocol.toUpperCase());\n    sdp.push(candidate.priority);\n    sdp.push(candidate.address || candidate.ip);\n    sdp.push(candidate.port);\n    const type = candidate.type;\n    sdp.push('typ');\n    sdp.push(type);\n    if (type !== 'host' && candidate.relatedAddress && candidate.relatedPort) {\n        sdp.push('raddr');\n        sdp.push(candidate.relatedAddress);\n        sdp.push('rport');\n        sdp.push(candidate.relatedPort);\n    }\n    if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n        sdp.push('tcptype');\n        sdp.push(candidate.tcpType);\n    }\n    if (candidate.usernameFragment || candidate.ufrag) {\n        sdp.push('ufrag');\n        sdp.push(candidate.usernameFragment || candidate.ufrag);\n    }\n    return 'candidate:' + sdp.join(' ');\n};\n// Parses an ice-options line, returns an array of option tags.\n// Sample input:\n// a=ice-options:foo bar\n$44a3bc4c37981ae1$var$SDPUtils.parseIceOptions = function(line) {\n    return line.substring(14).split(' ');\n};\n// Parses a rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\n$44a3bc4c37981ae1$var$SDPUtils.parseRtpMap = function(line) {\n    let parts = line.substring(9).split(' ');\n    const parsed = {\n        payloadType: parseInt(parts.shift(), 10)\n    };\n    parts = parts[0].split('/');\n    parsed.name = parts[0];\n    parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n    parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n    // legacy alias, got renamed back to channels in ORTC.\n    parsed.numChannels = parsed.channels;\n    return parsed;\n};\n// Generates a rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\n$44a3bc4c37981ae1$var$SDPUtils.writeRtpMap = function(codec) {\n    let pt = codec.payloadType;\n    if (codec.preferredPayloadType !== undefined) pt = codec.preferredPayloadType;\n    const channels = codec.channels || codec.numChannels || 1;\n    return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate + (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n// Parses a extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\n$44a3bc4c37981ae1$var$SDPUtils.parseExtmap = function(line) {\n    const parts = line.substring(9).split(' ');\n    return {\n        id: parseInt(parts[0], 10),\n        direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n        uri: parts[1],\n        attributes: parts.slice(2).join(' ')\n    };\n};\n// Generates an extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\n$44a3bc4c37981ae1$var$SDPUtils.writeExtmap = function(headerExtension) {\n    return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) + (headerExtension.direction && headerExtension.direction !== 'sendrecv' ? '/' + headerExtension.direction : '') + ' ' + headerExtension.uri + (headerExtension.attributes ? ' ' + headerExtension.attributes : '') + '\\r\\n';\n};\n// Parses a fmtp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\n$44a3bc4c37981ae1$var$SDPUtils.parseFmtp = function(line) {\n    const parsed = {};\n    let kv;\n    const parts = line.substring(line.indexOf(' ') + 1).split(';');\n    for(let j = 0; j < parts.length; j++){\n        kv = parts[j].trim().split('=');\n        parsed[kv[0].trim()] = kv[1];\n    }\n    return parsed;\n};\n// Generates a fmtp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\n$44a3bc4c37981ae1$var$SDPUtils.writeFmtp = function(codec) {\n    let line = '';\n    let pt = codec.payloadType;\n    if (codec.preferredPayloadType !== undefined) pt = codec.preferredPayloadType;\n    if (codec.parameters && Object.keys(codec.parameters).length) {\n        const params = [];\n        Object.keys(codec.parameters).forEach((param)=>{\n            if (codec.parameters[param] !== undefined) params.push(param + '=' + codec.parameters[param]);\n            else params.push(param);\n        });\n        line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n    }\n    return line;\n};\n// Parses a rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\n$44a3bc4c37981ae1$var$SDPUtils.parseRtcpFb = function(line) {\n    const parts = line.substring(line.indexOf(' ') + 1).split(' ');\n    return {\n        type: parts.shift(),\n        parameter: parts.join(' ')\n    };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\n$44a3bc4c37981ae1$var$SDPUtils.writeRtcpFb = function(codec) {\n    let lines = '';\n    let pt = codec.payloadType;\n    if (codec.preferredPayloadType !== undefined) pt = codec.preferredPayloadType;\n    if (codec.rtcpFeedback && codec.rtcpFeedback.length) // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach((fb)=>{\n        lines += 'a=rtcp-fb:' + pt + ' ' + fb.type + (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') + '\\r\\n';\n    });\n    return lines;\n};\n// Parses a RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\n$44a3bc4c37981ae1$var$SDPUtils.parseSsrcMedia = function(line) {\n    const sp = line.indexOf(' ');\n    const parts = {\n        ssrc: parseInt(line.substring(7, sp), 10)\n    };\n    const colon = line.indexOf(':', sp);\n    if (colon > -1) {\n        parts.attribute = line.substring(sp + 1, colon);\n        parts.value = line.substring(colon + 1);\n    } else parts.attribute = line.substring(sp + 1);\n    return parts;\n};\n// Parse a ssrc-group line (see RFC 5576). Sample input:\n// a=ssrc-group:semantics 12 34\n$44a3bc4c37981ae1$var$SDPUtils.parseSsrcGroup = function(line) {\n    const parts = line.substring(13).split(' ');\n    return {\n        semantics: parts.shift(),\n        ssrcs: parts.map((ssrc)=>parseInt(ssrc, 10))\n    };\n};\n// Extracts the MID (RFC 5888) from a media section.\n// Returns the MID or undefined if no mid line was found.\n$44a3bc4c37981ae1$var$SDPUtils.getMid = function(mediaSection) {\n    const mid = $44a3bc4c37981ae1$var$SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n    if (mid) return mid.substring(6);\n};\n// Parses a fingerprint line for DTLS-SRTP.\n$44a3bc4c37981ae1$var$SDPUtils.parseFingerprint = function(line) {\n    const parts = line.substring(14).split(' ');\n    return {\n        algorithm: parts[0].toLowerCase(),\n        value: parts[1].toUpperCase()\n    };\n};\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\n$44a3bc4c37981ae1$var$SDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n    const lines = $44a3bc4c37981ae1$var$SDPUtils.matchPrefix(mediaSection + sessionpart, 'a=fingerprint:');\n    // Note: a=setup line is ignored since we use the 'auto' role in Edge.\n    return {\n        role: 'auto',\n        fingerprints: lines.map($44a3bc4c37981ae1$var$SDPUtils.parseFingerprint)\n    };\n};\n// Serializes DTLS parameters to SDP.\n$44a3bc4c37981ae1$var$SDPUtils.writeDtlsParameters = function(params, setupType) {\n    let sdp = 'a=setup:' + setupType + '\\r\\n';\n    params.fingerprints.forEach((fp)=>{\n        sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n    });\n    return sdp;\n};\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\n$44a3bc4c37981ae1$var$SDPUtils.parseCryptoLine = function(line) {\n    const parts = line.substring(9).split(' ');\n    return {\n        tag: parseInt(parts[0], 10),\n        cryptoSuite: parts[1],\n        keyParams: parts[2],\n        sessionParams: parts.slice(3)\n    };\n};\n$44a3bc4c37981ae1$var$SDPUtils.writeCryptoLine = function(parameters) {\n    return 'a=crypto:' + parameters.tag + ' ' + parameters.cryptoSuite + ' ' + (typeof parameters.keyParams === 'object' ? $44a3bc4c37981ae1$var$SDPUtils.writeCryptoKeyParams(parameters.keyParams) : parameters.keyParams) + (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') + '\\r\\n';\n};\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\n$44a3bc4c37981ae1$var$SDPUtils.parseCryptoKeyParams = function(keyParams) {\n    if (keyParams.indexOf('inline:') !== 0) return null;\n    const parts = keyParams.substring(7).split('|');\n    return {\n        keyMethod: 'inline',\n        keySalt: parts[0],\n        lifeTime: parts[1],\n        mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n        mkiLength: parts[2] ? parts[2].split(':')[1] : undefined\n    };\n};\n$44a3bc4c37981ae1$var$SDPUtils.writeCryptoKeyParams = function(keyParams) {\n    return keyParams.keyMethod + ':' + keyParams.keySalt + (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') + (keyParams.mkiValue && keyParams.mkiLength ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength : '');\n};\n// Extracts all SDES parameters.\n$44a3bc4c37981ae1$var$SDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n    const lines = $44a3bc4c37981ae1$var$SDPUtils.matchPrefix(mediaSection + sessionpart, 'a=crypto:');\n    return lines.map($44a3bc4c37981ae1$var$SDPUtils.parseCryptoLine);\n};\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\n$44a3bc4c37981ae1$var$SDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n    const ufrag = $44a3bc4c37981ae1$var$SDPUtils.matchPrefix(mediaSection + sessionpart, 'a=ice-ufrag:')[0];\n    const pwd = $44a3bc4c37981ae1$var$SDPUtils.matchPrefix(mediaSection + sessionpart, 'a=ice-pwd:')[0];\n    if (!(ufrag && pwd)) return null;\n    return {\n        usernameFragment: ufrag.substring(12),\n        password: pwd.substring(10)\n    };\n};\n// Serializes ICE parameters to SDP.\n$44a3bc4c37981ae1$var$SDPUtils.writeIceParameters = function(params) {\n    let sdp = 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' + 'a=ice-pwd:' + params.password + '\\r\\n';\n    if (params.iceLite) sdp += 'a=ice-lite\\r\\n';\n    return sdp;\n};\n// Parses the SDP media section and returns RTCRtpParameters.\n$44a3bc4c37981ae1$var$SDPUtils.parseRtpParameters = function(mediaSection) {\n    const description = {\n        codecs: [],\n        headerExtensions: [],\n        fecMechanisms: [],\n        rtcp: []\n    };\n    const lines = $44a3bc4c37981ae1$var$SDPUtils.splitLines(mediaSection);\n    const mline = lines[0].split(' ');\n    description.profile = mline[2];\n    for(let i = 3; i < mline.length; i++){\n        const pt = mline[i];\n        const rtpmapline = $44a3bc4c37981ae1$var$SDPUtils.matchPrefix(mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n        if (rtpmapline) {\n            const codec = $44a3bc4c37981ae1$var$SDPUtils.parseRtpMap(rtpmapline);\n            const fmtps = $44a3bc4c37981ae1$var$SDPUtils.matchPrefix(mediaSection, 'a=fmtp:' + pt + ' ');\n            // Only the first a=fmtp:<pt> is considered.\n            codec.parameters = fmtps.length ? $44a3bc4c37981ae1$var$SDPUtils.parseFmtp(fmtps[0]) : {};\n            codec.rtcpFeedback = $44a3bc4c37981ae1$var$SDPUtils.matchPrefix(mediaSection, 'a=rtcp-fb:' + pt + ' ').map($44a3bc4c37981ae1$var$SDPUtils.parseRtcpFb);\n            description.codecs.push(codec);\n            // parse FEC mechanisms from rtpmap lines.\n            switch(codec.name.toUpperCase()){\n                case 'RED':\n                case 'ULPFEC':\n                    description.fecMechanisms.push(codec.name.toUpperCase());\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n    $44a3bc4c37981ae1$var$SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach((line)=>{\n        description.headerExtensions.push($44a3bc4c37981ae1$var$SDPUtils.parseExtmap(line));\n    });\n    const wildcardRtcpFb = $44a3bc4c37981ae1$var$SDPUtils.matchPrefix(mediaSection, 'a=rtcp-fb:* ').map($44a3bc4c37981ae1$var$SDPUtils.parseRtcpFb);\n    description.codecs.forEach((codec)=>{\n        wildcardRtcpFb.forEach((fb)=>{\n            const duplicate = codec.rtcpFeedback.find((existingFeedback)=>{\n                return existingFeedback.type === fb.type && existingFeedback.parameter === fb.parameter;\n            });\n            if (!duplicate) codec.rtcpFeedback.push(fb);\n        });\n    });\n    // FIXME: parse rtcp.\n    return description;\n};\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\n$44a3bc4c37981ae1$var$SDPUtils.writeRtpDescription = function(kind, caps) {\n    let sdp = '';\n    // Build the mline.\n    sdp += 'm=' + kind + ' ';\n    sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n    sdp += ' ' + (caps.profile || 'UDP/TLS/RTP/SAVPF') + ' ';\n    sdp += caps.codecs.map((codec)=>{\n        if (codec.preferredPayloadType !== undefined) return codec.preferredPayloadType;\n        return codec.payloadType;\n    }).join(' ') + '\\r\\n';\n    sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n    sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n    // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n    caps.codecs.forEach((codec)=>{\n        sdp += $44a3bc4c37981ae1$var$SDPUtils.writeRtpMap(codec);\n        sdp += $44a3bc4c37981ae1$var$SDPUtils.writeFmtp(codec);\n        sdp += $44a3bc4c37981ae1$var$SDPUtils.writeRtcpFb(codec);\n    });\n    let maxptime = 0;\n    caps.codecs.forEach((codec)=>{\n        if (codec.maxptime > maxptime) maxptime = codec.maxptime;\n    });\n    if (maxptime > 0) sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n    if (caps.headerExtensions) caps.headerExtensions.forEach((extension)=>{\n        sdp += $44a3bc4c37981ae1$var$SDPUtils.writeExtmap(extension);\n    });\n    // FIXME: write fecMechanisms.\n    return sdp;\n};\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\n$44a3bc4c37981ae1$var$SDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n    const encodingParameters = [];\n    const description = $44a3bc4c37981ae1$var$SDPUtils.parseRtpParameters(mediaSection);\n    const hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n    const hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n    // filter a=ssrc:... cname:, ignore PlanB-msid\n    const ssrcs = $44a3bc4c37981ae1$var$SDPUtils.matchPrefix(mediaSection, 'a=ssrc:').map((line)=>$44a3bc4c37981ae1$var$SDPUtils.parseSsrcMedia(line)).filter((parts)=>parts.attribute === 'cname');\n    const primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n    let secondarySsrc;\n    const flows = $44a3bc4c37981ae1$var$SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID').map((line)=>{\n        const parts = line.substring(17).split(' ');\n        return parts.map((part)=>parseInt(part, 10));\n    });\n    if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) secondarySsrc = flows[0][1];\n    description.codecs.forEach((codec)=>{\n        if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n            let encParam = {\n                ssrc: primarySsrc,\n                codecPayloadType: parseInt(codec.parameters.apt, 10)\n            };\n            if (primarySsrc && secondarySsrc) encParam.rtx = {\n                ssrc: secondarySsrc\n            };\n            encodingParameters.push(encParam);\n            if (hasRed) {\n                encParam = JSON.parse(JSON.stringify(encParam));\n                encParam.fec = {\n                    ssrc: primarySsrc,\n                    mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n                };\n                encodingParameters.push(encParam);\n            }\n        }\n    });\n    if (encodingParameters.length === 0 && primarySsrc) encodingParameters.push({\n        ssrc: primarySsrc\n    });\n    // we support both b=AS and b=TIAS but interpret AS as TIAS.\n    let bandwidth = $44a3bc4c37981ae1$var$SDPUtils.matchPrefix(mediaSection, 'b=');\n    if (bandwidth.length) {\n        if (bandwidth[0].indexOf('b=TIAS:') === 0) bandwidth = parseInt(bandwidth[0].substring(7), 10);\n        else if (bandwidth[0].indexOf('b=AS:') === 0) // use formula from JSEP to convert b=AS to TIAS value.\n        bandwidth = parseInt(bandwidth[0].substring(5), 10) * 950 - 16000;\n        else bandwidth = undefined;\n        encodingParameters.forEach((params)=>{\n            params.maxBitrate = bandwidth;\n        });\n    }\n    return encodingParameters;\n};\n// parses http://draft.ortc.org/#rtcrtcpparameters*\n$44a3bc4c37981ae1$var$SDPUtils.parseRtcpParameters = function(mediaSection) {\n    const rtcpParameters = {};\n    // Gets the first SSRC. Note that with RTX there might be multiple\n    // SSRCs.\n    const remoteSsrc = $44a3bc4c37981ae1$var$SDPUtils.matchPrefix(mediaSection, 'a=ssrc:').map((line)=>$44a3bc4c37981ae1$var$SDPUtils.parseSsrcMedia(line)).filter((obj)=>obj.attribute === 'cname')[0];\n    if (remoteSsrc) {\n        rtcpParameters.cname = remoteSsrc.value;\n        rtcpParameters.ssrc = remoteSsrc.ssrc;\n    }\n    // Edge uses the compound attribute instead of reducedSize\n    // compound is !reducedSize\n    const rsize = $44a3bc4c37981ae1$var$SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n    rtcpParameters.reducedSize = rsize.length > 0;\n    rtcpParameters.compound = rsize.length === 0;\n    // parses the rtcp-mux attrіbute.\n    // Note that Edge does not support unmuxed RTCP.\n    const mux = $44a3bc4c37981ae1$var$SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n    rtcpParameters.mux = mux.length > 0;\n    return rtcpParameters;\n};\n$44a3bc4c37981ae1$var$SDPUtils.writeRtcpParameters = function(rtcpParameters) {\n    let sdp = '';\n    if (rtcpParameters.reducedSize) sdp += 'a=rtcp-rsize\\r\\n';\n    if (rtcpParameters.mux) sdp += 'a=rtcp-mux\\r\\n';\n    if (rtcpParameters.ssrc !== undefined && rtcpParameters.cname) sdp += 'a=ssrc:' + rtcpParameters.ssrc + ' cname:' + rtcpParameters.cname + '\\r\\n';\n    return sdp;\n};\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\n$44a3bc4c37981ae1$var$SDPUtils.parseMsid = function(mediaSection) {\n    let parts;\n    const spec = $44a3bc4c37981ae1$var$SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n    if (spec.length === 1) {\n        parts = spec[0].substring(7).split(' ');\n        return {\n            stream: parts[0],\n            track: parts[1]\n        };\n    }\n    const planB = $44a3bc4c37981ae1$var$SDPUtils.matchPrefix(mediaSection, 'a=ssrc:').map((line)=>$44a3bc4c37981ae1$var$SDPUtils.parseSsrcMedia(line)).filter((msidParts)=>msidParts.attribute === 'msid');\n    if (planB.length > 0) {\n        parts = planB[0].value.split(' ');\n        return {\n            stream: parts[0],\n            track: parts[1]\n        };\n    }\n};\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\n$44a3bc4c37981ae1$var$SDPUtils.parseSctpDescription = function(mediaSection) {\n    const mline = $44a3bc4c37981ae1$var$SDPUtils.parseMLine(mediaSection);\n    const maxSizeLine = $44a3bc4c37981ae1$var$SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n    let maxMessageSize;\n    if (maxSizeLine.length > 0) maxMessageSize = parseInt(maxSizeLine[0].substring(19), 10);\n    if (isNaN(maxMessageSize)) maxMessageSize = 65536;\n    const sctpPort = $44a3bc4c37981ae1$var$SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n    if (sctpPort.length > 0) return {\n        port: parseInt(sctpPort[0].substring(12), 10),\n        protocol: mline.fmt,\n        maxMessageSize: maxMessageSize\n    };\n    const sctpMapLines = $44a3bc4c37981ae1$var$SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n    if (sctpMapLines.length > 0) {\n        const parts = sctpMapLines[0].substring(10).split(' ');\n        return {\n            port: parseInt(parts[0], 10),\n            protocol: parts[1],\n            maxMessageSize: maxMessageSize\n        };\n    }\n};\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\n$44a3bc4c37981ae1$var$SDPUtils.writeSctpDescription = function(media, sctp) {\n    let output = [];\n    if (media.protocol !== 'DTLS/SCTP') output = [\n        'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n        'c=IN IP4 0.0.0.0\\r\\n',\n        'a=sctp-port:' + sctp.port + '\\r\\n'\n    ];\n    else output = [\n        'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n        'c=IN IP4 0.0.0.0\\r\\n',\n        'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n'\n    ];\n    if (sctp.maxMessageSize !== undefined) output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n    return output.join('');\n};\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\n$44a3bc4c37981ae1$var$SDPUtils.generateSessionId = function() {\n    return Math.random().toString().substr(2, 22);\n};\n// Write boiler plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\n$44a3bc4c37981ae1$var$SDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n    let sessionId;\n    const version = sessVer !== undefined ? sessVer : 2;\n    if (sessId) sessionId = sessId;\n    else sessionId = $44a3bc4c37981ae1$var$SDPUtils.generateSessionId();\n    const user = sessUser || 'thisisadapterortc';\n    // FIXME: sess-id should be an NTP timestamp.\n    return \"v=0\\r\\no=\" + user + ' ' + sessionId + ' ' + version + ' IN IP4 127.0.0.1\\r\\n' + 's=-\\r\\n' + 't=0 0\\r\\n';\n};\n// Gets the direction from the mediaSection or the sessionpart.\n$44a3bc4c37981ae1$var$SDPUtils.getDirection = function(mediaSection, sessionpart) {\n    // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n    const lines = $44a3bc4c37981ae1$var$SDPUtils.splitLines(mediaSection);\n    for(let i = 0; i < lines.length; i++)switch(lines[i]){\n        case 'a=sendrecv':\n        case 'a=sendonly':\n        case 'a=recvonly':\n        case 'a=inactive':\n            return lines[i].substring(2);\n        default:\n    }\n    if (sessionpart) return $44a3bc4c37981ae1$var$SDPUtils.getDirection(sessionpart);\n    return 'sendrecv';\n};\n$44a3bc4c37981ae1$var$SDPUtils.getKind = function(mediaSection) {\n    const lines = $44a3bc4c37981ae1$var$SDPUtils.splitLines(mediaSection);\n    const mline = lines[0].split(' ');\n    return mline[0].substring(2);\n};\n$44a3bc4c37981ae1$var$SDPUtils.isRejected = function(mediaSection) {\n    return mediaSection.split(' ', 2)[1] === '0';\n};\n$44a3bc4c37981ae1$var$SDPUtils.parseMLine = function(mediaSection) {\n    const lines = $44a3bc4c37981ae1$var$SDPUtils.splitLines(mediaSection);\n    const parts = lines[0].substring(2).split(' ');\n    return {\n        kind: parts[0],\n        port: parseInt(parts[1], 10),\n        protocol: parts[2],\n        fmt: parts.slice(3).join(' ')\n    };\n};\n$44a3bc4c37981ae1$var$SDPUtils.parseOLine = function(mediaSection) {\n    const line = $44a3bc4c37981ae1$var$SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n    const parts = line.substring(2).split(' ');\n    return {\n        username: parts[0],\n        sessionId: parts[1],\n        sessionVersion: parseInt(parts[2], 10),\n        netType: parts[3],\n        addressType: parts[4],\n        address: parts[5]\n    };\n};\n// a very naive interpretation of a valid SDP.\n$44a3bc4c37981ae1$var$SDPUtils.isValidSDP = function(blob) {\n    if (typeof blob !== 'string' || blob.length === 0) return false;\n    const lines = $44a3bc4c37981ae1$var$SDPUtils.splitLines(blob);\n    for(let i = 0; i < lines.length; i++){\n        if (lines[i].length < 2 || lines[i].charAt(1) !== '=') return false;\n    // TODO: check the modifier a bit more.\n    }\n    return true;\n};\n$44a3bc4c37981ae1$exports = $44a3bc4c37981ae1$var$SDPUtils;\n\n\n\n'use strict';\nfunction $09ac04e9099fa679$export$cf133661e444ccfe(window) {\n    // foundation is arbitrarily chosen as an indicator for full support for\n    // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n    if (!window.RTCIceCandidate || window.RTCIceCandidate && 'foundation' in window.RTCIceCandidate.prototype) return;\n    const NativeRTCIceCandidate = window.RTCIceCandidate;\n    window.RTCIceCandidate = function RTCIceCandidate(args) {\n        // Remove the a= which shouldn't be part of the candidate string.\n        if (typeof args === 'object' && args.candidate && args.candidate.indexOf('a=') === 0) {\n            args = JSON.parse(JSON.stringify(args));\n            args.candidate = args.candidate.substring(2);\n        }\n        if (args.candidate && args.candidate.length) {\n            // Augment the native candidate with the parsed fields.\n            const nativeCandidate = new NativeRTCIceCandidate(args);\n            const parsedCandidate = (0, (/*@__PURE__*/$parcel$interopDefault($44a3bc4c37981ae1$exports))).parseCandidate(args.candidate);\n            for(const key in parsedCandidate)if (!(key in nativeCandidate)) Object.defineProperty(nativeCandidate, key, {\n                value: parsedCandidate[key]\n            });\n            // Override serializer to not serialize the extra attributes.\n            nativeCandidate.toJSON = function toJSON() {\n                return {\n                    candidate: nativeCandidate.candidate,\n                    sdpMid: nativeCandidate.sdpMid,\n                    sdpMLineIndex: nativeCandidate.sdpMLineIndex,\n                    usernameFragment: nativeCandidate.usernameFragment\n                };\n            };\n            return nativeCandidate;\n        }\n        return new NativeRTCIceCandidate(args);\n    };\n    window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n    // Hook up the augmented candidate in onicecandidate and\n    // addEventListener('icecandidate', ...)\n    $1974f6191091ae7b$export$1f48841962b828b1(window, 'icecandidate', (e)=>{\n        if (e.candidate) Object.defineProperty(e, 'candidate', {\n            value: new window.RTCIceCandidate(e.candidate),\n            writable: 'false'\n        });\n        return e;\n    });\n}\nfunction $09ac04e9099fa679$export$fdafb8d8280e29b5(window) {\n    if (!window.RTCIceCandidate || window.RTCIceCandidate && 'relayProtocol' in window.RTCIceCandidate.prototype) return;\n    // Hook up the augmented candidate in onicecandidate and\n    // addEventListener('icecandidate', ...)\n    $1974f6191091ae7b$export$1f48841962b828b1(window, 'icecandidate', (e)=>{\n        if (e.candidate) {\n            const parsedCandidate = (0, (/*@__PURE__*/$parcel$interopDefault($44a3bc4c37981ae1$exports))).parseCandidate(e.candidate.candidate);\n            if (parsedCandidate.type === 'relay') // This is a libwebrtc-specific mapping of local type preference\n            // to relayProtocol.\n            e.candidate.relayProtocol = ({\n                0: 'tls',\n                1: 'tcp',\n                2: 'udp'\n            })[parsedCandidate.priority >> 24];\n        }\n        return e;\n    });\n}\nfunction $09ac04e9099fa679$export$a99147c78a56edc4(window, browserDetails) {\n    if (!window.RTCPeerConnection) return;\n    if (!('sctp' in window.RTCPeerConnection.prototype)) Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n        get () {\n            return typeof this._sctp === 'undefined' ? null : this._sctp;\n        }\n    });\n    const sctpInDescription = function(description) {\n        if (!description || !description.sdp) return false;\n        const sections = (0, (/*@__PURE__*/$parcel$interopDefault($44a3bc4c37981ae1$exports))).splitSections(description.sdp);\n        sections.shift();\n        return sections.some((mediaSection)=>{\n            const mLine = (0, (/*@__PURE__*/$parcel$interopDefault($44a3bc4c37981ae1$exports))).parseMLine(mediaSection);\n            return mLine && mLine.kind === 'application' && mLine.protocol.indexOf('SCTP') !== -1;\n        });\n    };\n    const getRemoteFirefoxVersion = function(description) {\n        // TODO: Is there a better solution for detecting Firefox?\n        const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n        if (match === null || match.length < 2) return -1;\n        const version = parseInt(match[1], 10);\n        // Test for NaN (yes, this is ugly)\n        return version !== version ? -1 : version;\n    };\n    const getCanSendMaxMessageSize = function(remoteIsFirefox) {\n        // Every implementation we know can send at least 64 KiB.\n        // Note: Although Chrome is technically able to send up to 256 KiB, the\n        //       data does not reach the other peer reliably.\n        //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n        let canSendMaxMessageSize = 65536;\n        if (browserDetails.browser === 'firefox') {\n            if (browserDetails.version < 57) {\n                if (remoteIsFirefox === -1) // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n                // fragmentation.\n                canSendMaxMessageSize = 16384;\n                else // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n                // messages. Thus, supporting ~2 GiB when sending.\n                canSendMaxMessageSize = 2147483637;\n            } else if (browserDetails.version < 60) // Currently, all FF >= 57 will reset the remote maximum message size\n            // to the default value when a data channel is created at a later\n            // stage. :(\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n            canSendMaxMessageSize = browserDetails.version === 57 ? 65535 : 65536;\n            else // FF >= 60 supports sending ~2 GiB\n            canSendMaxMessageSize = 2147483637;\n        }\n        return canSendMaxMessageSize;\n    };\n    const getMaxMessageSize = function(description, remoteIsFirefox) {\n        // Note: 65536 bytes is the default value from the SDP spec. Also,\n        //       every implementation we know supports receiving 65536 bytes.\n        let maxMessageSize = 65536;\n        // FF 57 has a slightly incorrect default remote max message size, so\n        // we need to adjust it here to avoid a failure when sending.\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n        if (browserDetails.browser === 'firefox' && browserDetails.version === 57) maxMessageSize = 65535;\n        const match = (0, (/*@__PURE__*/$parcel$interopDefault($44a3bc4c37981ae1$exports))).matchPrefix(description.sdp, 'a=max-message-size:');\n        if (match.length > 0) maxMessageSize = parseInt(match[0].substring(19), 10);\n        else if (browserDetails.browser === 'firefox' && remoteIsFirefox !== -1) // If the maximum message size is not present in the remote SDP and\n        // both local and remote are Firefox, the remote peer can receive\n        // ~2 GiB.\n        maxMessageSize = 2147483637;\n        return maxMessageSize;\n    };\n    const origSetRemoteDescription = window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription() {\n        this._sctp = null;\n        // Chrome decided to not expose .sctp in plan-b mode.\n        // As usual, adapter.js has to do an 'ugly worakaround'\n        // to cover up the mess.\n        if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n            const { sdpSemantics: sdpSemantics } = this.getConfiguration();\n            if (sdpSemantics === 'plan-b') Object.defineProperty(this, 'sctp', {\n                get () {\n                    return typeof this._sctp === 'undefined' ? null : this._sctp;\n                },\n                enumerable: true,\n                configurable: true\n            });\n        }\n        if (sctpInDescription(arguments[0])) {\n            // Check if the remote is FF.\n            const isFirefox = getRemoteFirefoxVersion(arguments[0]);\n            // Get the maximum message size the local peer is capable of sending\n            const canSendMMS = getCanSendMaxMessageSize(isFirefox);\n            // Get the maximum message size of the remote peer.\n            const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n            // Determine final maximum message size\n            let maxMessageSize;\n            if (canSendMMS === 0 && remoteMMS === 0) maxMessageSize = Number.POSITIVE_INFINITY;\n            else if (canSendMMS === 0 || remoteMMS === 0) maxMessageSize = Math.max(canSendMMS, remoteMMS);\n            else maxMessageSize = Math.min(canSendMMS, remoteMMS);\n            // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n            // attribute.\n            const sctp = {};\n            Object.defineProperty(sctp, 'maxMessageSize', {\n                get () {\n                    return maxMessageSize;\n                }\n            });\n            this._sctp = sctp;\n        }\n        return origSetRemoteDescription.apply(this, arguments);\n    };\n}\nfunction $09ac04e9099fa679$export$d461c8d5c5db5da7(window) {\n    if (!(window.RTCPeerConnection && 'createDataChannel' in window.RTCPeerConnection.prototype)) return;\n    // Note: Although Firefox >= 57 has a native implementation, the maximum\n    //       message size can be reset for all data channels at a later stage.\n    //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n    function wrapDcSend(dc, pc) {\n        const origDataChannelSend = dc.send;\n        dc.send = function send() {\n            const data = arguments[0];\n            const length = data.length || data.size || data.byteLength;\n            if (dc.readyState === 'open' && pc.sctp && length > pc.sctp.maxMessageSize) throw new TypeError('Message too large (can send a maximum of ' + pc.sctp.maxMessageSize + ' bytes)');\n            return origDataChannelSend.apply(dc, arguments);\n        };\n    }\n    const origCreateDataChannel = window.RTCPeerConnection.prototype.createDataChannel;\n    window.RTCPeerConnection.prototype.createDataChannel = function createDataChannel() {\n        const dataChannel = origCreateDataChannel.apply(this, arguments);\n        wrapDcSend(dataChannel, this);\n        return dataChannel;\n    };\n    $1974f6191091ae7b$export$1f48841962b828b1(window, 'datachannel', (e)=>{\n        wrapDcSend(e.channel, e.target);\n        return e;\n    });\n}\nfunction $09ac04e9099fa679$export$63bb816cc75460(window) {\n    if (!window.RTCPeerConnection || 'connectionState' in window.RTCPeerConnection.prototype) return;\n    const proto = window.RTCPeerConnection.prototype;\n    Object.defineProperty(proto, 'connectionState', {\n        get () {\n            return ({\n                completed: 'connected',\n                checking: 'connecting'\n            })[this.iceConnectionState] || this.iceConnectionState;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(proto, 'onconnectionstatechange', {\n        get () {\n            return this._onconnectionstatechange || null;\n        },\n        set (cb) {\n            if (this._onconnectionstatechange) {\n                this.removeEventListener('connectionstatechange', this._onconnectionstatechange);\n                delete this._onconnectionstatechange;\n            }\n            if (cb) this.addEventListener('connectionstatechange', this._onconnectionstatechange = cb);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    [\n        'setLocalDescription',\n        'setRemoteDescription'\n    ].forEach((method)=>{\n        const origMethod = proto[method];\n        proto[method] = function() {\n            if (!this._connectionstatechangepoly) {\n                this._connectionstatechangepoly = (e)=>{\n                    const pc = e.target;\n                    if (pc._lastConnectionState !== pc.connectionState) {\n                        pc._lastConnectionState = pc.connectionState;\n                        const newEvent = new Event('connectionstatechange', e);\n                        pc.dispatchEvent(newEvent);\n                    }\n                    return e;\n                };\n                this.addEventListener('iceconnectionstatechange', this._connectionstatechangepoly);\n            }\n            return origMethod.apply(this, arguments);\n        };\n    });\n}\nfunction $09ac04e9099fa679$export$a57d114344295149(window, browserDetails) {\n    /* remove a=extmap-allow-mixed for webrtc.org < M71 */ if (!window.RTCPeerConnection) return;\n    if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) return;\n    if (browserDetails.browser === 'safari' && browserDetails.version >= 605) return;\n    const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription(desc) {\n        if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n            const sdp = desc.sdp.split('\\n').filter((line)=>{\n                return line.trim() !== 'a=extmap-allow-mixed';\n            }).join('\\n');\n            // Safari enforces read-only-ness of RTCSessionDescription fields.\n            if (window.RTCSessionDescription && desc instanceof window.RTCSessionDescription) arguments[0] = new window.RTCSessionDescription({\n                type: desc.type,\n                sdp: sdp\n            });\n            else desc.sdp = sdp;\n        }\n        return nativeSRD.apply(this, arguments);\n    };\n}\nfunction $09ac04e9099fa679$export$51d5e40b48c771c7(window, browserDetails) {\n    // Support for addIceCandidate(null or undefined)\n    // as well as addIceCandidate({candidate: \"\", ...})\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=978582\n    // Note: must be called before other polyfills which change the signature.\n    if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) return;\n    const nativeAddIceCandidate = window.RTCPeerConnection.prototype.addIceCandidate;\n    if (!nativeAddIceCandidate || nativeAddIceCandidate.length === 0) return;\n    window.RTCPeerConnection.prototype.addIceCandidate = function addIceCandidate() {\n        if (!arguments[0]) {\n            if (arguments[1]) arguments[1].apply(null);\n            return Promise.resolve();\n        }\n        // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n        // in older versions.\n        // Native support for ignoring exists for Chrome M77+.\n        // Safari ignores as well, exact version unknown but works in the same\n        // version that also ignores addIceCandidate(null).\n        if ((browserDetails.browser === 'chrome' && browserDetails.version < 78 || browserDetails.browser === 'firefox' && browserDetails.version < 68 || browserDetails.browser === 'safari') && arguments[0] && arguments[0].candidate === '') return Promise.resolve();\n        return nativeAddIceCandidate.apply(this, arguments);\n    };\n}\nfunction $09ac04e9099fa679$export$7170d04e59f9d553(window, browserDetails) {\n    if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) return;\n    const nativeSetLocalDescription = window.RTCPeerConnection.prototype.setLocalDescription;\n    if (!nativeSetLocalDescription || nativeSetLocalDescription.length === 0) return;\n    window.RTCPeerConnection.prototype.setLocalDescription = function setLocalDescription() {\n        let desc = arguments[0] || {};\n        if (typeof desc !== 'object' || desc.type && desc.sdp) return nativeSetLocalDescription.apply(this, arguments);\n        // The remaining steps should technically happen when SLD comes off the\n        // RTCPeerConnection's operations chain (not ahead of going on it), but\n        // this is too difficult to shim. Instead, this shim only covers the\n        // common case where the operations chain is empty. This is imperfect, but\n        // should cover many cases. Rationale: Even if we can't reduce the glare\n        // window to zero on imperfect implementations, there's value in tapping\n        // into the perfect negotiation pattern that several browsers support.\n        desc = {\n            type: desc.type,\n            sdp: desc.sdp\n        };\n        if (!desc.type) switch(this.signalingState){\n            case 'stable':\n            case 'have-local-offer':\n            case 'have-remote-pranswer':\n                desc.type = 'offer';\n                break;\n            default:\n                desc.type = 'answer';\n                break;\n        }\n        if (desc.sdp || desc.type !== 'offer' && desc.type !== 'answer') return nativeSetLocalDescription.apply(this, [\n            desc\n        ]);\n        const func = desc.type === 'offer' ? this.createOffer : this.createAnswer;\n        return func.apply(this).then((d)=>nativeSetLocalDescription.apply(this, [\n                d\n            ]));\n    };\n}\n\n\n\nfunction $6e32bb70829df656$export$e77bf46c04ac7d12({ window: window } = {}, options = {\n    shimChrome: true,\n    shimFirefox: true,\n    shimSafari: true\n}) {\n    // Utils.\n    const logging = $1974f6191091ae7b$export$bef1f36f5486a6a3;\n    const browserDetails = $1974f6191091ae7b$export$2d31490a0c05f094(window);\n    const adapter = {\n        browserDetails: browserDetails,\n        commonShim: $09ac04e9099fa679$exports,\n        extractVersion: $1974f6191091ae7b$export$e3c02be309be1f23,\n        disableLog: $1974f6191091ae7b$export$afbfee8cc06fd3e4,\n        disableWarnings: $1974f6191091ae7b$export$51516be4b019e41e,\n        sdp: // Expose sdp as a convenience. For production apps include directly.\n        $44a3bc4c37981ae1$exports\n    };\n    // Shim browser if found.\n    switch(browserDetails.browser){\n        case 'chrome':\n            if (!$c5cc2dfcf2e6688a$exports || !$c5cc2dfcf2e6688a$exports.shimPeerConnection || !options.shimChrome) {\n                logging('Chrome shim is not included in this adapter release.');\n                return adapter;\n            }\n            if (browserDetails.version === null) {\n                logging('Chrome shim can not determine version, not shimming.');\n                return adapter;\n            }\n            logging('adapter.js shimming chrome.');\n            // Export to the adapter global object visible in the browser.\n            adapter.browserShim = $c5cc2dfcf2e6688a$exports;\n            // Must be called before shimPeerConnection.\n            $09ac04e9099fa679$export$51d5e40b48c771c7(window, browserDetails);\n            $09ac04e9099fa679$export$7170d04e59f9d553(window, browserDetails);\n            $c5cc2dfcf2e6688a$exports.shimGetUserMedia(window, browserDetails);\n            $c5cc2dfcf2e6688a$exports.shimMediaStream(window, browserDetails);\n            $c5cc2dfcf2e6688a$exports.shimPeerConnection(window, browserDetails);\n            $c5cc2dfcf2e6688a$exports.shimOnTrack(window, browserDetails);\n            $c5cc2dfcf2e6688a$exports.shimAddTrackRemoveTrack(window, browserDetails);\n            $c5cc2dfcf2e6688a$exports.shimGetSendersWithDtmf(window, browserDetails);\n            $c5cc2dfcf2e6688a$exports.shimGetStats(window, browserDetails);\n            $c5cc2dfcf2e6688a$exports.shimSenderReceiverGetStats(window, browserDetails);\n            $c5cc2dfcf2e6688a$exports.fixNegotiationNeeded(window, browserDetails);\n            $09ac04e9099fa679$export$cf133661e444ccfe(window, browserDetails);\n            $09ac04e9099fa679$export$fdafb8d8280e29b5(window, browserDetails);\n            $09ac04e9099fa679$export$63bb816cc75460(window, browserDetails);\n            $09ac04e9099fa679$export$a99147c78a56edc4(window, browserDetails);\n            $09ac04e9099fa679$export$d461c8d5c5db5da7(window, browserDetails);\n            $09ac04e9099fa679$export$a57d114344295149(window, browserDetails);\n            break;\n        case 'firefox':\n            if (!$dedea9f1dba18edb$exports || !$dedea9f1dba18edb$exports.shimPeerConnection || !options.shimFirefox) {\n                logging('Firefox shim is not included in this adapter release.');\n                return adapter;\n            }\n            logging('adapter.js shimming firefox.');\n            // Export to the adapter global object visible in the browser.\n            adapter.browserShim = $dedea9f1dba18edb$exports;\n            // Must be called before shimPeerConnection.\n            $09ac04e9099fa679$export$51d5e40b48c771c7(window, browserDetails);\n            $09ac04e9099fa679$export$7170d04e59f9d553(window, browserDetails);\n            $dedea9f1dba18edb$exports.shimGetUserMedia(window, browserDetails);\n            $dedea9f1dba18edb$exports.shimPeerConnection(window, browserDetails);\n            $dedea9f1dba18edb$exports.shimOnTrack(window, browserDetails);\n            $dedea9f1dba18edb$exports.shimRemoveStream(window, browserDetails);\n            $dedea9f1dba18edb$exports.shimSenderGetStats(window, browserDetails);\n            $dedea9f1dba18edb$exports.shimReceiverGetStats(window, browserDetails);\n            $dedea9f1dba18edb$exports.shimRTCDataChannel(window, browserDetails);\n            $dedea9f1dba18edb$exports.shimAddTransceiver(window, browserDetails);\n            $dedea9f1dba18edb$exports.shimGetParameters(window, browserDetails);\n            $dedea9f1dba18edb$exports.shimCreateOffer(window, browserDetails);\n            $dedea9f1dba18edb$exports.shimCreateAnswer(window, browserDetails);\n            $09ac04e9099fa679$export$cf133661e444ccfe(window, browserDetails);\n            $09ac04e9099fa679$export$63bb816cc75460(window, browserDetails);\n            $09ac04e9099fa679$export$a99147c78a56edc4(window, browserDetails);\n            $09ac04e9099fa679$export$d461c8d5c5db5da7(window, browserDetails);\n            break;\n        case 'safari':\n            if (!$ef77da9e8f828c50$exports || !options.shimSafari) {\n                logging('Safari shim is not included in this adapter release.');\n                return adapter;\n            }\n            logging('adapter.js shimming safari.');\n            // Export to the adapter global object visible in the browser.\n            adapter.browserShim = $ef77da9e8f828c50$exports;\n            // Must be called before shimCallbackAPI.\n            $09ac04e9099fa679$export$51d5e40b48c771c7(window, browserDetails);\n            $09ac04e9099fa679$export$7170d04e59f9d553(window, browserDetails);\n            $ef77da9e8f828c50$exports.shimRTCIceServerUrls(window, browserDetails);\n            $ef77da9e8f828c50$exports.shimCreateOfferLegacy(window, browserDetails);\n            $ef77da9e8f828c50$exports.shimCallbacksAPI(window, browserDetails);\n            $ef77da9e8f828c50$exports.shimLocalStreamsAPI(window, browserDetails);\n            $ef77da9e8f828c50$exports.shimRemoteStreamsAPI(window, browserDetails);\n            $ef77da9e8f828c50$exports.shimTrackEventTransceiver(window, browserDetails);\n            $ef77da9e8f828c50$exports.shimGetUserMedia(window, browserDetails);\n            $ef77da9e8f828c50$exports.shimAudioContext(window, browserDetails);\n            $09ac04e9099fa679$export$cf133661e444ccfe(window, browserDetails);\n            $09ac04e9099fa679$export$fdafb8d8280e29b5(window, browserDetails);\n            $09ac04e9099fa679$export$a99147c78a56edc4(window, browserDetails);\n            $09ac04e9099fa679$export$d461c8d5c5db5da7(window, browserDetails);\n            $09ac04e9099fa679$export$a57d114344295149(window, browserDetails);\n            break;\n        default:\n            logging('Unsupported browser!');\n            break;\n    }\n    return adapter;\n}\n\n\n'use strict';\nconst $6b88aef9b263becf$var$adapter = (0, $6e32bb70829df656$export$e77bf46c04ac7d12)({\n    window: typeof window === 'undefined' ? undefined : window\n});\nvar $6b88aef9b263becf$export$2e2bcd8739ae039 = $6b88aef9b263becf$var$adapter;\n\n\nvar $b364f2cd2faf3e98$exports = {};\n\"use strict\";\n\n\nvar $fdd18942f3b79c14$require$Buffer = $b364f2cd2faf3e98$exports.Buffer;\nlet $fdd18942f3b79c14$var$decoder;\ntry {\n    $fdd18942f3b79c14$var$decoder = new TextDecoder();\n} catch (error) {}\nlet $fdd18942f3b79c14$var$src;\nlet $fdd18942f3b79c14$var$srcEnd;\nlet $fdd18942f3b79c14$var$position = 0;\nlet $fdd18942f3b79c14$var$alreadySet;\nconst $fdd18942f3b79c14$var$EMPTY_ARRAY = [];\nconst $fdd18942f3b79c14$var$LEGACY_RECORD_INLINE_ID = 105;\nconst $fdd18942f3b79c14$var$RECORD_DEFINITIONS_ID = 0xdffe;\nconst $fdd18942f3b79c14$var$RECORD_INLINE_ID = 0xdfff // temporary first-come first-serve tag // proposed tag: 0x7265 // 're'\n;\nconst $fdd18942f3b79c14$var$BUNDLED_STRINGS_ID = 0xdff9;\nconst $fdd18942f3b79c14$var$PACKED_TABLE_TAG_ID = 51;\nconst $fdd18942f3b79c14$var$PACKED_REFERENCE_TAG_ID = 6;\nconst $fdd18942f3b79c14$var$STOP_CODE = {};\nlet $fdd18942f3b79c14$var$strings = $fdd18942f3b79c14$var$EMPTY_ARRAY;\nlet $fdd18942f3b79c14$var$stringPosition = 0;\nlet $fdd18942f3b79c14$var$currentDecoder = {};\nlet $fdd18942f3b79c14$var$currentStructures;\nlet $fdd18942f3b79c14$var$srcString;\nlet $fdd18942f3b79c14$var$srcStringStart = 0;\nlet $fdd18942f3b79c14$var$srcStringEnd = 0;\nlet $fdd18942f3b79c14$var$bundledStrings;\nlet $fdd18942f3b79c14$var$referenceMap;\nlet $fdd18942f3b79c14$var$currentExtensions = [];\nlet $fdd18942f3b79c14$var$currentExtensionRanges = [];\nlet $fdd18942f3b79c14$var$packedValues;\nlet $fdd18942f3b79c14$var$dataView;\nlet $fdd18942f3b79c14$var$restoreMapsAsObject;\nlet $fdd18942f3b79c14$var$defaultOptions = {\n    useRecords: false,\n    mapsAsObjects: true\n};\nlet $fdd18942f3b79c14$var$sequentialMode = false;\nlet $fdd18942f3b79c14$var$inlineObjectReadThreshold = 2;\nvar $fdd18942f3b79c14$var$BlockedFunction // we use search and replace to change the next call to BlockedFunction to avoid CSP issues for\n;\n// no-eval build\ntry {\n    new Function('');\n} catch (error) {\n    // if eval variants are not supported, do not create inline object readers ever\n    $fdd18942f3b79c14$var$inlineObjectReadThreshold = Infinity;\n}\nclass $fdd18942f3b79c14$export$f9de6ca0bc043724 {\n    constructor(options){\n        if (options) {\n            if ((options.keyMap || options._keyMap) && !options.useRecords) {\n                options.useRecords = false;\n                options.mapsAsObjects = true;\n            }\n            if (options.useRecords === false && options.mapsAsObjects === undefined) options.mapsAsObjects = true;\n            if (options.getStructures) options.getShared = options.getStructures;\n            if (options.getShared && !options.structures) (options.structures = []).uninitialized = true // this is what we use to denote an uninitialized structures\n            ;\n            if (options.keyMap) {\n                this.mapKey = new Map();\n                for (let [k, v] of Object.entries(options.keyMap))this.mapKey.set(v, k);\n            }\n        }\n        Object.assign(this, options);\n    }\n    /*\n\tdecodeKey(key) {\n\t\treturn this.keyMap\n\t\t\t? Object.keys(this.keyMap)[Object.values(this.keyMap).indexOf(key)] || key\n\t\t\t: key\n\t}\n\t*/ decodeKey(key) {\n        return this.keyMap ? this.mapKey.get(key) || key : key;\n    }\n    encodeKey(key) {\n        return this.keyMap && this.keyMap.hasOwnProperty(key) ? this.keyMap[key] : key;\n    }\n    encodeKeys(rec) {\n        if (!this._keyMap) return rec;\n        let map = new Map();\n        for (let [k, v] of Object.entries(rec))map.set(this._keyMap.hasOwnProperty(k) ? this._keyMap[k] : k, v);\n        return map;\n    }\n    decodeKeys(map) {\n        if (!this._keyMap || map.constructor.name != 'Map') return map;\n        if (!this._mapKey) {\n            this._mapKey = new Map();\n            for (let [k, v] of Object.entries(this._keyMap))this._mapKey.set(v, k);\n        }\n        let res = {};\n        //map.forEach((v,k) => res[Object.keys(this._keyMap)[Object.values(this._keyMap).indexOf(k)] || k] = v)\n        map.forEach((v, k)=>res[$fdd18942f3b79c14$var$safeKey(this._mapKey.has(k) ? this._mapKey.get(k) : k)] = v);\n        return res;\n    }\n    mapDecode(source, end) {\n        let res = this.decode(source);\n        if (this._keyMap) //Experiemntal support for Optimised KeyMap  decoding \n        switch(res.constructor.name){\n            case 'Array':\n                return res.map((r)=>this.decodeKeys(r));\n        }\n        return res;\n    }\n    decode(source, end) {\n        if ($fdd18942f3b79c14$var$src) // re-entrant execution, save the state and restore it after we do this decode\n        return $fdd18942f3b79c14$var$saveState(()=>{\n            $fdd18942f3b79c14$export$e6f020404d5b6c15();\n            return this ? this.decode(source, end) : $fdd18942f3b79c14$export$f9de6ca0bc043724.prototype.decode.call($fdd18942f3b79c14$var$defaultOptions, source, end);\n        });\n        $fdd18942f3b79c14$var$srcEnd = end > -1 ? end : source.length;\n        $fdd18942f3b79c14$var$position = 0;\n        $fdd18942f3b79c14$var$stringPosition = 0;\n        $fdd18942f3b79c14$var$srcStringEnd = 0;\n        $fdd18942f3b79c14$var$srcString = null;\n        $fdd18942f3b79c14$var$strings = $fdd18942f3b79c14$var$EMPTY_ARRAY;\n        $fdd18942f3b79c14$var$bundledStrings = null;\n        $fdd18942f3b79c14$var$src = source;\n        // this provides cached access to the data view for a buffer if it is getting reused, which is a recommend\n        // technique for getting data from a database where it can be copied into an existing buffer instead of creating\n        // new ones\n        try {\n            $fdd18942f3b79c14$var$dataView = source.dataView || (source.dataView = new DataView(source.buffer, source.byteOffset, source.byteLength));\n        } catch (error) {\n            // if it doesn't have a buffer, maybe it is the wrong type of object\n            $fdd18942f3b79c14$var$src = null;\n            if (source instanceof Uint8Array) throw error;\n            throw new Error('Source must be a Uint8Array or Buffer but was a ' + (source && typeof source == 'object' ? source.constructor.name : typeof source));\n        }\n        if (this instanceof $fdd18942f3b79c14$export$f9de6ca0bc043724) {\n            $fdd18942f3b79c14$var$currentDecoder = this;\n            $fdd18942f3b79c14$var$packedValues = this.sharedValues && (this.pack ? new Array(this.maxPrivatePackedValues || 16).concat(this.sharedValues) : this.sharedValues);\n            if (this.structures) {\n                $fdd18942f3b79c14$var$currentStructures = this.structures;\n                return $fdd18942f3b79c14$export$8cb90b5f58dd32e2();\n            } else if (!$fdd18942f3b79c14$var$currentStructures || $fdd18942f3b79c14$var$currentStructures.length > 0) $fdd18942f3b79c14$var$currentStructures = [];\n        } else {\n            $fdd18942f3b79c14$var$currentDecoder = $fdd18942f3b79c14$var$defaultOptions;\n            if (!$fdd18942f3b79c14$var$currentStructures || $fdd18942f3b79c14$var$currentStructures.length > 0) $fdd18942f3b79c14$var$currentStructures = [];\n            $fdd18942f3b79c14$var$packedValues = null;\n        }\n        return $fdd18942f3b79c14$export$8cb90b5f58dd32e2();\n    }\n    decodeMultiple(source, forEach) {\n        let values, lastPosition = 0;\n        try {\n            let size = source.length;\n            $fdd18942f3b79c14$var$sequentialMode = true;\n            let value = this ? this.decode(source, size) : $fdd18942f3b79c14$var$defaultDecoder.decode(source, size);\n            if (forEach) {\n                if (forEach(value) === false) return;\n                while($fdd18942f3b79c14$var$position < size){\n                    lastPosition = $fdd18942f3b79c14$var$position;\n                    if (forEach($fdd18942f3b79c14$export$8cb90b5f58dd32e2()) === false) return;\n                }\n            } else {\n                values = [\n                    value\n                ];\n                while($fdd18942f3b79c14$var$position < size){\n                    lastPosition = $fdd18942f3b79c14$var$position;\n                    values.push($fdd18942f3b79c14$export$8cb90b5f58dd32e2());\n                }\n                return values;\n            }\n        } catch (error) {\n            error.lastPosition = lastPosition;\n            error.values = values;\n            throw error;\n        } finally{\n            $fdd18942f3b79c14$var$sequentialMode = false;\n            $fdd18942f3b79c14$export$e6f020404d5b6c15();\n        }\n    }\n}\nfunction $fdd18942f3b79c14$export$1690e12b840569b9() {\n    return $fdd18942f3b79c14$var$position;\n}\nfunction $fdd18942f3b79c14$export$8cb90b5f58dd32e2() {\n    try {\n        let result = $fdd18942f3b79c14$export$aafa59e2e03f2942();\n        if ($fdd18942f3b79c14$var$bundledStrings) {\n            if ($fdd18942f3b79c14$var$position >= $fdd18942f3b79c14$var$bundledStrings.postBundlePosition) {\n                let error = new Error('Unexpected bundle position');\n                error.incomplete = true;\n                throw error;\n            }\n            // bundled strings to skip past\n            $fdd18942f3b79c14$var$position = $fdd18942f3b79c14$var$bundledStrings.postBundlePosition;\n            $fdd18942f3b79c14$var$bundledStrings = null;\n        }\n        if ($fdd18942f3b79c14$var$position == $fdd18942f3b79c14$var$srcEnd) {\n            // finished reading this source, cleanup references\n            $fdd18942f3b79c14$var$currentStructures = null;\n            $fdd18942f3b79c14$var$src = null;\n            if ($fdd18942f3b79c14$var$referenceMap) $fdd18942f3b79c14$var$referenceMap = null;\n        } else if ($fdd18942f3b79c14$var$position > $fdd18942f3b79c14$var$srcEnd) {\n            // over read\n            let error = new Error('Unexpected end of CBOR data');\n            error.incomplete = true;\n            throw error;\n        } else if (!$fdd18942f3b79c14$var$sequentialMode) throw new Error('Data read, but end of buffer not reached');\n        // else more to read, but we are reading sequentially, so don't clear source yet\n        return result;\n    } catch (error) {\n        $fdd18942f3b79c14$export$e6f020404d5b6c15();\n        if (error instanceof RangeError || error.message.startsWith('Unexpected end of buffer')) error.incomplete = true;\n        throw error;\n    }\n}\nfunction $fdd18942f3b79c14$export$aafa59e2e03f2942() {\n    let token = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n    let majorType = token >> 5;\n    token = token & 0x1f;\n    if (token > 0x17) switch(token){\n        case 0x18:\n            token = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n            break;\n        case 0x19:\n            if (majorType == 7) return $fdd18942f3b79c14$var$getFloat16();\n            token = $fdd18942f3b79c14$var$dataView.getUint16($fdd18942f3b79c14$var$position);\n            $fdd18942f3b79c14$var$position += 2;\n            break;\n        case 0x1a:\n            if (majorType == 7) {\n                let value = $fdd18942f3b79c14$var$dataView.getFloat32($fdd18942f3b79c14$var$position);\n                if ($fdd18942f3b79c14$var$currentDecoder.useFloat32 > 2) {\n                    // this does rounding of numbers that were encoded in 32-bit float to nearest significant decimal digit that could be preserved\n                    let multiplier = $fdd18942f3b79c14$export$c652a5bbb6be7a36[($fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position] & 0x7f) << 1 | $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position + 1] >> 7];\n                    $fdd18942f3b79c14$var$position += 4;\n                    return (multiplier * value + (value > 0 ? 0.5 : -0.5) >> 0) / multiplier;\n                }\n                $fdd18942f3b79c14$var$position += 4;\n                return value;\n            }\n            token = $fdd18942f3b79c14$var$dataView.getUint32($fdd18942f3b79c14$var$position);\n            $fdd18942f3b79c14$var$position += 4;\n            break;\n        case 0x1b:\n            if (majorType == 7) {\n                let value = $fdd18942f3b79c14$var$dataView.getFloat64($fdd18942f3b79c14$var$position);\n                $fdd18942f3b79c14$var$position += 8;\n                return value;\n            }\n            if (majorType > 1) {\n                if ($fdd18942f3b79c14$var$dataView.getUint32($fdd18942f3b79c14$var$position) > 0) throw new Error('JavaScript does not support arrays, maps, or strings with length over 4294967295');\n                token = $fdd18942f3b79c14$var$dataView.getUint32($fdd18942f3b79c14$var$position + 4);\n            } else if ($fdd18942f3b79c14$var$currentDecoder.int64AsNumber) {\n                token = $fdd18942f3b79c14$var$dataView.getUint32($fdd18942f3b79c14$var$position) * 0x100000000;\n                token += $fdd18942f3b79c14$var$dataView.getUint32($fdd18942f3b79c14$var$position + 4);\n            } else token = $fdd18942f3b79c14$var$dataView.getBigUint64($fdd18942f3b79c14$var$position);\n            $fdd18942f3b79c14$var$position += 8;\n            break;\n        case 0x1f:\n            // indefinite length\n            switch(majorType){\n                case 2:\n                case 3:\n                    throw new Error('Indefinite length not supported for byte or text strings');\n                case 4:\n                    let array = [];\n                    let value, i = 0;\n                    while((value = $fdd18942f3b79c14$export$aafa59e2e03f2942()) != $fdd18942f3b79c14$var$STOP_CODE)array[i++] = value;\n                    return majorType == 4 ? array : majorType == 3 ? array.join('') : $fdd18942f3b79c14$require$Buffer.concat(array);\n                case 5:\n                    let key;\n                    if ($fdd18942f3b79c14$var$currentDecoder.mapsAsObjects) {\n                        let object = {};\n                        if ($fdd18942f3b79c14$var$currentDecoder.keyMap) while((key = $fdd18942f3b79c14$export$aafa59e2e03f2942()) != $fdd18942f3b79c14$var$STOP_CODE)object[$fdd18942f3b79c14$var$safeKey($fdd18942f3b79c14$var$currentDecoder.decodeKey(key))] = $fdd18942f3b79c14$export$aafa59e2e03f2942();\n                        else while((key = $fdd18942f3b79c14$export$aafa59e2e03f2942()) != $fdd18942f3b79c14$var$STOP_CODE)object[$fdd18942f3b79c14$var$safeKey(key)] = $fdd18942f3b79c14$export$aafa59e2e03f2942();\n                        return object;\n                    } else {\n                        if ($fdd18942f3b79c14$var$restoreMapsAsObject) {\n                            $fdd18942f3b79c14$var$currentDecoder.mapsAsObjects = true;\n                            $fdd18942f3b79c14$var$restoreMapsAsObject = false;\n                        }\n                        let map = new Map();\n                        if ($fdd18942f3b79c14$var$currentDecoder.keyMap) while((key = $fdd18942f3b79c14$export$aafa59e2e03f2942()) != $fdd18942f3b79c14$var$STOP_CODE)map.set($fdd18942f3b79c14$var$currentDecoder.decodeKey(key), $fdd18942f3b79c14$export$aafa59e2e03f2942());\n                        else while((key = $fdd18942f3b79c14$export$aafa59e2e03f2942()) != $fdd18942f3b79c14$var$STOP_CODE)map.set(key, $fdd18942f3b79c14$export$aafa59e2e03f2942());\n                        return map;\n                    }\n                case 7:\n                    return $fdd18942f3b79c14$var$STOP_CODE;\n                default:\n                    throw new Error('Invalid major type for indefinite length ' + majorType);\n            }\n        default:\n            throw new Error('Unknown token ' + token);\n    }\n    switch(majorType){\n        case 0:\n            return token;\n        case 1:\n            return ~token;\n        case 2:\n            return $fdd18942f3b79c14$var$readBin(token);\n        case 3:\n            if ($fdd18942f3b79c14$var$srcStringEnd >= $fdd18942f3b79c14$var$position) return $fdd18942f3b79c14$var$srcString.slice($fdd18942f3b79c14$var$position - $fdd18942f3b79c14$var$srcStringStart, ($fdd18942f3b79c14$var$position += token) - $fdd18942f3b79c14$var$srcStringStart);\n            if ($fdd18942f3b79c14$var$srcStringEnd == 0 && $fdd18942f3b79c14$var$srcEnd < 140 && token < 32) {\n                // for small blocks, avoiding the overhead of the extract call is helpful\n                let string = token < 16 ? $fdd18942f3b79c14$var$shortStringInJS(token) : $fdd18942f3b79c14$var$longStringInJS(token);\n                if (string != null) return string;\n            }\n            return $fdd18942f3b79c14$var$readFixedString(token);\n        case 4:\n            let array1 = new Array(token);\n            //if (currentDecoder.keyMap) for (let i = 0; i < token; i++) array[i] = currentDecoder.decodeKey(read())\t\n            //else \n            for(let i = 0; i < token; i++)array1[i] = $fdd18942f3b79c14$export$aafa59e2e03f2942();\n            return array1;\n        case 5:\n            if ($fdd18942f3b79c14$var$currentDecoder.mapsAsObjects) {\n                let object = {};\n                if ($fdd18942f3b79c14$var$currentDecoder.keyMap) for(let i = 0; i < token; i++)object[$fdd18942f3b79c14$var$safeKey($fdd18942f3b79c14$var$currentDecoder.decodeKey($fdd18942f3b79c14$export$aafa59e2e03f2942()))] = $fdd18942f3b79c14$export$aafa59e2e03f2942();\n                else for(let i = 0; i < token; i++)object[$fdd18942f3b79c14$var$safeKey($fdd18942f3b79c14$export$aafa59e2e03f2942())] = $fdd18942f3b79c14$export$aafa59e2e03f2942();\n                return object;\n            } else {\n                if ($fdd18942f3b79c14$var$restoreMapsAsObject) {\n                    $fdd18942f3b79c14$var$currentDecoder.mapsAsObjects = true;\n                    $fdd18942f3b79c14$var$restoreMapsAsObject = false;\n                }\n                let map = new Map();\n                if ($fdd18942f3b79c14$var$currentDecoder.keyMap) for(let i = 0; i < token; i++)map.set($fdd18942f3b79c14$var$currentDecoder.decodeKey($fdd18942f3b79c14$export$aafa59e2e03f2942()), $fdd18942f3b79c14$export$aafa59e2e03f2942());\n                else for(let i = 0; i < token; i++)map.set($fdd18942f3b79c14$export$aafa59e2e03f2942(), $fdd18942f3b79c14$export$aafa59e2e03f2942());\n                return map;\n            }\n        case 6:\n            if (token >= $fdd18942f3b79c14$var$BUNDLED_STRINGS_ID) {\n                let structure = $fdd18942f3b79c14$var$currentStructures[token & 0x1fff] // check record structures first\n                ;\n                // At some point we may provide an option for dynamic tag assignment with a range like token >= 8 && (token < 16 || (token > 0x80 && token < 0xc0) || (token > 0x130 && token < 0x4000))\n                if (structure) {\n                    if (!structure.read) structure.read = $fdd18942f3b79c14$var$createStructureReader(structure);\n                    return structure.read();\n                }\n                if (token < 0x10000) {\n                    if (token == $fdd18942f3b79c14$var$RECORD_INLINE_ID) {\n                        // currentExtensions as densely stored array (v8 stores arrays densely under about 3000 elements)\n                        let length = $fdd18942f3b79c14$var$readJustLength();\n                        let id = $fdd18942f3b79c14$export$aafa59e2e03f2942();\n                        let structure = $fdd18942f3b79c14$export$aafa59e2e03f2942();\n                        $fdd18942f3b79c14$var$recordDefinition(id, structure);\n                        let object = {};\n                        if ($fdd18942f3b79c14$var$currentDecoder.keyMap) for(let i = 2; i < length; i++){\n                            let key = $fdd18942f3b79c14$var$currentDecoder.decodeKey(structure[i - 2]);\n                            object[$fdd18942f3b79c14$var$safeKey(key)] = $fdd18942f3b79c14$export$aafa59e2e03f2942();\n                        }\n                        else for(let i = 2; i < length; i++){\n                            let key = structure[i - 2];\n                            object[$fdd18942f3b79c14$var$safeKey(key)] = $fdd18942f3b79c14$export$aafa59e2e03f2942();\n                        }\n                        return object;\n                    } else if (token == $fdd18942f3b79c14$var$RECORD_DEFINITIONS_ID) {\n                        let length = $fdd18942f3b79c14$var$readJustLength();\n                        let id = $fdd18942f3b79c14$export$aafa59e2e03f2942();\n                        for(let i = 2; i < length; i++)$fdd18942f3b79c14$var$recordDefinition(id++, $fdd18942f3b79c14$export$aafa59e2e03f2942());\n                        return $fdd18942f3b79c14$export$aafa59e2e03f2942();\n                    } else if (token == $fdd18942f3b79c14$var$BUNDLED_STRINGS_ID) return $fdd18942f3b79c14$var$readBundleExt();\n                    if ($fdd18942f3b79c14$var$currentDecoder.getShared) {\n                        $fdd18942f3b79c14$var$loadShared();\n                        structure = $fdd18942f3b79c14$var$currentStructures[token & 0x1fff];\n                        if (structure) {\n                            if (!structure.read) structure.read = $fdd18942f3b79c14$var$createStructureReader(structure);\n                            return structure.read();\n                        }\n                    }\n                }\n            }\n            let extension = $fdd18942f3b79c14$var$currentExtensions[token];\n            if (extension) {\n                if (extension.handlesRead) return extension($fdd18942f3b79c14$export$aafa59e2e03f2942);\n                else return extension($fdd18942f3b79c14$export$aafa59e2e03f2942());\n            } else {\n                let input = $fdd18942f3b79c14$export$aafa59e2e03f2942();\n                for(let i = 0; i < $fdd18942f3b79c14$var$currentExtensionRanges.length; i++){\n                    let value = $fdd18942f3b79c14$var$currentExtensionRanges[i](token, input);\n                    if (value !== undefined) return value;\n                }\n                return new $fdd18942f3b79c14$export$3288d34c523a1192(input, token);\n            }\n        case 7:\n            switch(token){\n                case 0x14:\n                    return false;\n                case 0x15:\n                    return true;\n                case 0x16:\n                    return null;\n                case 0x17:\n                    return; // undefined\n                case 0x1f:\n                default:\n                    let packedValue = ($fdd18942f3b79c14$var$packedValues || $fdd18942f3b79c14$var$getPackedValues())[token];\n                    if (packedValue !== undefined) return packedValue;\n                    throw new Error('Unknown token ' + token);\n            }\n        default:\n            if (isNaN(token)) {\n                let error = new Error('Unexpected end of CBOR data');\n                error.incomplete = true;\n                throw error;\n            }\n            throw new Error('Unknown CBOR token ' + token);\n    }\n}\nconst $fdd18942f3b79c14$var$validName = /^[a-zA-Z_$][a-zA-Z\\d_$]*$/;\nfunction $fdd18942f3b79c14$var$createStructureReader(structure) {\n    function readObject() {\n        // get the array size from the header\n        let length = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n        //let majorType = token >> 5\n        length = length & 0x1f;\n        if (length > 0x17) switch(length){\n            case 0x18:\n                length = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n                break;\n            case 0x19:\n                length = $fdd18942f3b79c14$var$dataView.getUint16($fdd18942f3b79c14$var$position);\n                $fdd18942f3b79c14$var$position += 2;\n                break;\n            case 0x1a:\n                length = $fdd18942f3b79c14$var$dataView.getUint32($fdd18942f3b79c14$var$position);\n                $fdd18942f3b79c14$var$position += 4;\n                break;\n            default:\n                throw new Error('Expected array header, but got ' + $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position - 1]);\n        }\n        // This initial function is quick to instantiate, but runs slower. After several iterations pay the cost to build the faster function\n        let compiledReader = this.compiledReader // first look to see if we have the fast compiled function\n        ;\n        while(compiledReader){\n            // we have a fast compiled object literal reader\n            if (compiledReader.propertyCount === length) return compiledReader($fdd18942f3b79c14$export$aafa59e2e03f2942) // with the right length, so we use it\n            ;\n            compiledReader = compiledReader.next // see if there is another reader with the right length\n            ;\n        }\n        if (this.slowReads++ >= $fdd18942f3b79c14$var$inlineObjectReadThreshold) {\n            let array = this.length == length ? this : this.slice(0, length);\n            compiledReader = $fdd18942f3b79c14$var$currentDecoder.keyMap ? new Function('r', 'return {' + array.map((k)=>$fdd18942f3b79c14$var$currentDecoder.decodeKey(k)).map((k)=>$fdd18942f3b79c14$var$validName.test(k) ? $fdd18942f3b79c14$var$safeKey(k) + ':r()' : '[' + JSON.stringify(k) + ']:r()').join(',') + '}') : new Function('r', 'return {' + array.map((key)=>$fdd18942f3b79c14$var$validName.test(key) ? $fdd18942f3b79c14$var$safeKey(key) + ':r()' : '[' + JSON.stringify(key) + ']:r()').join(',') + '}');\n            if (this.compiledReader) compiledReader.next = this.compiledReader // if there is an existing one, we store multiple readers as a linked list because it is usually pretty rare to have multiple readers (of different length) for the same structure\n            ;\n            compiledReader.propertyCount = length;\n            this.compiledReader = compiledReader;\n            return compiledReader($fdd18942f3b79c14$export$aafa59e2e03f2942);\n        }\n        let object = {};\n        if ($fdd18942f3b79c14$var$currentDecoder.keyMap) for(let i = 0; i < length; i++)object[$fdd18942f3b79c14$var$safeKey($fdd18942f3b79c14$var$currentDecoder.decodeKey(this[i]))] = $fdd18942f3b79c14$export$aafa59e2e03f2942();\n        else for(let i = 0; i < length; i++)object[$fdd18942f3b79c14$var$safeKey(this[i])] = $fdd18942f3b79c14$export$aafa59e2e03f2942();\n        return object;\n    }\n    structure.slowReads = 0;\n    return readObject;\n}\nfunction $fdd18942f3b79c14$var$safeKey(key) {\n    return key === '__proto__' ? '__proto_' : key;\n}\nlet $fdd18942f3b79c14$var$readFixedString = $fdd18942f3b79c14$var$readStringJS;\nlet $fdd18942f3b79c14$var$readString8 = $fdd18942f3b79c14$var$readStringJS;\nlet $fdd18942f3b79c14$var$readString16 = $fdd18942f3b79c14$var$readStringJS;\nlet $fdd18942f3b79c14$var$readString32 = $fdd18942f3b79c14$var$readStringJS;\nlet $fdd18942f3b79c14$export$ae7c2166c4fa454a = false;\nfunction $fdd18942f3b79c14$export$b9cf06aee99126ca(extractStrings) {\n    $fdd18942f3b79c14$export$ae7c2166c4fa454a = true;\n    $fdd18942f3b79c14$var$readFixedString = readString(1);\n    $fdd18942f3b79c14$var$readString8 = readString(2);\n    $fdd18942f3b79c14$var$readString16 = readString(3);\n    $fdd18942f3b79c14$var$readString32 = readString(5);\n    function readString(headerLength) {\n        return function readString(length) {\n            let string = $fdd18942f3b79c14$var$strings[$fdd18942f3b79c14$var$stringPosition++];\n            if (string == null) {\n                if ($fdd18942f3b79c14$var$bundledStrings) return $fdd18942f3b79c14$var$readStringJS(length);\n                let extraction = extractStrings($fdd18942f3b79c14$var$position, $fdd18942f3b79c14$var$srcEnd, length, $fdd18942f3b79c14$var$src);\n                if (typeof extraction == 'string') {\n                    string = extraction;\n                    $fdd18942f3b79c14$var$strings = $fdd18942f3b79c14$var$EMPTY_ARRAY;\n                } else {\n                    $fdd18942f3b79c14$var$strings = extraction;\n                    $fdd18942f3b79c14$var$stringPosition = 1;\n                    $fdd18942f3b79c14$var$srcStringEnd = 1 // even if a utf-8 string was decoded, must indicate we are in the midst of extracted strings and can't skip strings\n                    ;\n                    string = $fdd18942f3b79c14$var$strings[0];\n                    if (string === undefined) throw new Error('Unexpected end of buffer');\n                }\n            }\n            let srcStringLength = string.length;\n            if (srcStringLength <= length) {\n                $fdd18942f3b79c14$var$position += length;\n                return string;\n            }\n            $fdd18942f3b79c14$var$srcString = string;\n            $fdd18942f3b79c14$var$srcStringStart = $fdd18942f3b79c14$var$position;\n            $fdd18942f3b79c14$var$srcStringEnd = $fdd18942f3b79c14$var$position + srcStringLength;\n            $fdd18942f3b79c14$var$position += length;\n            return string.slice(0, length) // we know we just want the beginning\n            ;\n        };\n    }\n}\nfunction $fdd18942f3b79c14$var$readStringJS(length) {\n    let result;\n    if (length < 16) {\n        if (result = $fdd18942f3b79c14$var$shortStringInJS(length)) return result;\n    }\n    if (length > 64 && $fdd18942f3b79c14$var$decoder) return $fdd18942f3b79c14$var$decoder.decode($fdd18942f3b79c14$var$src.subarray($fdd18942f3b79c14$var$position, $fdd18942f3b79c14$var$position += length));\n    const end = $fdd18942f3b79c14$var$position + length;\n    const units = [];\n    result = '';\n    while($fdd18942f3b79c14$var$position < end){\n        const byte1 = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n        if ((byte1 & 0x80) === 0) // 1 byte\n        units.push(byte1);\n        else if ((byte1 & 0xe0) === 0xc0) {\n            // 2 bytes\n            const byte2 = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++] & 0x3f;\n            units.push((byte1 & 0x1f) << 6 | byte2);\n        } else if ((byte1 & 0xf0) === 0xe0) {\n            // 3 bytes\n            const byte2 = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++] & 0x3f;\n            const byte3 = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++] & 0x3f;\n            units.push((byte1 & 0x1f) << 12 | byte2 << 6 | byte3);\n        } else if ((byte1 & 0xf8) === 0xf0) {\n            // 4 bytes\n            const byte2 = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++] & 0x3f;\n            const byte3 = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++] & 0x3f;\n            const byte4 = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++] & 0x3f;\n            let unit = (byte1 & 0x07) << 0x12 | byte2 << 0x0c | byte3 << 0x06 | byte4;\n            if (unit > 0xffff) {\n                unit -= 0x10000;\n                units.push(unit >>> 10 & 0x3ff | 0xd800);\n                unit = 0xdc00 | unit & 0x3ff;\n            }\n            units.push(unit);\n        } else units.push(byte1);\n        if (units.length >= 0x1000) {\n            result += $fdd18942f3b79c14$var$fromCharCode.apply(String, units);\n            units.length = 0;\n        }\n    }\n    if (units.length > 0) result += $fdd18942f3b79c14$var$fromCharCode.apply(String, units);\n    return result;\n}\nlet $fdd18942f3b79c14$var$fromCharCode = String.fromCharCode;\nfunction $fdd18942f3b79c14$var$longStringInJS(length) {\n    let start = $fdd18942f3b79c14$var$position;\n    let bytes = new Array(length);\n    for(let i = 0; i < length; i++){\n        const byte = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n        if ((byte & 0x80) > 0) {\n            $fdd18942f3b79c14$var$position = start;\n            return;\n        }\n        bytes[i] = byte;\n    }\n    return $fdd18942f3b79c14$var$fromCharCode.apply(String, bytes);\n}\nfunction $fdd18942f3b79c14$var$shortStringInJS(length) {\n    if (length < 4) {\n        if (length < 2) {\n            if (length === 0) return '';\n            else {\n                let a = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n                if ((a & 0x80) > 1) {\n                    $fdd18942f3b79c14$var$position -= 1;\n                    return;\n                }\n                return $fdd18942f3b79c14$var$fromCharCode(a);\n            }\n        } else {\n            let a = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n            let b = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n            if ((a & 0x80) > 0 || (b & 0x80) > 0) {\n                $fdd18942f3b79c14$var$position -= 2;\n                return;\n            }\n            if (length < 3) return $fdd18942f3b79c14$var$fromCharCode(a, b);\n            let c = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n            if ((c & 0x80) > 0) {\n                $fdd18942f3b79c14$var$position -= 3;\n                return;\n            }\n            return $fdd18942f3b79c14$var$fromCharCode(a, b, c);\n        }\n    } else {\n        let a = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n        let b = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n        let c = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n        let d = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n        if ((a & 0x80) > 0 || (b & 0x80) > 0 || (c & 0x80) > 0 || (d & 0x80) > 0) {\n            $fdd18942f3b79c14$var$position -= 4;\n            return;\n        }\n        if (length < 6) {\n            if (length === 4) return $fdd18942f3b79c14$var$fromCharCode(a, b, c, d);\n            else {\n                let e = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n                if ((e & 0x80) > 0) {\n                    $fdd18942f3b79c14$var$position -= 5;\n                    return;\n                }\n                return $fdd18942f3b79c14$var$fromCharCode(a, b, c, d, e);\n            }\n        } else if (length < 8) {\n            let e = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n            let f = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n            if ((e & 0x80) > 0 || (f & 0x80) > 0) {\n                $fdd18942f3b79c14$var$position -= 6;\n                return;\n            }\n            if (length < 7) return $fdd18942f3b79c14$var$fromCharCode(a, b, c, d, e, f);\n            let g = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n            if ((g & 0x80) > 0) {\n                $fdd18942f3b79c14$var$position -= 7;\n                return;\n            }\n            return $fdd18942f3b79c14$var$fromCharCode(a, b, c, d, e, f, g);\n        } else {\n            let e = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n            let f = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n            let g = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n            let h = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n            if ((e & 0x80) > 0 || (f & 0x80) > 0 || (g & 0x80) > 0 || (h & 0x80) > 0) {\n                $fdd18942f3b79c14$var$position -= 8;\n                return;\n            }\n            if (length < 10) {\n                if (length === 8) return $fdd18942f3b79c14$var$fromCharCode(a, b, c, d, e, f, g, h);\n                else {\n                    let i = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n                    if ((i & 0x80) > 0) {\n                        $fdd18942f3b79c14$var$position -= 9;\n                        return;\n                    }\n                    return $fdd18942f3b79c14$var$fromCharCode(a, b, c, d, e, f, g, h, i);\n                }\n            } else if (length < 12) {\n                let i = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n                let j = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n                if ((i & 0x80) > 0 || (j & 0x80) > 0) {\n                    $fdd18942f3b79c14$var$position -= 10;\n                    return;\n                }\n                if (length < 11) return $fdd18942f3b79c14$var$fromCharCode(a, b, c, d, e, f, g, h, i, j);\n                let k = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n                if ((k & 0x80) > 0) {\n                    $fdd18942f3b79c14$var$position -= 11;\n                    return;\n                }\n                return $fdd18942f3b79c14$var$fromCharCode(a, b, c, d, e, f, g, h, i, j, k);\n            } else {\n                let i = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n                let j = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n                let k = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n                let l = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n                if ((i & 0x80) > 0 || (j & 0x80) > 0 || (k & 0x80) > 0 || (l & 0x80) > 0) {\n                    $fdd18942f3b79c14$var$position -= 12;\n                    return;\n                }\n                if (length < 14) {\n                    if (length === 12) return $fdd18942f3b79c14$var$fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l);\n                    else {\n                        let m = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n                        if ((m & 0x80) > 0) {\n                            $fdd18942f3b79c14$var$position -= 13;\n                            return;\n                        }\n                        return $fdd18942f3b79c14$var$fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m);\n                    }\n                } else {\n                    let m = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n                    let n = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n                    if ((m & 0x80) > 0 || (n & 0x80) > 0) {\n                        $fdd18942f3b79c14$var$position -= 14;\n                        return;\n                    }\n                    if (length < 15) return $fdd18942f3b79c14$var$fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n);\n                    let o = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n                    if ((o & 0x80) > 0) {\n                        $fdd18942f3b79c14$var$position -= 15;\n                        return;\n                    }\n                    return $fdd18942f3b79c14$var$fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);\n                }\n            }\n        }\n    }\n}\nfunction $fdd18942f3b79c14$var$readBin(length) {\n    return $fdd18942f3b79c14$var$currentDecoder.copyBuffers ? // specifically use the copying slice (not the node one)\n    Uint8Array.prototype.slice.call($fdd18942f3b79c14$var$src, $fdd18942f3b79c14$var$position, $fdd18942f3b79c14$var$position += length) : $fdd18942f3b79c14$var$src.subarray($fdd18942f3b79c14$var$position, $fdd18942f3b79c14$var$position += length);\n}\nfunction $fdd18942f3b79c14$var$readExt(length) {\n    let type = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n    if ($fdd18942f3b79c14$var$currentExtensions[type]) return $fdd18942f3b79c14$var$currentExtensions[type]($fdd18942f3b79c14$var$src.subarray($fdd18942f3b79c14$var$position, $fdd18942f3b79c14$var$position += length));\n    else throw new Error('Unknown extension type ' + type);\n}\nlet $fdd18942f3b79c14$var$f32Array = new Float32Array(1);\nlet $fdd18942f3b79c14$var$u8Array = new Uint8Array($fdd18942f3b79c14$var$f32Array.buffer, 0, 4);\nfunction $fdd18942f3b79c14$var$getFloat16() {\n    let byte0 = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n    let byte1 = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n    let exponent = (byte0 & 0x7f) >> 2;\n    if (exponent === 0x1f) {\n        if (byte1 || byte0 & 3) return NaN;\n        return byte0 & 0x80 ? -Infinity : Infinity;\n    }\n    if (exponent === 0) {\n        // significand with 10 fractional bits and divided by 2^14\n        let abs = ((byte0 & 3) << 8 | byte1) / 16777216;\n        return byte0 & 0x80 ? -abs : abs;\n    }\n    $fdd18942f3b79c14$var$u8Array[3] = byte0 & 0x80 | // sign bit\n    (exponent >> 1) + 56 // 4 of 5 of the exponent bits, re-offset-ed\n    ;\n    $fdd18942f3b79c14$var$u8Array[2] = (byte0 & 7) << 5 | // last exponent bit and first two mantissa bits\n    byte1 >> 3 // next 5 bits of mantissa\n    ;\n    $fdd18942f3b79c14$var$u8Array[1] = byte1 << 5; // last three bits of mantissa\n    $fdd18942f3b79c14$var$u8Array[0] = 0;\n    return $fdd18942f3b79c14$var$f32Array[0];\n}\nlet $fdd18942f3b79c14$var$keyCache = new Array(4096);\nfunction $fdd18942f3b79c14$var$readKey() {\n    let length = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n    if (length >= 0x60 && length < 0x78) {\n        // fixstr, potentially use key cache\n        length = length - 0x60;\n        if ($fdd18942f3b79c14$var$srcStringEnd >= $fdd18942f3b79c14$var$position) return $fdd18942f3b79c14$var$srcString.slice($fdd18942f3b79c14$var$position - $fdd18942f3b79c14$var$srcStringStart, ($fdd18942f3b79c14$var$position += length) - $fdd18942f3b79c14$var$srcStringStart);\n        else if (!($fdd18942f3b79c14$var$srcStringEnd == 0 && $fdd18942f3b79c14$var$srcEnd < 180)) return $fdd18942f3b79c14$var$readFixedString(length);\n    } else {\n        $fdd18942f3b79c14$var$position--;\n        return $fdd18942f3b79c14$export$aafa59e2e03f2942();\n    }\n    let key = (length << 5 ^ (length > 1 ? $fdd18942f3b79c14$var$dataView.getUint16($fdd18942f3b79c14$var$position) : length > 0 ? $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position] : 0)) & 0xfff;\n    let entry = $fdd18942f3b79c14$var$keyCache[key];\n    let checkPosition = $fdd18942f3b79c14$var$position;\n    let end = $fdd18942f3b79c14$var$position + length - 3;\n    let chunk;\n    let i = 0;\n    if (entry && entry.bytes == length) {\n        while(checkPosition < end){\n            chunk = $fdd18942f3b79c14$var$dataView.getUint32(checkPosition);\n            if (chunk != entry[i++]) {\n                checkPosition = 0x70000000;\n                break;\n            }\n            checkPosition += 4;\n        }\n        end += 3;\n        while(checkPosition < end){\n            chunk = $fdd18942f3b79c14$var$src[checkPosition++];\n            if (chunk != entry[i++]) {\n                checkPosition = 0x70000000;\n                break;\n            }\n        }\n        if (checkPosition === end) {\n            $fdd18942f3b79c14$var$position = checkPosition;\n            return entry.string;\n        }\n        end -= 3;\n        checkPosition = $fdd18942f3b79c14$var$position;\n    }\n    entry = [];\n    $fdd18942f3b79c14$var$keyCache[key] = entry;\n    entry.bytes = length;\n    while(checkPosition < end){\n        chunk = $fdd18942f3b79c14$var$dataView.getUint32(checkPosition);\n        entry.push(chunk);\n        checkPosition += 4;\n    }\n    end += 3;\n    while(checkPosition < end){\n        chunk = $fdd18942f3b79c14$var$src[checkPosition++];\n        entry.push(chunk);\n    }\n    // for small blocks, avoiding the overhead of the extract call is helpful\n    let string = length < 16 ? $fdd18942f3b79c14$var$shortStringInJS(length) : $fdd18942f3b79c14$var$longStringInJS(length);\n    if (string != null) return entry.string = string;\n    return entry.string = $fdd18942f3b79c14$var$readFixedString(length);\n}\nclass $fdd18942f3b79c14$export$3288d34c523a1192 {\n    constructor(value, tag){\n        this.value = value;\n        this.tag = tag;\n    }\n}\n$fdd18942f3b79c14$var$currentExtensions[0] = (dateString)=>{\n    // string date extension\n    return new Date(dateString);\n};\n$fdd18942f3b79c14$var$currentExtensions[1] = (epochSec)=>{\n    // numeric date extension\n    return new Date(Math.round(epochSec * 1000));\n};\n$fdd18942f3b79c14$var$currentExtensions[2] = (buffer)=>{\n    // bigint extension\n    let value = BigInt(0);\n    for(let i = 0, l = buffer.byteLength; i < l; i++)value = BigInt(buffer[i]) + value << BigInt(8);\n    return value;\n};\n$fdd18942f3b79c14$var$currentExtensions[3] = (buffer)=>{\n    // negative bigint extension\n    return BigInt(-1) - $fdd18942f3b79c14$var$currentExtensions[2](buffer);\n};\n$fdd18942f3b79c14$var$currentExtensions[4] = (fraction)=>{\n    // best to reparse to maintain accuracy\n    return +(fraction[1] + 'e' + fraction[0]);\n};\n$fdd18942f3b79c14$var$currentExtensions[5] = (fraction)=>{\n    // probably not sufficiently accurate\n    return fraction[1] * Math.exp(fraction[0] * Math.log(2));\n};\n// the registration of the record definition extension\nconst $fdd18942f3b79c14$var$recordDefinition = (id, structure)=>{\n    id = id - 0xe000;\n    let existingStructure = $fdd18942f3b79c14$var$currentStructures[id];\n    if (existingStructure && existingStructure.isShared) ($fdd18942f3b79c14$var$currentStructures.restoreStructures || ($fdd18942f3b79c14$var$currentStructures.restoreStructures = []))[id] = existingStructure;\n    $fdd18942f3b79c14$var$currentStructures[id] = structure;\n    structure.read = $fdd18942f3b79c14$var$createStructureReader(structure);\n};\n$fdd18942f3b79c14$var$currentExtensions[$fdd18942f3b79c14$var$LEGACY_RECORD_INLINE_ID] = (data)=>{\n    let length = data.length;\n    let structure = data[1];\n    $fdd18942f3b79c14$var$recordDefinition(data[0], structure);\n    let object = {};\n    for(let i = 2; i < length; i++){\n        let key = structure[i - 2];\n        object[$fdd18942f3b79c14$var$safeKey(key)] = data[i];\n    }\n    return object;\n};\n$fdd18942f3b79c14$var$currentExtensions[14] = (value)=>{\n    if ($fdd18942f3b79c14$var$bundledStrings) return $fdd18942f3b79c14$var$bundledStrings[0].slice($fdd18942f3b79c14$var$bundledStrings.position0, $fdd18942f3b79c14$var$bundledStrings.position0 += value);\n    return new $fdd18942f3b79c14$export$3288d34c523a1192(value, 14);\n};\n$fdd18942f3b79c14$var$currentExtensions[15] = (value)=>{\n    if ($fdd18942f3b79c14$var$bundledStrings) return $fdd18942f3b79c14$var$bundledStrings[1].slice($fdd18942f3b79c14$var$bundledStrings.position1, $fdd18942f3b79c14$var$bundledStrings.position1 += value);\n    return new $fdd18942f3b79c14$export$3288d34c523a1192(value, 15);\n};\nlet $fdd18942f3b79c14$var$glbl = {\n    Error: Error,\n    RegExp: RegExp\n};\n$fdd18942f3b79c14$var$currentExtensions[27] = (data)=>{\n    return ($fdd18942f3b79c14$var$glbl[data[0]] || Error)(data[1], data[2]);\n};\nconst $fdd18942f3b79c14$var$packedTable = (read)=>{\n    if ($fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++] != 0x84) throw new Error('Packed values structure must be followed by a 4 element array');\n    let newPackedValues = read() // packed values\n    ;\n    $fdd18942f3b79c14$var$packedValues = $fdd18942f3b79c14$var$packedValues ? newPackedValues.concat($fdd18942f3b79c14$var$packedValues.slice(newPackedValues.length)) : newPackedValues;\n    $fdd18942f3b79c14$var$packedValues.prefixes = read();\n    $fdd18942f3b79c14$var$packedValues.suffixes = read();\n    return read() // read the rump\n    ;\n};\n$fdd18942f3b79c14$var$packedTable.handlesRead = true;\n$fdd18942f3b79c14$var$currentExtensions[51] = $fdd18942f3b79c14$var$packedTable;\n$fdd18942f3b79c14$var$currentExtensions[$fdd18942f3b79c14$var$PACKED_REFERENCE_TAG_ID] = (data)=>{\n    if (!$fdd18942f3b79c14$var$packedValues) {\n        if ($fdd18942f3b79c14$var$currentDecoder.getShared) $fdd18942f3b79c14$var$loadShared();\n        else return new $fdd18942f3b79c14$export$3288d34c523a1192(data, $fdd18942f3b79c14$var$PACKED_REFERENCE_TAG_ID);\n    }\n    if (typeof data == 'number') return $fdd18942f3b79c14$var$packedValues[16 + (data >= 0 ? 2 * data : -2 * data - 1)];\n    throw new Error('No support for non-integer packed references yet');\n};\n// The following code is an incomplete implementation of http://cbor.schmorp.de/stringref\n// the real thing would need to implemennt more logic to populate the stringRefs table and\n// maintain a stack of stringRef \"namespaces\".\n//\n// currentExtensions[25] = (id) => {\n// \treturn stringRefs[id]\n// }\n// currentExtensions[256] = (read) => {\n// \tstringRefs = []\n// \ttry {\n// \t\treturn read()\n// \t} finally {\n// \t\tstringRefs = null\n// \t}\n// }\n// currentExtensions[256].handlesRead = true\n$fdd18942f3b79c14$var$currentExtensions[28] = (read)=>{\n    // shareable http://cbor.schmorp.de/value-sharing (for structured clones)\n    if (!$fdd18942f3b79c14$var$referenceMap) {\n        $fdd18942f3b79c14$var$referenceMap = new Map();\n        $fdd18942f3b79c14$var$referenceMap.id = 0;\n    }\n    let id = $fdd18942f3b79c14$var$referenceMap.id++;\n    let token = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position];\n    let target;\n    // TODO: handle Maps, Sets, and other types that can cycle; this is complicated, because you potentially need to read\n    // ahead past references to record structure definitions\n    if (token >> 5 == 4) target = [];\n    else target = {};\n    let refEntry = {\n        target: target\n    } // a placeholder object\n    ;\n    $fdd18942f3b79c14$var$referenceMap.set(id, refEntry);\n    let targetProperties = read() // read the next value as the target object to id\n    ;\n    if (refEntry.used) return Object.assign(target, targetProperties);\n    refEntry.target = targetProperties // the placeholder wasn't used, replace with the deserialized one\n    ;\n    return targetProperties // no cycle, can just use the returned read object\n    ;\n};\n$fdd18942f3b79c14$var$currentExtensions[28].handlesRead = true;\n$fdd18942f3b79c14$var$currentExtensions[29] = (id)=>{\n    // sharedref http://cbor.schmorp.de/value-sharing (for structured clones)\n    let refEntry = $fdd18942f3b79c14$var$referenceMap.get(id);\n    refEntry.used = true;\n    return refEntry.target;\n};\n$fdd18942f3b79c14$var$currentExtensions[258] = (array)=>new Set(array); // https://github.com/input-output-hk/cbor-sets-spec/blob/master/CBOR_SETS.md\n($fdd18942f3b79c14$var$currentExtensions[259] = (read)=>{\n    // https://github.com/shanewholloway/js-cbor-codec/blob/master/docs/CBOR-259-spec\n    // for decoding as a standard Map\n    if ($fdd18942f3b79c14$var$currentDecoder.mapsAsObjects) {\n        $fdd18942f3b79c14$var$currentDecoder.mapsAsObjects = false;\n        $fdd18942f3b79c14$var$restoreMapsAsObject = true;\n    }\n    return read();\n}).handlesRead = true;\nfunction $fdd18942f3b79c14$var$combine(a, b) {\n    if (typeof a === 'string') return a + b;\n    if (a instanceof Array) return a.concat(b);\n    return Object.assign({}, a, b);\n}\nfunction $fdd18942f3b79c14$var$getPackedValues() {\n    if (!$fdd18942f3b79c14$var$packedValues) {\n        if ($fdd18942f3b79c14$var$currentDecoder.getShared) $fdd18942f3b79c14$var$loadShared();\n        else throw new Error('No packed values available');\n    }\n    return $fdd18942f3b79c14$var$packedValues;\n}\nconst $fdd18942f3b79c14$var$SHARED_DATA_TAG_ID = 0x53687264 // ascii 'Shrd'\n;\n$fdd18942f3b79c14$var$currentExtensionRanges.push((tag, input)=>{\n    if (tag >= 225 && tag <= 255) return $fdd18942f3b79c14$var$combine($fdd18942f3b79c14$var$getPackedValues().prefixes[tag - 224], input);\n    if (tag >= 28704 && tag <= 32767) return $fdd18942f3b79c14$var$combine($fdd18942f3b79c14$var$getPackedValues().prefixes[tag - 28672], input);\n    if (tag >= 1879052288 && tag <= 2147483647) return $fdd18942f3b79c14$var$combine($fdd18942f3b79c14$var$getPackedValues().prefixes[tag - 1879048192], input);\n    if (tag >= 216 && tag <= 223) return $fdd18942f3b79c14$var$combine(input, $fdd18942f3b79c14$var$getPackedValues().suffixes[tag - 216]);\n    if (tag >= 27647 && tag <= 28671) return $fdd18942f3b79c14$var$combine(input, $fdd18942f3b79c14$var$getPackedValues().suffixes[tag - 27639]);\n    if (tag >= 1811940352 && tag <= 1879048191) return $fdd18942f3b79c14$var$combine(input, $fdd18942f3b79c14$var$getPackedValues().suffixes[tag - 1811939328]);\n    if (tag == $fdd18942f3b79c14$var$SHARED_DATA_TAG_ID) return {\n        packedValues: $fdd18942f3b79c14$var$packedValues,\n        structures: $fdd18942f3b79c14$var$currentStructures.slice(0),\n        version: input\n    };\n    if (tag == 55799) return input;\n});\nconst $fdd18942f3b79c14$var$isLittleEndianMachine = new Uint8Array(new Uint16Array([\n    1\n]).buffer)[0] == 1;\nconst $fdd18942f3b79c14$export$aae3eaec024a56b7 = [\n    Uint8Array,\n    Uint8ClampedArray,\n    Uint16Array,\n    Uint32Array,\n    typeof BigUint64Array == 'undefined' ? {\n        name: 'BigUint64Array'\n    } : BigUint64Array,\n    Int8Array,\n    Int16Array,\n    Int32Array,\n    typeof BigInt64Array == 'undefined' ? {\n        name: 'BigInt64Array'\n    } : BigInt64Array,\n    Float32Array,\n    Float64Array\n];\nconst $fdd18942f3b79c14$var$typedArrayTags = [\n    64,\n    68,\n    69,\n    70,\n    71,\n    72,\n    77,\n    78,\n    79,\n    85,\n    86\n];\nfor(let i = 0; i < $fdd18942f3b79c14$export$aae3eaec024a56b7.length; i++)$fdd18942f3b79c14$var$registerTypedArray($fdd18942f3b79c14$export$aae3eaec024a56b7[i], $fdd18942f3b79c14$var$typedArrayTags[i]);\nfunction $fdd18942f3b79c14$var$registerTypedArray(TypedArray, tag) {\n    let dvMethod = 'get' + TypedArray.name.slice(0, -5);\n    let bytesPerElement;\n    if (typeof TypedArray === 'function') bytesPerElement = TypedArray.BYTES_PER_ELEMENT;\n    else TypedArray = null;\n    for(let littleEndian = 0; littleEndian < 2; littleEndian++){\n        if (!littleEndian && bytesPerElement == 1) continue;\n        let sizeShift = bytesPerElement == 2 ? 1 : bytesPerElement == 4 ? 2 : 3;\n        $fdd18942f3b79c14$var$currentExtensions[littleEndian ? tag : tag - 4] = bytesPerElement == 1 || littleEndian == $fdd18942f3b79c14$var$isLittleEndianMachine ? (buffer)=>{\n            if (!TypedArray) throw new Error('Could not find typed array for code ' + tag);\n            // we have to always slice/copy here to get a new ArrayBuffer that is word/byte aligned\n            return new TypedArray(Uint8Array.prototype.slice.call(buffer, 0).buffer);\n        } : (buffer)=>{\n            if (!TypedArray) throw new Error('Could not find typed array for code ' + tag);\n            let dv = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n            let elements = buffer.length >> sizeShift;\n            let ta = new TypedArray(elements);\n            let method = dv[dvMethod];\n            for(let i = 0; i < elements; i++)ta[i] = method.call(dv, i << sizeShift, littleEndian);\n            return ta;\n        };\n    }\n}\nfunction $fdd18942f3b79c14$var$readBundleExt() {\n    let length = $fdd18942f3b79c14$var$readJustLength();\n    let bundlePosition = $fdd18942f3b79c14$var$position + $fdd18942f3b79c14$export$aafa59e2e03f2942();\n    for(let i = 2; i < length; i++){\n        // skip past bundles that were already read\n        let bundleLength = $fdd18942f3b79c14$var$readJustLength() // this will increment position, so must add to position afterwards\n        ;\n        $fdd18942f3b79c14$var$position += bundleLength;\n    }\n    let dataPosition = $fdd18942f3b79c14$var$position;\n    $fdd18942f3b79c14$var$position = bundlePosition;\n    $fdd18942f3b79c14$var$bundledStrings = [\n        $fdd18942f3b79c14$var$readStringJS($fdd18942f3b79c14$var$readJustLength()),\n        $fdd18942f3b79c14$var$readStringJS($fdd18942f3b79c14$var$readJustLength())\n    ];\n    $fdd18942f3b79c14$var$bundledStrings.position0 = 0;\n    $fdd18942f3b79c14$var$bundledStrings.position1 = 0;\n    $fdd18942f3b79c14$var$bundledStrings.postBundlePosition = $fdd18942f3b79c14$var$position;\n    $fdd18942f3b79c14$var$position = dataPosition;\n    return $fdd18942f3b79c14$export$aafa59e2e03f2942();\n}\nfunction $fdd18942f3b79c14$var$readJustLength() {\n    let token = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++] & 0x1f;\n    if (token > 0x17) switch(token){\n        case 0x18:\n            token = $fdd18942f3b79c14$var$src[$fdd18942f3b79c14$var$position++];\n            break;\n        case 0x19:\n            token = $fdd18942f3b79c14$var$dataView.getUint16($fdd18942f3b79c14$var$position);\n            $fdd18942f3b79c14$var$position += 2;\n            break;\n        case 0x1a:\n            token = $fdd18942f3b79c14$var$dataView.getUint32($fdd18942f3b79c14$var$position);\n            $fdd18942f3b79c14$var$position += 4;\n            break;\n    }\n    return token;\n}\nfunction $fdd18942f3b79c14$var$loadShared() {\n    if ($fdd18942f3b79c14$var$currentDecoder.getShared) {\n        let sharedData = $fdd18942f3b79c14$var$saveState(()=>{\n            // save the state in case getShared modifies our buffer\n            $fdd18942f3b79c14$var$src = null;\n            return $fdd18942f3b79c14$var$currentDecoder.getShared();\n        }) || {};\n        let updatedStructures = sharedData.structures || [];\n        $fdd18942f3b79c14$var$currentDecoder.sharedVersion = sharedData.version;\n        $fdd18942f3b79c14$var$packedValues = $fdd18942f3b79c14$var$currentDecoder.sharedValues = sharedData.packedValues;\n        if ($fdd18942f3b79c14$var$currentStructures === true) $fdd18942f3b79c14$var$currentDecoder.structures = $fdd18942f3b79c14$var$currentStructures = updatedStructures;\n        else $fdd18942f3b79c14$var$currentStructures.splice.apply($fdd18942f3b79c14$var$currentStructures, [\n            0,\n            updatedStructures.length\n        ].concat(updatedStructures));\n    }\n}\nfunction $fdd18942f3b79c14$var$saveState(callback) {\n    let savedSrcEnd = $fdd18942f3b79c14$var$srcEnd;\n    let savedPosition = $fdd18942f3b79c14$var$position;\n    let savedStringPosition = $fdd18942f3b79c14$var$stringPosition;\n    let savedSrcStringStart = $fdd18942f3b79c14$var$srcStringStart;\n    let savedSrcStringEnd = $fdd18942f3b79c14$var$srcStringEnd;\n    let savedSrcString = $fdd18942f3b79c14$var$srcString;\n    let savedStrings = $fdd18942f3b79c14$var$strings;\n    let savedReferenceMap = $fdd18942f3b79c14$var$referenceMap;\n    let savedBundledStrings = $fdd18942f3b79c14$var$bundledStrings;\n    // TODO: We may need to revisit this if we do more external calls to user code (since it could be slow)\n    let savedSrc = new Uint8Array($fdd18942f3b79c14$var$src.slice(0, $fdd18942f3b79c14$var$srcEnd)) // we copy the data in case it changes while external data is processed\n    ;\n    let savedStructures = $fdd18942f3b79c14$var$currentStructures;\n    let savedDecoder = $fdd18942f3b79c14$var$currentDecoder;\n    let savedSequentialMode = $fdd18942f3b79c14$var$sequentialMode;\n    let value = callback();\n    $fdd18942f3b79c14$var$srcEnd = savedSrcEnd;\n    $fdd18942f3b79c14$var$position = savedPosition;\n    $fdd18942f3b79c14$var$stringPosition = savedStringPosition;\n    $fdd18942f3b79c14$var$srcStringStart = savedSrcStringStart;\n    $fdd18942f3b79c14$var$srcStringEnd = savedSrcStringEnd;\n    $fdd18942f3b79c14$var$srcString = savedSrcString;\n    $fdd18942f3b79c14$var$strings = savedStrings;\n    $fdd18942f3b79c14$var$referenceMap = savedReferenceMap;\n    $fdd18942f3b79c14$var$bundledStrings = savedBundledStrings;\n    $fdd18942f3b79c14$var$src = savedSrc;\n    $fdd18942f3b79c14$var$sequentialMode = savedSequentialMode;\n    $fdd18942f3b79c14$var$currentStructures = savedStructures;\n    $fdd18942f3b79c14$var$currentDecoder = savedDecoder;\n    $fdd18942f3b79c14$var$dataView = new DataView($fdd18942f3b79c14$var$src.buffer, $fdd18942f3b79c14$var$src.byteOffset, $fdd18942f3b79c14$var$src.byteLength);\n    return value;\n}\nfunction $fdd18942f3b79c14$export$e6f020404d5b6c15() {\n    $fdd18942f3b79c14$var$src = null;\n    $fdd18942f3b79c14$var$referenceMap = null;\n    $fdd18942f3b79c14$var$currentStructures = null;\n}\nfunction $fdd18942f3b79c14$export$4e11b2f4fcd6c82d(extension) {\n    $fdd18942f3b79c14$var$currentExtensions[extension.tag] = extension.decode;\n}\nconst $fdd18942f3b79c14$export$c652a5bbb6be7a36 = new Array(147) // this is a table matching binary exponents to the multiplier to determine significant digit rounding\n;\nfor(let i = 0; i < 256; i++)$fdd18942f3b79c14$export$c652a5bbb6be7a36[i] = +('1e' + Math.floor(45.15 - i * 0.30103));\nlet $fdd18942f3b79c14$var$defaultDecoder = new $fdd18942f3b79c14$export$f9de6ca0bc043724({\n    useRecords: false\n});\nconst $fdd18942f3b79c14$export$2f872c0f2117be69 = $fdd18942f3b79c14$var$defaultDecoder.decode;\nconst $fdd18942f3b79c14$export$ddfa300a3790ac32 = $fdd18942f3b79c14$var$defaultDecoder.decodeMultiple;\nconst $fdd18942f3b79c14$export$2239e49a3e351685 = {\n    NEVER: 0,\n    ALWAYS: 1,\n    DECIMAL_ROUND: 3,\n    DECIMAL_FIT: 4\n};\nfunction $fdd18942f3b79c14$export$36da082398e4f139(float32Number) {\n    $fdd18942f3b79c14$var$f32Array[0] = float32Number;\n    let multiplier = $fdd18942f3b79c14$export$c652a5bbb6be7a36[($fdd18942f3b79c14$var$u8Array[3] & 0x7f) << 1 | $fdd18942f3b79c14$var$u8Array[2] >> 7];\n    return (multiplier * float32Number + (float32Number > 0 ? 0.5 : -0.5) >> 0) / multiplier;\n}\n\n\nlet $07e009346b695b03$var$textEncoder;\ntry {\n    $07e009346b695b03$var$textEncoder = new TextEncoder();\n} catch (error) {}\nlet $07e009346b695b03$var$extensions, $07e009346b695b03$var$extensionClasses;\nconst $07e009346b695b03$var$Buffer = typeof globalThis === 'object' && globalThis.Buffer;\nconst $07e009346b695b03$var$hasNodeBuffer = typeof $07e009346b695b03$var$Buffer !== 'undefined';\nconst $07e009346b695b03$var$ByteArrayAllocate = $07e009346b695b03$var$hasNodeBuffer ? $07e009346b695b03$var$Buffer.allocUnsafeSlow : Uint8Array;\nconst $07e009346b695b03$var$ByteArray = $07e009346b695b03$var$hasNodeBuffer ? $07e009346b695b03$var$Buffer : Uint8Array;\nconst $07e009346b695b03$var$MAX_STRUCTURES = 0x100;\nconst $07e009346b695b03$var$MAX_BUFFER_SIZE = $07e009346b695b03$var$hasNodeBuffer ? 0x100000000 : 0x7fd00000;\nlet $07e009346b695b03$var$serializationId = 1;\nlet $07e009346b695b03$var$throwOnIterable;\nlet $07e009346b695b03$var$target;\nlet $07e009346b695b03$var$targetView;\nlet $07e009346b695b03$var$position = 0;\nlet $07e009346b695b03$var$safeEnd;\nlet $07e009346b695b03$var$bundledStrings = null;\nconst $07e009346b695b03$var$MAX_BUNDLE_SIZE = 0xf000;\nconst $07e009346b695b03$var$hasNonLatin = /[\\u0080-\\uFFFF]/;\nconst $07e009346b695b03$var$RECORD_SYMBOL = Symbol('record-id');\nclass $07e009346b695b03$export$a50aceb0e02a00aa extends (0, $fdd18942f3b79c14$export$f9de6ca0bc043724) {\n    constructor(options){\n        super(options);\n        this.offset = 0;\n        let typeBuffer;\n        let start;\n        let sharedStructures;\n        let hasSharedUpdate;\n        let structures;\n        let referenceMap;\n        options = options || {};\n        let encodeUtf8 = $07e009346b695b03$var$ByteArray.prototype.utf8Write ? function(string, position, maxBytes) {\n            return $07e009346b695b03$var$target.utf8Write(string, position, maxBytes);\n        } : $07e009346b695b03$var$textEncoder && $07e009346b695b03$var$textEncoder.encodeInto ? function(string, position) {\n            return $07e009346b695b03$var$textEncoder.encodeInto(string, $07e009346b695b03$var$target.subarray(position)).written;\n        } : false;\n        let encoder = this;\n        let hasSharedStructures = options.structures || options.saveStructures;\n        let maxSharedStructures = options.maxSharedStructures;\n        if (maxSharedStructures == null) maxSharedStructures = hasSharedStructures ? 128 : 0;\n        if (maxSharedStructures > 8190) throw new Error('Maximum maxSharedStructure is 8190');\n        let isSequential = options.sequential;\n        if (isSequential) maxSharedStructures = 0;\n        if (!this.structures) this.structures = [];\n        if (this.saveStructures) this.saveShared = this.saveStructures;\n        let samplingPackedValues, packedObjectMap1, sharedValues = options.sharedValues;\n        let sharedPackedObjectMap1;\n        if (sharedValues) {\n            sharedPackedObjectMap1 = Object.create(null);\n            for(let i = 0, l = sharedValues.length; i < l; i++)sharedPackedObjectMap1[sharedValues[i]] = i;\n        }\n        let recordIdsToRemove = [];\n        let transitionsCount = 0;\n        let serializationsSinceTransitionRebuild = 0;\n        this.mapEncode = function(value, encodeOptions) {\n            // Experimental support for premapping keys using _keyMap instad of keyMap - not optiimised yet)\n            if (this._keyMap && !this._mapped) //console.log('encoding ', value)\n            switch(value.constructor.name){\n                case 'Array':\n                    value = value.map((r)=>this.encodeKeys(r));\n                    break;\n            }\n            return this.encode(value, encodeOptions);\n        };\n        this.encode = function(value, encodeOptions) {\n            if (!$07e009346b695b03$var$target) {\n                $07e009346b695b03$var$target = new $07e009346b695b03$var$ByteArrayAllocate(8192);\n                $07e009346b695b03$var$targetView = new DataView($07e009346b695b03$var$target.buffer, 0, 8192);\n                $07e009346b695b03$var$position = 0;\n            }\n            $07e009346b695b03$var$safeEnd = $07e009346b695b03$var$target.length - 10;\n            if ($07e009346b695b03$var$safeEnd - $07e009346b695b03$var$position < 0x800) {\n                // don't start too close to the end, \n                $07e009346b695b03$var$target = new $07e009346b695b03$var$ByteArrayAllocate($07e009346b695b03$var$target.length);\n                $07e009346b695b03$var$targetView = new DataView($07e009346b695b03$var$target.buffer, 0, $07e009346b695b03$var$target.length);\n                $07e009346b695b03$var$safeEnd = $07e009346b695b03$var$target.length - 10;\n                $07e009346b695b03$var$position = 0;\n            } else if (encodeOptions === $07e009346b695b03$export$d41ac1453288b342) $07e009346b695b03$var$position = $07e009346b695b03$var$position + 7 & 0x7ffffff8 // Word align to make any future copying of this buffer faster\n            ;\n            start = $07e009346b695b03$var$position;\n            if (encoder.useSelfDescribedHeader) {\n                $07e009346b695b03$var$targetView.setUint32($07e009346b695b03$var$position, 0xd9d9f700) // tag two byte, then self-descriptive tag\n                ;\n                $07e009346b695b03$var$position += 3;\n            }\n            referenceMap = encoder.structuredClone ? new Map() : null;\n            if (encoder.bundleStrings && typeof value !== 'string') {\n                $07e009346b695b03$var$bundledStrings = [];\n                $07e009346b695b03$var$bundledStrings.size = Infinity // force a new bundle start on first string\n                ;\n            } else $07e009346b695b03$var$bundledStrings = null;\n            sharedStructures = encoder.structures;\n            if (sharedStructures) {\n                if (sharedStructures.uninitialized) {\n                    let sharedData = encoder.getShared() || {};\n                    encoder.structures = sharedStructures = sharedData.structures || [];\n                    encoder.sharedVersion = sharedData.version;\n                    let sharedValues = encoder.sharedValues = sharedData.packedValues;\n                    if (sharedValues) {\n                        sharedPackedObjectMap1 = {};\n                        for(let i = 0, l = sharedValues.length; i < l; i++)sharedPackedObjectMap1[sharedValues[i]] = i;\n                    }\n                }\n                let sharedStructuresLength = sharedStructures.length;\n                if (sharedStructuresLength > maxSharedStructures && !isSequential) sharedStructuresLength = maxSharedStructures;\n                if (!sharedStructures.transitions) {\n                    // rebuild our structure transitions\n                    sharedStructures.transitions = Object.create(null);\n                    for(let i = 0; i < sharedStructuresLength; i++){\n                        let keys = sharedStructures[i];\n                        //console.log('shared struct keys:', keys)\n                        if (!keys) continue;\n                        let nextTransition, transition = sharedStructures.transitions;\n                        for(let j = 0, l = keys.length; j < l; j++){\n                            if (transition[$07e009346b695b03$var$RECORD_SYMBOL] === undefined) transition[$07e009346b695b03$var$RECORD_SYMBOL] = i;\n                            let key = keys[j];\n                            nextTransition = transition[key];\n                            if (!nextTransition) nextTransition = transition[key] = Object.create(null);\n                            transition = nextTransition;\n                        }\n                        transition[$07e009346b695b03$var$RECORD_SYMBOL] = i | 0x100000;\n                    }\n                }\n                if (!isSequential) sharedStructures.nextId = sharedStructuresLength;\n            }\n            if (hasSharedUpdate) hasSharedUpdate = false;\n            structures = sharedStructures || [];\n            packedObjectMap1 = sharedPackedObjectMap1;\n            if (options.pack) {\n                let packedValues = new Map();\n                packedValues.values = [];\n                packedValues.encoder = encoder;\n                packedValues.maxValues = options.maxPrivatePackedValues || (sharedPackedObjectMap1 ? 16 : Infinity);\n                packedValues.objectMap = sharedPackedObjectMap1 || false;\n                packedValues.samplingPackedValues = samplingPackedValues;\n                $07e009346b695b03$var$findRepetitiveStrings(value, packedValues);\n                if (packedValues.values.length > 0) {\n                    $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xd8 // one-byte tag\n                    ;\n                    $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 51 // tag 51 for packed shared structures https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n                    ;\n                    $07e009346b695b03$var$writeArrayHeader(4);\n                    let valuesArray = packedValues.values;\n                    encode(valuesArray);\n                    $07e009346b695b03$var$writeArrayHeader(0) // prefixes\n                    ;\n                    $07e009346b695b03$var$writeArrayHeader(0) // suffixes\n                    ;\n                    packedObjectMap1 = Object.create(sharedPackedObjectMap1 || null);\n                    for(let i = 0, l = valuesArray.length; i < l; i++)packedObjectMap1[valuesArray[i]] = i;\n                }\n            }\n            $07e009346b695b03$var$throwOnIterable = encodeOptions & $07e009346b695b03$export$e724ae76933ea297;\n            try {\n                if ($07e009346b695b03$var$throwOnIterable) return;\n                encode(value);\n                if ($07e009346b695b03$var$bundledStrings) $07e009346b695b03$var$writeBundles(start, encode);\n                encoder.offset = $07e009346b695b03$var$position // update the offset so next serialization doesn't write over our buffer, but can continue writing to same buffer sequentially\n                ;\n                if (referenceMap && referenceMap.idsToInsert) {\n                    $07e009346b695b03$var$position += referenceMap.idsToInsert.length * 2;\n                    if ($07e009346b695b03$var$position > $07e009346b695b03$var$safeEnd) makeRoom($07e009346b695b03$var$position);\n                    encoder.offset = $07e009346b695b03$var$position;\n                    let serialized = $07e009346b695b03$var$insertIds($07e009346b695b03$var$target.subarray(start, $07e009346b695b03$var$position), referenceMap.idsToInsert);\n                    referenceMap = null;\n                    return serialized;\n                }\n                if (encodeOptions & $07e009346b695b03$export$d41ac1453288b342) {\n                    $07e009346b695b03$var$target.start = start;\n                    $07e009346b695b03$var$target.end = $07e009346b695b03$var$position;\n                    return $07e009346b695b03$var$target;\n                }\n                return $07e009346b695b03$var$target.subarray(start, $07e009346b695b03$var$position) // position can change if we call encode again in saveShared, so we get the buffer now\n                ;\n            } finally{\n                if (sharedStructures) {\n                    if (serializationsSinceTransitionRebuild < 10) serializationsSinceTransitionRebuild++;\n                    if (sharedStructures.length > maxSharedStructures) sharedStructures.length = maxSharedStructures;\n                    if (transitionsCount > 10000) {\n                        // force a rebuild occasionally after a lot of transitions so it can get cleaned up\n                        sharedStructures.transitions = null;\n                        serializationsSinceTransitionRebuild = 0;\n                        transitionsCount = 0;\n                        if (recordIdsToRemove.length > 0) recordIdsToRemove = [];\n                    } else if (recordIdsToRemove.length > 0 && !isSequential) {\n                        for(let i = 0, l = recordIdsToRemove.length; i < l; i++)recordIdsToRemove[i][$07e009346b695b03$var$RECORD_SYMBOL] = undefined;\n                        recordIdsToRemove = [];\n                    //sharedStructures.nextId = maxSharedStructures\n                    }\n                }\n                if (hasSharedUpdate && encoder.saveShared) {\n                    if (encoder.structures.length > maxSharedStructures) encoder.structures = encoder.structures.slice(0, maxSharedStructures);\n                    // we can't rely on start/end with REUSE_BUFFER_MODE since they will (probably) change when we save\n                    let returnBuffer = $07e009346b695b03$var$target.subarray(start, $07e009346b695b03$var$position);\n                    if (encoder.updateSharedData() === false) return encoder.encode(value) // re-encode if it fails\n                    ;\n                    return returnBuffer;\n                }\n                if (encodeOptions & $07e009346b695b03$export$5687accb6effa257) $07e009346b695b03$var$position = start;\n            }\n        };\n        this.findCommonStringsToPack = ()=>{\n            samplingPackedValues = new Map();\n            if (!sharedPackedObjectMap1) sharedPackedObjectMap1 = Object.create(null);\n            return (options)=>{\n                let threshold = options && options.threshold || 4;\n                let position = this.pack ? options.maxPrivatePackedValues || 16 : 0;\n                if (!sharedValues) sharedValues = this.sharedValues = [];\n                for (let [key, status] of samplingPackedValues)if (status.count > threshold) {\n                    sharedPackedObjectMap1[key] = position++;\n                    sharedValues.push(key);\n                    hasSharedUpdate = true;\n                }\n                while(this.saveShared && this.updateSharedData() === false);\n                samplingPackedValues = null;\n            };\n        };\n        const encode = (value)=>{\n            if ($07e009346b695b03$var$position > $07e009346b695b03$var$safeEnd) $07e009346b695b03$var$target = makeRoom($07e009346b695b03$var$position);\n            var type = typeof value;\n            var length;\n            if (type === 'string') {\n                if (packedObjectMap1) {\n                    let packedPosition = packedObjectMap1[value];\n                    if (packedPosition >= 0) {\n                        if (packedPosition < 16) $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = packedPosition + 0xe0 // simple values, defined in https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n                        ;\n                        else {\n                            $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xc6 // tag 6 defined in https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n                            ;\n                            if (packedPosition & 1) encode(15 - packedPosition >> 1);\n                            else encode(packedPosition - 16 >> 1);\n                        }\n                        return;\n                    /*\t\t\t\t\t\t} else if (packedStatus.serializationId != serializationId) {\n\t\t\t\t\t\t\tpackedStatus.serializationId = serializationId\n\t\t\t\t\t\t\tpackedStatus.count = 1\n\t\t\t\t\t\t\tif (options.sharedPack) {\n\t\t\t\t\t\t\t\tlet sharedCount = packedStatus.sharedCount = (packedStatus.sharedCount || 0) + 1\n\t\t\t\t\t\t\t\tif (shareCount > (options.sharedPack.threshold || 5)) {\n\t\t\t\t\t\t\t\t\tlet sharedPosition = packedStatus.position = packedStatus.nextSharedPosition\n\t\t\t\t\t\t\t\t\thasSharedUpdate = true\n\t\t\t\t\t\t\t\t\tif (sharedPosition < 16)\n\t\t\t\t\t\t\t\t\t\ttarget[position++] = sharedPosition + 0xc0\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} // else any in-doc incrementation?*/ } else if (samplingPackedValues && !options.pack) {\n                        let status = samplingPackedValues.get(value);\n                        if (status) status.count++;\n                        else samplingPackedValues.set(value, {\n                            count: 1\n                        });\n                    }\n                }\n                let strLength = value.length;\n                if ($07e009346b695b03$var$bundledStrings && strLength >= 4 && strLength < 0x400) {\n                    if (($07e009346b695b03$var$bundledStrings.size += strLength) > $07e009346b695b03$var$MAX_BUNDLE_SIZE) {\n                        let extStart;\n                        let maxBytes = ($07e009346b695b03$var$bundledStrings[0] ? $07e009346b695b03$var$bundledStrings[0].length * 3 + $07e009346b695b03$var$bundledStrings[1].length : 0) + 10;\n                        if ($07e009346b695b03$var$position + maxBytes > $07e009346b695b03$var$safeEnd) $07e009346b695b03$var$target = makeRoom($07e009346b695b03$var$position + maxBytes);\n                        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xd9 // tag 16-bit\n                        ;\n                        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xdf // tag 0xdff9\n                        ;\n                        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xf9;\n                        // TODO: If we only have one bundle with any string data, only write one string bundle\n                        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = $07e009346b695b03$var$bundledStrings.position ? 0x84 : 0x82 // array of 4 or 2 elements depending on if we write bundles\n                        ;\n                        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x1a // 32-bit unsigned int\n                        ;\n                        extStart = $07e009346b695b03$var$position - start;\n                        $07e009346b695b03$var$position += 4 // reserve for writing bundle reference\n                        ;\n                        if ($07e009346b695b03$var$bundledStrings.position) $07e009346b695b03$var$writeBundles(start, encode) // write the last bundles\n                        ;\n                        $07e009346b695b03$var$bundledStrings = [\n                            '',\n                            ''\n                        ] // create new ones\n                        ;\n                        $07e009346b695b03$var$bundledStrings.size = 0;\n                        $07e009346b695b03$var$bundledStrings.position = extStart;\n                    }\n                    let twoByte = $07e009346b695b03$var$hasNonLatin.test(value);\n                    $07e009346b695b03$var$bundledStrings[twoByte ? 0 : 1] += value;\n                    $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = twoByte ? 0xce : 0xcf;\n                    encode(strLength);\n                    return;\n                }\n                let headerSize;\n                // first we estimate the header size, so we can write to the correct location\n                if (strLength < 0x20) headerSize = 1;\n                else if (strLength < 0x100) headerSize = 2;\n                else if (strLength < 0x10000) headerSize = 3;\n                else headerSize = 5;\n                let maxBytes = strLength * 3;\n                if ($07e009346b695b03$var$position + maxBytes > $07e009346b695b03$var$safeEnd) $07e009346b695b03$var$target = makeRoom($07e009346b695b03$var$position + maxBytes);\n                if (strLength < 0x40 || !encodeUtf8) {\n                    let i, c1, c2, strPosition = $07e009346b695b03$var$position + headerSize;\n                    for(i = 0; i < strLength; i++){\n                        c1 = value.charCodeAt(i);\n                        if (c1 < 0x80) $07e009346b695b03$var$target[strPosition++] = c1;\n                        else if (c1 < 0x800) {\n                            $07e009346b695b03$var$target[strPosition++] = c1 >> 6 | 0xc0;\n                            $07e009346b695b03$var$target[strPosition++] = c1 & 0x3f | 0x80;\n                        } else if ((c1 & 0xfc00) === 0xd800 && ((c2 = value.charCodeAt(i + 1)) & 0xfc00) === 0xdc00) {\n                            c1 = 0x10000 + ((c1 & 0x03ff) << 10) + (c2 & 0x03ff);\n                            i++;\n                            $07e009346b695b03$var$target[strPosition++] = c1 >> 18 | 0xf0;\n                            $07e009346b695b03$var$target[strPosition++] = c1 >> 12 & 0x3f | 0x80;\n                            $07e009346b695b03$var$target[strPosition++] = c1 >> 6 & 0x3f | 0x80;\n                            $07e009346b695b03$var$target[strPosition++] = c1 & 0x3f | 0x80;\n                        } else {\n                            $07e009346b695b03$var$target[strPosition++] = c1 >> 12 | 0xe0;\n                            $07e009346b695b03$var$target[strPosition++] = c1 >> 6 & 0x3f | 0x80;\n                            $07e009346b695b03$var$target[strPosition++] = c1 & 0x3f | 0x80;\n                        }\n                    }\n                    length = strPosition - $07e009346b695b03$var$position - headerSize;\n                } else length = encodeUtf8(value, $07e009346b695b03$var$position + headerSize, maxBytes);\n                if (length < 0x18) $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x60 | length;\n                else if (length < 0x100) {\n                    if (headerSize < 2) $07e009346b695b03$var$target.copyWithin($07e009346b695b03$var$position + 2, $07e009346b695b03$var$position + 1, $07e009346b695b03$var$position + 1 + length);\n                    $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x78;\n                    $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = length;\n                } else if (length < 0x10000) {\n                    if (headerSize < 3) $07e009346b695b03$var$target.copyWithin($07e009346b695b03$var$position + 3, $07e009346b695b03$var$position + 2, $07e009346b695b03$var$position + 2 + length);\n                    $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x79;\n                    $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = length >> 8;\n                    $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = length & 0xff;\n                } else {\n                    if (headerSize < 5) $07e009346b695b03$var$target.copyWithin($07e009346b695b03$var$position + 5, $07e009346b695b03$var$position + 3, $07e009346b695b03$var$position + 3 + length);\n                    $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x7a;\n                    $07e009346b695b03$var$targetView.setUint32($07e009346b695b03$var$position, length);\n                    $07e009346b695b03$var$position += 4;\n                }\n                $07e009346b695b03$var$position += length;\n            } else if (type === 'number') {\n                if (!this.alwaysUseFloat && value >>> 0 === value) {\n                    // positive uint\n                    if (value < 0x18) $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = value;\n                    else if (value < 0x100) {\n                        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x18;\n                        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = value;\n                    } else if (value < 0x10000) {\n                        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x19;\n                        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = value >> 8;\n                        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = value & 0xff;\n                    } else {\n                        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x1a;\n                        $07e009346b695b03$var$targetView.setUint32($07e009346b695b03$var$position, value);\n                        $07e009346b695b03$var$position += 4;\n                    }\n                } else if (!this.alwaysUseFloat && value >> 0 === value) {\n                    if (value >= -24) $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x1f - value;\n                    else if (value >= -256) {\n                        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x38;\n                        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = ~value;\n                    } else if (value >= -65536) {\n                        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x39;\n                        $07e009346b695b03$var$targetView.setUint16($07e009346b695b03$var$position, ~value);\n                        $07e009346b695b03$var$position += 2;\n                    } else {\n                        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x3a;\n                        $07e009346b695b03$var$targetView.setUint32($07e009346b695b03$var$position, ~value);\n                        $07e009346b695b03$var$position += 4;\n                    }\n                } else {\n                    let useFloat32;\n                    if ((useFloat32 = this.useFloat32) > 0 && value < 0x100000000 && value >= -2147483648) {\n                        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xfa;\n                        $07e009346b695b03$var$targetView.setFloat32($07e009346b695b03$var$position, value);\n                        let xShifted;\n                        if (useFloat32 < 4 || (xShifted = value * (0, $fdd18942f3b79c14$export$c652a5bbb6be7a36)[($07e009346b695b03$var$target[$07e009346b695b03$var$position] & 0x7f) << 1 | $07e009346b695b03$var$target[$07e009346b695b03$var$position + 1] >> 7]) >> 0 === xShifted) {\n                            $07e009346b695b03$var$position += 4;\n                            return;\n                        } else $07e009346b695b03$var$position-- // move back into position for writing a double\n                        ;\n                    }\n                    $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xfb;\n                    $07e009346b695b03$var$targetView.setFloat64($07e009346b695b03$var$position, value);\n                    $07e009346b695b03$var$position += 8;\n                }\n            } else if (type === 'object') {\n                if (!value) $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xf6;\n                else {\n                    if (referenceMap) {\n                        let referee = referenceMap.get(value);\n                        if (referee) {\n                            $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xd8;\n                            $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 29 // http://cbor.schmorp.de/value-sharing\n                            ;\n                            $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x19 // 16-bit uint\n                            ;\n                            if (!referee.references) {\n                                let idsToInsert = referenceMap.idsToInsert || (referenceMap.idsToInsert = []);\n                                referee.references = [];\n                                idsToInsert.push(referee);\n                            }\n                            referee.references.push($07e009346b695b03$var$position - start);\n                            $07e009346b695b03$var$position += 2 // TODO: also support 32-bit\n                            ;\n                            return;\n                        } else referenceMap.set(value, {\n                            offset: $07e009346b695b03$var$position - start\n                        });\n                    }\n                    let constructor = value.constructor;\n                    if (constructor === Object) writeObject(value, true);\n                    else if (constructor === Array) {\n                        length = value.length;\n                        if (length < 0x18) $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x80 | length;\n                        else $07e009346b695b03$var$writeArrayHeader(length);\n                        for(let i = 0; i < length; i++)encode(value[i]);\n                    } else if (constructor === Map) {\n                        if (this.mapsAsObjects ? this.useTag259ForMaps !== false : this.useTag259ForMaps) {\n                            // use Tag 259 (https://github.com/shanewholloway/js-cbor-codec/blob/master/docs/CBOR-259-spec--explicit-maps.md) for maps if the user wants it that way\n                            $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xd9;\n                            $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 1;\n                            $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 3;\n                        }\n                        length = value.size;\n                        if (length < 0x18) $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xa0 | length;\n                        else if (length < 0x100) {\n                            $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xb8;\n                            $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = length;\n                        } else if (length < 0x10000) {\n                            $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xb9;\n                            $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = length >> 8;\n                            $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = length & 0xff;\n                        } else {\n                            $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xba;\n                            $07e009346b695b03$var$targetView.setUint32($07e009346b695b03$var$position, length);\n                            $07e009346b695b03$var$position += 4;\n                        }\n                        if (encoder.keyMap) for (let [key, entryValue] of value){\n                            encode(encoder.encodeKey(key));\n                            encode(entryValue);\n                        }\n                        else for (let [key, entryValue] of value){\n                            encode(key);\n                            encode(entryValue);\n                        }\n                    } else {\n                        for(let i = 0, l = $07e009346b695b03$var$extensions.length; i < l; i++){\n                            let extensionClass = $07e009346b695b03$var$extensionClasses[i];\n                            if (value instanceof extensionClass) {\n                                let extension = $07e009346b695b03$var$extensions[i];\n                                let tag = extension.tag;\n                                if (tag == undefined) tag = extension.getTag && extension.getTag.call(this, value);\n                                if (tag < 0x18) $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xc0 | tag;\n                                else if (tag < 0x100) {\n                                    $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xd8;\n                                    $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = tag;\n                                } else if (tag < 0x10000) {\n                                    $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xd9;\n                                    $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = tag >> 8;\n                                    $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = tag & 0xff;\n                                } else if (tag > -1) {\n                                    $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xda;\n                                    $07e009346b695b03$var$targetView.setUint32($07e009346b695b03$var$position, tag);\n                                    $07e009346b695b03$var$position += 4;\n                                } // else undefined, don't write tag\n                                extension.encode.call(this, value, encode, makeRoom);\n                                return;\n                            }\n                        }\n                        if (value[Symbol.iterator]) {\n                            if ($07e009346b695b03$var$throwOnIterable) {\n                                let error = new Error('Iterable should be serialized as iterator');\n                                error.iteratorNotHandled = true;\n                                throw error;\n                            }\n                            $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x9f // indefinite length array\n                            ;\n                            for (let entry of value)encode(entry);\n                            $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xff // stop-code\n                            ;\n                            return;\n                        }\n                        if (value[Symbol.asyncIterator] || $07e009346b695b03$var$isBlob(value)) {\n                            let error = new Error('Iterable/blob should be serialized as iterator');\n                            error.iteratorNotHandled = true;\n                            throw error;\n                        }\n                        if (this.useToJSON && value.toJSON) {\n                            const json = value.toJSON();\n                            // if for some reason value.toJSON returns itself it'll loop forever\n                            if (json !== value) return encode(json);\n                        }\n                        // no extension found, write as object\n                        writeObject(value, !value.hasOwnProperty) // if it doesn't have hasOwnProperty, don't do hasOwnProperty checks\n                        ;\n                    }\n                }\n            } else if (type === 'boolean') $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = value ? 0xf5 : 0xf4;\n            else if (type === 'bigint') {\n                if (value < BigInt(1) << BigInt(64) && value >= 0) {\n                    // use an unsigned int as long as it fits\n                    $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x1b;\n                    $07e009346b695b03$var$targetView.setBigUint64($07e009346b695b03$var$position, value);\n                } else if (value > -(BigInt(1) << BigInt(64)) && value < 0) {\n                    // if we can fit an unsigned int, use that\n                    $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x3b;\n                    $07e009346b695b03$var$targetView.setBigUint64($07e009346b695b03$var$position, -value - BigInt(1));\n                } else {\n                    // overflow\n                    if (this.largeBigIntToFloat) {\n                        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xfb;\n                        $07e009346b695b03$var$targetView.setFloat64($07e009346b695b03$var$position, Number(value));\n                    } else throw new RangeError(value + ' was too large to fit in CBOR 64-bit integer format, set largeBigIntToFloat to convert to float-64');\n                }\n                $07e009346b695b03$var$position += 8;\n            } else if (type === 'undefined') $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xf7;\n            else throw new Error('Unknown type: ' + type);\n        };\n        const writeObject = this.useRecords === false ? this.variableMapSize ? (object)=>{\n            // this method is slightly slower, but generates \"preferred serialization\" (optimally small for smaller objects)\n            let keys = Object.keys(object);\n            let vals = Object.values(object);\n            let length = keys.length;\n            if (length < 0x18) $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xa0 | length;\n            else if (length < 0x100) {\n                $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xb8;\n                $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = length;\n            } else if (length < 0x10000) {\n                $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xb9;\n                $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = length >> 8;\n                $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = length & 0xff;\n            } else {\n                $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xba;\n                $07e009346b695b03$var$targetView.setUint32($07e009346b695b03$var$position, length);\n                $07e009346b695b03$var$position += 4;\n            }\n            let key;\n            if (encoder.keyMap) for(let i = 0; i < length; i++){\n                encode(encoder.encodeKey(keys[i]));\n                encode(vals[i]);\n            }\n            else for(let i = 0; i < length; i++){\n                encode(keys[i]);\n                encode(vals[i]);\n            }\n        } : (object, safePrototype)=>{\n            $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xb9 // always use map 16, so we can preallocate and set the length afterwards\n            ;\n            let objectOffset = $07e009346b695b03$var$position - start;\n            $07e009346b695b03$var$position += 2;\n            let size = 0;\n            if (encoder.keyMap) {\n                for(let key in object)if (safePrototype || object.hasOwnProperty(key)) {\n                    encode(encoder.encodeKey(key));\n                    encode(object[key]);\n                    size++;\n                }\n            } else {\n                for(let key in object)if (safePrototype || object.hasOwnProperty(key)) {\n                    encode(key);\n                    encode(object[key]);\n                    size++;\n                }\n            }\n            $07e009346b695b03$var$target[objectOffset++ + start] = size >> 8;\n            $07e009346b695b03$var$target[objectOffset + start] = size & 0xff;\n        } : (object, safePrototype)=>{\n            let nextTransition, transition = structures.transitions || (structures.transitions = Object.create(null));\n            let newTransitions = 0;\n            let length = 0;\n            let parentRecordId;\n            let keys;\n            if (this.keyMap) {\n                keys = Object.keys(object).map((k)=>this.encodeKey(k));\n                length = keys.length;\n                for(let i = 0; i < length; i++){\n                    let key = keys[i];\n                    nextTransition = transition[key];\n                    if (!nextTransition) {\n                        nextTransition = transition[key] = Object.create(null);\n                        newTransitions++;\n                    }\n                    transition = nextTransition;\n                }\n            } else {\n                for(let key in object)if (safePrototype || object.hasOwnProperty(key)) {\n                    nextTransition = transition[key];\n                    if (!nextTransition) {\n                        if (transition[$07e009346b695b03$var$RECORD_SYMBOL] & 0x100000) parentRecordId = transition[$07e009346b695b03$var$RECORD_SYMBOL] & 0xffff;\n                        nextTransition = transition[key] = Object.create(null);\n                        newTransitions++;\n                    }\n                    transition = nextTransition;\n                    length++;\n                }\n            }\n            let recordId = transition[$07e009346b695b03$var$RECORD_SYMBOL];\n            if (recordId !== undefined) {\n                recordId &= 0xffff;\n                $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xd9;\n                $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = recordId >> 8 | 0xe0;\n                $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = recordId & 0xff;\n            } else {\n                if (!keys) keys = transition.__keys__ || (transition.__keys__ = Object.keys(object));\n                if (parentRecordId === undefined) {\n                    recordId = structures.nextId++;\n                    if (!recordId) {\n                        recordId = 0;\n                        structures.nextId = 1;\n                    }\n                    if (recordId >= $07e009346b695b03$var$MAX_STRUCTURES) structures.nextId = (recordId = maxSharedStructures) + 1;\n                } else recordId = parentRecordId;\n                structures[recordId] = keys;\n                if (recordId < maxSharedStructures) {\n                    $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xd9;\n                    $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = recordId >> 8 | 0xe0;\n                    $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = recordId & 0xff;\n                    transition = structures.transitions;\n                    for(let i = 0; i < length; i++){\n                        if (transition[$07e009346b695b03$var$RECORD_SYMBOL] === undefined || transition[$07e009346b695b03$var$RECORD_SYMBOL] & 0x100000) transition[$07e009346b695b03$var$RECORD_SYMBOL] = recordId;\n                        transition = transition[keys[i]];\n                    }\n                    transition[$07e009346b695b03$var$RECORD_SYMBOL] = recordId | 0x100000 // indicates it is a extendable terminal\n                    ;\n                    hasSharedUpdate = true;\n                } else {\n                    transition[$07e009346b695b03$var$RECORD_SYMBOL] = recordId;\n                    $07e009346b695b03$var$targetView.setUint32($07e009346b695b03$var$position, 0xd9dfff00) // tag two byte, then record definition id\n                    ;\n                    $07e009346b695b03$var$position += 3;\n                    if (newTransitions) transitionsCount += serializationsSinceTransitionRebuild * newTransitions;\n                    // record the removal of the id, we can maintain our shared structure\n                    if (recordIdsToRemove.length >= $07e009346b695b03$var$MAX_STRUCTURES - maxSharedStructures) recordIdsToRemove.shift()[$07e009346b695b03$var$RECORD_SYMBOL] = undefined // we are cycling back through, and have to remove old ones\n                    ;\n                    recordIdsToRemove.push(transition);\n                    $07e009346b695b03$var$writeArrayHeader(length + 2);\n                    encode(0xe000 + recordId);\n                    encode(keys);\n                    if (safePrototype === null) return; // special exit for iterator\n                    for(let key in object)if (safePrototype || object.hasOwnProperty(key)) encode(object[key]);\n                    return;\n                }\n            }\n            if (length < 0x18) $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x80 | length;\n            else $07e009346b695b03$var$writeArrayHeader(length);\n            if (safePrototype === null) return; // special exit for iterator\n            for(let key in object)if (safePrototype || object.hasOwnProperty(key)) encode(object[key]);\n        };\n        const makeRoom = (end)=>{\n            let newSize;\n            if (end > 0x1000000) {\n                // special handling for really large buffers\n                if (end - start > $07e009346b695b03$var$MAX_BUFFER_SIZE) throw new Error('Encoded buffer would be larger than maximum buffer size');\n                newSize = Math.min($07e009346b695b03$var$MAX_BUFFER_SIZE, Math.round(Math.max((end - start) * (end > 0x4000000 ? 1.25 : 2), 0x400000) / 0x1000) * 0x1000);\n            } else newSize = (Math.max(end - start << 2, $07e009346b695b03$var$target.length - 1) >> 12) + 1 << 12;\n            let newBuffer = new $07e009346b695b03$var$ByteArrayAllocate(newSize);\n            $07e009346b695b03$var$targetView = new DataView(newBuffer.buffer, 0, newSize);\n            if ($07e009346b695b03$var$target.copy) $07e009346b695b03$var$target.copy(newBuffer, 0, start, end);\n            else newBuffer.set($07e009346b695b03$var$target.slice(start, end));\n            $07e009346b695b03$var$position -= start;\n            start = 0;\n            $07e009346b695b03$var$safeEnd = newBuffer.length - 10;\n            return $07e009346b695b03$var$target = newBuffer;\n        };\n        let chunkThreshold = 100;\n        let continuedChunkThreshold = 1000;\n        this.encodeAsIterable = function(value, options) {\n            return startEncoding(value, options, encodeObjectAsIterable);\n        };\n        this.encodeAsAsyncIterable = function(value, options) {\n            return startEncoding(value, options, encodeObjectAsAsyncIterable);\n        };\n        function* encodeObjectAsIterable(object, iterateProperties, finalIterable) {\n            let constructor = object.constructor;\n            if (constructor === Object) {\n                let useRecords = encoder.useRecords !== false;\n                if (useRecords) writeObject(object, null); // write the record identifier\n                else $07e009346b695b03$var$writeEntityLength(Object.keys(object).length, 0xa0);\n                for(let key in object){\n                    let value = object[key];\n                    if (!useRecords) encode(key);\n                    if (value && typeof value === 'object') {\n                        if (iterateProperties[key]) yield* encodeObjectAsIterable(value, iterateProperties[key]);\n                        else yield* tryEncode(value, iterateProperties, key);\n                    } else encode(value);\n                }\n            } else if (constructor === Array) {\n                let length = object.length;\n                $07e009346b695b03$var$writeArrayHeader(length);\n                for(let i = 0; i < length; i++){\n                    let value = object[i];\n                    if (value && (typeof value === 'object' || $07e009346b695b03$var$position - start > chunkThreshold)) {\n                        if (iterateProperties.element) yield* encodeObjectAsIterable(value, iterateProperties.element);\n                        else yield* tryEncode(value, iterateProperties, 'element');\n                    } else encode(value);\n                }\n            } else if (object[Symbol.iterator]) {\n                $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x9f; // start indefinite array\n                for (let value of object)if (value && (typeof value === 'object' || $07e009346b695b03$var$position - start > chunkThreshold)) {\n                    if (iterateProperties.element) yield* encodeObjectAsIterable(value, iterateProperties.element);\n                    else yield* tryEncode(value, iterateProperties, 'element');\n                } else encode(value);\n                $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xff; // stop byte\n            } else if ($07e009346b695b03$var$isBlob(object)) {\n                $07e009346b695b03$var$writeEntityLength(object.size, 0x40); // encode as binary data\n                yield $07e009346b695b03$var$target.subarray(start, $07e009346b695b03$var$position);\n                yield object; // directly return blobs, they have to be encoded asynchronously\n                restartEncoding();\n            } else if (object[Symbol.asyncIterator]) {\n                $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x9f; // start indefinite array\n                yield $07e009346b695b03$var$target.subarray(start, $07e009346b695b03$var$position);\n                yield object; // directly return async iterators, they have to be encoded asynchronously\n                restartEncoding();\n                $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xff; // stop byte\n            } else encode(object);\n            if (finalIterable && $07e009346b695b03$var$position > start) yield $07e009346b695b03$var$target.subarray(start, $07e009346b695b03$var$position);\n            else if ($07e009346b695b03$var$position - start > chunkThreshold) {\n                yield $07e009346b695b03$var$target.subarray(start, $07e009346b695b03$var$position);\n                restartEncoding();\n            }\n        }\n        function* tryEncode(value, iterateProperties, key) {\n            let restart = $07e009346b695b03$var$position - start;\n            try {\n                encode(value);\n                if ($07e009346b695b03$var$position - start > chunkThreshold) {\n                    yield $07e009346b695b03$var$target.subarray(start, $07e009346b695b03$var$position);\n                    restartEncoding();\n                }\n            } catch (error) {\n                if (error.iteratorNotHandled) {\n                    iterateProperties[key] = {};\n                    $07e009346b695b03$var$position = start + restart; // restart our position so we don't have partial data from last encode\n                    yield* encodeObjectAsIterable.call(this, value, iterateProperties[key]);\n                } else throw error;\n            }\n        }\n        function restartEncoding() {\n            chunkThreshold = continuedChunkThreshold;\n            encoder.encode(null, $07e009346b695b03$export$e724ae76933ea297); // restart encoding\n        }\n        function startEncoding(value, options, encodeIterable) {\n            if (options && options.chunkThreshold) chunkThreshold = continuedChunkThreshold = options.chunkThreshold;\n            else chunkThreshold = 100;\n            if (value && typeof value === 'object') {\n                encoder.encode(null, $07e009346b695b03$export$e724ae76933ea297); // start encoding\n                return encodeIterable(value, encoder.iterateProperties || (encoder.iterateProperties = {}), true);\n            }\n            return [\n                encoder.encode(value)\n            ];\n        }\n        async function* encodeObjectAsAsyncIterable(value, iterateProperties) {\n            for (let encodedValue of encodeObjectAsIterable(value, iterateProperties, true)){\n                let constructor = encodedValue.constructor;\n                if (constructor === $07e009346b695b03$var$ByteArray || constructor === Uint8Array) yield encodedValue;\n                else if ($07e009346b695b03$var$isBlob(encodedValue)) {\n                    let reader = encodedValue.stream().getReader();\n                    let next;\n                    while(!(next = await reader.read()).done)yield next.value;\n                } else if (encodedValue[Symbol.asyncIterator]) for await (let asyncValue of encodedValue){\n                    restartEncoding();\n                    if (asyncValue) yield* encodeObjectAsAsyncIterable(asyncValue, iterateProperties.async || (iterateProperties.async = {}));\n                    else yield encoder.encode(asyncValue);\n                }\n                else yield encodedValue;\n            }\n        }\n    }\n    useBuffer(buffer) {\n        // this means we are finished using our own buffer and we can write over it safely\n        $07e009346b695b03$var$target = buffer;\n        $07e009346b695b03$var$targetView = new DataView($07e009346b695b03$var$target.buffer, $07e009346b695b03$var$target.byteOffset, $07e009346b695b03$var$target.byteLength);\n        $07e009346b695b03$var$position = 0;\n    }\n    clearSharedData() {\n        if (this.structures) this.structures = [];\n        if (this.sharedValues) this.sharedValues = undefined;\n    }\n    updateSharedData() {\n        let lastVersion = this.sharedVersion || 0;\n        this.sharedVersion = lastVersion + 1;\n        let structuresCopy = this.structures.slice(0);\n        let sharedData = new $07e009346b695b03$var$SharedData(structuresCopy, this.sharedValues, this.sharedVersion);\n        let saveResults = this.saveShared(sharedData, (existingShared)=>(existingShared && existingShared.version || 0) == lastVersion);\n        if (saveResults === false) {\n            // get updated structures and try again if the update failed\n            sharedData = this.getShared() || {};\n            this.structures = sharedData.structures || [];\n            this.sharedValues = sharedData.packedValues;\n            this.sharedVersion = sharedData.version;\n            this.structures.nextId = this.structures.length;\n        } else // restore structures\n        structuresCopy.forEach((structure, i)=>this.structures[i] = structure);\n        // saveShared may fail to write and reload, or may have reloaded to check compatibility and overwrite saved data, either way load the correct shared data\n        return saveResults;\n    }\n}\nfunction $07e009346b695b03$var$writeEntityLength(length, majorValue) {\n    if (length < 0x18) $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = majorValue | length;\n    else if (length < 0x100) {\n        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = majorValue | 0x18;\n        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = length;\n    } else if (length < 0x10000) {\n        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = majorValue | 0x19;\n        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = length >> 8;\n        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = length & 0xff;\n    } else {\n        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = majorValue | 0x1a;\n        $07e009346b695b03$var$targetView.setUint32($07e009346b695b03$var$position, length);\n        $07e009346b695b03$var$position += 4;\n    }\n}\nclass $07e009346b695b03$var$SharedData {\n    constructor(structures, values, version){\n        this.structures = structures;\n        this.packedValues = values;\n        this.version = version;\n    }\n}\nfunction $07e009346b695b03$var$writeArrayHeader(length) {\n    if (length < 0x18) $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x80 | length;\n    else if (length < 0x100) {\n        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x98;\n        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = length;\n    } else if (length < 0x10000) {\n        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x99;\n        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = length >> 8;\n        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = length & 0xff;\n    } else {\n        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x9a;\n        $07e009346b695b03$var$targetView.setUint32($07e009346b695b03$var$position, length);\n        $07e009346b695b03$var$position += 4;\n    }\n}\nconst $07e009346b695b03$var$BlobConstructor = typeof Blob === 'undefined' ? function() {} : Blob;\nfunction $07e009346b695b03$var$isBlob(object) {\n    if (object instanceof $07e009346b695b03$var$BlobConstructor) return true;\n    let tag = object[Symbol.toStringTag];\n    return tag === 'Blob' || tag === 'File';\n}\nfunction $07e009346b695b03$var$findRepetitiveStrings(value, packedValues) {\n    switch(typeof value){\n        case 'string':\n            if (value.length > 3) {\n                if (packedValues.objectMap[value] > -1 || packedValues.values.length >= packedValues.maxValues) return;\n                let packedStatus = packedValues.get(value);\n                if (packedStatus) {\n                    if (++packedStatus.count == 2) packedValues.values.push(value);\n                } else {\n                    packedValues.set(value, {\n                        count: 1\n                    });\n                    if (packedValues.samplingPackedValues) {\n                        let status = packedValues.samplingPackedValues.get(value);\n                        if (status) status.count++;\n                        else packedValues.samplingPackedValues.set(value, {\n                            count: 1\n                        });\n                    }\n                }\n            }\n            break;\n        case 'object':\n            if (value) {\n                if (value instanceof Array) for(let i = 0, l = value.length; i < l; i++)$07e009346b695b03$var$findRepetitiveStrings(value[i], packedValues);\n                else {\n                    let includeKeys = !packedValues.encoder.useRecords;\n                    for(var key in value)if (value.hasOwnProperty(key)) {\n                        if (includeKeys) $07e009346b695b03$var$findRepetitiveStrings(key, packedValues);\n                        $07e009346b695b03$var$findRepetitiveStrings(value[key], packedValues);\n                    }\n                }\n            }\n            break;\n        case 'function':\n            console.log(value);\n    }\n}\nconst $07e009346b695b03$var$isLittleEndianMachine = new Uint8Array(new Uint16Array([\n    1\n]).buffer)[0] == 1;\n$07e009346b695b03$var$extensionClasses = [\n    Date,\n    Set,\n    Error,\n    RegExp,\n    (0, $fdd18942f3b79c14$export$3288d34c523a1192),\n    ArrayBuffer,\n    Uint8Array,\n    Uint8ClampedArray,\n    Uint16Array,\n    Uint32Array,\n    typeof BigUint64Array == 'undefined' ? function() {} : BigUint64Array,\n    Int8Array,\n    Int16Array,\n    Int32Array,\n    typeof BigInt64Array == 'undefined' ? function() {} : BigInt64Array,\n    Float32Array,\n    Float64Array,\n    $07e009346b695b03$var$SharedData\n];\n//Object.getPrototypeOf(Uint8Array.prototype).constructor /*TypedArray*/\n$07e009346b695b03$var$extensions = [\n    {\n        tag: 1,\n        encode (date, encode) {\n            let seconds = date.getTime() / 1000;\n            if ((this.useTimestamp32 || date.getMilliseconds() === 0) && seconds >= 0 && seconds < 0x100000000) {\n                // Timestamp 32\n                $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x1a;\n                $07e009346b695b03$var$targetView.setUint32($07e009346b695b03$var$position, seconds);\n                $07e009346b695b03$var$position += 4;\n            } else {\n                // Timestamp float64\n                $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xfb;\n                $07e009346b695b03$var$targetView.setFloat64($07e009346b695b03$var$position, seconds);\n                $07e009346b695b03$var$position += 8;\n            }\n        }\n    },\n    {\n        tag: 258,\n        encode (set, encode) {\n            let array = Array.from(set);\n            encode(array);\n        }\n    },\n    {\n        tag: 27,\n        encode (error, encode) {\n            encode([\n                error.name,\n                error.message\n            ]);\n        }\n    },\n    {\n        tag: 27,\n        encode (regex, encode) {\n            encode([\n                'RegExp',\n                regex.source,\n                regex.flags\n            ]);\n        }\n    },\n    {\n        getTag (tag) {\n            return tag.tag;\n        },\n        encode (tag, encode) {\n            encode(tag.value);\n        }\n    },\n    {\n        encode (arrayBuffer, encode, makeRoom) {\n            $07e009346b695b03$var$writeBuffer(arrayBuffer, makeRoom);\n        }\n    },\n    {\n        getTag (typedArray) {\n            if (typedArray.constructor === Uint8Array) {\n                if (this.tagUint8Array || $07e009346b695b03$var$hasNodeBuffer && this.tagUint8Array !== false) return 64;\n            } // else no tag\n        },\n        encode (typedArray, encode, makeRoom) {\n            $07e009346b695b03$var$writeBuffer(typedArray, makeRoom);\n        }\n    },\n    $07e009346b695b03$var$typedArrayEncoder(68, 1),\n    $07e009346b695b03$var$typedArrayEncoder(69, 2),\n    $07e009346b695b03$var$typedArrayEncoder(70, 4),\n    $07e009346b695b03$var$typedArrayEncoder(71, 8),\n    $07e009346b695b03$var$typedArrayEncoder(72, 1),\n    $07e009346b695b03$var$typedArrayEncoder(77, 2),\n    $07e009346b695b03$var$typedArrayEncoder(78, 4),\n    $07e009346b695b03$var$typedArrayEncoder(79, 8),\n    $07e009346b695b03$var$typedArrayEncoder(85, 4),\n    $07e009346b695b03$var$typedArrayEncoder(86, 8),\n    {\n        encode (sharedData, encode) {\n            let packedValues = sharedData.packedValues || [];\n            let sharedStructures = sharedData.structures || [];\n            if (packedValues.values.length > 0) {\n                $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0xd8 // one-byte tag\n                ;\n                $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 51 // tag 51 for packed shared structures https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n                ;\n                $07e009346b695b03$var$writeArrayHeader(4);\n                let valuesArray = packedValues.values;\n                encode(valuesArray);\n                $07e009346b695b03$var$writeArrayHeader(0) // prefixes\n                ;\n                $07e009346b695b03$var$writeArrayHeader(0) // suffixes\n                ;\n                packedObjectMap = Object.create(sharedPackedObjectMap || null);\n                for(let i = 0, l = valuesArray.length; i < l; i++)packedObjectMap[valuesArray[i]] = i;\n            }\n            if (sharedStructures) {\n                $07e009346b695b03$var$targetView.setUint32($07e009346b695b03$var$position, 0xd9dffe00);\n                $07e009346b695b03$var$position += 3;\n                let definitions = sharedStructures.slice(0);\n                definitions.unshift(0xe000);\n                definitions.push(new (0, $fdd18942f3b79c14$export$3288d34c523a1192)(sharedData.version, 0x53687264));\n                encode(definitions);\n            } else encode(new (0, $fdd18942f3b79c14$export$3288d34c523a1192)(sharedData.version, 0x53687264));\n        }\n    }\n];\nfunction $07e009346b695b03$var$typedArrayEncoder(tag, size) {\n    if (!$07e009346b695b03$var$isLittleEndianMachine && size > 1) tag -= 4 // the big endian equivalents are 4 less\n    ;\n    return {\n        tag: tag,\n        encode: function writeExtBuffer(typedArray, encode) {\n            let length = typedArray.byteLength;\n            let offset = typedArray.byteOffset || 0;\n            let buffer = typedArray.buffer || typedArray;\n            encode($07e009346b695b03$var$hasNodeBuffer ? $07e009346b695b03$var$Buffer.from(buffer, offset, length) : new Uint8Array(buffer, offset, length));\n        }\n    };\n}\nfunction $07e009346b695b03$var$writeBuffer(buffer, makeRoom) {\n    let length = buffer.byteLength;\n    if (length < 0x18) $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x40 + length;\n    else if (length < 0x100) {\n        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x58;\n        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = length;\n    } else if (length < 0x10000) {\n        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x59;\n        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = length >> 8;\n        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = length & 0xff;\n    } else {\n        $07e009346b695b03$var$target[$07e009346b695b03$var$position++] = 0x5a;\n        $07e009346b695b03$var$targetView.setUint32($07e009346b695b03$var$position, length);\n        $07e009346b695b03$var$position += 4;\n    }\n    if ($07e009346b695b03$var$position + length >= $07e009346b695b03$var$target.length) makeRoom($07e009346b695b03$var$position + length);\n    // if it is already a typed array (has an ArrayBuffer), use that, but if it is an ArrayBuffer itself,\n    // must wrap it to set it.\n    $07e009346b695b03$var$target.set(buffer.buffer ? buffer : new Uint8Array(buffer), $07e009346b695b03$var$position);\n    $07e009346b695b03$var$position += length;\n}\nfunction $07e009346b695b03$var$insertIds(serialized, idsToInsert) {\n    // insert the ids that need to be referenced for structured clones\n    let nextId;\n    let distanceToMove = idsToInsert.length * 2;\n    let lastEnd = serialized.length - distanceToMove;\n    idsToInsert.sort((a, b)=>a.offset > b.offset ? 1 : -1);\n    for(let id = 0; id < idsToInsert.length; id++){\n        let referee = idsToInsert[id];\n        referee.id = id;\n        for (let position of referee.references){\n            serialized[position++] = id >> 8;\n            serialized[position] = id & 0xff;\n        }\n    }\n    while(nextId = idsToInsert.pop()){\n        let offset = nextId.offset;\n        serialized.copyWithin(offset + distanceToMove, offset, lastEnd);\n        distanceToMove -= 2;\n        let position = offset + distanceToMove;\n        serialized[position++] = 0xd8;\n        serialized[position++] = 28 // http://cbor.schmorp.de/value-sharing\n        ;\n        lastEnd = offset;\n    }\n    return serialized;\n}\nfunction $07e009346b695b03$var$writeBundles(start, encode) {\n    $07e009346b695b03$var$targetView.setUint32($07e009346b695b03$var$bundledStrings.position + start, $07e009346b695b03$var$position - $07e009346b695b03$var$bundledStrings.position - start + 1) // the offset to bundle\n    ;\n    let writeStrings = $07e009346b695b03$var$bundledStrings;\n    $07e009346b695b03$var$bundledStrings = null;\n    encode(writeStrings[0]);\n    encode(writeStrings[1]);\n}\nfunction $07e009346b695b03$export$4e11b2f4fcd6c82d(extension) {\n    if (extension.Class) {\n        if (!extension.encode) throw new Error('Extension has no encode function');\n        $07e009346b695b03$var$extensionClasses.unshift(extension.Class);\n        $07e009346b695b03$var$extensions.unshift(extension);\n    }\n    (0, $fdd18942f3b79c14$export$4e11b2f4fcd6c82d)(extension);\n}\nlet $07e009346b695b03$var$defaultEncoder = new $07e009346b695b03$export$a50aceb0e02a00aa({\n    useRecords: false\n});\nconst $07e009346b695b03$export$c564cdbbe6da493 = $07e009346b695b03$var$defaultEncoder.encode;\nconst $07e009346b695b03$export$62a5d0ccbd8ba53e = $07e009346b695b03$var$defaultEncoder.encodeAsIterable;\nconst $07e009346b695b03$export$ba03bcdfc44f370a = $07e009346b695b03$var$defaultEncoder.encodeAsAsyncIterable;\nconst { NEVER: $07e009346b695b03$export$96c94437c95d7862, ALWAYS: $07e009346b695b03$export$9252627518dcde93, DECIMAL_ROUND: $07e009346b695b03$export$50de32e2440ab0bf, DECIMAL_FIT: $07e009346b695b03$export$fa7c7714126eb380 } = (0, $fdd18942f3b79c14$export$2239e49a3e351685);\nconst $07e009346b695b03$export$d41ac1453288b342 = 512;\nconst $07e009346b695b03$export$5687accb6effa257 = 1024;\nconst $07e009346b695b03$export$e724ae76933ea297 = 2048;\n\n\n\n\n\n\nvar $698f78ccf8d2e1d2$require$Buffer = $b364f2cd2faf3e98$exports.Buffer;\nfunction $698f78ccf8d2e1d2$export$82db1b517a03d6f4(objectIterator, options = {}) {\n    if (!objectIterator || typeof objectIterator !== 'object') throw new Error('first argument must be an Iterable, Async Iterable, or a Promise for an Async Iterable');\n    else if (typeof objectIterator[Symbol.iterator] === 'function') return $698f78ccf8d2e1d2$var$encodeIterSync(objectIterator, options);\n    else if (typeof objectIterator.then === 'function' || typeof objectIterator[Symbol.asyncIterator] === 'function') return $698f78ccf8d2e1d2$var$encodeIterAsync(objectIterator, options);\n    else throw new Error('first argument must be an Iterable, Async Iterable, Iterator, Async Iterator, or a Promise');\n}\nfunction* $698f78ccf8d2e1d2$var$encodeIterSync(objectIterator, options) {\n    const encoder = new (0, $07e009346b695b03$export$a50aceb0e02a00aa)(options);\n    for (const value of objectIterator)yield encoder.encode(value);\n}\nasync function* $698f78ccf8d2e1d2$var$encodeIterAsync(objectIterator, options) {\n    const encoder = new (0, $07e009346b695b03$export$a50aceb0e02a00aa)(options);\n    for await (const value of objectIterator)yield encoder.encode(value);\n}\nfunction $698f78ccf8d2e1d2$export$5201756020406471(bufferIterator, options = {}) {\n    if (!bufferIterator || typeof bufferIterator !== 'object') throw new Error('first argument must be an Iterable, Async Iterable, Iterator, Async Iterator, or a promise');\n    const decoder = new (0, $fdd18942f3b79c14$export$f9de6ca0bc043724)(options);\n    let incomplete;\n    const parser = (chunk)=>{\n        let yields;\n        // if there's incomplete data from previous chunk, concatinate and try again\n        if (incomplete) {\n            chunk = $698f78ccf8d2e1d2$require$Buffer.concat([\n                incomplete,\n                chunk\n            ]);\n            incomplete = undefined;\n        }\n        try {\n            yields = decoder.decodeMultiple(chunk);\n        } catch (err) {\n            if (err.incomplete) {\n                incomplete = chunk.slice(err.lastPosition);\n                yields = err.values;\n            } else throw err;\n        }\n        return yields;\n    };\n    if (typeof bufferIterator[Symbol.iterator] === 'function') return function* iter() {\n        for (const value of bufferIterator)yield* parser(value);\n    }();\n    else if (typeof bufferIterator[Symbol.asyncIterator] === 'function') return async function* iter() {\n        for await (const value of bufferIterator)yield* parser(value);\n    }();\n}\n\n\n\n\nfunction $b73d2ef085c4bd11$export$78406e843f5312da(byte) {\n    return \"\".concat(byte < 0 ? \"-\" : \"\", \"0x\").concat(Math.abs(byte).toString(16).padStart(2, \"0\"));\n}\n\n\n// ExtensionCodec to handle MessagePack extensions\n/**\n * ExtData is used to handle Extension Types that are not registered to ExtensionCodec.\n */ var $05fe768a05a9fb37$export$bcbeb236456bc779 = /** @class */ function() {\n    function ExtData(type, data) {\n        this.type = type;\n        this.data = data;\n    }\n    return ExtData;\n}();\n\n\n// https://github.com/msgpack/msgpack/blob/master/spec.md#timestamp-extension-type\nvar $0ccff85db5b697d5$var$__extends = undefined && undefined.__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar $0ccff85db5b697d5$export$ef3eed12d06c0285 = /** @class */ function(_super) {\n    $0ccff85db5b697d5$var$__extends(DecodeError, _super);\n    function DecodeError(message) {\n        var _this = _super.call(this, message) || this;\n        // fix the prototype chain in a cross-platform way\n        var proto = Object.create(DecodeError.prototype);\n        Object.setPrototypeOf(_this, proto);\n        Object.defineProperty(_this, \"name\", {\n            configurable: true,\n            enumerable: false,\n            value: DecodeError.name\n        });\n        return _this;\n    }\n    return DecodeError;\n}(Error);\n\n\n// Integer Utility\nvar $15ec20cc002c5b3c$export$3314b2c271c86d70 = 4294967295;\nfunction $15ec20cc002c5b3c$export$20f71c4c8b0f96c3(view, offset, value) {\n    var high = value / 4294967296;\n    var low = value; // high bits are truncated by DataView\n    view.setUint32(offset, high);\n    view.setUint32(offset + 4, low);\n}\nfunction $15ec20cc002c5b3c$export$8532a5209571c04a(view, offset, value) {\n    var high = Math.floor(value / 4294967296);\n    var low = value; // high bits are truncated by DataView\n    view.setUint32(offset, high);\n    view.setUint32(offset + 4, low);\n}\nfunction $15ec20cc002c5b3c$export$69825c7adcc820c6(view, offset) {\n    var high = view.getInt32(offset);\n    var low = view.getUint32(offset + 4);\n    return high * 4294967296 + low;\n}\nfunction $15ec20cc002c5b3c$export$59a2dbf579ff9568(view, offset) {\n    var high = view.getUint32(offset);\n    var low = view.getUint32(offset + 4);\n    return high * 4294967296 + low;\n}\n\n\nvar $bd38d4e90483b6c3$export$f18369fc203f4e13 = -1;\nvar $bd38d4e90483b6c3$var$TIMESTAMP32_MAX_SEC = 4294967295; // 32-bit unsigned int\nvar $bd38d4e90483b6c3$var$TIMESTAMP64_MAX_SEC = 17179869183; // 34-bit unsigned int\nfunction $bd38d4e90483b6c3$export$2fd05b828dd81159(_a) {\n    var sec = _a.sec, nsec = _a.nsec;\n    if (sec >= 0 && nsec >= 0 && sec <= $bd38d4e90483b6c3$var$TIMESTAMP64_MAX_SEC) {\n        // Here sec >= 0 && nsec >= 0\n        if (nsec === 0 && sec <= $bd38d4e90483b6c3$var$TIMESTAMP32_MAX_SEC) {\n            // timestamp 32 = { sec32 (unsigned) }\n            var rv = new Uint8Array(4);\n            var view = new DataView(rv.buffer);\n            view.setUint32(0, sec);\n            return rv;\n        } else {\n            // timestamp 64 = { nsec30 (unsigned), sec34 (unsigned) }\n            var secHigh = sec / 0x100000000;\n            var secLow = sec & 0xffffffff;\n            var rv = new Uint8Array(8);\n            var view = new DataView(rv.buffer);\n            // nsec30 | secHigh2\n            view.setUint32(0, nsec << 2 | secHigh & 0x3);\n            // secLow32\n            view.setUint32(4, secLow);\n            return rv;\n        }\n    } else {\n        // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n        var rv = new Uint8Array(12);\n        var view = new DataView(rv.buffer);\n        view.setUint32(0, nsec);\n        (0, $15ec20cc002c5b3c$export$8532a5209571c04a)(view, 4, sec);\n        return rv;\n    }\n}\nfunction $bd38d4e90483b6c3$export$221d97b3b00b03c2(date) {\n    var msec = date.getTime();\n    var sec = Math.floor(msec / 1e3);\n    var nsec = (msec - sec * 1e3) * 1e6;\n    // Normalizes { sec, nsec } to ensure nsec is unsigned.\n    var nsecInSec = Math.floor(nsec / 1e9);\n    return {\n        sec: sec + nsecInSec,\n        nsec: nsec - nsecInSec * 1e9\n    };\n}\nfunction $bd38d4e90483b6c3$export$32420f352fe0fc83(object) {\n    if (object instanceof Date) {\n        var timeSpec = $bd38d4e90483b6c3$export$221d97b3b00b03c2(object);\n        return $bd38d4e90483b6c3$export$2fd05b828dd81159(timeSpec);\n    } else return null;\n}\nfunction $bd38d4e90483b6c3$export$abfc8800a5159711(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    // data may be 32, 64, or 96 bits\n    switch(data.byteLength){\n        case 4:\n            // timestamp 32 = { sec32 }\n            var sec = view.getUint32(0);\n            var nsec = 0;\n            return {\n                sec: sec,\n                nsec: nsec\n            };\n        case 8:\n            // timestamp 64 = { nsec30, sec34 }\n            var nsec30AndSecHigh2 = view.getUint32(0);\n            var secLow32 = view.getUint32(4);\n            var sec = (nsec30AndSecHigh2 & 0x3) * 0x100000000 + secLow32;\n            var nsec = nsec30AndSecHigh2 >>> 2;\n            return {\n                sec: sec,\n                nsec: nsec\n            };\n        case 12:\n            // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n            var sec = (0, $15ec20cc002c5b3c$export$69825c7adcc820c6)(view, 4);\n            var nsec = view.getUint32(0);\n            return {\n                sec: sec,\n                nsec: nsec\n            };\n        default:\n            throw new (0, $0ccff85db5b697d5$export$ef3eed12d06c0285)(\"Unrecognized data size for timestamp (expected 4, 8, or 12): \".concat(data.length));\n    }\n}\nfunction $bd38d4e90483b6c3$export$80b8ff9315e4298f(data) {\n    var timeSpec = $bd38d4e90483b6c3$export$abfc8800a5159711(data);\n    return new Date(timeSpec.sec * 1e3 + timeSpec.nsec / 1e6);\n}\nvar $bd38d4e90483b6c3$export$8654479533463da1 = {\n    type: $bd38d4e90483b6c3$export$f18369fc203f4e13,\n    encode: $bd38d4e90483b6c3$export$32420f352fe0fc83,\n    decode: $bd38d4e90483b6c3$export$80b8ff9315e4298f\n};\n\n\nvar $812ea64cee3b19c7$export$12677a794dbd89d7 = /** @class */ function() {\n    function ExtensionCodec() {\n        // built-in extensions\n        this.builtInEncoders = [];\n        this.builtInDecoders = [];\n        // custom extensions\n        this.encoders = [];\n        this.decoders = [];\n        this.register((0, $bd38d4e90483b6c3$export$8654479533463da1));\n    }\n    ExtensionCodec.prototype.register = function(_a) {\n        var type = _a.type, encode = _a.encode, decode = _a.decode;\n        if (type >= 0) {\n            // custom extensions\n            this.encoders[type] = encode;\n            this.decoders[type] = decode;\n        } else {\n            // built-in extensions\n            var index = 1 + type;\n            this.builtInEncoders[index] = encode;\n            this.builtInDecoders[index] = decode;\n        }\n    };\n    ExtensionCodec.prototype.tryToEncode = function(object, context) {\n        // built-in extensions\n        for(var i = 0; i < this.builtInEncoders.length; i++){\n            var encodeExt = this.builtInEncoders[i];\n            if (encodeExt != null) {\n                var data = encodeExt(object, context);\n                if (data != null) {\n                    var type = -1 - i;\n                    return new (0, $05fe768a05a9fb37$export$bcbeb236456bc779)(type, data);\n                }\n            }\n        }\n        // custom extensions\n        for(var i = 0; i < this.encoders.length; i++){\n            var encodeExt = this.encoders[i];\n            if (encodeExt != null) {\n                var data = encodeExt(object, context);\n                if (data != null) {\n                    var type = i;\n                    return new (0, $05fe768a05a9fb37$export$bcbeb236456bc779)(type, data);\n                }\n            }\n        }\n        if (object instanceof (0, $05fe768a05a9fb37$export$bcbeb236456bc779)) // to keep ExtData as is\n        return object;\n        return null;\n    };\n    ExtensionCodec.prototype.decode = function(data, type, context) {\n        var decodeExt = type < 0 ? this.builtInDecoders[-1 - type] : this.decoders[type];\n        if (decodeExt) return decodeExt(data, type, context);\n        else // decode() does not fail, returns ExtData instead.\n        return new (0, $05fe768a05a9fb37$export$bcbeb236456bc779)(type, data);\n    };\n    ExtensionCodec.defaultCodec = new ExtensionCodec();\n    return ExtensionCodec;\n}();\n\n\n\n\nvar $d3c1734dacb01657$exports = {};\n// shim for using process in browser\nvar $d3c1734dacb01657$var$process = $d3c1734dacb01657$exports = {};\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\nvar $d3c1734dacb01657$var$cachedSetTimeout;\nvar $d3c1734dacb01657$var$cachedClearTimeout;\nfunction $d3c1734dacb01657$var$defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction $d3c1734dacb01657$var$defaultClearTimeout() {\n    throw new Error('clearTimeout has not been defined');\n}\n(function() {\n    try {\n        if (typeof setTimeout === 'function') $d3c1734dacb01657$var$cachedSetTimeout = setTimeout;\n        else $d3c1734dacb01657$var$cachedSetTimeout = $d3c1734dacb01657$var$defaultSetTimout;\n    } catch (e) {\n        $d3c1734dacb01657$var$cachedSetTimeout = $d3c1734dacb01657$var$defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') $d3c1734dacb01657$var$cachedClearTimeout = clearTimeout;\n        else $d3c1734dacb01657$var$cachedClearTimeout = $d3c1734dacb01657$var$defaultClearTimeout;\n    } catch (e) {\n        $d3c1734dacb01657$var$cachedClearTimeout = $d3c1734dacb01657$var$defaultClearTimeout;\n    }\n})();\nfunction $d3c1734dacb01657$var$runTimeout(fun) {\n    if ($d3c1734dacb01657$var$cachedSetTimeout === setTimeout) //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n    // if setTimeout wasn't available but was latter defined\n    if (($d3c1734dacb01657$var$cachedSetTimeout === $d3c1734dacb01657$var$defaultSetTimout || !$d3c1734dacb01657$var$cachedSetTimeout) && setTimeout) {\n        $d3c1734dacb01657$var$cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return $d3c1734dacb01657$var$cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return $d3c1734dacb01657$var$cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return $d3c1734dacb01657$var$cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction $d3c1734dacb01657$var$runClearTimeout(marker) {\n    if ($d3c1734dacb01657$var$cachedClearTimeout === clearTimeout) //normal enviroments in sane situations\n    return clearTimeout(marker);\n    // if clearTimeout wasn't available but was latter defined\n    if (($d3c1734dacb01657$var$cachedClearTimeout === $d3c1734dacb01657$var$defaultClearTimeout || !$d3c1734dacb01657$var$cachedClearTimeout) && clearTimeout) {\n        $d3c1734dacb01657$var$cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return $d3c1734dacb01657$var$cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return $d3c1734dacb01657$var$cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return $d3c1734dacb01657$var$cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar $d3c1734dacb01657$var$queue = [];\nvar $d3c1734dacb01657$var$draining = false;\nvar $d3c1734dacb01657$var$currentQueue;\nvar $d3c1734dacb01657$var$queueIndex = -1;\nfunction $d3c1734dacb01657$var$cleanUpNextTick() {\n    if (!$d3c1734dacb01657$var$draining || !$d3c1734dacb01657$var$currentQueue) return;\n    $d3c1734dacb01657$var$draining = false;\n    if ($d3c1734dacb01657$var$currentQueue.length) $d3c1734dacb01657$var$queue = $d3c1734dacb01657$var$currentQueue.concat($d3c1734dacb01657$var$queue);\n    else $d3c1734dacb01657$var$queueIndex = -1;\n    if ($d3c1734dacb01657$var$queue.length) $d3c1734dacb01657$var$drainQueue();\n}\nfunction $d3c1734dacb01657$var$drainQueue() {\n    if ($d3c1734dacb01657$var$draining) return;\n    var timeout = $d3c1734dacb01657$var$runTimeout($d3c1734dacb01657$var$cleanUpNextTick);\n    $d3c1734dacb01657$var$draining = true;\n    var len = $d3c1734dacb01657$var$queue.length;\n    while(len){\n        $d3c1734dacb01657$var$currentQueue = $d3c1734dacb01657$var$queue;\n        $d3c1734dacb01657$var$queue = [];\n        while(++$d3c1734dacb01657$var$queueIndex < len)if ($d3c1734dacb01657$var$currentQueue) $d3c1734dacb01657$var$currentQueue[$d3c1734dacb01657$var$queueIndex].run();\n        $d3c1734dacb01657$var$queueIndex = -1;\n        len = $d3c1734dacb01657$var$queue.length;\n    }\n    $d3c1734dacb01657$var$currentQueue = null;\n    $d3c1734dacb01657$var$draining = false;\n    $d3c1734dacb01657$var$runClearTimeout(timeout);\n}\n$d3c1734dacb01657$var$process.nextTick = function(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];\n    $d3c1734dacb01657$var$queue.push(new $d3c1734dacb01657$var$Item(fun, args));\n    if ($d3c1734dacb01657$var$queue.length === 1 && !$d3c1734dacb01657$var$draining) $d3c1734dacb01657$var$runTimeout($d3c1734dacb01657$var$drainQueue);\n};\n// v8 likes predictible objects\nfunction $d3c1734dacb01657$var$Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\n$d3c1734dacb01657$var$Item.prototype.run = function() {\n    this.fun.apply(null, this.array);\n};\n$d3c1734dacb01657$var$process.title = 'browser';\n$d3c1734dacb01657$var$process.browser = true;\n$d3c1734dacb01657$var$process.env = {};\n$d3c1734dacb01657$var$process.argv = [];\n$d3c1734dacb01657$var$process.version = ''; // empty string to avoid regexp issues\n$d3c1734dacb01657$var$process.versions = {};\nfunction $d3c1734dacb01657$var$noop() {}\n$d3c1734dacb01657$var$process.on = $d3c1734dacb01657$var$noop;\n$d3c1734dacb01657$var$process.addListener = $d3c1734dacb01657$var$noop;\n$d3c1734dacb01657$var$process.once = $d3c1734dacb01657$var$noop;\n$d3c1734dacb01657$var$process.off = $d3c1734dacb01657$var$noop;\n$d3c1734dacb01657$var$process.removeListener = $d3c1734dacb01657$var$noop;\n$d3c1734dacb01657$var$process.removeAllListeners = $d3c1734dacb01657$var$noop;\n$d3c1734dacb01657$var$process.emit = $d3c1734dacb01657$var$noop;\n$d3c1734dacb01657$var$process.prependListener = $d3c1734dacb01657$var$noop;\n$d3c1734dacb01657$var$process.prependOnceListener = $d3c1734dacb01657$var$noop;\n$d3c1734dacb01657$var$process.listeners = function(name) {\n    return [];\n};\n$d3c1734dacb01657$var$process.binding = function(name) {\n    throw new Error('process.binding is not supported');\n};\n$d3c1734dacb01657$var$process.cwd = function() {\n    return '/';\n};\n$d3c1734dacb01657$var$process.chdir = function(dir) {\n    throw new Error('process.chdir is not supported');\n};\n$d3c1734dacb01657$var$process.umask = function() {\n    return 0;\n};\n\n\nvar $08c34a1f60f3bee6$var$_a, $08c34a1f60f3bee6$var$_b, $08c34a1f60f3bee6$var$_c;\nvar $08c34a1f60f3bee6$var$TEXT_ENCODING_AVAILABLE = (typeof $d3c1734dacb01657$exports === \"undefined\" || (($08c34a1f60f3bee6$var$_a = $d3c1734dacb01657$exports === null || $d3c1734dacb01657$exports === void 0 ? void 0 : $d3c1734dacb01657$exports.env) === null || $08c34a1f60f3bee6$var$_a === void 0 ? void 0 : $08c34a1f60f3bee6$var$_a[\"TEXT_ENCODING\"]) !== \"never\") && typeof TextEncoder !== \"undefined\" && typeof TextDecoder !== \"undefined\";\nfunction $08c34a1f60f3bee6$export$b61de95301265227(str) {\n    var strLength = str.length;\n    var byteLength = 0;\n    var pos = 0;\n    while(pos < strLength){\n        var value = str.charCodeAt(pos++);\n        if ((value & 0xffffff80) === 0) {\n            // 1-byte\n            byteLength++;\n            continue;\n        } else if ((value & 0xfffff800) === 0) // 2-bytes\n        byteLength += 2;\n        else {\n            // handle surrogate pair\n            if (value >= 0xd800 && value <= 0xdbff) // high surrogate\n            {\n                if (pos < strLength) {\n                    var extra = str.charCodeAt(pos);\n                    if ((extra & 0xfc00) === 0xdc00) {\n                        ++pos;\n                        value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n                    }\n                }\n            }\n            if ((value & 0xffff0000) === 0) // 3-byte\n            byteLength += 3;\n            else // 4-byte\n            byteLength += 4;\n        }\n    }\n    return byteLength;\n}\nfunction $08c34a1f60f3bee6$export$1042e4338f1ef853(str, output, outputOffset) {\n    var strLength = str.length;\n    var offset = outputOffset;\n    var pos = 0;\n    while(pos < strLength){\n        var value = str.charCodeAt(pos++);\n        if ((value & 0xffffff80) === 0) {\n            // 1-byte\n            output[offset++] = value;\n            continue;\n        } else if ((value & 0xfffff800) === 0) // 2-bytes\n        output[offset++] = value >> 6 & 0x1f | 0xc0;\n        else {\n            // handle surrogate pair\n            if (value >= 0xd800 && value <= 0xdbff) // high surrogate\n            {\n                if (pos < strLength) {\n                    var extra = str.charCodeAt(pos);\n                    if ((extra & 0xfc00) === 0xdc00) {\n                        ++pos;\n                        value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n                    }\n                }\n            }\n            if ((value & 0xffff0000) === 0) {\n                // 3-byte\n                output[offset++] = value >> 12 & 0x0f | 0xe0;\n                output[offset++] = value >> 6 & 0x3f | 0x80;\n            } else {\n                // 4-byte\n                output[offset++] = value >> 18 & 0x07 | 0xf0;\n                output[offset++] = value >> 12 & 0x3f | 0x80;\n                output[offset++] = value >> 6 & 0x3f | 0x80;\n            }\n        }\n        output[offset++] = value & 0x3f | 0x80;\n    }\n}\nvar $08c34a1f60f3bee6$var$sharedTextEncoder = $08c34a1f60f3bee6$var$TEXT_ENCODING_AVAILABLE ? new TextEncoder() : undefined;\nvar $08c34a1f60f3bee6$export$ed34c0622b397238 = !$08c34a1f60f3bee6$var$TEXT_ENCODING_AVAILABLE ? (0, $15ec20cc002c5b3c$export$3314b2c271c86d70) : typeof $d3c1734dacb01657$exports !== \"undefined\" && (($08c34a1f60f3bee6$var$_b = $d3c1734dacb01657$exports === null || $d3c1734dacb01657$exports === void 0 ? void 0 : $d3c1734dacb01657$exports.env) === null || $08c34a1f60f3bee6$var$_b === void 0 ? void 0 : $08c34a1f60f3bee6$var$_b[\"TEXT_ENCODING\"]) !== \"force\" ? 200 : 0;\nfunction $08c34a1f60f3bee6$var$utf8EncodeTEencode(str, output, outputOffset) {\n    output.set($08c34a1f60f3bee6$var$sharedTextEncoder.encode(str), outputOffset);\n}\nfunction $08c34a1f60f3bee6$var$utf8EncodeTEencodeInto(str, output, outputOffset) {\n    $08c34a1f60f3bee6$var$sharedTextEncoder.encodeInto(str, output.subarray(outputOffset));\n}\nvar $08c34a1f60f3bee6$export$34cfdc82d430524 = ($08c34a1f60f3bee6$var$sharedTextEncoder === null || $08c34a1f60f3bee6$var$sharedTextEncoder === void 0 ? void 0 : $08c34a1f60f3bee6$var$sharedTextEncoder.encodeInto) ? $08c34a1f60f3bee6$var$utf8EncodeTEencodeInto : $08c34a1f60f3bee6$var$utf8EncodeTEencode;\nvar $08c34a1f60f3bee6$var$CHUNK_SIZE = 4096;\nfunction $08c34a1f60f3bee6$export$551117984c2adf4f(bytes, inputOffset, byteLength) {\n    var offset = inputOffset;\n    var end = offset + byteLength;\n    var units = [];\n    var result = \"\";\n    while(offset < end){\n        var byte1 = bytes[offset++];\n        if ((byte1 & 0x80) === 0) // 1 byte\n        units.push(byte1);\n        else if ((byte1 & 0xe0) === 0xc0) {\n            // 2 bytes\n            var byte2 = bytes[offset++] & 0x3f;\n            units.push((byte1 & 0x1f) << 6 | byte2);\n        } else if ((byte1 & 0xf0) === 0xe0) {\n            // 3 bytes\n            var byte2 = bytes[offset++] & 0x3f;\n            var byte3 = bytes[offset++] & 0x3f;\n            units.push((byte1 & 0x1f) << 12 | byte2 << 6 | byte3);\n        } else if ((byte1 & 0xf8) === 0xf0) {\n            // 4 bytes\n            var byte2 = bytes[offset++] & 0x3f;\n            var byte3 = bytes[offset++] & 0x3f;\n            var byte4 = bytes[offset++] & 0x3f;\n            var unit = (byte1 & 0x07) << 0x12 | byte2 << 0x0c | byte3 << 0x06 | byte4;\n            if (unit > 0xffff) {\n                unit -= 0x10000;\n                units.push(unit >>> 10 & 0x3ff | 0xd800);\n                unit = 0xdc00 | unit & 0x3ff;\n            }\n            units.push(unit);\n        } else units.push(byte1);\n        if (units.length >= $08c34a1f60f3bee6$var$CHUNK_SIZE) {\n            result += String.fromCharCode.apply(String, units);\n            units.length = 0;\n        }\n    }\n    if (units.length > 0) result += String.fromCharCode.apply(String, units);\n    return result;\n}\nvar $08c34a1f60f3bee6$var$sharedTextDecoder = $08c34a1f60f3bee6$var$TEXT_ENCODING_AVAILABLE ? new TextDecoder() : null;\nvar $08c34a1f60f3bee6$export$d866281c5a66d1ef = !$08c34a1f60f3bee6$var$TEXT_ENCODING_AVAILABLE ? (0, $15ec20cc002c5b3c$export$3314b2c271c86d70) : typeof $d3c1734dacb01657$exports !== \"undefined\" && (($08c34a1f60f3bee6$var$_c = $d3c1734dacb01657$exports === null || $d3c1734dacb01657$exports === void 0 ? void 0 : $d3c1734dacb01657$exports.env) === null || $08c34a1f60f3bee6$var$_c === void 0 ? void 0 : $08c34a1f60f3bee6$var$_c[\"TEXT_DECODER\"]) !== \"force\" ? 200 : 0;\nfunction $08c34a1f60f3bee6$export$6ed79e41309992dc(bytes, inputOffset, byteLength) {\n    var stringBytes = bytes.subarray(inputOffset, inputOffset + byteLength);\n    return $08c34a1f60f3bee6$var$sharedTextDecoder.decode(stringBytes);\n}\n\n\nfunction $87ae84cf50fe3e64$export$f8d669c2a17882f2(buffer) {\n    if (buffer instanceof Uint8Array) return buffer;\n    else if (ArrayBuffer.isView(buffer)) return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n    else if (buffer instanceof ArrayBuffer) return new Uint8Array(buffer);\n    else // ArrayLike<number>\n    return Uint8Array.from(buffer);\n}\nfunction $87ae84cf50fe3e64$export$7277868462c1ba02(buffer) {\n    if (buffer instanceof ArrayBuffer) return new DataView(buffer);\n    var bufferView = $87ae84cf50fe3e64$export$f8d669c2a17882f2(buffer);\n    return new DataView(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\n}\n\n\n\nvar $dd3d49c2cea86ad8$var$DEFAULT_MAX_KEY_LENGTH = 16;\nvar $dd3d49c2cea86ad8$var$DEFAULT_MAX_LENGTH_PER_KEY = 16;\nvar $dd3d49c2cea86ad8$export$529b830450faf29c = /** @class */ function() {\n    function CachedKeyDecoder(maxKeyLength, maxLengthPerKey) {\n        if (maxKeyLength === void 0) maxKeyLength = $dd3d49c2cea86ad8$var$DEFAULT_MAX_KEY_LENGTH;\n        if (maxLengthPerKey === void 0) maxLengthPerKey = $dd3d49c2cea86ad8$var$DEFAULT_MAX_LENGTH_PER_KEY;\n        this.maxKeyLength = maxKeyLength;\n        this.maxLengthPerKey = maxLengthPerKey;\n        this.hit = 0;\n        this.miss = 0;\n        // avoid `new Array(N)`, which makes a sparse array,\n        // because a sparse array is typically slower than a non-sparse array.\n        this.caches = [];\n        for(var i = 0; i < this.maxKeyLength; i++)this.caches.push([]);\n    }\n    CachedKeyDecoder.prototype.canBeCached = function(byteLength) {\n        return byteLength > 0 && byteLength <= this.maxKeyLength;\n    };\n    CachedKeyDecoder.prototype.find = function(bytes, inputOffset, byteLength) {\n        var records = this.caches[byteLength - 1];\n        FIND_CHUNK: for(var _i = 0, records_1 = records; _i < records_1.length; _i++){\n            var record = records_1[_i];\n            var recordBytes = record.bytes;\n            for(var j = 0; j < byteLength; j++){\n                if (recordBytes[j] !== bytes[inputOffset + j]) continue FIND_CHUNK;\n            }\n            return record.str;\n        }\n        return null;\n    };\n    CachedKeyDecoder.prototype.store = function(bytes, value) {\n        var records = this.caches[bytes.length - 1];\n        var record = {\n            bytes: bytes,\n            str: value\n        };\n        if (records.length >= this.maxLengthPerKey) // `records` are full!\n        // Set `record` to an arbitrary position.\n        records[Math.random() * records.length | 0] = record;\n        else records.push(record);\n    };\n    CachedKeyDecoder.prototype.decode = function(bytes, inputOffset, byteLength) {\n        var cachedValue = this.find(bytes, inputOffset, byteLength);\n        if (cachedValue != null) {\n            this.hit++;\n            return cachedValue;\n        }\n        this.miss++;\n        var str = (0, $08c34a1f60f3bee6$export$551117984c2adf4f)(bytes, inputOffset, byteLength);\n        // Ensure to copy a slice of bytes because the byte may be NodeJS Buffer and Buffer#slice() returns a reference to its internal ArrayBuffer.\n        var slicedCopyOfBytes = Uint8Array.prototype.slice.call(bytes, inputOffset, inputOffset + byteLength);\n        this.store(slicedCopyOfBytes, str);\n        return str;\n    };\n    return CachedKeyDecoder;\n}();\n\n\n\nvar $4e6bbfbe891e73f3$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar $4e6bbfbe891e73f3$var$__generator = undefined && undefined.__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(_)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nvar $4e6bbfbe891e73f3$var$__asyncValues = undefined && undefined.__asyncValues || function(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n};\nvar $4e6bbfbe891e73f3$var$__await = undefined && undefined.__await || function(v) {\n    return this instanceof $4e6bbfbe891e73f3$var$__await ? (this.v = v, this) : new $4e6bbfbe891e73f3$var$__await(v);\n};\nvar $4e6bbfbe891e73f3$var$__asyncGenerator = undefined && undefined.__asyncGenerator || function(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof $4e6bbfbe891e73f3$var$__await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n};\nvar $4e6bbfbe891e73f3$var$isValidMapKeyType = function(key) {\n    var keyType = typeof key;\n    return keyType === \"string\" || keyType === \"number\";\n};\nvar $4e6bbfbe891e73f3$var$HEAD_BYTE_REQUIRED = -1;\nvar $4e6bbfbe891e73f3$var$EMPTY_VIEW = new DataView(new ArrayBuffer(0));\nvar $4e6bbfbe891e73f3$var$EMPTY_BYTES = new Uint8Array($4e6bbfbe891e73f3$var$EMPTY_VIEW.buffer);\nvar $4e6bbfbe891e73f3$export$449c37eaf7093493 = function() {\n    try {\n        // IE11: The spec says it should throw RangeError,\n        // IE11: but in IE11 it throws TypeError.\n        $4e6bbfbe891e73f3$var$EMPTY_VIEW.getInt8(0);\n    } catch (e) {\n        return e.constructor;\n    }\n    throw new Error(\"never reached\");\n}();\nvar $4e6bbfbe891e73f3$var$MORE_DATA = new $4e6bbfbe891e73f3$export$449c37eaf7093493(\"Insufficient data\");\nvar $4e6bbfbe891e73f3$var$sharedCachedKeyDecoder = new (0, $dd3d49c2cea86ad8$export$529b830450faf29c)();\nvar $4e6bbfbe891e73f3$export$f9de6ca0bc043724 = /** @class */ function() {\n    function Decoder(extensionCodec, context, maxStrLength, maxBinLength, maxArrayLength, maxMapLength, maxExtLength, keyDecoder) {\n        if (extensionCodec === void 0) extensionCodec = (0, $812ea64cee3b19c7$export$12677a794dbd89d7).defaultCodec;\n        if (context === void 0) context = undefined;\n        if (maxStrLength === void 0) maxStrLength = (0, $15ec20cc002c5b3c$export$3314b2c271c86d70);\n        if (maxBinLength === void 0) maxBinLength = (0, $15ec20cc002c5b3c$export$3314b2c271c86d70);\n        if (maxArrayLength === void 0) maxArrayLength = (0, $15ec20cc002c5b3c$export$3314b2c271c86d70);\n        if (maxMapLength === void 0) maxMapLength = (0, $15ec20cc002c5b3c$export$3314b2c271c86d70);\n        if (maxExtLength === void 0) maxExtLength = (0, $15ec20cc002c5b3c$export$3314b2c271c86d70);\n        if (keyDecoder === void 0) keyDecoder = $4e6bbfbe891e73f3$var$sharedCachedKeyDecoder;\n        this.extensionCodec = extensionCodec;\n        this.context = context;\n        this.maxStrLength = maxStrLength;\n        this.maxBinLength = maxBinLength;\n        this.maxArrayLength = maxArrayLength;\n        this.maxMapLength = maxMapLength;\n        this.maxExtLength = maxExtLength;\n        this.keyDecoder = keyDecoder;\n        this.totalPos = 0;\n        this.pos = 0;\n        this.view = $4e6bbfbe891e73f3$var$EMPTY_VIEW;\n        this.bytes = $4e6bbfbe891e73f3$var$EMPTY_BYTES;\n        this.headByte = $4e6bbfbe891e73f3$var$HEAD_BYTE_REQUIRED;\n        this.stack = [];\n    }\n    Decoder.prototype.reinitializeState = function() {\n        this.totalPos = 0;\n        this.headByte = $4e6bbfbe891e73f3$var$HEAD_BYTE_REQUIRED;\n        this.stack.length = 0;\n    // view, bytes, and pos will be re-initialized in setBuffer()\n    };\n    Decoder.prototype.setBuffer = function(buffer) {\n        this.bytes = (0, $87ae84cf50fe3e64$export$f8d669c2a17882f2)(buffer);\n        this.view = (0, $87ae84cf50fe3e64$export$7277868462c1ba02)(this.bytes);\n        this.pos = 0;\n    };\n    Decoder.prototype.appendBuffer = function(buffer) {\n        if (this.headByte === $4e6bbfbe891e73f3$var$HEAD_BYTE_REQUIRED && !this.hasRemaining(1)) this.setBuffer(buffer);\n        else {\n            var remainingData = this.bytes.subarray(this.pos);\n            var newData = (0, $87ae84cf50fe3e64$export$f8d669c2a17882f2)(buffer);\n            // concat remainingData + newData\n            var newBuffer = new Uint8Array(remainingData.length + newData.length);\n            newBuffer.set(remainingData);\n            newBuffer.set(newData, remainingData.length);\n            this.setBuffer(newBuffer);\n        }\n    };\n    Decoder.prototype.hasRemaining = function(size) {\n        return this.view.byteLength - this.pos >= size;\n    };\n    Decoder.prototype.createExtraByteError = function(posToShow) {\n        var _a = this, view = _a.view, pos = _a.pos;\n        return new RangeError(\"Extra \".concat(view.byteLength - pos, \" of \").concat(view.byteLength, \" byte(s) found at buffer[\").concat(posToShow, \"]\"));\n    };\n    /**\n     * @throws {@link DecodeError}\n     * @throws {@link RangeError}\n     */ Decoder.prototype.decode = function(buffer) {\n        this.reinitializeState();\n        this.setBuffer(buffer);\n        var object = this.doDecodeSync();\n        if (this.hasRemaining(1)) throw this.createExtraByteError(this.pos);\n        return object;\n    };\n    Decoder.prototype.decodeMulti = function(buffer) {\n        return $4e6bbfbe891e73f3$var$__generator(this, function(_a) {\n            switch(_a.label){\n                case 0:\n                    this.reinitializeState();\n                    this.setBuffer(buffer);\n                    _a.label = 1;\n                case 1:\n                    if (!this.hasRemaining(1)) return [\n                        3 /*break*/ ,\n                        3\n                    ];\n                    return [\n                        4 /*yield*/ ,\n                        this.doDecodeSync()\n                    ];\n                case 2:\n                    _a.sent();\n                    return [\n                        3 /*break*/ ,\n                        1\n                    ];\n                case 3:\n                    return [\n                        2 /*return*/ \n                    ];\n            }\n        });\n    };\n    Decoder.prototype.decodeAsync = function(stream) {\n        var stream_1, stream_1_1;\n        var e_1, _a;\n        return $4e6bbfbe891e73f3$var$__awaiter(this, void 0, void 0, function() {\n            var decoded, object, buffer, e_1_1, _b, headByte, pos, totalPos;\n            return $4e6bbfbe891e73f3$var$__generator(this, function(_c) {\n                switch(_c.label){\n                    case 0:\n                        decoded = false;\n                        _c.label = 1;\n                    case 1:\n                        _c.trys.push([\n                            1,\n                            6,\n                            7,\n                            12\n                        ]);\n                        stream_1 = $4e6bbfbe891e73f3$var$__asyncValues(stream);\n                        _c.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            stream_1.next()\n                        ];\n                    case 3:\n                        if (!(stream_1_1 = _c.sent(), !stream_1_1.done)) return [\n                            3 /*break*/ ,\n                            5\n                        ];\n                        buffer = stream_1_1.value;\n                        if (decoded) throw this.createExtraByteError(this.totalPos);\n                        this.appendBuffer(buffer);\n                        try {\n                            object = this.doDecodeSync();\n                            decoded = true;\n                        } catch (e) {\n                            if (!(e instanceof $4e6bbfbe891e73f3$export$449c37eaf7093493)) throw e; // rethrow\n                        // fallthrough\n                        }\n                        this.totalPos += this.pos;\n                        _c.label = 4;\n                    case 4:\n                        return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                    case 5:\n                        return [\n                            3 /*break*/ ,\n                            12\n                        ];\n                    case 6:\n                        e_1_1 = _c.sent();\n                        e_1 = {\n                            error: e_1_1\n                        };\n                        return [\n                            3 /*break*/ ,\n                            12\n                        ];\n                    case 7:\n                        _c.trys.push([\n                            7,\n                            ,\n                            10,\n                            11\n                        ]);\n                        if (!(stream_1_1 && !stream_1_1.done && (_a = stream_1.return))) return [\n                            3 /*break*/ ,\n                            9\n                        ];\n                        return [\n                            4 /*yield*/ ,\n                            _a.call(stream_1)\n                        ];\n                    case 8:\n                        _c.sent();\n                        _c.label = 9;\n                    case 9:\n                        return [\n                            3 /*break*/ ,\n                            11\n                        ];\n                    case 10:\n                        if (e_1) throw e_1.error;\n                        return [\n                            7 /*endfinally*/ \n                        ];\n                    case 11:\n                        return [\n                            7 /*endfinally*/ \n                        ];\n                    case 12:\n                        if (decoded) {\n                            if (this.hasRemaining(1)) throw this.createExtraByteError(this.totalPos);\n                            return [\n                                2 /*return*/ ,\n                                object\n                            ];\n                        }\n                        _b = this, headByte = _b.headByte, pos = _b.pos, totalPos = _b.totalPos;\n                        throw new RangeError(\"Insufficient data in parsing \".concat((0, $b73d2ef085c4bd11$export$78406e843f5312da)(headByte), \" at \").concat(totalPos, \" (\").concat(pos, \" in the current buffer)\"));\n                }\n            });\n        });\n    };\n    Decoder.prototype.decodeArrayStream = function(stream) {\n        return this.decodeMultiAsync(stream, true);\n    };\n    Decoder.prototype.decodeStream = function(stream) {\n        return this.decodeMultiAsync(stream, false);\n    };\n    Decoder.prototype.decodeMultiAsync = function(stream, isArray) {\n        return $4e6bbfbe891e73f3$var$__asyncGenerator(this, arguments, function decodeMultiAsync_1() {\n            var isArrayHeaderRequired, arrayItemsLeft, stream_2, stream_2_1, buffer, e_2, e_3_1;\n            var e_3, _a;\n            return $4e6bbfbe891e73f3$var$__generator(this, function(_b) {\n                switch(_b.label){\n                    case 0:\n                        isArrayHeaderRequired = isArray;\n                        arrayItemsLeft = -1;\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([\n                            1,\n                            13,\n                            14,\n                            19\n                        ]);\n                        stream_2 = $4e6bbfbe891e73f3$var$__asyncValues(stream);\n                        _b.label = 2;\n                    case 2:\n                        return [\n                            4 /*yield*/ ,\n                            $4e6bbfbe891e73f3$var$__await(stream_2.next())\n                        ];\n                    case 3:\n                        if (!(stream_2_1 = _b.sent(), !stream_2_1.done)) return [\n                            3 /*break*/ ,\n                            12\n                        ];\n                        buffer = stream_2_1.value;\n                        if (isArray && arrayItemsLeft === 0) throw this.createExtraByteError(this.totalPos);\n                        this.appendBuffer(buffer);\n                        if (isArrayHeaderRequired) {\n                            arrayItemsLeft = this.readArraySize();\n                            isArrayHeaderRequired = false;\n                            this.complete();\n                        }\n                        _b.label = 4;\n                    case 4:\n                        _b.trys.push([\n                            4,\n                            9,\n                            ,\n                            10\n                        ]);\n                        _b.label = 5;\n                    case 5:\n                        return [\n                            4 /*yield*/ ,\n                            $4e6bbfbe891e73f3$var$__await(this.doDecodeSync())\n                        ];\n                    case 6:\n                        return [\n                            4 /*yield*/ ,\n                            _b.sent()\n                        ];\n                    case 7:\n                        _b.sent();\n                        if (--arrayItemsLeft === 0) return [\n                            3 /*break*/ ,\n                            8\n                        ];\n                        return [\n                            3 /*break*/ ,\n                            5\n                        ];\n                    case 8:\n                        return [\n                            3 /*break*/ ,\n                            10\n                        ];\n                    case 9:\n                        e_2 = _b.sent();\n                        if (!(e_2 instanceof $4e6bbfbe891e73f3$export$449c37eaf7093493)) throw e_2; // rethrow\n                        return [\n                            3 /*break*/ ,\n                            10\n                        ];\n                    case 10:\n                        this.totalPos += this.pos;\n                        _b.label = 11;\n                    case 11:\n                        return [\n                            3 /*break*/ ,\n                            2\n                        ];\n                    case 12:\n                        return [\n                            3 /*break*/ ,\n                            19\n                        ];\n                    case 13:\n                        e_3_1 = _b.sent();\n                        e_3 = {\n                            error: e_3_1\n                        };\n                        return [\n                            3 /*break*/ ,\n                            19\n                        ];\n                    case 14:\n                        _b.trys.push([\n                            14,\n                            ,\n                            17,\n                            18\n                        ]);\n                        if (!(stream_2_1 && !stream_2_1.done && (_a = stream_2.return))) return [\n                            3 /*break*/ ,\n                            16\n                        ];\n                        return [\n                            4 /*yield*/ ,\n                            $4e6bbfbe891e73f3$var$__await(_a.call(stream_2))\n                        ];\n                    case 15:\n                        _b.sent();\n                        _b.label = 16;\n                    case 16:\n                        return [\n                            3 /*break*/ ,\n                            18\n                        ];\n                    case 17:\n                        if (e_3) throw e_3.error;\n                        return [\n                            7 /*endfinally*/ \n                        ];\n                    case 18:\n                        return [\n                            7 /*endfinally*/ \n                        ];\n                    case 19:\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    Decoder.prototype.doDecodeSync = function() {\n        DECODE: while(true){\n            var headByte = this.readHeadByte();\n            var object = void 0;\n            if (headByte >= 0xe0) // negative fixint (111x xxxx) 0xe0 - 0xff\n            object = headByte - 0x100;\n            else if (headByte < 0xc0) {\n                if (headByte < 0x80) // positive fixint (0xxx xxxx) 0x00 - 0x7f\n                object = headByte;\n                else if (headByte < 0x90) {\n                    // fixmap (1000 xxxx) 0x80 - 0x8f\n                    var size = headByte - 0x80;\n                    if (size !== 0) {\n                        this.pushMapState(size);\n                        this.complete();\n                        continue DECODE;\n                    } else object = {};\n                } else if (headByte < 0xa0) {\n                    // fixarray (1001 xxxx) 0x90 - 0x9f\n                    var size = headByte - 0x90;\n                    if (size !== 0) {\n                        this.pushArrayState(size);\n                        this.complete();\n                        continue DECODE;\n                    } else object = [];\n                } else {\n                    // fixstr (101x xxxx) 0xa0 - 0xbf\n                    var byteLength = headByte - 0xa0;\n                    object = this.decodeUtf8String(byteLength, 0);\n                }\n            } else if (headByte === 0xc0) // nil\n            object = null;\n            else if (headByte === 0xc2) // false\n            object = false;\n            else if (headByte === 0xc3) // true\n            object = true;\n            else if (headByte === 0xca) // float 32\n            object = this.readF32();\n            else if (headByte === 0xcb) // float 64\n            object = this.readF64();\n            else if (headByte === 0xcc) // uint 8\n            object = this.readU8();\n            else if (headByte === 0xcd) // uint 16\n            object = this.readU16();\n            else if (headByte === 0xce) // uint 32\n            object = this.readU32();\n            else if (headByte === 0xcf) // uint 64\n            object = this.readU64();\n            else if (headByte === 0xd0) // int 8\n            object = this.readI8();\n            else if (headByte === 0xd1) // int 16\n            object = this.readI16();\n            else if (headByte === 0xd2) // int 32\n            object = this.readI32();\n            else if (headByte === 0xd3) // int 64\n            object = this.readI64();\n            else if (headByte === 0xd9) {\n                // str 8\n                var byteLength = this.lookU8();\n                object = this.decodeUtf8String(byteLength, 1);\n            } else if (headByte === 0xda) {\n                // str 16\n                var byteLength = this.lookU16();\n                object = this.decodeUtf8String(byteLength, 2);\n            } else if (headByte === 0xdb) {\n                // str 32\n                var byteLength = this.lookU32();\n                object = this.decodeUtf8String(byteLength, 4);\n            } else if (headByte === 0xdc) {\n                // array 16\n                var size = this.readU16();\n                if (size !== 0) {\n                    this.pushArrayState(size);\n                    this.complete();\n                    continue DECODE;\n                } else object = [];\n            } else if (headByte === 0xdd) {\n                // array 32\n                var size = this.readU32();\n                if (size !== 0) {\n                    this.pushArrayState(size);\n                    this.complete();\n                    continue DECODE;\n                } else object = [];\n            } else if (headByte === 0xde) {\n                // map 16\n                var size = this.readU16();\n                if (size !== 0) {\n                    this.pushMapState(size);\n                    this.complete();\n                    continue DECODE;\n                } else object = {};\n            } else if (headByte === 0xdf) {\n                // map 32\n                var size = this.readU32();\n                if (size !== 0) {\n                    this.pushMapState(size);\n                    this.complete();\n                    continue DECODE;\n                } else object = {};\n            } else if (headByte === 0xc4) {\n                // bin 8\n                var size = this.lookU8();\n                object = this.decodeBinary(size, 1);\n            } else if (headByte === 0xc5) {\n                // bin 16\n                var size = this.lookU16();\n                object = this.decodeBinary(size, 2);\n            } else if (headByte === 0xc6) {\n                // bin 32\n                var size = this.lookU32();\n                object = this.decodeBinary(size, 4);\n            } else if (headByte === 0xd4) // fixext 1\n            object = this.decodeExtension(1, 0);\n            else if (headByte === 0xd5) // fixext 2\n            object = this.decodeExtension(2, 0);\n            else if (headByte === 0xd6) // fixext 4\n            object = this.decodeExtension(4, 0);\n            else if (headByte === 0xd7) // fixext 8\n            object = this.decodeExtension(8, 0);\n            else if (headByte === 0xd8) // fixext 16\n            object = this.decodeExtension(16, 0);\n            else if (headByte === 0xc7) {\n                // ext 8\n                var size = this.lookU8();\n                object = this.decodeExtension(size, 1);\n            } else if (headByte === 0xc8) {\n                // ext 16\n                var size = this.lookU16();\n                object = this.decodeExtension(size, 2);\n            } else if (headByte === 0xc9) {\n                // ext 32\n                var size = this.lookU32();\n                object = this.decodeExtension(size, 4);\n            } else throw new (0, $0ccff85db5b697d5$export$ef3eed12d06c0285)(\"Unrecognized type byte: \".concat((0, $b73d2ef085c4bd11$export$78406e843f5312da)(headByte)));\n            this.complete();\n            var stack = this.stack;\n            while(stack.length > 0){\n                // arrays and maps\n                var state = stack[stack.length - 1];\n                if (state.type === 0 /* State.ARRAY */ ) {\n                    state.array[state.position] = object;\n                    state.position++;\n                    if (state.position === state.size) {\n                        stack.pop();\n                        object = state.array;\n                    } else continue DECODE;\n                } else if (state.type === 1 /* State.MAP_KEY */ ) {\n                    if (!$4e6bbfbe891e73f3$var$isValidMapKeyType(object)) throw new (0, $0ccff85db5b697d5$export$ef3eed12d06c0285)(\"The type of key must be string or number but \" + typeof object);\n                    if (object === \"__proto__\") throw new (0, $0ccff85db5b697d5$export$ef3eed12d06c0285)(\"The key __proto__ is not allowed\");\n                    state.key = object;\n                    state.type = 2 /* State.MAP_VALUE */ ;\n                    continue DECODE;\n                } else {\n                    // it must be `state.type === State.MAP_VALUE` here\n                    state.map[state.key] = object;\n                    state.readCount++;\n                    if (state.readCount === state.size) {\n                        stack.pop();\n                        object = state.map;\n                    } else {\n                        state.key = null;\n                        state.type = 1 /* State.MAP_KEY */ ;\n                        continue DECODE;\n                    }\n                }\n            }\n            return object;\n        }\n    };\n    Decoder.prototype.readHeadByte = function() {\n        if (this.headByte === $4e6bbfbe891e73f3$var$HEAD_BYTE_REQUIRED) this.headByte = this.readU8();\n        return this.headByte;\n    };\n    Decoder.prototype.complete = function() {\n        this.headByte = $4e6bbfbe891e73f3$var$HEAD_BYTE_REQUIRED;\n    };\n    Decoder.prototype.readArraySize = function() {\n        var headByte = this.readHeadByte();\n        switch(headByte){\n            case 0xdc:\n                return this.readU16();\n            case 0xdd:\n                return this.readU32();\n            default:\n                if (headByte < 0xa0) return headByte - 0x90;\n                else throw new (0, $0ccff85db5b697d5$export$ef3eed12d06c0285)(\"Unrecognized array type byte: \".concat((0, $b73d2ef085c4bd11$export$78406e843f5312da)(headByte)));\n        }\n    };\n    Decoder.prototype.pushMapState = function(size) {\n        if (size > this.maxMapLength) throw new (0, $0ccff85db5b697d5$export$ef3eed12d06c0285)(\"Max length exceeded: map length (\".concat(size, \") > maxMapLengthLength (\").concat(this.maxMapLength, \")\"));\n        this.stack.push({\n            type: 1 /* State.MAP_KEY */ ,\n            size: size,\n            key: null,\n            readCount: 0,\n            map: {}\n        });\n    };\n    Decoder.prototype.pushArrayState = function(size) {\n        if (size > this.maxArrayLength) throw new (0, $0ccff85db5b697d5$export$ef3eed12d06c0285)(\"Max length exceeded: array length (\".concat(size, \") > maxArrayLength (\").concat(this.maxArrayLength, \")\"));\n        this.stack.push({\n            type: 0 /* State.ARRAY */ ,\n            size: size,\n            array: new Array(size),\n            position: 0\n        });\n    };\n    Decoder.prototype.decodeUtf8String = function(byteLength, headerOffset) {\n        var _a;\n        if (byteLength > this.maxStrLength) throw new (0, $0ccff85db5b697d5$export$ef3eed12d06c0285)(\"Max length exceeded: UTF-8 byte length (\".concat(byteLength, \") > maxStrLength (\").concat(this.maxStrLength, \")\"));\n        if (this.bytes.byteLength < this.pos + headerOffset + byteLength) throw $4e6bbfbe891e73f3$var$MORE_DATA;\n        var offset = this.pos + headerOffset;\n        var object;\n        if (this.stateIsMapKey() && ((_a = this.keyDecoder) === null || _a === void 0 ? void 0 : _a.canBeCached(byteLength))) object = this.keyDecoder.decode(this.bytes, offset, byteLength);\n        else if (byteLength > (0, $08c34a1f60f3bee6$export$d866281c5a66d1ef)) object = (0, $08c34a1f60f3bee6$export$6ed79e41309992dc)(this.bytes, offset, byteLength);\n        else object = (0, $08c34a1f60f3bee6$export$551117984c2adf4f)(this.bytes, offset, byteLength);\n        this.pos += headerOffset + byteLength;\n        return object;\n    };\n    Decoder.prototype.stateIsMapKey = function() {\n        if (this.stack.length > 0) {\n            var state = this.stack[this.stack.length - 1];\n            return state.type === 1 /* State.MAP_KEY */ ;\n        }\n        return false;\n    };\n    Decoder.prototype.decodeBinary = function(byteLength, headOffset) {\n        if (byteLength > this.maxBinLength) throw new (0, $0ccff85db5b697d5$export$ef3eed12d06c0285)(\"Max length exceeded: bin length (\".concat(byteLength, \") > maxBinLength (\").concat(this.maxBinLength, \")\"));\n        if (!this.hasRemaining(byteLength + headOffset)) throw $4e6bbfbe891e73f3$var$MORE_DATA;\n        var offset = this.pos + headOffset;\n        var object = this.bytes.subarray(offset, offset + byteLength);\n        this.pos += headOffset + byteLength;\n        return object;\n    };\n    Decoder.prototype.decodeExtension = function(size, headOffset) {\n        if (size > this.maxExtLength) throw new (0, $0ccff85db5b697d5$export$ef3eed12d06c0285)(\"Max length exceeded: ext length (\".concat(size, \") > maxExtLength (\").concat(this.maxExtLength, \")\"));\n        var extType = this.view.getInt8(this.pos + headOffset);\n        var data = this.decodeBinary(size, headOffset + 1 /* extType */ );\n        return this.extensionCodec.decode(data, extType, this.context);\n    };\n    Decoder.prototype.lookU8 = function() {\n        return this.view.getUint8(this.pos);\n    };\n    Decoder.prototype.lookU16 = function() {\n        return this.view.getUint16(this.pos);\n    };\n    Decoder.prototype.lookU32 = function() {\n        return this.view.getUint32(this.pos);\n    };\n    Decoder.prototype.readU8 = function() {\n        var value = this.view.getUint8(this.pos);\n        this.pos++;\n        return value;\n    };\n    Decoder.prototype.readI8 = function() {\n        var value = this.view.getInt8(this.pos);\n        this.pos++;\n        return value;\n    };\n    Decoder.prototype.readU16 = function() {\n        var value = this.view.getUint16(this.pos);\n        this.pos += 2;\n        return value;\n    };\n    Decoder.prototype.readI16 = function() {\n        var value = this.view.getInt16(this.pos);\n        this.pos += 2;\n        return value;\n    };\n    Decoder.prototype.readU32 = function() {\n        var value = this.view.getUint32(this.pos);\n        this.pos += 4;\n        return value;\n    };\n    Decoder.prototype.readI32 = function() {\n        var value = this.view.getInt32(this.pos);\n        this.pos += 4;\n        return value;\n    };\n    Decoder.prototype.readU64 = function() {\n        var value = (0, $15ec20cc002c5b3c$export$59a2dbf579ff9568)(this.view, this.pos);\n        this.pos += 8;\n        return value;\n    };\n    Decoder.prototype.readI64 = function() {\n        var value = (0, $15ec20cc002c5b3c$export$69825c7adcc820c6)(this.view, this.pos);\n        this.pos += 8;\n        return value;\n    };\n    Decoder.prototype.readF32 = function() {\n        var value = this.view.getFloat32(this.pos);\n        this.pos += 4;\n        return value;\n    };\n    Decoder.prototype.readF64 = function() {\n        var value = this.view.getFloat64(this.pos);\n        this.pos += 8;\n        return value;\n    };\n    return Decoder;\n}();\n\n\n// utility for whatwg streams\nvar $89b6bb0db0c102e8$var$__generator = undefined && undefined.__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(_)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nvar $89b6bb0db0c102e8$var$__await = undefined && undefined.__await || function(v) {\n    return this instanceof $89b6bb0db0c102e8$var$__await ? (this.v = v, this) : new $89b6bb0db0c102e8$var$__await(v);\n};\nvar $89b6bb0db0c102e8$var$__asyncGenerator = undefined && undefined.__asyncGenerator || function(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof $89b6bb0db0c102e8$var$__await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n};\nfunction $89b6bb0db0c102e8$export$edb10ab8dd75a915(object) {\n    return object[Symbol.asyncIterator] != null;\n}\nfunction $89b6bb0db0c102e8$var$assertNonNull(value) {\n    if (value == null) throw new Error(\"Assertion Failure: value must not be null nor undefined\");\n}\nfunction $89b6bb0db0c102e8$export$f62cf0e66867a58e(stream) {\n    return $89b6bb0db0c102e8$var$__asyncGenerator(this, arguments, function asyncIterableFromStream_1() {\n        var reader, _a, done, value;\n        return $89b6bb0db0c102e8$var$__generator(this, function(_b) {\n            switch(_b.label){\n                case 0:\n                    reader = stream.getReader();\n                    _b.label = 1;\n                case 1:\n                    _b.trys.push([\n                        1,\n                        ,\n                        9,\n                        10\n                    ]);\n                    _b.label = 2;\n                case 2:\n                    return [\n                        4 /*yield*/ ,\n                        $89b6bb0db0c102e8$var$__await(reader.read())\n                    ];\n                case 3:\n                    _a = _b.sent(), done = _a.done, value = _a.value;\n                    if (!done) return [\n                        3 /*break*/ ,\n                        5\n                    ];\n                    return [\n                        4 /*yield*/ ,\n                        $89b6bb0db0c102e8$var$__await(void 0)\n                    ];\n                case 4:\n                    return [\n                        2 /*return*/ ,\n                        _b.sent()\n                    ];\n                case 5:\n                    $89b6bb0db0c102e8$var$assertNonNull(value);\n                    return [\n                        4 /*yield*/ ,\n                        $89b6bb0db0c102e8$var$__await(value)\n                    ];\n                case 6:\n                    return [\n                        4 /*yield*/ ,\n                        _b.sent()\n                    ];\n                case 7:\n                    _b.sent();\n                    return [\n                        3 /*break*/ ,\n                        2\n                    ];\n                case 8:\n                    return [\n                        3 /*break*/ ,\n                        10\n                    ];\n                case 9:\n                    reader.releaseLock();\n                    return [\n                        7 /*endfinally*/ \n                    ];\n                case 10:\n                    return [\n                        2 /*return*/ \n                    ];\n            }\n        });\n    });\n}\nfunction $89b6bb0db0c102e8$export$bf99ef56e8bd104(streamLike) {\n    if ($89b6bb0db0c102e8$export$edb10ab8dd75a915(streamLike)) return streamLike;\n    else return $89b6bb0db0c102e8$export$f62cf0e66867a58e(streamLike);\n}\n\n\n\nvar $820ce6e632bd97f1$export$ca6ec972f712a9eb = {};\nfunction $820ce6e632bd97f1$export$2f872c0f2117be69(buffer, options) {\n    if (options === void 0) options = $820ce6e632bd97f1$export$ca6ec972f712a9eb;\n    var decoder = new (0, $4e6bbfbe891e73f3$export$f9de6ca0bc043724)(options.extensionCodec, options.context, options.maxStrLength, options.maxBinLength, options.maxArrayLength, options.maxMapLength, options.maxExtLength);\n    return decoder.decode(buffer);\n}\nfunction $820ce6e632bd97f1$export$43cc91859d9fdc54(buffer, options) {\n    if (options === void 0) options = $820ce6e632bd97f1$export$ca6ec972f712a9eb;\n    var decoder = new (0, $4e6bbfbe891e73f3$export$f9de6ca0bc043724)(options.extensionCodec, options.context, options.maxStrLength, options.maxBinLength, options.maxArrayLength, options.maxMapLength, options.maxExtLength);\n    return decoder.decodeMulti(buffer);\n}\n\n\nvar $69a4d8202124ed9b$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar $69a4d8202124ed9b$var$__generator = undefined && undefined.__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(_)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nfunction $69a4d8202124ed9b$export$e4c183687a6ff9b(streamLike, options) {\n    if (options === void 0) options = (0, $820ce6e632bd97f1$export$ca6ec972f712a9eb);\n    return $69a4d8202124ed9b$var$__awaiter(this, void 0, void 0, function() {\n        var stream, decoder;\n        return $69a4d8202124ed9b$var$__generator(this, function(_a) {\n            stream = (0, $89b6bb0db0c102e8$export$bf99ef56e8bd104)(streamLike);\n            decoder = new (0, $4e6bbfbe891e73f3$export$f9de6ca0bc043724)(options.extensionCodec, options.context, options.maxStrLength, options.maxBinLength, options.maxArrayLength, options.maxMapLength, options.maxExtLength);\n            return [\n                2 /*return*/ ,\n                decoder.decodeAsync(stream)\n            ];\n        });\n    });\n}\nfunction $69a4d8202124ed9b$export$b1b94ac44d9853a4(streamLike, options) {\n    if (options === void 0) options = (0, $820ce6e632bd97f1$export$ca6ec972f712a9eb);\n    var stream = (0, $89b6bb0db0c102e8$export$bf99ef56e8bd104)(streamLike);\n    var decoder = new (0, $4e6bbfbe891e73f3$export$f9de6ca0bc043724)(options.extensionCodec, options.context, options.maxStrLength, options.maxBinLength, options.maxArrayLength, options.maxMapLength, options.maxExtLength);\n    return decoder.decodeArrayStream(stream);\n}\nfunction $69a4d8202124ed9b$export$bf87d8a088c760fb(streamLike, options) {\n    if (options === void 0) options = (0, $820ce6e632bd97f1$export$ca6ec972f712a9eb);\n    var stream = (0, $89b6bb0db0c102e8$export$bf99ef56e8bd104)(streamLike);\n    var decoder = new (0, $4e6bbfbe891e73f3$export$f9de6ca0bc043724)(options.extensionCodec, options.context, options.maxStrLength, options.maxBinLength, options.maxArrayLength, options.maxMapLength, options.maxExtLength);\n    return decoder.decodeStream(stream);\n}\nfunction $69a4d8202124ed9b$export$7fb0f205e4fd0bbe(streamLike, options) {\n    if (options === void 0) options = (0, $820ce6e632bd97f1$export$ca6ec972f712a9eb);\n    return $69a4d8202124ed9b$export$bf87d8a088c760fb(streamLike, options);\n}\n\n\n\n\n\nvar $257b120d521d3d7b$export$2c6de1218fe0e46d = 100;\nvar $257b120d521d3d7b$export$29659805a45f979c = 2048;\nvar $257b120d521d3d7b$export$a50aceb0e02a00aa = /** @class */ function() {\n    function Encoder(extensionCodec, context, maxDepth, initialBufferSize, sortKeys, forceFloat32, ignoreUndefined, forceIntegerToFloat) {\n        if (extensionCodec === void 0) extensionCodec = (0, $812ea64cee3b19c7$export$12677a794dbd89d7).defaultCodec;\n        if (context === void 0) context = undefined;\n        if (maxDepth === void 0) maxDepth = $257b120d521d3d7b$export$2c6de1218fe0e46d;\n        if (initialBufferSize === void 0) initialBufferSize = $257b120d521d3d7b$export$29659805a45f979c;\n        if (sortKeys === void 0) sortKeys = false;\n        if (forceFloat32 === void 0) forceFloat32 = false;\n        if (ignoreUndefined === void 0) ignoreUndefined = false;\n        if (forceIntegerToFloat === void 0) forceIntegerToFloat = false;\n        this.extensionCodec = extensionCodec;\n        this.context = context;\n        this.maxDepth = maxDepth;\n        this.initialBufferSize = initialBufferSize;\n        this.sortKeys = sortKeys;\n        this.forceFloat32 = forceFloat32;\n        this.ignoreUndefined = ignoreUndefined;\n        this.forceIntegerToFloat = forceIntegerToFloat;\n        this.pos = 0;\n        this.view = new DataView(new ArrayBuffer(this.initialBufferSize));\n        this.bytes = new Uint8Array(this.view.buffer);\n    }\n    Encoder.prototype.reinitializeState = function() {\n        this.pos = 0;\n    };\n    /**\n     * This is almost equivalent to {@link Encoder#encode}, but it returns an reference of the encoder's internal buffer and thus much faster than {@link Encoder#encode}.\n     *\n     * @returns Encodes the object and returns a shared reference the encoder's internal buffer.\n     */ Encoder.prototype.encodeSharedRef = function(object) {\n        this.reinitializeState();\n        this.doEncode(object, 1);\n        return this.bytes.subarray(0, this.pos);\n    };\n    /**\n     * @returns Encodes the object and returns a copy of the encoder's internal buffer.\n     */ Encoder.prototype.encode = function(object) {\n        this.reinitializeState();\n        this.doEncode(object, 1);\n        return this.bytes.slice(0, this.pos);\n    };\n    Encoder.prototype.doEncode = function(object, depth) {\n        if (depth > this.maxDepth) throw new Error(\"Too deep objects in depth \".concat(depth));\n        if (object == null) this.encodeNil();\n        else if (typeof object === \"boolean\") this.encodeBoolean(object);\n        else if (typeof object === \"number\") this.encodeNumber(object);\n        else if (typeof object === \"string\") this.encodeString(object);\n        else this.encodeObject(object, depth);\n    };\n    Encoder.prototype.ensureBufferSizeToWrite = function(sizeToWrite) {\n        var requiredSize = this.pos + sizeToWrite;\n        if (this.view.byteLength < requiredSize) this.resizeBuffer(requiredSize * 2);\n    };\n    Encoder.prototype.resizeBuffer = function(newSize) {\n        var newBuffer = new ArrayBuffer(newSize);\n        var newBytes = new Uint8Array(newBuffer);\n        var newView = new DataView(newBuffer);\n        newBytes.set(this.bytes);\n        this.view = newView;\n        this.bytes = newBytes;\n    };\n    Encoder.prototype.encodeNil = function() {\n        this.writeU8(0xc0);\n    };\n    Encoder.prototype.encodeBoolean = function(object) {\n        if (object === false) this.writeU8(0xc2);\n        else this.writeU8(0xc3);\n    };\n    Encoder.prototype.encodeNumber = function(object) {\n        if (Number.isSafeInteger(object) && !this.forceIntegerToFloat) {\n            if (object >= 0) {\n                if (object < 0x80) // positive fixint\n                this.writeU8(object);\n                else if (object < 0x100) {\n                    // uint 8\n                    this.writeU8(0xcc);\n                    this.writeU8(object);\n                } else if (object < 0x10000) {\n                    // uint 16\n                    this.writeU8(0xcd);\n                    this.writeU16(object);\n                } else if (object < 0x100000000) {\n                    // uint 32\n                    this.writeU8(0xce);\n                    this.writeU32(object);\n                } else {\n                    // uint 64\n                    this.writeU8(0xcf);\n                    this.writeU64(object);\n                }\n            } else {\n                if (object >= -32) // negative fixint\n                this.writeU8(0xe0 | object + 0x20);\n                else if (object >= -128) {\n                    // int 8\n                    this.writeU8(0xd0);\n                    this.writeI8(object);\n                } else if (object >= -32768) {\n                    // int 16\n                    this.writeU8(0xd1);\n                    this.writeI16(object);\n                } else if (object >= -2147483648) {\n                    // int 32\n                    this.writeU8(0xd2);\n                    this.writeI32(object);\n                } else {\n                    // int 64\n                    this.writeU8(0xd3);\n                    this.writeI64(object);\n                }\n            }\n        } else // non-integer numbers\n        if (this.forceFloat32) {\n            // float 32\n            this.writeU8(0xca);\n            this.writeF32(object);\n        } else {\n            // float 64\n            this.writeU8(0xcb);\n            this.writeF64(object);\n        }\n    };\n    Encoder.prototype.writeStringHeader = function(byteLength) {\n        if (byteLength < 32) // fixstr\n        this.writeU8(0xa0 + byteLength);\n        else if (byteLength < 0x100) {\n            // str 8\n            this.writeU8(0xd9);\n            this.writeU8(byteLength);\n        } else if (byteLength < 0x10000) {\n            // str 16\n            this.writeU8(0xda);\n            this.writeU16(byteLength);\n        } else if (byteLength < 0x100000000) {\n            // str 32\n            this.writeU8(0xdb);\n            this.writeU32(byteLength);\n        } else throw new Error(\"Too long string: \".concat(byteLength, \" bytes in UTF-8\"));\n    };\n    Encoder.prototype.encodeString = function(object) {\n        var maxHeaderSize = 5;\n        var strLength = object.length;\n        if (strLength > (0, $08c34a1f60f3bee6$export$ed34c0622b397238)) {\n            var byteLength = (0, $08c34a1f60f3bee6$export$b61de95301265227)(object);\n            this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\n            this.writeStringHeader(byteLength);\n            (0, $08c34a1f60f3bee6$export$34cfdc82d430524)(object, this.bytes, this.pos);\n            this.pos += byteLength;\n        } else {\n            var byteLength = (0, $08c34a1f60f3bee6$export$b61de95301265227)(object);\n            this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\n            this.writeStringHeader(byteLength);\n            (0, $08c34a1f60f3bee6$export$1042e4338f1ef853)(object, this.bytes, this.pos);\n            this.pos += byteLength;\n        }\n    };\n    Encoder.prototype.encodeObject = function(object, depth) {\n        // try to encode objects with custom codec first of non-primitives\n        var ext = this.extensionCodec.tryToEncode(object, this.context);\n        if (ext != null) this.encodeExtension(ext);\n        else if (Array.isArray(object)) this.encodeArray(object, depth);\n        else if (ArrayBuffer.isView(object)) this.encodeBinary(object);\n        else if (typeof object === \"object\") this.encodeMap(object, depth);\n        else // symbol, function and other special object come here unless extensionCodec handles them.\n        throw new Error(\"Unrecognized object: \".concat(Object.prototype.toString.apply(object)));\n    };\n    Encoder.prototype.encodeBinary = function(object) {\n        var size = object.byteLength;\n        if (size < 0x100) {\n            // bin 8\n            this.writeU8(0xc4);\n            this.writeU8(size);\n        } else if (size < 0x10000) {\n            // bin 16\n            this.writeU8(0xc5);\n            this.writeU16(size);\n        } else if (size < 0x100000000) {\n            // bin 32\n            this.writeU8(0xc6);\n            this.writeU32(size);\n        } else throw new Error(\"Too large binary: \".concat(size));\n        var bytes = (0, $87ae84cf50fe3e64$export$f8d669c2a17882f2)(object);\n        this.writeU8a(bytes);\n    };\n    Encoder.prototype.encodeArray = function(object, depth) {\n        var size = object.length;\n        if (size < 16) // fixarray\n        this.writeU8(0x90 + size);\n        else if (size < 0x10000) {\n            // array 16\n            this.writeU8(0xdc);\n            this.writeU16(size);\n        } else if (size < 0x100000000) {\n            // array 32\n            this.writeU8(0xdd);\n            this.writeU32(size);\n        } else throw new Error(\"Too large array: \".concat(size));\n        for(var _i = 0, object_1 = object; _i < object_1.length; _i++){\n            var item = object_1[_i];\n            this.doEncode(item, depth + 1);\n        }\n    };\n    Encoder.prototype.countWithoutUndefined = function(object, keys) {\n        var count = 0;\n        for(var _i = 0, keys_1 = keys; _i < keys_1.length; _i++){\n            var key = keys_1[_i];\n            if (object[key] !== undefined) count++;\n        }\n        return count;\n    };\n    Encoder.prototype.encodeMap = function(object, depth) {\n        var keys = Object.keys(object);\n        if (this.sortKeys) keys.sort();\n        var size = this.ignoreUndefined ? this.countWithoutUndefined(object, keys) : keys.length;\n        if (size < 16) // fixmap\n        this.writeU8(0x80 + size);\n        else if (size < 0x10000) {\n            // map 16\n            this.writeU8(0xde);\n            this.writeU16(size);\n        } else if (size < 0x100000000) {\n            // map 32\n            this.writeU8(0xdf);\n            this.writeU32(size);\n        } else throw new Error(\"Too large map object: \".concat(size));\n        for(var _i = 0, keys_2 = keys; _i < keys_2.length; _i++){\n            var key = keys_2[_i];\n            var value = object[key];\n            if (!(this.ignoreUndefined && value === undefined)) {\n                this.encodeString(key);\n                this.doEncode(value, depth + 1);\n            }\n        }\n    };\n    Encoder.prototype.encodeExtension = function(ext) {\n        var size = ext.data.length;\n        if (size === 1) // fixext 1\n        this.writeU8(0xd4);\n        else if (size === 2) // fixext 2\n        this.writeU8(0xd5);\n        else if (size === 4) // fixext 4\n        this.writeU8(0xd6);\n        else if (size === 8) // fixext 8\n        this.writeU8(0xd7);\n        else if (size === 16) // fixext 16\n        this.writeU8(0xd8);\n        else if (size < 0x100) {\n            // ext 8\n            this.writeU8(0xc7);\n            this.writeU8(size);\n        } else if (size < 0x10000) {\n            // ext 16\n            this.writeU8(0xc8);\n            this.writeU16(size);\n        } else if (size < 0x100000000) {\n            // ext 32\n            this.writeU8(0xc9);\n            this.writeU32(size);\n        } else throw new Error(\"Too large extension object: \".concat(size));\n        this.writeI8(ext.type);\n        this.writeU8a(ext.data);\n    };\n    Encoder.prototype.writeU8 = function(value) {\n        this.ensureBufferSizeToWrite(1);\n        this.view.setUint8(this.pos, value);\n        this.pos++;\n    };\n    Encoder.prototype.writeU8a = function(values) {\n        var size = values.length;\n        this.ensureBufferSizeToWrite(size);\n        this.bytes.set(values, this.pos);\n        this.pos += size;\n    };\n    Encoder.prototype.writeI8 = function(value) {\n        this.ensureBufferSizeToWrite(1);\n        this.view.setInt8(this.pos, value);\n        this.pos++;\n    };\n    Encoder.prototype.writeU16 = function(value) {\n        this.ensureBufferSizeToWrite(2);\n        this.view.setUint16(this.pos, value);\n        this.pos += 2;\n    };\n    Encoder.prototype.writeI16 = function(value) {\n        this.ensureBufferSizeToWrite(2);\n        this.view.setInt16(this.pos, value);\n        this.pos += 2;\n    };\n    Encoder.prototype.writeU32 = function(value) {\n        this.ensureBufferSizeToWrite(4);\n        this.view.setUint32(this.pos, value);\n        this.pos += 4;\n    };\n    Encoder.prototype.writeI32 = function(value) {\n        this.ensureBufferSizeToWrite(4);\n        this.view.setInt32(this.pos, value);\n        this.pos += 4;\n    };\n    Encoder.prototype.writeF32 = function(value) {\n        this.ensureBufferSizeToWrite(4);\n        this.view.setFloat32(this.pos, value);\n        this.pos += 4;\n    };\n    Encoder.prototype.writeF64 = function(value) {\n        this.ensureBufferSizeToWrite(8);\n        this.view.setFloat64(this.pos, value);\n        this.pos += 8;\n    };\n    Encoder.prototype.writeU64 = function(value) {\n        this.ensureBufferSizeToWrite(8);\n        (0, $15ec20cc002c5b3c$export$20f71c4c8b0f96c3)(this.view, this.pos, value);\n        this.pos += 8;\n    };\n    Encoder.prototype.writeI64 = function(value) {\n        this.ensureBufferSizeToWrite(8);\n        (0, $15ec20cc002c5b3c$export$8532a5209571c04a)(this.view, this.pos, value);\n        this.pos += 8;\n    };\n    return Encoder;\n}();\n\n\nfunction $d915e63f26169767$var$$parcel$export(e, n, v, s) {\n    Object.defineProperty(e, n, {\n        get: v,\n        set: s,\n        enumerable: true,\n        configurable: true\n    });\n}\nclass $d915e63f26169767$var$$fcbcc7538a6776d5$export$f1c5f4c9cb95390b {\n    constructor(){\n        this.chunkedMTU = 16300 // The original 60000 bytes setting does not work when sending data from Firefox to Chrome, which is \"cut off\" after 16384 bytes and delivered individually.\n        ;\n        // Binary stuff\n        this._dataCount = 1;\n        this.chunk = (blob)=>{\n            const chunks = [];\n            const size = blob.byteLength;\n            const total = Math.ceil(size / this.chunkedMTU);\n            let index = 0;\n            let start = 0;\n            while(start < size){\n                const end = Math.min(size, start + this.chunkedMTU);\n                const b = blob.slice(start, end);\n                const chunk = {\n                    __peerData: this._dataCount,\n                    n: index,\n                    data: b,\n                    total: total\n                };\n                chunks.push(chunk);\n                start = end;\n                index++;\n            }\n            this._dataCount++;\n            return chunks;\n        };\n    }\n}\nfunction $d915e63f26169767$var$$fcbcc7538a6776d5$export$52c89ebcdc4f53f2(bufs) {\n    let size = 0;\n    for (const buf of bufs)size += buf.byteLength;\n    const result = new Uint8Array(size);\n    let offset = 0;\n    for (const buf of bufs){\n        result.set(buf, offset);\n        offset += buf.byteLength;\n    }\n    return result;\n}\nconst $d915e63f26169767$var$$fb63e766cfafaab9$var$webRTCAdapter = (0, $6b88aef9b263becf$export$2e2bcd8739ae039).default || (0, $6b88aef9b263becf$export$2e2bcd8739ae039);\nconst $d915e63f26169767$var$$fb63e766cfafaab9$export$25be9502477c137d = new class {\n    isWebRTCSupported() {\n        return typeof RTCPeerConnection !== \"undefined\";\n    }\n    isBrowserSupported() {\n        const browser = this.getBrowser();\n        const version = this.getVersion();\n        const validBrowser = this.supportedBrowsers.includes(browser);\n        if (!validBrowser) return false;\n        if (browser === \"chrome\") return version >= this.minChromeVersion;\n        if (browser === \"firefox\") return version >= this.minFirefoxVersion;\n        if (browser === \"safari\") return !this.isIOS && version >= this.minSafariVersion;\n        return false;\n    }\n    getBrowser() {\n        return $d915e63f26169767$var$$fb63e766cfafaab9$var$webRTCAdapter.browserDetails.browser;\n    }\n    getVersion() {\n        return $d915e63f26169767$var$$fb63e766cfafaab9$var$webRTCAdapter.browserDetails.version || 0;\n    }\n    isUnifiedPlanSupported() {\n        const browser = this.getBrowser();\n        const version = $d915e63f26169767$var$$fb63e766cfafaab9$var$webRTCAdapter.browserDetails.version || 0;\n        if (browser === \"chrome\" && version < this.minChromeVersion) return false;\n        if (browser === \"firefox\" && version >= this.minFirefoxVersion) return true;\n        if (!window.RTCRtpTransceiver || !(\"currentDirection\" in RTCRtpTransceiver.prototype)) return false;\n        let tempPc;\n        let supported = false;\n        try {\n            tempPc = new RTCPeerConnection();\n            tempPc.addTransceiver(\"audio\");\n            supported = true;\n        } catch (e) {} finally{\n            if (tempPc) tempPc.close();\n        }\n        return supported;\n    }\n    toString() {\n        return `Supports:\n    browser:${this.getBrowser()}\n    version:${this.getVersion()}\n    isIOS:${this.isIOS}\n    isWebRTCSupported:${this.isWebRTCSupported()}\n    isBrowserSupported:${this.isBrowserSupported()}\n    isUnifiedPlanSupported:${this.isUnifiedPlanSupported()}`;\n    }\n    constructor(){\n        this.isIOS = [\n            \"iPad\",\n            \"iPhone\",\n            \"iPod\"\n        ].includes(navigator.platform);\n        this.supportedBrowsers = [\n            \"firefox\",\n            \"chrome\",\n            \"safari\"\n        ];\n        this.minFirefoxVersion = 59;\n        this.minChromeVersion = 72;\n        this.minSafariVersion = 605;\n    }\n}();\nconst $d915e63f26169767$var$$9a84a32bf0bf36bb$export$f35f128fd59ea256 = (id)=>{\n    // Allow empty ids\n    return !id || /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.test(id);\n};\nconst $d915e63f26169767$var$$0e5fd1585784c252$export$4e61f672936bec77 = ()=>Math.random().toString(36).slice(2);\nconst $d915e63f26169767$var$$4f4134156c446392$var$DEFAULT_CONFIG = {\n    iceServers: [\n        {\n            urls: \"stun:stun.l.google.com:19302\"\n        },\n        {\n            urls: [\n                \"turn:eu-0.turn.peerjs.com:3478\",\n                \"turn:us-0.turn.peerjs.com:3478\"\n            ],\n            username: \"peerjs\",\n            credential: \"peerjsp\"\n        }\n    ],\n    sdpSemantics: \"unified-plan\"\n};\nclass $d915e63f26169767$var$$4f4134156c446392$export$f8f26dd395d7e1bd extends $d915e63f26169767$var$$fcbcc7538a6776d5$export$f1c5f4c9cb95390b {\n    noop() {}\n    blobToArrayBuffer(blob, cb) {\n        const fr = new FileReader();\n        fr.onload = function(evt) {\n            if (evt.target) cb(evt.target.result);\n        };\n        fr.readAsArrayBuffer(blob);\n        return fr;\n    }\n    binaryStringToArrayBuffer(binary) {\n        const byteArray = new Uint8Array(binary.length);\n        for(let i = 0; i < binary.length; i++)byteArray[i] = binary.charCodeAt(i) & 0xff;\n        return byteArray.buffer;\n    }\n    isSecure() {\n        return location.protocol === \"https:\";\n    }\n    constructor(...args){\n        super(...args);\n        this.CLOUD_HOST = \"0.peerjs.com\";\n        this.CLOUD_PORT = 443;\n        // Browsers that need chunking:\n        this.chunkedBrowsers = {\n            Chrome: 1,\n            chrome: 1\n        };\n        // Returns browser-agnostic default config\n        this.defaultConfig = $d915e63f26169767$var$$4f4134156c446392$var$DEFAULT_CONFIG;\n        this.browser = $d915e63f26169767$var$$fb63e766cfafaab9$export$25be9502477c137d.getBrowser();\n        this.browserVersion = $d915e63f26169767$var$$fb63e766cfafaab9$export$25be9502477c137d.getVersion();\n        this.pack = (0, $00e82ca0068ee86a$export$2a703dbb0cb35339);\n        this.unpack = (0, $00e82ca0068ee86a$export$417857010dc9287f);\n        /**\n\t * A hash of WebRTC features mapped to booleans that correspond to whether the feature is supported by the current browser.\n\t *\n\t * :::caution\n\t * Only the properties documented here are guaranteed to be present on `util.supports`\n\t * :::\n\t */ this.supports = function() {\n            const supported = {\n                browser: $d915e63f26169767$var$$fb63e766cfafaab9$export$25be9502477c137d.isBrowserSupported(),\n                webRTC: $d915e63f26169767$var$$fb63e766cfafaab9$export$25be9502477c137d.isWebRTCSupported(),\n                audioVideo: false,\n                data: false,\n                binaryBlob: false,\n                reliable: false\n            };\n            if (!supported.webRTC) return supported;\n            let pc;\n            try {\n                pc = new RTCPeerConnection($d915e63f26169767$var$$4f4134156c446392$var$DEFAULT_CONFIG);\n                supported.audioVideo = true;\n                let dc;\n                try {\n                    dc = pc.createDataChannel(\"_PEERJSTEST\", {\n                        ordered: true\n                    });\n                    supported.data = true;\n                    supported.reliable = !!dc.ordered;\n                    // Binary test\n                    try {\n                        dc.binaryType = \"blob\";\n                        supported.binaryBlob = !$d915e63f26169767$var$$fb63e766cfafaab9$export$25be9502477c137d.isIOS;\n                    } catch (e) {}\n                } catch (e) {} finally{\n                    if (dc) dc.close();\n                }\n            } catch (e) {} finally{\n                if (pc) pc.close();\n            }\n            return supported;\n        }();\n        // Ensure alphanumeric ids\n        this.validateId = $d915e63f26169767$var$$9a84a32bf0bf36bb$export$f35f128fd59ea256;\n        this.randomToken = $d915e63f26169767$var$$0e5fd1585784c252$export$4e61f672936bec77;\n    }\n}\nconst $d915e63f26169767$export$7debb50ef11d5e0b = new $d915e63f26169767$var$$4f4134156c446392$export$f8f26dd395d7e1bd();\nconst $d915e63f26169767$var$$257947e92926277a$var$LOG_PREFIX = \"PeerJS: \";\nvar $d915e63f26169767$var$$257947e92926277a$export$243e62d78d3b544d;\n(function(LogLevel) {\n    /**\n\t * Prints no logs.\n\t */ LogLevel[LogLevel[\"Disabled\"] = 0] = \"Disabled\";\n    /**\n\t * Prints only errors.\n\t */ LogLevel[LogLevel[\"Errors\"] = 1] = \"Errors\";\n    /**\n\t * Prints errors and warnings.\n\t */ LogLevel[LogLevel[\"Warnings\"] = 2] = \"Warnings\";\n    /**\n\t * Prints all logs.\n\t */ LogLevel[LogLevel[\"All\"] = 3] = \"All\";\n})($d915e63f26169767$var$$257947e92926277a$export$243e62d78d3b544d || ($d915e63f26169767$var$$257947e92926277a$export$243e62d78d3b544d = {}));\nclass $d915e63f26169767$var$$257947e92926277a$var$Logger {\n    get logLevel() {\n        return this._logLevel;\n    }\n    set logLevel(logLevel) {\n        this._logLevel = logLevel;\n    }\n    log(...args) {\n        if (this._logLevel >= 3) this._print(3, ...args);\n    }\n    warn(...args) {\n        if (this._logLevel >= 2) this._print(2, ...args);\n    }\n    error(...args) {\n        if (this._logLevel >= 1) this._print(1, ...args);\n    }\n    setLogFunction(fn) {\n        this._print = fn;\n    }\n    _print(logLevel, ...rest) {\n        const copy = [\n            $d915e63f26169767$var$$257947e92926277a$var$LOG_PREFIX,\n            ...rest\n        ];\n        for(const i in copy)if (copy[i] instanceof Error) copy[i] = \"(\" + copy[i].name + \") \" + copy[i].message;\n        if (logLevel >= 3) console.log(...copy);\n        else if (logLevel >= 2) console.warn(\"WARNING\", ...copy);\n        else if (logLevel >= 1) console.error(\"ERROR\", ...copy);\n    }\n    constructor(){\n        this._logLevel = 0;\n    }\n}\nvar $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039 = new $d915e63f26169767$var$$257947e92926277a$var$Logger();\nvar $d915e63f26169767$var$$c4dcfd1d1ea86647$exports = {};\n\"use strict\";\nvar $d915e63f26169767$var$$c4dcfd1d1ea86647$var$has = Object.prototype.hasOwnProperty, $d915e63f26169767$var$$c4dcfd1d1ea86647$var$prefix = \"~\";\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */ function $d915e63f26169767$var$$c4dcfd1d1ea86647$var$Events() {}\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n    $d915e63f26169767$var$$c4dcfd1d1ea86647$var$Events.prototype = Object.create(null);\n    //\n    // This hack is needed because the `__proto__` property is still inherited in\n    // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n    //\n    if (!new $d915e63f26169767$var$$c4dcfd1d1ea86647$var$Events().__proto__) $d915e63f26169767$var$$c4dcfd1d1ea86647$var$prefix = false;\n}\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */ function $d915e63f26169767$var$$c4dcfd1d1ea86647$var$EE(fn, context, once) {\n    this.fn = fn;\n    this.context = context;\n    this.once = once || false;\n}\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */ function $d915e63f26169767$var$$c4dcfd1d1ea86647$var$addListener(emitter, event, fn, context, once) {\n    if (typeof fn !== \"function\") throw new TypeError(\"The listener must be a function\");\n    var listener = new $d915e63f26169767$var$$c4dcfd1d1ea86647$var$EE(fn, context || emitter, once), evt = $d915e63f26169767$var$$c4dcfd1d1ea86647$var$prefix ? $d915e63f26169767$var$$c4dcfd1d1ea86647$var$prefix + event : event;\n    if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n    else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n    else emitter._events[evt] = [\n        emitter._events[evt],\n        listener\n    ];\n    return emitter;\n}\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */ function $d915e63f26169767$var$$c4dcfd1d1ea86647$var$clearEvent(emitter, evt) {\n    if (--emitter._eventsCount === 0) emitter._events = new $d915e63f26169767$var$$c4dcfd1d1ea86647$var$Events();\n    else delete emitter._events[evt];\n}\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */ function $d915e63f26169767$var$$c4dcfd1d1ea86647$var$EventEmitter() {\n    this._events = new $d915e63f26169767$var$$c4dcfd1d1ea86647$var$Events();\n    this._eventsCount = 0;\n}\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */ $d915e63f26169767$var$$c4dcfd1d1ea86647$var$EventEmitter.prototype.eventNames = function eventNames() {\n    var names = [], events, name;\n    if (this._eventsCount === 0) return names;\n    for(name in events = this._events)if ($d915e63f26169767$var$$c4dcfd1d1ea86647$var$has.call(events, name)) names.push($d915e63f26169767$var$$c4dcfd1d1ea86647$var$prefix ? name.slice(1) : name);\n    if (Object.getOwnPropertySymbols) return names.concat(Object.getOwnPropertySymbols(events));\n    return names;\n};\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */ $d915e63f26169767$var$$c4dcfd1d1ea86647$var$EventEmitter.prototype.listeners = function listeners(event) {\n    var evt = $d915e63f26169767$var$$c4dcfd1d1ea86647$var$prefix ? $d915e63f26169767$var$$c4dcfd1d1ea86647$var$prefix + event : event, handlers = this._events[evt];\n    if (!handlers) return [];\n    if (handlers.fn) return [\n        handlers.fn\n    ];\n    for(var i = 0, l = handlers.length, ee = new Array(l); i < l; i++)ee[i] = handlers[i].fn;\n    return ee;\n};\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */ $d915e63f26169767$var$$c4dcfd1d1ea86647$var$EventEmitter.prototype.listenerCount = function listenerCount(event) {\n    var evt = $d915e63f26169767$var$$c4dcfd1d1ea86647$var$prefix ? $d915e63f26169767$var$$c4dcfd1d1ea86647$var$prefix + event : event, listeners = this._events[evt];\n    if (!listeners) return 0;\n    if (listeners.fn) return 1;\n    return listeners.length;\n};\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */ $d915e63f26169767$var$$c4dcfd1d1ea86647$var$EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n    var evt = $d915e63f26169767$var$$c4dcfd1d1ea86647$var$prefix ? $d915e63f26169767$var$$c4dcfd1d1ea86647$var$prefix + event : event;\n    if (!this._events[evt]) return false;\n    var listeners = this._events[evt], len = arguments.length, args, i;\n    if (listeners.fn) {\n        if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n        switch(len){\n            case 1:\n                return listeners.fn.call(listeners.context), true;\n            case 2:\n                return listeners.fn.call(listeners.context, a1), true;\n            case 3:\n                return listeners.fn.call(listeners.context, a1, a2), true;\n            case 4:\n                return listeners.fn.call(listeners.context, a1, a2, a3), true;\n            case 5:\n                return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n            case 6:\n                return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n        }\n        for(i = 1, args = new Array(len - 1); i < len; i++)args[i - 1] = arguments[i];\n        listeners.fn.apply(listeners.context, args);\n    } else {\n        var length = listeners.length, j;\n        for(i = 0; i < length; i++){\n            if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n            switch(len){\n                case 1:\n                    listeners[i].fn.call(listeners[i].context);\n                    break;\n                case 2:\n                    listeners[i].fn.call(listeners[i].context, a1);\n                    break;\n                case 3:\n                    listeners[i].fn.call(listeners[i].context, a1, a2);\n                    break;\n                case 4:\n                    listeners[i].fn.call(listeners[i].context, a1, a2, a3);\n                    break;\n                default:\n                    if (!args) for(j = 1, args = new Array(len - 1); j < len; j++)args[j - 1] = arguments[j];\n                    listeners[i].fn.apply(listeners[i].context, args);\n            }\n        }\n    }\n    return true;\n};\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */ $d915e63f26169767$var$$c4dcfd1d1ea86647$var$EventEmitter.prototype.on = function on(event, fn, context) {\n    return $d915e63f26169767$var$$c4dcfd1d1ea86647$var$addListener(this, event, fn, context, false);\n};\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */ $d915e63f26169767$var$$c4dcfd1d1ea86647$var$EventEmitter.prototype.once = function once(event, fn, context) {\n    return $d915e63f26169767$var$$c4dcfd1d1ea86647$var$addListener(this, event, fn, context, true);\n};\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */ $d915e63f26169767$var$$c4dcfd1d1ea86647$var$EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n    var evt = $d915e63f26169767$var$$c4dcfd1d1ea86647$var$prefix ? $d915e63f26169767$var$$c4dcfd1d1ea86647$var$prefix + event : event;\n    if (!this._events[evt]) return this;\n    if (!fn) {\n        $d915e63f26169767$var$$c4dcfd1d1ea86647$var$clearEvent(this, evt);\n        return this;\n    }\n    var listeners = this._events[evt];\n    if (listeners.fn) {\n        if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) $d915e63f26169767$var$$c4dcfd1d1ea86647$var$clearEvent(this, evt);\n    } else {\n        for(var i = 0, events = [], length = listeners.length; i < length; i++)if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) events.push(listeners[i]);\n        //\n        // Reset the array, or remove it completely if we have no more listeners.\n        //\n        if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n        else $d915e63f26169767$var$$c4dcfd1d1ea86647$var$clearEvent(this, evt);\n    }\n    return this;\n};\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */ $d915e63f26169767$var$$c4dcfd1d1ea86647$var$EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n    var evt;\n    if (event) {\n        evt = $d915e63f26169767$var$$c4dcfd1d1ea86647$var$prefix ? $d915e63f26169767$var$$c4dcfd1d1ea86647$var$prefix + event : event;\n        if (this._events[evt]) $d915e63f26169767$var$$c4dcfd1d1ea86647$var$clearEvent(this, evt);\n    } else {\n        this._events = new $d915e63f26169767$var$$c4dcfd1d1ea86647$var$Events();\n        this._eventsCount = 0;\n    }\n    return this;\n};\n//\n// Alias methods names because people roll like that.\n//\n$d915e63f26169767$var$$c4dcfd1d1ea86647$var$EventEmitter.prototype.off = $d915e63f26169767$var$$c4dcfd1d1ea86647$var$EventEmitter.prototype.removeListener;\n$d915e63f26169767$var$$c4dcfd1d1ea86647$var$EventEmitter.prototype.addListener = $d915e63f26169767$var$$c4dcfd1d1ea86647$var$EventEmitter.prototype.on;\n//\n// Expose the prefix.\n//\n$d915e63f26169767$var$$c4dcfd1d1ea86647$var$EventEmitter.prefixed = $d915e63f26169767$var$$c4dcfd1d1ea86647$var$prefix;\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\n$d915e63f26169767$var$$c4dcfd1d1ea86647$var$EventEmitter.EventEmitter = $d915e63f26169767$var$$c4dcfd1d1ea86647$var$EventEmitter;\n$d915e63f26169767$var$$c4dcfd1d1ea86647$exports = $d915e63f26169767$var$$c4dcfd1d1ea86647$var$EventEmitter;\nvar $d915e63f26169767$var$$78455e22dea96b8c$exports = {};\n$d915e63f26169767$var$$parcel$export($d915e63f26169767$var$$78455e22dea96b8c$exports, \"ConnectionType\", ()=>$d915e63f26169767$export$3157d57b4135e3bc);\n$d915e63f26169767$var$$parcel$export($d915e63f26169767$var$$78455e22dea96b8c$exports, \"PeerErrorType\", ()=>$d915e63f26169767$export$9547aaa2e39030ff);\n$d915e63f26169767$var$$parcel$export($d915e63f26169767$var$$78455e22dea96b8c$exports, \"BaseConnectionErrorType\", ()=>$d915e63f26169767$export$7974935686149686);\n$d915e63f26169767$var$$parcel$export($d915e63f26169767$var$$78455e22dea96b8c$exports, \"DataConnectionErrorType\", ()=>$d915e63f26169767$export$49ae800c114df41d);\n$d915e63f26169767$var$$parcel$export($d915e63f26169767$var$$78455e22dea96b8c$exports, \"SerializationType\", ()=>$d915e63f26169767$export$89f507cf986a947);\n$d915e63f26169767$var$$parcel$export($d915e63f26169767$var$$78455e22dea96b8c$exports, \"SocketEventType\", ()=>$d915e63f26169767$export$3b5c4a4b6354f023);\n$d915e63f26169767$var$$parcel$export($d915e63f26169767$var$$78455e22dea96b8c$exports, \"ServerMessageType\", ()=>$d915e63f26169767$export$adb4a1754da6f10d);\nvar $d915e63f26169767$export$3157d57b4135e3bc;\n(function(ConnectionType) {\n    ConnectionType[\"Data\"] = \"data\";\n    ConnectionType[\"Media\"] = \"media\";\n})($d915e63f26169767$export$3157d57b4135e3bc || ($d915e63f26169767$export$3157d57b4135e3bc = {}));\nvar $d915e63f26169767$export$9547aaa2e39030ff;\n(function(PeerErrorType) {\n    /**\n\t * The client's browser does not support some or all WebRTC features that you are trying to use.\n\t */ PeerErrorType[\"BrowserIncompatible\"] = \"browser-incompatible\";\n    /**\n\t * You've already disconnected this peer from the server and can no longer make any new connections on it.\n\t */ PeerErrorType[\"Disconnected\"] = \"disconnected\";\n    /**\n\t * The ID passed into the Peer constructor contains illegal characters.\n\t */ PeerErrorType[\"InvalidID\"] = \"invalid-id\";\n    /**\n\t * The API key passed into the Peer constructor contains illegal characters or is not in the system (cloud server only).\n\t */ PeerErrorType[\"InvalidKey\"] = \"invalid-key\";\n    /**\n\t * Lost or cannot establish a connection to the signalling server.\n\t */ PeerErrorType[\"Network\"] = \"network\";\n    /**\n\t * The peer you're trying to connect to does not exist.\n\t */ PeerErrorType[\"PeerUnavailable\"] = \"peer-unavailable\";\n    /**\n\t * PeerJS is being used securely, but the cloud server does not support SSL. Use a custom PeerServer.\n\t */ PeerErrorType[\"SslUnavailable\"] = \"ssl-unavailable\";\n    /**\n\t * Unable to reach the server.\n\t */ PeerErrorType[\"ServerError\"] = \"server-error\";\n    /**\n\t * An error from the underlying socket.\n\t */ PeerErrorType[\"SocketError\"] = \"socket-error\";\n    /**\n\t * The underlying socket closed unexpectedly.\n\t */ PeerErrorType[\"SocketClosed\"] = \"socket-closed\";\n    /**\n\t * The ID passed into the Peer constructor is already taken.\n\t *\n\t * :::caution\n\t * This error is not fatal if your peer has open peer-to-peer connections.\n\t * This can happen if you attempt to {@apilink Peer.reconnect} a peer that has been disconnected from the server,\n\t * but its old ID has now been taken.\n\t * :::\n\t */ PeerErrorType[\"UnavailableID\"] = \"unavailable-id\";\n    /**\n\t * Native WebRTC errors.\n\t */ PeerErrorType[\"WebRTC\"] = \"webrtc\";\n})($d915e63f26169767$export$9547aaa2e39030ff || ($d915e63f26169767$export$9547aaa2e39030ff = {}));\nvar $d915e63f26169767$export$7974935686149686;\n(function(BaseConnectionErrorType) {\n    BaseConnectionErrorType[\"NegotiationFailed\"] = \"negotiation-failed\";\n    BaseConnectionErrorType[\"ConnectionClosed\"] = \"connection-closed\";\n})($d915e63f26169767$export$7974935686149686 || ($d915e63f26169767$export$7974935686149686 = {}));\nvar $d915e63f26169767$export$49ae800c114df41d;\n(function(DataConnectionErrorType) {\n    DataConnectionErrorType[\"NotOpenYet\"] = \"not-open-yet\";\n    DataConnectionErrorType[\"MessageToBig\"] = \"message-too-big\";\n})($d915e63f26169767$export$49ae800c114df41d || ($d915e63f26169767$export$49ae800c114df41d = {}));\nvar $d915e63f26169767$export$89f507cf986a947;\n(function(SerializationType) {\n    SerializationType[\"Binary\"] = \"binary\";\n    SerializationType[\"BinaryUTF8\"] = \"binary-utf8\";\n    SerializationType[\"JSON\"] = \"json\";\n    SerializationType[\"None\"] = \"raw\";\n})($d915e63f26169767$export$89f507cf986a947 || ($d915e63f26169767$export$89f507cf986a947 = {}));\nvar $d915e63f26169767$export$3b5c4a4b6354f023;\n(function(SocketEventType) {\n    SocketEventType[\"Message\"] = \"message\";\n    SocketEventType[\"Disconnected\"] = \"disconnected\";\n    SocketEventType[\"Error\"] = \"error\";\n    SocketEventType[\"Close\"] = \"close\";\n})($d915e63f26169767$export$3b5c4a4b6354f023 || ($d915e63f26169767$export$3b5c4a4b6354f023 = {}));\nvar $d915e63f26169767$export$adb4a1754da6f10d;\n(function(ServerMessageType) {\n    ServerMessageType[\"Heartbeat\"] = \"HEARTBEAT\";\n    ServerMessageType[\"Candidate\"] = \"CANDIDATE\";\n    ServerMessageType[\"Offer\"] = \"OFFER\";\n    ServerMessageType[\"Answer\"] = \"ANSWER\";\n    ServerMessageType[\"Open\"] = \"OPEN\";\n    ServerMessageType[\"Error\"] = \"ERROR\";\n    ServerMessageType[\"IdTaken\"] = \"ID-TAKEN\";\n    ServerMessageType[\"InvalidKey\"] = \"INVALID-KEY\";\n    ServerMessageType[\"Leave\"] = \"LEAVE\";\n    ServerMessageType[\"Expire\"] = \"EXPIRE\";\n})($d915e63f26169767$export$adb4a1754da6f10d || ($d915e63f26169767$export$adb4a1754da6f10d = {}));\nvar $d915e63f26169767$var$$f5f881ec4575f1fc$exports = {};\n$d915e63f26169767$var$$f5f881ec4575f1fc$exports = JSON.parse('{\"name\":\"peerjs\",\"version\":\"1.5.2\",\"keywords\":[\"peerjs\",\"webrtc\",\"p2p\",\"rtc\"],\"description\":\"PeerJS client\",\"homepage\":\"https://peerjs.com\",\"bugs\":{\"url\":\"https://github.com/peers/peerjs/issues\"},\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/peers/peerjs\"},\"license\":\"MIT\",\"contributors\":[\"Michelle Bu <michelle@michellebu.com>\",\"afrokick <devbyru@gmail.com>\",\"ericz <really.ez@gmail.com>\",\"Jairo <kidandcat@gmail.com>\",\"Jonas Gloning <34194370+jonasgloning@users.noreply.github.com>\",\"Jairo Caro-Accino Viciana <jairo@galax.be>\",\"Carlos Caballero <carlos.caballero.gonzalez@gmail.com>\",\"hc <hheennrryy@gmail.com>\",\"Muhammad Asif <capripio@gmail.com>\",\"PrashoonB <prashoonbhattacharjee@gmail.com>\",\"Harsh Bardhan Mishra <47351025+HarshCasper@users.noreply.github.com>\",\"akotynski <aleksanderkotbury@gmail.com>\",\"lmb <i@lmb.io>\",\"Jairooo <jairocaro@msn.com>\",\"Moritz St\\xfcckler <moritz.stueckler@gmail.com>\",\"Simon <crydotsnakegithub@gmail.com>\",\"Denis Lukov <denismassters@gmail.com>\",\"Philipp Hancke <fippo@andyet.net>\",\"Hans Oksendahl <hansoksendahl@gmail.com>\",\"Jess <jessachandler@gmail.com>\",\"khankuan <khankuan@gmail.com>\",\"DUODVK <kurmanov.work@gmail.com>\",\"XiZhao <kwang1imsa@gmail.com>\",\"Matthias Lohr <matthias@lohr.me>\",\"=frank tree <=frnktrb@googlemail.com>\",\"Andre Eckardt <aeckardt@outlook.com>\",\"Chris Cowan <agentme49@gmail.com>\",\"Alex Chuev <alex@chuev.com>\",\"alxnull <alxnull@e.mail.de>\",\"Yemel Jardi <angel.jardi@gmail.com>\",\"Ben Parnell <benjaminparnell.94@gmail.com>\",\"Benny Lichtner <bennlich@gmail.com>\",\"fresheneesz <bitetrudpublic@gmail.com>\",\"bob.barstead@exaptive.com <bob.barstead@exaptive.com>\",\"chandika <chandika@gmail.com>\",\"emersion <contact@emersion.fr>\",\"Christopher Van <cvan@users.noreply.github.com>\",\"eddieherm <edhermoso@gmail.com>\",\"Eduardo Pinho <enet4mikeenet@gmail.com>\",\"Evandro Zanatta <ezanatta@tray.net.br>\",\"Gardner Bickford <gardner@users.noreply.github.com>\",\"Gian Luca <gianluca.cecchi@cynny.com>\",\"PatrickJS <github@gdi2290.com>\",\"jonnyf <github@jonathanfoss.co.uk>\",\"Hizkia Felix <hizkifw@gmail.com>\",\"Hristo Oskov <hristo.oskov@gmail.com>\",\"Isaac Madwed <i.madwed@gmail.com>\",\"Ilya Konanykhin <ilya.konanykhin@gmail.com>\",\"jasonbarry <jasbarry@me.com>\",\"Jonathan Burke <jonathan.burke.1311@googlemail.com>\",\"Josh Hamit <josh.hamit@gmail.com>\",\"Jordan Austin <jrax86@gmail.com>\",\"Joel Wetzell <jwetzell@yahoo.com>\",\"xizhao <kevin.wang@cloudera.com>\",\"Alberto Torres <kungfoobar@gmail.com>\",\"Jonathan Mayol <mayoljonathan@gmail.com>\",\"Jefferson Felix <me@jsfelix.dev>\",\"Rolf Erik Lekang <me@rolflekang.com>\",\"Kevin Mai-Husan Chia <mhchia@users.noreply.github.com>\",\"Pepijn de Vos <pepijndevos@gmail.com>\",\"JooYoung <qkdlql@naver.com>\",\"Tobias Speicher <rootcommander@gmail.com>\",\"Steve Blaurock <sblaurock@gmail.com>\",\"Kyrylo Shegeda <shegeda@ualberta.ca>\",\"Diwank Singh Tomer <singh@diwank.name>\",\"So\\u0308ren Balko <Soeren.Balko@gmail.com>\",\"Arpit Solanki <solankiarpit1997@gmail.com>\",\"Yuki Ito <yuki@gnnk.net>\",\"Artur Zayats <zag2art@gmail.com>\"],\"funding\":{\"type\":\"opencollective\",\"url\":\"https://opencollective.com/peer\"},\"collective\":{\"type\":\"opencollective\",\"url\":\"https://opencollective.com/peer\"},\"files\":[\"dist/*\"],\"sideEffects\":[\"lib/global.ts\",\"lib/supports.ts\"],\"main\":\"dist/bundler.cjs\",\"module\":\"dist/bundler.mjs\",\"browser-minified\":\"dist/peerjs.min.js\",\"browser-unminified\":\"dist/peerjs.js\",\"browser-minified-cbor\":\"dist/serializer.cbor.mjs\",\"browser-minified-msgpack\":\"dist/serializer.msgpack.mjs\",\"types\":\"dist/types.d.ts\",\"engines\":{\"node\":\">= 14\"},\"targets\":{\"types\":{\"source\":\"lib/exports.ts\"},\"main\":{\"source\":\"lib/exports.ts\",\"sourceMap\":{\"inlineSources\":true}},\"module\":{\"source\":\"lib/exports.ts\",\"includeNodeModules\":[\"eventemitter3\"],\"sourceMap\":{\"inlineSources\":true}},\"browser-minified\":{\"context\":\"browser\",\"outputFormat\":\"global\",\"optimize\":true,\"engines\":{\"browsers\":\"chrome >= 83, edge >= 83, firefox >= 80, safari >= 15\"},\"source\":\"lib/global.ts\"},\"browser-unminified\":{\"context\":\"browser\",\"outputFormat\":\"global\",\"optimize\":false,\"engines\":{\"browsers\":\"chrome >= 83, edge >= 83, firefox >= 80, safari >= 15\"},\"source\":\"lib/global.ts\"},\"browser-minified-cbor\":{\"context\":\"browser\",\"outputFormat\":\"esmodule\",\"isLibrary\":true,\"optimize\":true,\"engines\":{\"browsers\":\"chrome >= 83, edge >= 83, firefox >= 102, safari >= 15\"},\"source\":\"lib/dataconnection/StreamConnection/Cbor.ts\"},\"browser-minified-msgpack\":{\"context\":\"browser\",\"outputFormat\":\"esmodule\",\"isLibrary\":true,\"optimize\":true,\"engines\":{\"browsers\":\"chrome >= 83, edge >= 83, firefox >= 102, safari >= 15\"},\"source\":\"lib/dataconnection/StreamConnection/MsgPack.ts\"}},\"scripts\":{\"contributors\":\"git-authors-cli --print=false && prettier --write package.json && git add package.json package-lock.json && git commit -m \\\\\"chore(contributors): update and sort contributors list\\\\\"\",\"check\":\"tsc --noEmit && tsc -p e2e/tsconfig.json --noEmit\",\"watch\":\"parcel watch\",\"build\":\"rm -rf dist && parcel build\",\"prepublishOnly\":\"npm run build\",\"test\":\"jest\",\"test:watch\":\"jest --watch\",\"coverage\":\"jest --coverage --collectCoverageFrom=\\\\\"./lib/**\\\\\"\",\"format\":\"prettier --write .\",\"format:check\":\"prettier --check .\",\"semantic-release\":\"semantic-release\",\"e2e\":\"wdio run e2e/wdio.local.conf.ts\",\"e2e:bstack\":\"wdio run e2e/wdio.bstack.conf.ts\"},\"devDependencies\":{\"@parcel/config-default\":\"^2.9.3\",\"@parcel/packager-ts\":\"^2.9.3\",\"@parcel/transformer-typescript-tsc\":\"^2.9.3\",\"@parcel/transformer-typescript-types\":\"^2.9.3\",\"@semantic-release/changelog\":\"^6.0.1\",\"@semantic-release/git\":\"^10.0.1\",\"@swc/core\":\"^1.3.27\",\"@swc/jest\":\"^0.2.24\",\"@types/jasmine\":\"^4.3.4\",\"@wdio/browserstack-service\":\"^8.11.2\",\"@wdio/cli\":\"^8.11.2\",\"@wdio/globals\":\"^8.11.2\",\"@wdio/jasmine-framework\":\"^8.11.2\",\"@wdio/local-runner\":\"^8.11.2\",\"@wdio/spec-reporter\":\"^8.11.2\",\"@wdio/types\":\"^8.10.4\",\"http-server\":\"^14.1.1\",\"jest\":\"^29.3.1\",\"jest-environment-jsdom\":\"^29.3.1\",\"mock-socket\":\"^9.0.0\",\"parcel\":\"^2.9.3\",\"prettier\":\"^3.0.0\",\"semantic-release\":\"^21.0.0\",\"ts-node\":\"^10.9.1\",\"typescript\":\"^5.0.0\",\"wdio-geckodriver-service\":\"^5.0.1\"},\"dependencies\":{\"@msgpack/msgpack\":\"^2.8.0\",\"cbor-x\":\"1.5.4\",\"eventemitter3\":\"^4.0.7\",\"peerjs-js-binarypack\":\"^2.1.0\",\"webrtc-adapter\":\"^8.0.0\"},\"alias\":{\"process\":false,\"buffer\":false}}');\nclass $d915e63f26169767$var$$8f5bfa60836d261d$export$4798917dbf149b79 extends $d915e63f26169767$var$$c4dcfd1d1ea86647$exports.EventEmitter {\n    constructor(secure, host, port, path, key, pingInterval = 5000){\n        super();\n        this.pingInterval = pingInterval;\n        this._disconnected = true;\n        this._messagesQueue = [];\n        const wsProtocol = secure ? \"wss://\" : \"ws://\";\n        this._baseUrl = wsProtocol + host + \":\" + port + path + \"peerjs?key=\" + key;\n    }\n    start(id, token) {\n        this._id = id;\n        const wsUrl = `${this._baseUrl}&id=${id}&token=${token}`;\n        if (!!this._socket || !this._disconnected) return;\n        this._socket = new WebSocket(wsUrl + \"&version=\" + $d915e63f26169767$var$$f5f881ec4575f1fc$exports.version);\n        this._disconnected = false;\n        this._socket.onmessage = (event)=>{\n            let data;\n            try {\n                data = JSON.parse(event.data);\n                $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(\"Server message received:\", data);\n            } catch (e) {\n                $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(\"Invalid server message\", event.data);\n                return;\n            }\n            this.emit($d915e63f26169767$export$3b5c4a4b6354f023.Message, data);\n        };\n        this._socket.onclose = (event)=>{\n            if (this._disconnected) return;\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(\"Socket closed.\", event);\n            this._cleanup();\n            this._disconnected = true;\n            this.emit($d915e63f26169767$export$3b5c4a4b6354f023.Disconnected);\n        };\n        // Take care of the queue of connections if necessary and make sure Peer knows\n        // socket is open.\n        this._socket.onopen = ()=>{\n            if (this._disconnected) return;\n            this._sendQueuedMessages();\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(\"Socket open\");\n            this._scheduleHeartbeat();\n        };\n    }\n    _scheduleHeartbeat() {\n        this._wsPingTimer = setTimeout(()=>{\n            this._sendHeartbeat();\n        }, this.pingInterval);\n    }\n    _sendHeartbeat() {\n        if (!this._wsOpen()) {\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(`Cannot send heartbeat, because socket closed`);\n            return;\n        }\n        const message = JSON.stringify({\n            type: $d915e63f26169767$export$adb4a1754da6f10d.Heartbeat\n        });\n        this._socket.send(message);\n        this._scheduleHeartbeat();\n    }\n    /** Is the websocket currently open? */ _wsOpen() {\n        return !!this._socket && this._socket.readyState === 1;\n    }\n    /** Send queued messages. */ _sendQueuedMessages() {\n        //Create copy of queue and clear it,\n        //because send method push the message back to queue if smth will go wrong\n        const copiedQueue = [\n            ...this._messagesQueue\n        ];\n        this._messagesQueue = [];\n        for (const message of copiedQueue)this.send(message);\n    }\n    /** Exposed send for DC & Peer. */ send(data) {\n        if (this._disconnected) return;\n        // If we didn't get an ID yet, we can't yet send anything so we should queue\n        // up these messages.\n        if (!this._id) {\n            this._messagesQueue.push(data);\n            return;\n        }\n        if (!data.type) {\n            this.emit($d915e63f26169767$export$3b5c4a4b6354f023.Error, \"Invalid message\");\n            return;\n        }\n        if (!this._wsOpen()) return;\n        const message = JSON.stringify(data);\n        this._socket.send(message);\n    }\n    close() {\n        if (this._disconnected) return;\n        this._cleanup();\n        this._disconnected = true;\n    }\n    _cleanup() {\n        if (this._socket) {\n            this._socket.onopen = this._socket.onmessage = this._socket.onclose = null;\n            this._socket.close();\n            this._socket = undefined;\n        }\n        clearTimeout(this._wsPingTimer);\n    }\n}\nclass $d915e63f26169767$var$$b82fb8fc0514bfc1$export$89e6bb5ad64bf4a {\n    constructor(connection){\n        this.connection = connection;\n    }\n    /** Returns a PeerConnection object set up correctly (for data, media). */ startConnection(options) {\n        const peerConnection = this._startPeerConnection();\n        // Set the connection's PC.\n        this.connection.peerConnection = peerConnection;\n        if (this.connection.type === $d915e63f26169767$export$3157d57b4135e3bc.Media && options._stream) this._addTracksToConnection(options._stream, peerConnection);\n        // What do we need to do now?\n        if (options.originator) {\n            const dataConnection = this.connection;\n            const config = {\n                ordered: !!options.reliable\n            };\n            const dataChannel = peerConnection.createDataChannel(dataConnection.label, config);\n            dataConnection._initializeDataChannel(dataChannel);\n            this._makeOffer();\n        } else this.handleSDP(\"OFFER\", options.sdp);\n    }\n    /** Start a PC. */ _startPeerConnection() {\n        $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(\"Creating RTCPeerConnection.\");\n        const peerConnection = new RTCPeerConnection(this.connection.provider.options.config);\n        this._setupListeners(peerConnection);\n        return peerConnection;\n    }\n    /** Set up various WebRTC listeners. */ _setupListeners(peerConnection) {\n        const peerId = this.connection.peer;\n        const connectionId = this.connection.connectionId;\n        const connectionType = this.connection.type;\n        const provider = this.connection.provider;\n        $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(\"Listening for ICE candidates.\");\n        peerConnection.onicecandidate = (evt)=>{\n            if (!evt.candidate || !evt.candidate.candidate) return;\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(`Received ICE candidates for ${peerId}:`, evt.candidate);\n            provider.socket.send({\n                type: $d915e63f26169767$export$adb4a1754da6f10d.Candidate,\n                payload: {\n                    candidate: evt.candidate,\n                    type: connectionType,\n                    connectionId: connectionId\n                },\n                dst: peerId\n            });\n        };\n        peerConnection.oniceconnectionstatechange = ()=>{\n            switch(peerConnection.iceConnectionState){\n                case \"failed\":\n                    $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(\"iceConnectionState is failed, closing connections to \" + peerId);\n                    this.connection.emitError($d915e63f26169767$export$7974935686149686.NegotiationFailed, \"Negotiation of connection to \" + peerId + \" failed.\");\n                    this.connection.close();\n                    break;\n                case \"closed\":\n                    $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(\"iceConnectionState is closed, closing connections to \" + peerId);\n                    this.connection.emitError($d915e63f26169767$export$7974935686149686.ConnectionClosed, \"Connection to \" + peerId + \" closed.\");\n                    this.connection.close();\n                    break;\n                case \"disconnected\":\n                    $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(\"iceConnectionState changed to disconnected on the connection with \" + peerId);\n                    break;\n                case \"completed\":\n                    peerConnection.onicecandidate = ()=>{};\n                    break;\n            }\n            this.connection.emit(\"iceStateChanged\", peerConnection.iceConnectionState);\n        };\n        $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(\"Listening for data channel\");\n        // Fired between offer and answer, so options should already be saved\n        // in the options hash.\n        peerConnection.ondatachannel = (evt)=>{\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(\"Received data channel\");\n            const dataChannel = evt.channel;\n            const connection = provider.getConnection(peerId, connectionId);\n            connection._initializeDataChannel(dataChannel);\n        };\n        $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(\"Listening for remote stream\");\n        peerConnection.ontrack = (evt)=>{\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(\"Received remote stream\");\n            const stream = evt.streams[0];\n            const connection = provider.getConnection(peerId, connectionId);\n            if (connection.type === $d915e63f26169767$export$3157d57b4135e3bc.Media) {\n                const mediaConnection = connection;\n                this._addStreamToMediaConnection(stream, mediaConnection);\n            }\n        };\n    }\n    cleanup() {\n        $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(\"Cleaning up PeerConnection to \" + this.connection.peer);\n        const peerConnection = this.connection.peerConnection;\n        if (!peerConnection) return;\n        this.connection.peerConnection = null;\n        //unsubscribe from all PeerConnection's events\n        peerConnection.onicecandidate = peerConnection.oniceconnectionstatechange = peerConnection.ondatachannel = peerConnection.ontrack = ()=>{};\n        const peerConnectionNotClosed = peerConnection.signalingState !== \"closed\";\n        let dataChannelNotClosed = false;\n        const dataChannel = this.connection.dataChannel;\n        if (dataChannel) dataChannelNotClosed = !!dataChannel.readyState && dataChannel.readyState !== \"closed\";\n        if (peerConnectionNotClosed || dataChannelNotClosed) peerConnection.close();\n    }\n    async _makeOffer() {\n        const peerConnection = this.connection.peerConnection;\n        const provider = this.connection.provider;\n        try {\n            const offer = await peerConnection.createOffer(this.connection.options.constraints);\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(\"Created offer.\");\n            if (this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === \"function\") offer.sdp = this.connection.options.sdpTransform(offer.sdp) || offer.sdp;\n            try {\n                await peerConnection.setLocalDescription(offer);\n                $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(\"Set localDescription:\", offer, `for:${this.connection.peer}`);\n                let payload = {\n                    sdp: offer,\n                    type: this.connection.type,\n                    connectionId: this.connection.connectionId,\n                    metadata: this.connection.metadata\n                };\n                if (this.connection.type === $d915e63f26169767$export$3157d57b4135e3bc.Data) {\n                    const dataConnection = this.connection;\n                    payload = {\n                        ...payload,\n                        label: dataConnection.label,\n                        reliable: dataConnection.reliable,\n                        serialization: dataConnection.serialization\n                    };\n                }\n                provider.socket.send({\n                    type: $d915e63f26169767$export$adb4a1754da6f10d.Offer,\n                    payload: payload,\n                    dst: this.connection.peer\n                });\n            } catch (err) {\n                // TODO: investigate why _makeOffer is being called from the answer\n                if (err != \"OperationError: Failed to set local offer sdp: Called in wrong state: kHaveRemoteOffer\") {\n                    provider.emitError($d915e63f26169767$export$9547aaa2e39030ff.WebRTC, err);\n                    $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(\"Failed to setLocalDescription, \", err);\n                }\n            }\n        } catch (err_1) {\n            provider.emitError($d915e63f26169767$export$9547aaa2e39030ff.WebRTC, err_1);\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(\"Failed to createOffer, \", err_1);\n        }\n    }\n    async _makeAnswer() {\n        const peerConnection = this.connection.peerConnection;\n        const provider = this.connection.provider;\n        try {\n            const answer = await peerConnection.createAnswer();\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(\"Created answer.\");\n            if (this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === \"function\") answer.sdp = this.connection.options.sdpTransform(answer.sdp) || answer.sdp;\n            try {\n                await peerConnection.setLocalDescription(answer);\n                $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(`Set localDescription:`, answer, `for:${this.connection.peer}`);\n                provider.socket.send({\n                    type: $d915e63f26169767$export$adb4a1754da6f10d.Answer,\n                    payload: {\n                        sdp: answer,\n                        type: this.connection.type,\n                        connectionId: this.connection.connectionId\n                    },\n                    dst: this.connection.peer\n                });\n            } catch (err) {\n                provider.emitError($d915e63f26169767$export$9547aaa2e39030ff.WebRTC, err);\n                $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(\"Failed to setLocalDescription, \", err);\n            }\n        } catch (err_1) {\n            provider.emitError($d915e63f26169767$export$9547aaa2e39030ff.WebRTC, err_1);\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(\"Failed to create answer, \", err_1);\n        }\n    }\n    /** Handle an SDP. */ async handleSDP(type, sdp) {\n        sdp = new RTCSessionDescription(sdp);\n        const peerConnection = this.connection.peerConnection;\n        const provider = this.connection.provider;\n        $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(\"Setting remote description\", sdp);\n        const self = this;\n        try {\n            await peerConnection.setRemoteDescription(sdp);\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(`Set remoteDescription:${type} for:${this.connection.peer}`);\n            if (type === \"OFFER\") await self._makeAnswer();\n        } catch (err) {\n            provider.emitError($d915e63f26169767$export$9547aaa2e39030ff.WebRTC, err);\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(\"Failed to setRemoteDescription, \", err);\n        }\n    }\n    /** Handle a candidate. */ async handleCandidate(ice) {\n        $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(`handleCandidate:`, ice);\n        try {\n            await this.connection.peerConnection.addIceCandidate(ice);\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(`Added ICE candidate for:${this.connection.peer}`);\n        } catch (err) {\n            this.connection.provider.emitError($d915e63f26169767$export$9547aaa2e39030ff.WebRTC, err);\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(\"Failed to handleCandidate, \", err);\n        }\n    }\n    _addTracksToConnection(stream, peerConnection) {\n        $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(`add tracks from stream ${stream.id} to peer connection`);\n        if (!peerConnection.addTrack) return $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.error(`Your browser does't support RTCPeerConnection#addTrack. Ignored.`);\n        stream.getTracks().forEach((track)=>{\n            peerConnection.addTrack(track, stream);\n        });\n    }\n    _addStreamToMediaConnection(stream, mediaConnection) {\n        $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(`add stream ${stream.id} to media connection ${mediaConnection.connectionId}`);\n        mediaConnection.addStream(stream);\n    }\n}\nclass $d915e63f26169767$var$$23779d1881157a18$export$6a678e589c8a4542 extends $d915e63f26169767$var$$c4dcfd1d1ea86647$exports.EventEmitter {\n    /**\n\t * Emits a typed error message.\n\t *\n\t * @internal\n\t */ emitError(type, err) {\n        $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.error(\"Error:\", err);\n        // @ts-ignore\n        this.emit(\"error\", new $d915e63f26169767$export$98871882f492de82(`${type}`, err));\n    }\n}\nclass $d915e63f26169767$export$98871882f492de82 extends Error {\n    /**\n\t * @internal\n\t */ constructor(type, err){\n        if (typeof err === \"string\") super(err);\n        else {\n            super();\n            Object.assign(this, err);\n        }\n        this.type = type;\n    }\n}\nclass $d915e63f26169767$var$$5045192fc6d387ba$export$23a2a68283c24d80 extends $d915e63f26169767$var$$23779d1881157a18$export$6a678e589c8a4542 {\n    /**\n\t * Whether the media connection is active (e.g. your call has been answered).\n\t * You can check this if you want to set a maximum wait time for a one-sided call.\n\t */ get open() {\n        return this._open;\n    }\n    constructor(/**\n\t\t * The ID of the peer on the other end of this connection.\n\t\t */ peer, provider, options){\n        super();\n        this.peer = peer;\n        this.provider = provider;\n        this.options = options;\n        this._open = false;\n        this.metadata = options.metadata;\n    }\n}\nclass $d915e63f26169767$var$$5c1d08c7c57da9a3$export$4a84e95a2324ac29 extends $d915e63f26169767$var$$5045192fc6d387ba$export$23a2a68283c24d80 {\n    static #_ = this.ID_PREFIX = \"mc_\";\n    /**\n\t * For media connections, this is always 'media'.\n\t */ get type() {\n        return $d915e63f26169767$export$3157d57b4135e3bc.Media;\n    }\n    get localStream() {\n        return this._localStream;\n    }\n    get remoteStream() {\n        return this._remoteStream;\n    }\n    constructor(peerId, provider, options){\n        super(peerId, provider, options);\n        this._localStream = this.options._stream;\n        this.connectionId = this.options.connectionId || $d915e63f26169767$var$$5c1d08c7c57da9a3$export$4a84e95a2324ac29.ID_PREFIX + $d915e63f26169767$export$7debb50ef11d5e0b.randomToken();\n        this._negotiator = new $d915e63f26169767$var$$b82fb8fc0514bfc1$export$89e6bb5ad64bf4a(this);\n        if (this._localStream) this._negotiator.startConnection({\n            _stream: this._localStream,\n            originator: true\n        });\n    }\n    /** Called by the Negotiator when the DataChannel is ready. */ _initializeDataChannel(dc) {\n        this.dataChannel = dc;\n        this.dataChannel.onopen = ()=>{\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(`DC#${this.connectionId} dc connection success`);\n            this.emit(\"willCloseOnRemote\");\n        };\n        this.dataChannel.onclose = ()=>{\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(`DC#${this.connectionId} dc closed for:`, this.peer);\n            this.close();\n        };\n    }\n    addStream(remoteStream) {\n        $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(\"Receiving stream\", remoteStream);\n        this._remoteStream = remoteStream;\n        super.emit(\"stream\", remoteStream); // Should we call this `open`?\n    }\n    /**\n\t * @internal\n\t */ handleMessage(message) {\n        const type = message.type;\n        const payload = message.payload;\n        switch(message.type){\n            case $d915e63f26169767$export$adb4a1754da6f10d.Answer:\n                // Forward to negotiator\n                this._negotiator.handleSDP(type, payload.sdp);\n                this._open = true;\n                break;\n            case $d915e63f26169767$export$adb4a1754da6f10d.Candidate:\n                this._negotiator.handleCandidate(payload.candidate);\n                break;\n            default:\n                $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.warn(`Unrecognized message type:${type} from peer:${this.peer}`);\n                break;\n        }\n    }\n    /**\n     * When receiving a {@apilink PeerEvents | `call`} event on a peer, you can call\n     * `answer` on the media connection provided by the callback to accept the call\n     * and optionally send your own media stream.\n\n     *\n     * @param stream A WebRTC media stream.\n     * @param options\n     * @returns\n     */ answer(stream, options = {}) {\n        if (this._localStream) {\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.warn(\"Local stream already exists on this MediaConnection. Are you answering a call twice?\");\n            return;\n        }\n        this._localStream = stream;\n        if (options && options.sdpTransform) this.options.sdpTransform = options.sdpTransform;\n        this._negotiator.startConnection({\n            ...this.options._payload,\n            _stream: stream\n        });\n        // Retrieve lost messages stored because PeerConnection not set up.\n        const messages = this.provider._getMessages(this.connectionId);\n        for (const message of messages)this.handleMessage(message);\n        this._open = true;\n    }\n    /**\n\t * Exposed functionality for users.\n\t */ /**\n\t * Closes the media connection.\n\t */ close() {\n        if (this._negotiator) {\n            this._negotiator.cleanup();\n            this._negotiator = null;\n        }\n        this._localStream = null;\n        this._remoteStream = null;\n        if (this.provider) {\n            this.provider._removeConnection(this);\n            this.provider = null;\n        }\n        if (this.options && this.options._stream) this.options._stream = null;\n        if (!this.open) return;\n        this._open = false;\n        super.emit(\"close\");\n    }\n}\nclass $d915e63f26169767$var$$abf266641927cd89$export$2c4e825dc9120f87 {\n    constructor(_options){\n        this._options = _options;\n    }\n    _buildRequest(method) {\n        const protocol = this._options.secure ? \"https\" : \"http\";\n        const { host: host, port: port, path: path, key: key } = this._options;\n        const url = new URL(`${protocol}://${host}:${port}${path}${key}/${method}`);\n        // TODO: Why timestamp, why random?\n        url.searchParams.set(\"ts\", `${Date.now()}${Math.random()}`);\n        url.searchParams.set(\"version\", $d915e63f26169767$var$$f5f881ec4575f1fc$exports.version);\n        return fetch(url.href, {\n            referrerPolicy: this._options.referrerPolicy\n        });\n    }\n    /** Get a unique ID from the server via XHR and initialize with it. */ async retrieveId() {\n        try {\n            const response = await this._buildRequest(\"id\");\n            if (response.status !== 200) throw new Error(`Error. Status:${response.status}`);\n            return response.text();\n        } catch (error) {\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.error(\"Error retrieving ID\", error);\n            let pathError = \"\";\n            if (this._options.path === \"/\" && this._options.host !== $d915e63f26169767$export$7debb50ef11d5e0b.CLOUD_HOST) pathError = \" If you passed in a `path` to your self-hosted PeerServer, you'll also need to pass in that same path when creating a new Peer.\";\n            throw new Error(\"Could not get an ID from the server.\" + pathError);\n        }\n    }\n    /** @deprecated */ async listAllPeers() {\n        try {\n            const response = await this._buildRequest(\"peers\");\n            if (response.status !== 200) {\n                if (response.status === 401) {\n                    let helpfulError = \"\";\n                    if (this._options.host === $d915e63f26169767$export$7debb50ef11d5e0b.CLOUD_HOST) helpfulError = \"It looks like you're using the cloud server. You can email team@peerjs.com to enable peer listing for your API key.\";\n                    else helpfulError = \"You need to enable `allow_discovery` on your self-hosted PeerServer to use this feature.\";\n                    throw new Error(\"It doesn't look like you have permission to list peers IDs. \" + helpfulError);\n                }\n                throw new Error(`Error. Status:${response.status}`);\n            }\n            return response.json();\n        } catch (error) {\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.error(\"Error retrieving list peers\", error);\n            throw new Error(\"Could not get list peers from the server.\" + error);\n        }\n    }\n}\nclass $d915e63f26169767$var$$6366c4ca161bc297$export$d365f7ad9d7df9c9 extends $d915e63f26169767$var$$5045192fc6d387ba$export$23a2a68283c24d80 {\n    static #_ = this.ID_PREFIX = \"dc_\";\n    static #_1 = this.MAX_BUFFERED_AMOUNT = 8388608;\n    get type() {\n        return $d915e63f26169767$export$3157d57b4135e3bc.Data;\n    }\n    constructor(peerId, provider, options){\n        super(peerId, provider, options);\n        this.connectionId = this.options.connectionId || $d915e63f26169767$var$$6366c4ca161bc297$export$d365f7ad9d7df9c9.ID_PREFIX + $d915e63f26169767$var$$0e5fd1585784c252$export$4e61f672936bec77();\n        this.label = this.options.label || this.connectionId;\n        this.reliable = !!this.options.reliable;\n        this._negotiator = new $d915e63f26169767$var$$b82fb8fc0514bfc1$export$89e6bb5ad64bf4a(this);\n        this._negotiator.startConnection(this.options._payload || {\n            originator: true,\n            reliable: this.reliable\n        });\n    }\n    /** Called by the Negotiator when the DataChannel is ready. */ _initializeDataChannel(dc) {\n        this.dataChannel = dc;\n        this.dataChannel.onopen = ()=>{\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(`DC#${this.connectionId} dc connection success`);\n            this._open = true;\n            this.emit(\"open\");\n        };\n        this.dataChannel.onmessage = (e)=>{\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(`DC#${this.connectionId} dc onmessage:`, e.data);\n        // this._handleDataMessage(e);\n        };\n        this.dataChannel.onclose = ()=>{\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(`DC#${this.connectionId} dc closed for:`, this.peer);\n            this.close();\n        };\n    }\n    /**\n\t * Exposed functionality for users.\n\t */ /** Allows user to close connection. */ close(options) {\n        if (options?.flush) {\n            this.send({\n                __peerData: {\n                    type: \"close\"\n                }\n            });\n            return;\n        }\n        if (this._negotiator) {\n            this._negotiator.cleanup();\n            this._negotiator = null;\n        }\n        if (this.provider) {\n            this.provider._removeConnection(this);\n            this.provider = null;\n        }\n        if (this.dataChannel) {\n            this.dataChannel.onopen = null;\n            this.dataChannel.onmessage = null;\n            this.dataChannel.onclose = null;\n            this.dataChannel = null;\n        }\n        if (!this.open) return;\n        this._open = false;\n        super.emit(\"close\");\n    }\n    /** Allows user to send data. */ send(data, chunked = false) {\n        if (!this.open) {\n            this.emitError($d915e63f26169767$export$49ae800c114df41d.NotOpenYet, \"Connection is not open. You should listen for the `open` event before sending messages.\");\n            return;\n        }\n        return this._send(data, chunked);\n    }\n    async handleMessage(message) {\n        const payload = message.payload;\n        switch(message.type){\n            case $d915e63f26169767$export$adb4a1754da6f10d.Answer:\n                await this._negotiator.handleSDP(message.type, payload.sdp);\n                break;\n            case $d915e63f26169767$export$adb4a1754da6f10d.Candidate:\n                await this._negotiator.handleCandidate(payload.candidate);\n                break;\n            default:\n                $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.warn(\"Unrecognized message type:\", message.type, \"from peer:\", this.peer);\n                break;\n        }\n    }\n}\nclass $d915e63f26169767$export$ff7c9d4c11d94e8b extends $d915e63f26169767$var$$6366c4ca161bc297$export$d365f7ad9d7df9c9 {\n    get bufferSize() {\n        return this._bufferSize;\n    }\n    _initializeDataChannel(dc) {\n        super._initializeDataChannel(dc);\n        this.dataChannel.binaryType = \"arraybuffer\";\n        this.dataChannel.addEventListener(\"message\", (e)=>this._handleDataMessage(e));\n    }\n    _bufferedSend(msg) {\n        if (this._buffering || !this._trySend(msg)) {\n            this._buffer.push(msg);\n            this._bufferSize = this._buffer.length;\n        }\n    }\n    // Returns true if the send succeeds.\n    _trySend(msg) {\n        if (!this.open) return false;\n        if (this.dataChannel.bufferedAmount > $d915e63f26169767$var$$6366c4ca161bc297$export$d365f7ad9d7df9c9.MAX_BUFFERED_AMOUNT) {\n            this._buffering = true;\n            setTimeout(()=>{\n                this._buffering = false;\n                this._tryBuffer();\n            }, 50);\n            return false;\n        }\n        try {\n            this.dataChannel.send(msg);\n        } catch (e) {\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.error(`DC#:${this.connectionId} Error when sending:`, e);\n            this._buffering = true;\n            this.close();\n            return false;\n        }\n        return true;\n    }\n    // Try to send the first message in the buffer.\n    _tryBuffer() {\n        if (!this.open) return;\n        if (this._buffer.length === 0) return;\n        const msg = this._buffer[0];\n        if (this._trySend(msg)) {\n            this._buffer.shift();\n            this._bufferSize = this._buffer.length;\n            this._tryBuffer();\n        }\n    }\n    close(options) {\n        if (options?.flush) {\n            this.send({\n                __peerData: {\n                    type: \"close\"\n                }\n            });\n            return;\n        }\n        this._buffer = [];\n        this._bufferSize = 0;\n        super.close();\n    }\n    constructor(...args){\n        super(...args);\n        this._buffer = [];\n        this._bufferSize = 0;\n        this._buffering = false;\n    }\n}\nclass $d915e63f26169767$var$$9fcfddb3ae148f88$export$f0a5a64d5bb37108 extends $d915e63f26169767$export$ff7c9d4c11d94e8b {\n    close(options) {\n        super.close(options);\n        this._chunkedData = {};\n    }\n    constructor(peerId, provider, options){\n        super(peerId, provider, options);\n        this.chunker = new $d915e63f26169767$var$$fcbcc7538a6776d5$export$f1c5f4c9cb95390b();\n        this.serialization = $d915e63f26169767$export$89f507cf986a947.Binary;\n        this._chunkedData = {};\n    }\n    // Handles a DataChannel message.\n    _handleDataMessage({ data: data }) {\n        const deserializedData = (0, $00e82ca0068ee86a$export$417857010dc9287f)(data);\n        // PeerJS specific message\n        const peerData = deserializedData[\"__peerData\"];\n        if (peerData) {\n            if (peerData.type === \"close\") {\n                this.close();\n                return;\n            }\n            // Chunked data -- piece things back together.\n            // @ts-ignore\n            this._handleChunk(deserializedData);\n            return;\n        }\n        this.emit(\"data\", deserializedData);\n    }\n    _handleChunk(data) {\n        const id = data.__peerData;\n        const chunkInfo = this._chunkedData[id] || {\n            data: [],\n            count: 0,\n            total: data.total\n        };\n        chunkInfo.data[data.n] = new Uint8Array(data.data);\n        chunkInfo.count++;\n        this._chunkedData[id] = chunkInfo;\n        if (chunkInfo.total === chunkInfo.count) {\n            // Clean up before making the recursive call to `_handleDataMessage`.\n            delete this._chunkedData[id];\n            // We've received all the chunks--time to construct the complete data.\n            // const data = new Blob(chunkInfo.data);\n            const data = $d915e63f26169767$var$$fcbcc7538a6776d5$export$52c89ebcdc4f53f2(chunkInfo.data);\n            this._handleDataMessage({\n                data: data\n            });\n        }\n    }\n    _send(data, chunked) {\n        const blob = (0, $00e82ca0068ee86a$export$2a703dbb0cb35339)(data);\n        if (blob instanceof Promise) return this._send_blob(blob);\n        if (!chunked && blob.byteLength > this.chunker.chunkedMTU) {\n            this._sendChunks(blob);\n            return;\n        }\n        this._bufferedSend(blob);\n    }\n    async _send_blob(blobPromise) {\n        const blob = await blobPromise;\n        if (blob.byteLength > this.chunker.chunkedMTU) {\n            this._sendChunks(blob);\n            return;\n        }\n        this._bufferedSend(blob);\n    }\n    _sendChunks(blob) {\n        const blobs = this.chunker.chunk(blob);\n        $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(`DC#${this.connectionId} Try to send ${blobs.length} chunks...`);\n        for (const blob of blobs)this.send(blob, true);\n    }\n}\nclass $d915e63f26169767$var$$bbaee3f15f714663$export$6f88fe47d32c9c94 extends $d915e63f26169767$export$ff7c9d4c11d94e8b {\n    _handleDataMessage({ data: data }) {\n        super.emit(\"data\", data);\n    }\n    _send(data, _chunked) {\n        this._bufferedSend(data);\n    }\n    constructor(...args){\n        super(...args);\n        this.serialization = $d915e63f26169767$export$89f507cf986a947.None;\n    }\n}\nclass $d915e63f26169767$var$$817f931e3f9096cf$export$48880ac635f47186 extends $d915e63f26169767$export$ff7c9d4c11d94e8b {\n    // Handles a DataChannel message.\n    _handleDataMessage({ data: data }) {\n        const deserializedData = this.parse(this.decoder.decode(data));\n        // PeerJS specific message\n        const peerData = deserializedData[\"__peerData\"];\n        if (peerData && peerData.type === \"close\") {\n            this.close();\n            return;\n        }\n        this.emit(\"data\", deserializedData);\n    }\n    _send(data, _chunked) {\n        const encodedData = this.encoder.encode(this.stringify(data));\n        if (encodedData.byteLength >= $d915e63f26169767$export$7debb50ef11d5e0b.chunkedMTU) {\n            this.emitError($d915e63f26169767$export$49ae800c114df41d.MessageToBig, \"Message too big for JSON channel\");\n            return;\n        }\n        this._bufferedSend(encodedData);\n    }\n    constructor(...args){\n        super(...args);\n        this.serialization = $d915e63f26169767$export$89f507cf986a947.JSON;\n        this.encoder = new TextEncoder();\n        this.decoder = new TextDecoder();\n        this.stringify = JSON.stringify;\n        this.parse = JSON.parse;\n    }\n}\nclass $d915e63f26169767$var$$416260bce337df90$var$PeerOptions {\n}\nclass $d915e63f26169767$export$ecd1fc136c422448 extends $d915e63f26169767$var$$23779d1881157a18$export$6a678e589c8a4542 {\n    static #_ = this.DEFAULT_KEY = \"peerjs\";\n    /**\n\t * The brokering ID of this peer\n\t *\n\t * If no ID was specified in {@apilink Peer | the constructor},\n\t * this will be `undefined` until the {@apilink PeerEvents | `open`} event is emitted.\n\t */ get id() {\n        return this._id;\n    }\n    get options() {\n        return this._options;\n    }\n    get open() {\n        return this._open;\n    }\n    /**\n\t * @internal\n\t */ get socket() {\n        return this._socket;\n    }\n    /**\n\t * A hash of all connections associated with this peer, keyed by the remote peer's ID.\n\t * @deprecated\n\t * Return type will change from Object to Map<string,[]>\n\t */ get connections() {\n        const plainConnections = Object.create(null);\n        for (const [k, v] of this._connections)plainConnections[k] = v;\n        return plainConnections;\n    }\n    /**\n\t * true if this peer and all of its connections can no longer be used.\n\t */ get destroyed() {\n        return this._destroyed;\n    }\n    /**\n\t * false if there is an active connection to the PeerServer.\n\t */ get disconnected() {\n        return this._disconnected;\n    }\n    constructor(id, options){\n        super();\n        this._serializers = {\n            raw: $d915e63f26169767$var$$bbaee3f15f714663$export$6f88fe47d32c9c94,\n            json: $d915e63f26169767$var$$817f931e3f9096cf$export$48880ac635f47186,\n            binary: $d915e63f26169767$var$$9fcfddb3ae148f88$export$f0a5a64d5bb37108,\n            \"binary-utf8\": $d915e63f26169767$var$$9fcfddb3ae148f88$export$f0a5a64d5bb37108,\n            default: $d915e63f26169767$var$$9fcfddb3ae148f88$export$f0a5a64d5bb37108\n        };\n        this._id = null;\n        this._lastServerId = null;\n        // States.\n        this._destroyed = false // Connections have been killed\n        ;\n        this._disconnected = false // Connection to PeerServer killed but P2P connections still active\n        ;\n        this._open = false // Sockets and such are not yet open.\n        ;\n        this._connections = new Map() // All connections for this peer.\n        ;\n        this._lostMessages = new Map() // src => [list of messages]\n        ;\n        let userId;\n        // Deal with overloading\n        if (id && id.constructor == Object) options = id;\n        else if (id) userId = id.toString();\n        // Configurize options\n        options = {\n            debug: 0,\n            host: $d915e63f26169767$export$7debb50ef11d5e0b.CLOUD_HOST,\n            port: $d915e63f26169767$export$7debb50ef11d5e0b.CLOUD_PORT,\n            path: \"/\",\n            key: $d915e63f26169767$export$ecd1fc136c422448.DEFAULT_KEY,\n            token: $d915e63f26169767$export$7debb50ef11d5e0b.randomToken(),\n            config: $d915e63f26169767$export$7debb50ef11d5e0b.defaultConfig,\n            referrerPolicy: \"strict-origin-when-cross-origin\",\n            serializers: {},\n            ...options\n        };\n        this._options = options;\n        this._serializers = {\n            ...this._serializers,\n            ...this.options.serializers\n        };\n        // Detect relative URL host.\n        if (this._options.host === \"/\") this._options.host = window.location.hostname;\n        // Set path correctly.\n        if (this._options.path) {\n            if (this._options.path[0] !== \"/\") this._options.path = \"/\" + this._options.path;\n            if (this._options.path[this._options.path.length - 1] !== \"/\") this._options.path += \"/\";\n        }\n        // Set whether we use SSL to same as current host\n        if (this._options.secure === undefined && this._options.host !== $d915e63f26169767$export$7debb50ef11d5e0b.CLOUD_HOST) this._options.secure = $d915e63f26169767$export$7debb50ef11d5e0b.isSecure();\n        else if (this._options.host == $d915e63f26169767$export$7debb50ef11d5e0b.CLOUD_HOST) this._options.secure = true;\n        // Set a custom log function if present\n        if (this._options.logFunction) $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.setLogFunction(this._options.logFunction);\n        $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.logLevel = this._options.debug || 0;\n        this._api = new $d915e63f26169767$var$$abf266641927cd89$export$2c4e825dc9120f87(options);\n        this._socket = this._createServerConnection();\n        // Sanity checks\n        // Ensure WebRTC supported\n        if (!$d915e63f26169767$export$7debb50ef11d5e0b.supports.audioVideo && !$d915e63f26169767$export$7debb50ef11d5e0b.supports.data) {\n            this._delayedAbort($d915e63f26169767$export$9547aaa2e39030ff.BrowserIncompatible, \"The current browser does not support WebRTC\");\n            return;\n        }\n        // Ensure alphanumeric id\n        if (!!userId && !$d915e63f26169767$export$7debb50ef11d5e0b.validateId(userId)) {\n            this._delayedAbort($d915e63f26169767$export$9547aaa2e39030ff.InvalidID, `ID \"${userId}\" is invalid`);\n            return;\n        }\n        if (userId) this._initialize(userId);\n        else this._api.retrieveId().then((id)=>this._initialize(id)).catch((error)=>this._abort($d915e63f26169767$export$9547aaa2e39030ff.ServerError, error));\n    }\n    _createServerConnection() {\n        const socket = new $d915e63f26169767$var$$8f5bfa60836d261d$export$4798917dbf149b79(this._options.secure, this._options.host, this._options.port, this._options.path, this._options.key, this._options.pingInterval);\n        socket.on($d915e63f26169767$export$3b5c4a4b6354f023.Message, (data)=>{\n            this._handleMessage(data);\n        });\n        socket.on($d915e63f26169767$export$3b5c4a4b6354f023.Error, (error)=>{\n            this._abort($d915e63f26169767$export$9547aaa2e39030ff.SocketError, error);\n        });\n        socket.on($d915e63f26169767$export$3b5c4a4b6354f023.Disconnected, ()=>{\n            if (this.disconnected) return;\n            this.emitError($d915e63f26169767$export$9547aaa2e39030ff.Network, \"Lost connection to server.\");\n            this.disconnect();\n        });\n        socket.on($d915e63f26169767$export$3b5c4a4b6354f023.Close, ()=>{\n            if (this.disconnected) return;\n            this._abort($d915e63f26169767$export$9547aaa2e39030ff.SocketClosed, \"Underlying socket is already closed.\");\n        });\n        return socket;\n    }\n    /** Initialize a connection with the server. */ _initialize(id) {\n        this._id = id;\n        this.socket.start(id, this._options.token);\n    }\n    /** Handles messages from the server. */ _handleMessage(message) {\n        const type = message.type;\n        const payload = message.payload;\n        const peerId = message.src;\n        switch(type){\n            case $d915e63f26169767$export$adb4a1754da6f10d.Open:\n                this._lastServerId = this.id;\n                this._open = true;\n                this.emit(\"open\", this.id);\n                break;\n            case $d915e63f26169767$export$adb4a1754da6f10d.Error:\n                this._abort($d915e63f26169767$export$9547aaa2e39030ff.ServerError, payload.msg);\n                break;\n            case $d915e63f26169767$export$adb4a1754da6f10d.IdTaken:\n                this._abort($d915e63f26169767$export$9547aaa2e39030ff.UnavailableID, `ID \"${this.id}\" is taken`);\n                break;\n            case $d915e63f26169767$export$adb4a1754da6f10d.InvalidKey:\n                this._abort($d915e63f26169767$export$9547aaa2e39030ff.InvalidKey, `API KEY \"${this._options.key}\" is invalid`);\n                break;\n            case $d915e63f26169767$export$adb4a1754da6f10d.Leave:\n                $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(`Received leave message from ${peerId}`);\n                this._cleanupPeer(peerId);\n                this._connections.delete(peerId);\n                break;\n            case $d915e63f26169767$export$adb4a1754da6f10d.Expire:\n                this.emitError($d915e63f26169767$export$9547aaa2e39030ff.PeerUnavailable, `Could not connect to peer ${peerId}`);\n                break;\n            case $d915e63f26169767$export$adb4a1754da6f10d.Offer:\n                {\n                    // we should consider switching this to CALL/CONNECT, but this is the least breaking option.\n                    const connectionId = payload.connectionId;\n                    let connection = this.getConnection(peerId, connectionId);\n                    if (connection) {\n                        connection.close();\n                        $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.warn(`Offer received for existing Connection ID:${connectionId}`);\n                    }\n                    // Create a new connection.\n                    if (payload.type === $d915e63f26169767$export$3157d57b4135e3bc.Media) {\n                        const mediaConnection = new $d915e63f26169767$var$$5c1d08c7c57da9a3$export$4a84e95a2324ac29(peerId, this, {\n                            connectionId: connectionId,\n                            _payload: payload,\n                            metadata: payload.metadata\n                        });\n                        connection = mediaConnection;\n                        this._addConnection(peerId, connection);\n                        this.emit(\"call\", mediaConnection);\n                    } else if (payload.type === $d915e63f26169767$export$3157d57b4135e3bc.Data) {\n                        const dataConnection = new this._serializers[payload.serialization](peerId, this, {\n                            connectionId: connectionId,\n                            _payload: payload,\n                            metadata: payload.metadata,\n                            label: payload.label,\n                            serialization: payload.serialization,\n                            reliable: payload.reliable\n                        });\n                        connection = dataConnection;\n                        this._addConnection(peerId, connection);\n                        this.emit(\"connection\", dataConnection);\n                    } else {\n                        $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.warn(`Received malformed connection type:${payload.type}`);\n                        return;\n                    }\n                    // Find messages.\n                    const messages = this._getMessages(connectionId);\n                    for (const message of messages)connection.handleMessage(message);\n                    break;\n                }\n            default:\n                {\n                    if (!payload) {\n                        $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.warn(`You received a malformed message from ${peerId} of type ${type}`);\n                        return;\n                    }\n                    const connectionId = payload.connectionId;\n                    const connection = this.getConnection(peerId, connectionId);\n                    if (connection && connection.peerConnection) connection.handleMessage(message);\n                    else if (connectionId) this._storeMessage(connectionId, message);\n                    else $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.warn(\"You received an unrecognized message:\", message);\n                    break;\n                }\n        }\n    }\n    /** Stores messages without a set up connection, to be claimed later. */ _storeMessage(connectionId, message) {\n        if (!this._lostMessages.has(connectionId)) this._lostMessages.set(connectionId, []);\n        this._lostMessages.get(connectionId).push(message);\n    }\n    /**\n\t * Retrieve messages from lost message store\n\t * @internal\n\t */ //TODO Change it to private\n    _getMessages(connectionId) {\n        const messages = this._lostMessages.get(connectionId);\n        if (messages) {\n            this._lostMessages.delete(connectionId);\n            return messages;\n        }\n        return [];\n    }\n    /**\n\t * Connects to the remote peer specified by id and returns a data connection.\n\t * @param peer The brokering ID of the remote peer (their {@apilink Peer.id}).\n\t * @param options for specifying details about Peer Connection\n\t */ connect(peer, options = {}) {\n        options = {\n            serialization: \"default\",\n            ...options\n        };\n        if (this.disconnected) {\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.warn(\"You cannot connect to a new Peer because you called .disconnect() on this Peer and ended your connection with the server. You can create a new Peer to reconnect, or call reconnect on this peer if you believe its ID to still be available.\");\n            this.emitError($d915e63f26169767$export$9547aaa2e39030ff.Disconnected, \"Cannot connect to new Peer after disconnecting from server.\");\n            return;\n        }\n        const dataConnection = new this._serializers[options.serialization](peer, this, options);\n        this._addConnection(peer, dataConnection);\n        return dataConnection;\n    }\n    /**\n\t * Calls the remote peer specified by id and returns a media connection.\n\t * @param peer The brokering ID of the remote peer (their peer.id).\n\t * @param stream The caller's media stream\n\t * @param options Metadata associated with the connection, passed in by whoever initiated the connection.\n\t */ call(peer, stream, options = {}) {\n        if (this.disconnected) {\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.warn(\"You cannot connect to a new Peer because you called .disconnect() on this Peer and ended your connection with the server. You can create a new Peer to reconnect.\");\n            this.emitError($d915e63f26169767$export$9547aaa2e39030ff.Disconnected, \"Cannot connect to new Peer after disconnecting from server.\");\n            return;\n        }\n        if (!stream) {\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.error(\"To call a peer, you must provide a stream from your browser's `getUserMedia`.\");\n            return;\n        }\n        const mediaConnection = new $d915e63f26169767$var$$5c1d08c7c57da9a3$export$4a84e95a2324ac29(peer, this, {\n            ...options,\n            _stream: stream\n        });\n        this._addConnection(peer, mediaConnection);\n        return mediaConnection;\n    }\n    /** Add a data/media connection to this peer. */ _addConnection(peerId, connection) {\n        $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(`add connection ${connection.type}:${connection.connectionId} to peerId:${peerId}`);\n        if (!this._connections.has(peerId)) this._connections.set(peerId, []);\n        this._connections.get(peerId).push(connection);\n    }\n    //TODO should be private\n    _removeConnection(connection) {\n        const connections = this._connections.get(connection.peer);\n        if (connections) {\n            const index = connections.indexOf(connection);\n            if (index !== -1) connections.splice(index, 1);\n        }\n        //remove from lost messages\n        this._lostMessages.delete(connection.connectionId);\n    }\n    /** Retrieve a data/media connection for this peer. */ getConnection(peerId, connectionId) {\n        const connections = this._connections.get(peerId);\n        if (!connections) return null;\n        for (const connection of connections){\n            if (connection.connectionId === connectionId) return connection;\n        }\n        return null;\n    }\n    _delayedAbort(type, message) {\n        setTimeout(()=>{\n            this._abort(type, message);\n        }, 0);\n    }\n    /**\n\t * Emits an error message and destroys the Peer.\n\t * The Peer is not destroyed if it's in a disconnected state, in which case\n\t * it retains its disconnected state and its existing connections.\n\t */ _abort(type, message) {\n        $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.error(\"Aborting!\");\n        this.emitError(type, message);\n        if (!this._lastServerId) this.destroy();\n        else this.disconnect();\n    }\n    /**\n\t * Destroys the Peer: closes all active connections as well as the connection\n\t * to the server.\n\t *\n\t * :::caution\n\t * This cannot be undone; the respective peer object will no longer be able\n\t * to create or receive any connections, its ID will be forfeited on the server,\n\t * and all of its data and media connections will be closed.\n\t * :::\n\t */ destroy() {\n        if (this.destroyed) return;\n        $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(`Destroy peer with ID:${this.id}`);\n        this.disconnect();\n        this._cleanup();\n        this._destroyed = true;\n        this.emit(\"close\");\n    }\n    /** Disconnects every connection on this peer. */ _cleanup() {\n        for (const peerId of this._connections.keys()){\n            this._cleanupPeer(peerId);\n            this._connections.delete(peerId);\n        }\n        this.socket.removeAllListeners();\n    }\n    /** Closes all connections to this peer. */ _cleanupPeer(peerId) {\n        const connections = this._connections.get(peerId);\n        if (!connections) return;\n        for (const connection of connections)connection.close();\n    }\n    /**\n\t * Disconnects the Peer's connection to the PeerServer. Does not close any\n\t *  active connections.\n\t * Warning: The peer can no longer create or accept connections after being\n\t *  disconnected. It also cannot reconnect to the server.\n\t */ disconnect() {\n        if (this.disconnected) return;\n        const currentId = this.id;\n        $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(`Disconnect peer with ID:${currentId}`);\n        this._disconnected = true;\n        this._open = false;\n        this.socket.close();\n        this._lastServerId = currentId;\n        this._id = null;\n        this.emit(\"disconnected\", currentId);\n    }\n    /** Attempts to reconnect with the same ID.\n\t *\n\t * Only {@apilink Peer.disconnect | disconnected peers} can be reconnected.\n\t * Destroyed peers cannot be reconnected.\n\t * If the connection fails (as an example, if the peer's old ID is now taken),\n\t * the peer's existing connections will not close, but any associated errors events will fire.\n\t */ reconnect() {\n        if (this.disconnected && !this.destroyed) {\n            $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.log(`Attempting reconnection to server with ID ${this._lastServerId}`);\n            this._disconnected = false;\n            this._initialize(this._lastServerId);\n        } else if (this.destroyed) throw new Error(\"This peer cannot reconnect to the server. It has already been destroyed.\");\n        else if (!this.disconnected && !this.open) $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.error(\"In a hurry? We're still trying to make the initial connection!\");\n        else throw new Error(`Peer ${this.id} cannot reconnect because it is not disconnected from the server!`);\n    }\n    /**\n\t * Get a list of available peer IDs. If you're running your own server, you'll\n\t * want to set allow_discovery: true in the PeerServer options. If you're using\n\t * the cloud server, email team@peerjs.com to get the functionality enabled for\n\t * your key.\n\t */ listAllPeers(cb = (_)=>{}) {\n        this._api.listAllPeers().then((peers)=>cb(peers)).catch((error)=>this._abort($d915e63f26169767$export$9547aaa2e39030ff.ServerError, error));\n    }\n}\nclass $d915e63f26169767$export$72aa44612e2200cd extends $d915e63f26169767$var$$6366c4ca161bc297$export$d365f7ad9d7df9c9 {\n    constructor(peerId, provider, options){\n        super(peerId, provider, {\n            ...options,\n            reliable: true\n        });\n        this._CHUNK_SIZE = 32768;\n        this._splitStream = new TransformStream({\n            transform: (chunk, controller)=>{\n                for(let split = 0; split < chunk.length; split += this._CHUNK_SIZE)controller.enqueue(chunk.subarray(split, split + this._CHUNK_SIZE));\n            }\n        });\n        this._rawSendStream = new WritableStream({\n            write: async (chunk, controller)=>{\n                const openEvent = new Promise((resolve)=>this.dataChannel.addEventListener(\"bufferedamountlow\", resolve, {\n                        once: true\n                    }));\n                // if we can send the chunk now, send it\n                // if not, we wait until at least half of the sending buffer is free again\n                await (this.dataChannel.bufferedAmount <= $d915e63f26169767$var$$6366c4ca161bc297$export$d365f7ad9d7df9c9.MAX_BUFFERED_AMOUNT - chunk.byteLength || openEvent);\n                // TODO: what can go wrong here?\n                try {\n                    this.dataChannel.send(chunk);\n                } catch (e) {\n                    $d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039.error(`DC#:${this.connectionId} Error when sending:`, e);\n                    controller.error(e);\n                    this.close();\n                }\n            }\n        });\n        this.writer = this._splitStream.writable.getWriter();\n        this._rawReadStream = new ReadableStream({\n            start: (controller)=>{\n                this.once(\"open\", ()=>{\n                    this.dataChannel.addEventListener(\"message\", (e)=>{\n                        controller.enqueue(e.data);\n                    });\n                });\n            }\n        });\n        this._splitStream.readable.pipeTo(this._rawSendStream);\n    }\n    _initializeDataChannel(dc) {\n        super._initializeDataChannel(dc);\n        this.dataChannel.binaryType = \"arraybuffer\";\n        this.dataChannel.bufferedAmountLowThreshold = $d915e63f26169767$var$$6366c4ca161bc297$export$d365f7ad9d7df9c9.MAX_BUFFERED_AMOUNT / 2;\n    }\n}\nconst $d915e63f26169767$var$$dcf98445f54823f4$var$NullValue = Symbol.for(null);\nfunction $d915e63f26169767$var$$dcf98445f54823f4$var$concatUint8Array(buffer1, buffer2) {\n    const tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n    tmp.set(buffer1, 0);\n    tmp.set(buffer2, buffer1.byteLength);\n    return new Uint8Array(tmp.buffer);\n}\nconst $d915e63f26169767$var$$dcf98445f54823f4$var$iterateOver = async function*(stream) {\n    const reader = stream.getReader();\n    try {\n        while(true){\n            const { done: done, value: value } = await reader.read();\n            if (done) return;\n            yield value;\n        }\n    } finally{\n        reader.releaseLock();\n    }\n};\nclass $d915e63f26169767$export$7e9583c3c8a0a2cc extends $d915e63f26169767$export$72aa44612e2200cd {\n    constructor(peerId, provider, options){\n        super(peerId, provider, {\n            ...options,\n            reliable: true\n        });\n        this.serialization = \"Cbor\";\n        this._encoder = new (0, $07e009346b695b03$export$a50aceb0e02a00aa)();\n        this._decoder = new (0, $fdd18942f3b79c14$export$f9de6ca0bc043724)();\n        this._decoderStream = new TransformStream({\n            transform: (abchunk, controller)=>{\n                let chunk = new Uint8Array(abchunk);\n                if (this._inc) {\n                    chunk = $d915e63f26169767$var$$dcf98445f54823f4$var$concatUint8Array(this._inc, chunk);\n                    this._inc = null;\n                }\n                let values;\n                try {\n                    values = this._decoder.decodeMultiple(chunk);\n                } catch (error) {\n                    if (error.incomplete) {\n                        this._inc = chunk.subarray(error.lastPosition);\n                        values = error.values;\n                    } else throw error;\n                } finally{\n                    for (let value of values || []){\n                        if (value === null) value = $d915e63f26169767$var$$dcf98445f54823f4$var$NullValue;\n                        controller.enqueue(value);\n                    }\n                }\n            }\n        });\n        this._rawReadStream.pipeTo(this._decoderStream.writable);\n        (async ()=>{\n            for await (const msg of $d915e63f26169767$var$$dcf98445f54823f4$var$iterateOver(this._decoderStream.readable)){\n                if (msg.__peerData?.type === \"close\") {\n                    this.close();\n                    return;\n                }\n                this.emit(\"data\", msg);\n            }\n        })();\n    }\n    _send(data) {\n        return this.writer.write(this._encoder.encode(data));\n    }\n}\nclass $d915e63f26169767$export$f6a74c7ffa2903e6 extends $d915e63f26169767$export$ecd1fc136c422448 {\n    constructor(...args){\n        super(...args);\n        this._serializers = {\n            Cbor: $d915e63f26169767$export$7e9583c3c8a0a2cc,\n            default: $d915e63f26169767$export$7e9583c3c8a0a2cc\n        };\n    }\n}\nclass $d915e63f26169767$export$80f5de1a66c4d624 extends $d915e63f26169767$export$72aa44612e2200cd {\n    constructor(peerId, provider, options){\n        super(peerId, provider, options);\n        this.serialization = \"MsgPack\";\n        this._encoder = new (0, $257b120d521d3d7b$export$a50aceb0e02a00aa)();\n        (async ()=>{\n            for await (const msg of (0, $69a4d8202124ed9b$export$bf87d8a088c760fb)(this._rawReadStream)){\n                // @ts-ignore\n                if (msg.__peerData?.type === \"close\") {\n                    this.close();\n                    return;\n                }\n                this.emit(\"data\", msg);\n            }\n        })();\n    }\n    _send(data) {\n        return this.writer.write(this._encoder.encode(data));\n    }\n}\nclass $d915e63f26169767$export$d72c7bf8eef50853 extends $d915e63f26169767$export$ecd1fc136c422448 {\n    constructor(...args){\n        super(...args);\n        this._serializers = {\n            MsgPack: $d915e63f26169767$export$80f5de1a66c4d624,\n            default: $d915e63f26169767$export$80f5de1a66c4d624\n        };\n    }\n}\nvar $d915e63f26169767$export$2e2bcd8739ae039 = $d915e63f26169767$export$ecd1fc136c422448;\n\n\n/**\r\n * Base class for ngrok-related errors\r\n */ class $a3ac8476dc53fbf2$export$1f153bdfce7cff1b extends Error {\n    /**\r\n   * @param {string} message - Error message\r\n   * @param {Object} details - Additional error details\r\n   */ constructor(message, details = {}){\n        super(message);\n        this.name = 'NgrokError';\n        this.details = details;\n        this.timestamp = new Date().toISOString();\n        this.troubleshooting = [\n            'Verify the ngrok tunnel is running',\n            'Check if the ngrok URL is correct',\n            'Ensure the Kinectron application is running'\n        ];\n    }\n}\nclass $a3ac8476dc53fbf2$export$4166255d9634c9ec extends $a3ac8476dc53fbf2$export$1f153bdfce7cff1b {\n    constructor(message, details = {}){\n        super(message, {\n            ...details,\n            type: 'connection_error'\n        });\n        this.name = 'NgrokConnectionError';\n        this.troubleshooting = [\n            'Check if the ngrok tunnel is still active',\n            'Verify your internet connection',\n            'Try restarting the ngrok tunnel',\n            'Ensure no firewall is blocking the connection'\n        ];\n    }\n}\nclass $a3ac8476dc53fbf2$export$f8c51391769a899a extends $a3ac8476dc53fbf2$export$1f153bdfce7cff1b {\n    constructor(message, details = {}){\n        super(message, {\n            ...details,\n            type: 'timeout_error'\n        });\n        this.name = 'NgrokTimeoutError';\n        this.troubleshooting = [\n            'The connection attempt timed out',\n            'Check your internet connection speed',\n            'Verify the Kinectron server is running',\n            'Try increasing the connection timeout'\n        ];\n    }\n}\nclass $a3ac8476dc53fbf2$export$824c682561d91b13 extends $a3ac8476dc53fbf2$export$1f153bdfce7cff1b {\n    constructor(message, details = {}){\n        super(message, {\n            ...details,\n            type: 'validation_error'\n        });\n        this.name = 'NgrokValidationError';\n        this.troubleshooting = [\n            'Ensure the URL includes \"ngrok-free.app\"',\n            'Copy the URL directly from the Kinectron application',\n            'Make sure to include the full domain name'\n        ];\n    }\n}\nconst $a3ac8476dc53fbf2$export$724281d238664ba = {\n    INVALID_URL: {\n        code: 'NGROK_001',\n        message: 'Invalid ngrok URL format'\n    },\n    CONNECTION_FAILED: {\n        code: 'NGROK_002',\n        message: 'Failed to establish ngrok connection'\n    },\n    CONNECTION_TIMEOUT: {\n        code: 'NGROK_003',\n        message: 'Connection attempt timed out'\n    },\n    TUNNEL_CLOSED: {\n        code: 'NGROK_004',\n        message: 'Ngrok tunnel was closed'\n    },\n    SERVER_UNREACHABLE: {\n        code: 'NGROK_005',\n        message: 'Unable to reach Kinectron server'\n    }\n};\n\n\n/**\r\n * Validates a ngrok URL format\r\n * @param {string} url - The URL to validate\r\n * @throws {NgrokValidationError} If URL is invalid\r\n */ function $ffaed9af6de5df5e$var$validateNgrokUrl(url) {\n    if (!url.includes('ngrok-free.app')) throw new (0, $a3ac8476dc53fbf2$export$824c682561d91b13)((0, $a3ac8476dc53fbf2$export$724281d238664ba).INVALID_URL.message, {\n        code: (0, $a3ac8476dc53fbf2$export$724281d238664ba).INVALID_URL.code,\n        url: url,\n        reason: 'URL must include ngrok-free.app domain'\n    });\n}\nconst $ffaed9af6de5df5e$export$d9abfac191d6fb15 = {\n    host: '127.0.0.1',\n    port: 9001,\n    path: '/',\n    secure: false,\n    debug: 3,\n    role: 'default',\n    // For local connections, we don't need STUN/TURN servers\n    // This matches the original kinectron implementation\n    config: {\n        iceServers: [],\n        sdpSemantics: 'unified-plan'\n    }\n};\nconst $ffaed9af6de5df5e$export$ed3bb69bb836b297 = 'kinectron';\nfunction $ffaed9af6de5df5e$export$fb6f4b3558343497(config) {\n    if (!config) return $ffaed9af6de5df5e$export$d9abfac191d6fb15;\n    // Handle ngrok addresses\n    if (typeof config === 'string' && config.includes('ngrok')) try {\n        $ffaed9af6de5df5e$var$validateNgrokUrl(config);\n        return {\n            host: config,\n            port: '443',\n            path: '/',\n            secure: true,\n            debug: 3,\n            config: {\n                iceServers: [],\n                sdpSemantics: 'unified-plan'\n            }\n        };\n    } catch (error) {\n        // Add connection context to validation errors\n        if (error instanceof (0, $a3ac8476dc53fbf2$export$824c682561d91b13)) {\n            error.details.context = 'peer_config_validation';\n            error.details.timestamp = new Date().toISOString();\n        }\n        throw error;\n    }\n    // Handle IP addresses or custom configs\n    if (typeof config === 'string') return {\n        ...$ffaed9af6de5df5e$export$d9abfac191d6fb15,\n        host: config\n    };\n    // Handle full custom config objects\n    return {\n        ...$ffaed9af6de5df5e$export$d9abfac191d6fb15,\n        ...config\n    };\n}\n\n\n/**\r\n * Represents a client-side ngrok connection state error\r\n */ class $529a838b10c0f70a$export$37c12b0d5395ed1f extends Error {\n    constructor(message, details = {}){\n        super(message);\n        this.name = 'NgrokClientError';\n        this.details = details;\n        this.timestamp = new Date().toISOString();\n        this.troubleshooting = [\n            'Check if the ngrok tunnel is running',\n            'Verify the URL is correct',\n            'Ensure the Kinectron application is running'\n        ];\n    }\n}\nclass $529a838b10c0f70a$export$575c13c422fb6041 {\n    /**\r\n   * Available connection states\r\n   */ static STATES = {\n        DISCONNECTED: 'disconnected',\n        VALIDATING: 'validating',\n        CONNECTING: 'connecting',\n        CONNECTED: 'connected',\n        RECONNECTING: 'reconnecting',\n        ERROR: 'error'\n    };\n    /**\r\n   * Valid state transitions\r\n   */ static VALID_TRANSITIONS = {\n        [$529a838b10c0f70a$export$575c13c422fb6041.STATES.DISCONNECTED]: [\n            $529a838b10c0f70a$export$575c13c422fb6041.STATES.VALIDATING,\n            $529a838b10c0f70a$export$575c13c422fb6041.STATES.CONNECTING\n        ],\n        [$529a838b10c0f70a$export$575c13c422fb6041.STATES.VALIDATING]: [\n            $529a838b10c0f70a$export$575c13c422fb6041.STATES.CONNECTING,\n            $529a838b10c0f70a$export$575c13c422fb6041.STATES.ERROR\n        ],\n        [$529a838b10c0f70a$export$575c13c422fb6041.STATES.CONNECTING]: [\n            $529a838b10c0f70a$export$575c13c422fb6041.STATES.CONNECTED,\n            $529a838b10c0f70a$export$575c13c422fb6041.STATES.RECONNECTING,\n            $529a838b10c0f70a$export$575c13c422fb6041.STATES.ERROR,\n            $529a838b10c0f70a$export$575c13c422fb6041.STATES.CONNECTING\n        ],\n        [$529a838b10c0f70a$export$575c13c422fb6041.STATES.CONNECTED]: [\n            $529a838b10c0f70a$export$575c13c422fb6041.STATES.DISCONNECTED,\n            $529a838b10c0f70a$export$575c13c422fb6041.STATES.RECONNECTING,\n            $529a838b10c0f70a$export$575c13c422fb6041.STATES.ERROR,\n            $529a838b10c0f70a$export$575c13c422fb6041.STATES.CONNECTED\n        ],\n        [$529a838b10c0f70a$export$575c13c422fb6041.STATES.RECONNECTING]: [\n            $529a838b10c0f70a$export$575c13c422fb6041.STATES.CONNECTED,\n            $529a838b10c0f70a$export$575c13c422fb6041.STATES.CONNECTING,\n            $529a838b10c0f70a$export$575c13c422fb6041.STATES.ERROR\n        ],\n        [$529a838b10c0f70a$export$575c13c422fb6041.STATES.ERROR]: [\n            $529a838b10c0f70a$export$575c13c422fb6041.STATES.DISCONNECTED,\n            $529a838b10c0f70a$export$575c13c422fb6041.STATES.CONNECTING\n        ]\n    };\n    constructor(){\n        this.currentState = null; // Start with no state\n        this.metadata = {\n            url: null,\n            startTime: null,\n            lastStateChange: new Date(),\n            errorHistory: [],\n            metrics: {\n                latency: {\n                    current: 0,\n                    average: 0,\n                    samples: []\n                },\n                connectionQuality: 'unknown',\n                reconnects: {\n                    count: 0,\n                    lastAttempt: null\n                },\n                errors: {\n                    total: 0,\n                    byType: {}\n                }\n            }\n        };\n        // Event handlers\n        this.handlers = {\n            stateChange: new Set(),\n            error: new Set(),\n            metrics: new Set()\n        };\n    }\n    /**\r\n   * Add event listener\r\n   * @param {string} event - Event type\r\n   * @param {Function} handler - Event handler\r\n   */ on(event, handler) {\n        if (this.handlers[event]) this.handlers[event].add(handler);\n    }\n    /**\r\n   * Remove event listener\r\n   * @param {string} event - Event type\r\n   * @param {Function} handler - Event handler\r\n   */ off(event, handler) {\n        if (this.handlers[event]) this.handlers[event].delete(handler);\n    }\n    /**\r\n   * Emit event to handlers\r\n   * @private\r\n   * @param {string} event - Event type\r\n   * @param {*} data - Event data\r\n   */ _emit(event, data) {\n        if (this.handlers[event]) this.handlers[event].forEach((handler)=>handler(data));\n    }\n    /**\r\n   * Get current state\r\n   * @returns {string} Current state\r\n   */ getState() {\n        return this.currentState;\n    }\n    /**\r\n   * Get state metadata\r\n   * @returns {Object} State metadata\r\n   */ getMetadata() {\n        return {\n            ...this.metadata,\n            currentState: this.currentState,\n            uptime: this._calculateUptime()\n        };\n    }\n    /**\r\n   * Update connection metrics\r\n   * @param {Object} metrics - New metrics\r\n   */ updateMetrics(metrics) {\n        // Update latency\n        if (metrics.latency !== undefined) {\n            this.metadata.metrics.latency.current = metrics.latency;\n            this.metadata.metrics.latency.samples.push({\n                value: metrics.latency,\n                timestamp: new Date()\n            });\n            // Keep last 10 samples\n            if (this.metadata.metrics.latency.samples.length > 10) this.metadata.metrics.latency.samples.shift();\n            // Calculate average\n            this.metadata.metrics.latency.average = this.metadata.metrics.latency.samples.reduce((sum, sample)=>sum + sample.value, 0) / this.metadata.metrics.latency.samples.length;\n        }\n        // Update connection quality based on metrics\n        this._updateConnectionQuality();\n        // Emit metrics update\n        this._emit('metrics', this.metadata.metrics);\n    }\n    /**\r\n   * Set connection state\r\n   * @param {string} newState - New state\r\n   * @param {Object} details - Transition details\r\n   * @throws {NgrokClientError} If transition is invalid\r\n   */ setState(newState, details = {}) {\n        if (!this._isValidTransition(newState)) throw new $529a838b10c0f70a$export$37c12b0d5395ed1f(`Invalid state transition from ${this.currentState} to ${newState}`, {\n            from: this.currentState,\n            to: newState,\n            details: details\n        });\n        const oldState = this.currentState;\n        this.currentState = newState;\n        this.metadata.lastStateChange = new Date();\n        // Update metadata based on state\n        if (newState === $529a838b10c0f70a$export$575c13c422fb6041.STATES.CONNECTED) {\n            if (!this.metadata.startTime) this.metadata.startTime = new Date();\n        } else if (newState === $529a838b10c0f70a$export$575c13c422fb6041.STATES.RECONNECTING) {\n            this.metadata.metrics.reconnects.count++;\n            this.metadata.metrics.reconnects.lastAttempt = new Date();\n        }\n        // Emit state change event\n        this._emit('stateChange', {\n            from: oldState,\n            to: newState,\n            timestamp: this.metadata.lastStateChange,\n            details: details\n        });\n    }\n    /**\r\n   * Record an error\r\n   * @param {Error} error - Error to record\r\n   * @param {Object} context - Error context\r\n   */ recordError(error, context = {}) {\n        const errorRecord = {\n            name: error.name,\n            message: error.message,\n            timestamp: new Date(),\n            context: context,\n            state: this.currentState\n        };\n        // Add to error history (keep last 10)\n        this.metadata.errorHistory.unshift(errorRecord);\n        if (this.metadata.errorHistory.length > 10) this.metadata.errorHistory.pop();\n        // Update error metrics\n        this.metadata.metrics.errors.total++;\n        this.metadata.metrics.errors.byType[error.name] = (this.metadata.metrics.errors.byType[error.name] || 0) + 1;\n        // Emit error event\n        this._emit('error', errorRecord);\n    }\n    /**\r\n   * Reset state to initial values\r\n   */ reset() {\n        this.currentState = null;\n        this.metadata = {\n            url: null,\n            startTime: null,\n            lastStateChange: new Date(),\n            errorHistory: [],\n            metrics: {\n                latency: {\n                    current: 0,\n                    average: 0,\n                    samples: []\n                },\n                connectionQuality: 'unknown',\n                reconnects: {\n                    count: 0,\n                    lastAttempt: null\n                },\n                errors: {\n                    total: 0,\n                    byType: {}\n                }\n            }\n        };\n    }\n    /**\r\n   * Calculate connection uptime\r\n   * @private\r\n   * @returns {number} Uptime in milliseconds\r\n   */ _calculateUptime() {\n        if (!this.metadata.startTime || this.currentState !== $529a838b10c0f70a$export$575c13c422fb6041.STATES.CONNECTED) return 0;\n        return Date.now() - this.metadata.startTime.getTime();\n    }\n    /**\r\n   * Update connection quality based on metrics\r\n   * @private\r\n   */ _updateConnectionQuality() {\n        const avgLatency = this.metadata.metrics.latency.average;\n        const recentErrors = this.metadata.errorHistory.filter((e)=>Date.now() - new Date(e.timestamp).getTime() < 60000).length;\n        if (recentErrors > 2) this.metadata.metrics.connectionQuality = 'poor';\n        else if (avgLatency > 1000) // 1 second\n        this.metadata.metrics.connectionQuality = 'unstable';\n        else if (avgLatency > 500) // 500ms\n        this.metadata.metrics.connectionQuality = 'fair';\n        else this.metadata.metrics.connectionQuality = 'good';\n    }\n    /**\r\n   * Check if state transition is valid\r\n   * @private\r\n   * @param {string} newState - State to transition to\r\n   * @returns {boolean} Whether transition is valid\r\n   */ _isValidTransition(newState) {\n        // Allow any initial state transition\n        if (this.currentState === null) return true;\n        const validNextStates = $529a838b10c0f70a$export$575c13c422fb6041.VALID_TRANSITIONS[this.currentState];\n        return validNextStates && validNextStates.includes(newState);\n    }\n}\n\n\n/**\r\n * Debug configuration for Kinectron client\r\n * Controls logging output for different components\r\n */ const $3011e2f121e80011$export$3f32c2013f0dcc1e = {\n    // Master switches for components\n    FRAMES: false,\n    HANDLERS: false,\n    PEER: false,\n    // Specific logging categories\n    PERFORMANCE: false,\n    DATA: false,\n    NETWORK: false,\n    // Helper method to enable all logs\n    enableAll: function() {\n        Object.keys(this).forEach((key)=>{\n            if (typeof this[key] === 'boolean') this[key] = true;\n        });\n    },\n    // Helper method to disable all logs\n    disableAll: function() {\n        Object.keys(this).forEach((key)=>{\n            if (typeof this[key] === 'boolean') this[key] = false;\n        });\n    }\n};\nconst $3011e2f121e80011$export$bef1f36f5486a6a3 = {\n    // Always log errors regardless of debug flags\n    error: function(message, ...args) {\n        console.error(message, ...args);\n    },\n    // Always log warnings regardless of debug flags\n    warn: function(message, ...args) {\n        console.warn(message, ...args);\n    },\n    // Always log info messages regardless of debug flags\n    info: function(message, ...args) {\n        console.log(message, ...args);\n    },\n    // Only log if the specified debug flag is enabled\n    debug: function(flag, message, ...args) {\n        if ($3011e2f121e80011$export$3f32c2013f0dcc1e[flag]) console.debug(`[${flag}] ${message}`, ...args);\n    },\n    // Only log frame-related messages if FRAMES flag is enabled\n    frame: function(message, ...args) {\n        if ($3011e2f121e80011$export$3f32c2013f0dcc1e.FRAMES) console.debug(`[FRAMES] ${message}`, ...args);\n    },\n    // Only log handler-related messages if HANDLERS flag is enabled\n    handler: function(message, ...args) {\n        if ($3011e2f121e80011$export$3f32c2013f0dcc1e.HANDLERS) console.debug(`[HANDLERS] ${message}`, ...args);\n    },\n    // Only log peer-related messages if PEER flag is enabled\n    peer: function(message, ...args) {\n        if ($3011e2f121e80011$export$3f32c2013f0dcc1e.PEER) console.debug(`[PEER] ${message}`, ...args);\n    },\n    // Only log performance-related messages if PERFORMANCE flag is enabled\n    performance: function(message, ...args) {\n        if ($3011e2f121e80011$export$3f32c2013f0dcc1e.PERFORMANCE) console.debug(`[PERFORMANCE] ${message}`, ...args);\n    },\n    // Only log data-related messages if DATA flag is enabled\n    data: function(message, ...args) {\n        if ($3011e2f121e80011$export$3f32c2013f0dcc1e.DATA) console.debug(`[DATA] ${message}`, ...args);\n    },\n    // Only log network-related messages if NETWORK flag is enabled\n    network: function(message, ...args) {\n        if ($3011e2f121e80011$export$3f32c2013f0dcc1e.NETWORK) console.debug(`[NETWORK] ${message}`, ...args);\n    }\n};\n\n\nclass $354d08947efbc941$export$d84cf184fade0488 {\n    /**\r\n   * @param {string|PeerNetworkConfig} [networkConfig] - Network configuration or host address\r\n   * @param {string} [peerId] - ID of the peer to connect to\r\n   */ constructor(networkConfig, peerId){\n        /** @private */ this.peer = null;\n        /** @private */ this.connection = null;\n        /** @private */ this.targetPeerId = peerId || (0, $ffaed9af6de5df5e$export$ed3bb69bb836b297);\n        /** @private */ this.config = (0, $ffaed9af6de5df5e$export$fb6f4b3558343497)(networkConfig);\n        /** @private */ this.messageHandlers = new Map();\n        /** @private */ this.messageQueue = [];\n        /** @private */ this.maxQueueSize = 100;\n        /** @private */ this.lastPingTime = 0;\n        /** @private */ this.pingInterval = null;\n        /** @private */ this.healthCheckInterval = null;\n        /** @private */ this.clientId = this.generateClientId();\n        /** @private */ this.state = new (0, $529a838b10c0f70a$export$575c13c422fb6041)();\n        // Forward state events to message handlers\n        this.state.on('stateChange', (data)=>{\n            const handler = this.messageHandlers.get('stateChange');\n            if (handler) handler(data);\n        });\n        this.state.on('error', (data)=>{\n            const handler = this.messageHandlers.get('error');\n            if (handler) handler(data);\n        });\n        this.state.on('metrics', (data)=>{\n            const handler = this.messageHandlers.get('metrics');\n            if (handler) handler(data);\n        });\n        this.initialize();\n    }\n    /**\r\n   * Generate a consistent client ID\r\n   * @private\r\n   * @returns {string} Client ID\r\n   */ generateClientId() {\n        // Generate unique ID for each instance\n        const timestamp = Date.now().toString(36);\n        const random = Math.random().toString(36).substr(2, 5);\n        const prefix = this.config.host?.includes('ngrok') ? 'ngrok' : 'local';\n        const role = this.config.role || 'default';\n        return `${prefix}-${role}-${timestamp}-${random}`;\n    }\n    /**\r\n   * Get current connection state\r\n   * @returns {Object} Current state information\r\n   */ getState() {\n        return this.state.getMetadata();\n    }\n    /**\r\n   * Initialize the peer connection with enhanced reliability\r\n   * @private\r\n   */ initialize() {\n        try {\n            if (this.peer) {\n                console.warn('Peer already initialized');\n                return;\n            }\n            if ((0, $3011e2f121e80011$export$3f32c2013f0dcc1e).PEER) console.log('Initializing peer with config:', this.config);\n            // Check if this is an ngrok connection\n            const isNgrok = typeof this.config.host === 'string' && this.config.host.includes('ngrok');\n            if (isNgrok) {\n                // Set state to validating for ngrok connections\n                this.state.setState((0, $529a838b10c0f70a$export$575c13c422fb6041).STATES.VALIDATING);\n                // Validate ngrok URL format\n                if (!this.config.host.includes('ngrok-free.app')) throw new (0, $529a838b10c0f70a$export$37c12b0d5395ed1f)('Invalid ngrok URL format', {\n                    url: this.config.host,\n                    reason: 'URL must include ngrok-free.app domain'\n                });\n            }\n            // Create peer instance with consistent ID\n            this.peer = new (0, $d915e63f26169767$export$2e2bcd8739ae039)(this.clientId, {\n                ...this.config,\n                // Basic reliability options\n                reliable: true,\n                retries: 2,\n                timeout: isNgrok ? 5000 : 3000,\n                debug: 0\n            });\n            // Move to connecting state (skip validation for local connections)\n            if (!isNgrok) this.state.setState((0, $529a838b10c0f70a$export$575c13c422fb6041).STATES.CONNECTING);\n            this.setupPeerEventHandlers();\n            this.startHealthCheck();\n        } catch (error) {\n            console.error('Peer initialization error:', error);\n            this.handleError(error);\n            this.state.setState((0, $529a838b10c0f70a$export$575c13c422fb6041).STATES.ERROR, {\n                error: error.message,\n                context: 'initialization'\n            });\n        }\n    }\n    /**\r\n   * Set up event handlers for the peer instance\r\n   * @private\r\n   */ setupPeerEventHandlers() {\n        this.peer.on('open', (id)=>{\n            if ((0, $3011e2f121e80011$export$3f32c2013f0dcc1e).PEER) console.log('My peer ID is:', id);\n            // Already in CONNECTING state, proceed with connection\n            this.connect();\n        });\n        this.peer.on('error', (error)=>{\n            console.error('Peer connection error:', error);\n            // Handle ID taken error by generating new ID\n            if (error.type === 'unavailable-id') {\n                if ((0, $3011e2f121e80011$export$3f32c2013f0dcc1e).PEER) console.log('Client ID taken, generating new ID');\n                this.clientId = this.generateClientId();\n                this._cleanup(false);\n                this.initialize();\n                return;\n            }\n            this.handleError(error);\n            // Set error state\n            this.state.setState((0, $529a838b10c0f70a$export$575c13c422fb6041).STATES.ERROR, {\n                error: error.message,\n                type: error.type\n            });\n            // Attempt reconnection if appropriate\n            if (this.shouldAttemptReconnection(error)) this._handleReconnection(error);\n        });\n        this.peer.on('disconnected', ()=>{\n            if ((0, $3011e2f121e80011$export$3f32c2013f0dcc1e).PEER) console.log('Peer disconnected from server');\n            this.state.setState((0, $529a838b10c0f70a$export$575c13c422fb6041).STATES.DISCONNECTED, {\n                reason: 'peer_disconnected'\n            });\n            this._handleReconnection({\n                type: 'disconnected'\n            });\n        });\n    }\n    /**\r\n   * Start health check interval\r\n   * @private\r\n   */ startHealthCheck() {\n        // Clear any existing intervals\n        if (this.healthCheckInterval) clearInterval(this.healthCheckInterval);\n        if (this.pingInterval) clearInterval(this.pingInterval);\n        // Start health check\n        this.healthCheckInterval = setInterval(()=>{\n            if (this.state.getState() === (0, $529a838b10c0f70a$export$575c13c422fb6041).STATES.CONNECTED && this.connection) this.checkConnectionHealth();\n        }, 10000);\n        // Start ping interval\n        this.pingInterval = setInterval(()=>{\n            if (this.state.getState() === (0, $529a838b10c0f70a$export$575c13c422fb6041).STATES.CONNECTED && this.connection?.open) this.sendPing();\n        }, 5000);\n    }\n    /**\r\n   * Check connection health\r\n   * @private\r\n   */ async checkConnectionHealth() {\n        if (!this.connection?.open) {\n            console.warn('Connection appears dead, attempting recovery');\n            await this.handleConnectionFailure();\n            return;\n        }\n        // Check last ping time\n        const timeSinceLastPing = Date.now() - this.lastPingTime;\n        if (timeSinceLastPing > 15000) {\n            // No ping response for 15 seconds\n            console.warn('No ping response, connection may be dead');\n            await this.handleConnectionFailure();\n        }\n        // Update connection metrics\n        this.state.updateMetrics({\n            latency: timeSinceLastPing,\n            timestamp: new Date()\n        });\n    }\n    /**\r\n   * Send ping to peer\r\n   * @private\r\n   */ sendPing() {\n        try {\n            this.connection.send({\n                event: 'ping',\n                data: {\n                    timestamp: Date.now()\n                }\n            });\n        } catch (error) {\n            console.error('Failed to send ping:', error);\n        }\n    }\n    /**\r\n   * Handle connection failure\r\n   * @private\r\n   */ async handleConnectionFailure() {\n        if (this.connection) {\n            try {\n                this.connection.close();\n            } catch (error) {\n                console.error('Error closing connection:', error);\n            }\n            this.connection = null;\n        }\n        this.state.setState((0, $529a838b10c0f70a$export$575c13c422fb6041).STATES.RECONNECTING, {\n            reason: 'connection_failure',\n            timestamp: new Date()\n        });\n        await this._handleReconnection({\n            type: 'connection_failure'\n        });\n    }\n    /**\r\n   * Handle errors with enhanced information\r\n   * @private\r\n   * @param {Error} error - The error that occurred\r\n   */ handleError(error) {\n        // Record error in state\n        this.state.recordError(error, {\n            type: error.type || 'server-error',\n            state: this.state.getState(),\n            timestamp: new Date().toISOString()\n        });\n        // Forward to message handler\n        const handler = this.messageHandlers.get('error');\n        if (handler) {\n            const errorInfo = {\n                status: 'error',\n                error: this._getErrorMessage(error),\n                details: {\n                    type: error.type || 'server-error',\n                    state: this.state.getState(),\n                    timestamp: new Date().toISOString()\n                }\n            };\n            handler(errorInfo);\n        }\n    }\n    /**\r\n   * Get user-friendly error message\r\n   * @private\r\n   * @param {Error} error - The error object\r\n   * @returns {string} User-friendly error message\r\n   */ _getErrorMessage(error) {\n        const errorMessages = {\n            network: 'Network error - Could not connect to peer server',\n            'invalid-id': 'Invalid ID - The peer ID is invalid or already taken',\n            'unavailable-id': 'ID Unavailable - The peer ID is already taken',\n            'browser-incompatible': 'Browser Incompatible - WebRTC is not supported',\n            'connection-failure': 'Connection failed - Unable to establish or maintain connection',\n            disconnected: 'Disconnected - Lost connection to peer server'\n        };\n        return errorMessages[error.type] || error.message || 'Peer connection error';\n    }\n    /**\r\n   * Determine if reconnection should be attempted\r\n   * @private\r\n   * @param {Error} error - The error that occurred\r\n   * @returns {boolean} Whether to attempt reconnection\r\n   */ shouldAttemptReconnection(error) {\n        // Don't reconnect for certain error types\n        const fatalErrors = [\n            'browser-incompatible',\n            'invalid-id',\n            'invalid-key'\n        ];\n        if (fatalErrors.includes(error.type)) return false;\n        return this.state.getMetadata().metrics.reconnects.count < 3;\n    }\n    /**\r\n   * Set connection timeout with enhanced retry logic\r\n   * @private\r\n   */ _setConnectionTimeout() {\n        const timeoutDuration = 15000; // 15 second timeout for ngrok connections\n        setTimeout(()=>{\n            if (this.state.getState() !== (0, $529a838b10c0f70a$export$575c13c422fb6041).STATES.CONNECTED) {\n                if ((0, $3011e2f121e80011$export$3f32c2013f0dcc1e).PEER) console.log('Connection attempt timed out');\n                if (this.shouldAttemptReconnection({\n                    type: 'timeout'\n                })) this._handleReconnection({\n                    type: 'timeout'\n                });\n                else this.handleError({\n                    type: 'timeout',\n                    message: 'Connection timeout - Max attempts reached'\n                });\n            }\n        }, timeoutDuration);\n    }\n    /**\r\n   * Handle reconnection logic with improved retry strategy\r\n   * @private\r\n   * @param {Error} error - The error that triggered reconnection\r\n   */ async _handleReconnection(error) {\n        // Update state to reconnecting\n        this.state.setState((0, $529a838b10c0f70a$export$575c13c422fb6041).STATES.RECONNECTING, {\n            error: error.message,\n            attempt: this.state.getMetadata().metrics.reconnects.count + 1\n        });\n        // Use exponential backoff with jitter\n        const baseDelay = Math.min(2000 * Math.pow(1.5, this.state.getMetadata().metrics.reconnects.count), 15000);\n        const jitter = baseDelay * 0.2 * (Math.random() * 2 - 1);\n        const delay = Math.max(2000, baseDelay + jitter);\n        if ((0, $3011e2f121e80011$export$3f32c2013f0dcc1e).PEER) console.log(`Attempting reconnection ${this.state.getMetadata().metrics.reconnects.count + 1} of 3 in ${Math.round(delay)}ms`);\n        // Wait for delay\n        await new Promise((resolve)=>setTimeout(resolve, delay));\n        if (this.state.getState() === (0, $529a838b10c0f70a$export$575c13c422fb6041).STATES.RECONNECTING) {\n            if ((0, $3011e2f121e80011$export$3f32c2013f0dcc1e).PEER) console.log('Attempting to reconnect...');\n            // Clean up existing resources\n            await this._cleanup(false);\n            // Only try to reconnect if we haven't exceeded max attempts\n            if (this.shouldAttemptReconnection(error)) {\n                // Move back to connecting state\n                this.state.setState((0, $529a838b10c0f70a$export$575c13c422fb6041).STATES.CONNECTING);\n                this.initialize();\n            } else {\n                if ((0, $3011e2f121e80011$export$3f32c2013f0dcc1e).PEER) console.log('Max reconnection attempts reached');\n                this.state.setState((0, $529a838b10c0f70a$export$575c13c422fb6041).STATES.ERROR, {\n                    error: 'Maximum reconnection attempts reached',\n                    type: 'max_retries'\n                });\n            }\n        }\n    }\n    /**\r\n   * Clean up resources\r\n   * @private\r\n   * @param {boolean} [isClosing=true] - Whether this is a final cleanup\r\n   */ async _cleanup(isClosing = true) {\n        // Clean up existing peer\n        if (this.peer) {\n            this.peer.destroy();\n            this.peer = null;\n        }\n        // Clean up existing connection\n        if (this.connection) {\n            this.connection.close();\n            this.connection = null;\n        }\n        // Clear intervals if doing final cleanup\n        if (isClosing) {\n            if (this.healthCheckInterval) {\n                clearInterval(this.healthCheckInterval);\n                this.healthCheckInterval = null;\n            }\n            if (this.pingInterval) {\n                clearInterval(this.pingInterval);\n                this.pingInterval = null;\n            }\n        }\n    }\n    /**\r\n   * Connect to target peer with enhanced reliability\r\n   */ connect() {\n        try {\n            // Check if we already have a connection\n            if (this.peer.connections[this.targetPeerId]?.length > 0) {\n                const existingConn = this.peer.connections[this.targetPeerId][0];\n                if (existingConn.open) {\n                    if ((0, $3011e2f121e80011$export$3f32c2013f0dcc1e).PEER) console.log('Reusing existing connection');\n                    this.connection = existingConn;\n                    this.setupConnectionHandlers();\n                    return;\n                }\n            }\n            // Create new connection\n            if ((0, $3011e2f121e80011$export$3f32c2013f0dcc1e).PEER) console.log('Creating new connection to:', this.targetPeerId);\n            this.connection = this.peer.connect(this.targetPeerId, {\n                reliable: true,\n                serialization: 'binary'\n            });\n            this.setupConnectionHandlers();\n            this._setConnectionTimeout();\n        } catch (error) {\n            console.error('Error establishing connection:', error);\n            this._handleReconnection(error);\n        }\n    }\n    /**\r\n   * Set up handlers for the peer connection\r\n   * @private\r\n   */ setupConnectionHandlers() {\n        this.connection.on('open', ()=>{\n            if ((0, $3011e2f121e80011$export$3f32c2013f0dcc1e).PEER) console.log('Connected to peer:', this.targetPeerId);\n            // Update state - Note: NgrokClientState allows connected->connected transition\n            // to handle multiple data channels opening on the same connection\n            this.state.setState((0, $529a838b10c0f70a$export$575c13c422fb6041).STATES.CONNECTED, {\n                peerId: this.targetPeerId,\n                timestamp: new Date()\n            });\n            // Process any queued messages\n            this.processMessageQueue();\n            // Emit ready event\n            const handler = this.messageHandlers.get('ready');\n            if (handler) handler({\n                status: 'connected',\n                peerId: this.targetPeerId,\n                state: this.state.getState(),\n                timestamp: new Date().toISOString()\n            });\n        });\n        this.connection.on('data', (data)=>{\n            if (data.event === 'pong') {\n                this.lastPingTime = Date.now();\n                // Update latency metrics\n                const latency = Date.now() - data.data.timestamp;\n                this.state.updateMetrics({\n                    latency: latency\n                });\n                return;\n            }\n            if ((0, $3011e2f121e80011$export$3f32c2013f0dcc1e).PEER) console.log('Received data from peer:', data);\n            this.handleIncomingData(data);\n        });\n        this.connection.on('close', ()=>{\n            if ((0, $3011e2f121e80011$export$3f32c2013f0dcc1e).PEER) console.log('Peer connection closed');\n            if (!this._isClosing) {\n                this.state.setState((0, $529a838b10c0f70a$export$575c13c422fb6041).STATES.DISCONNECTED, {\n                    reason: 'connection_closed'\n                });\n                this._handleReconnection({\n                    type: 'connection_closed'\n                });\n            }\n        });\n        this.connection.on('error', (error)=>{\n            console.error('Data connection error:', error);\n            this.state.setState((0, $529a838b10c0f70a$export$575c13c422fb6041).STATES.ERROR, {\n                error: error.message,\n                type: error.type\n            });\n            this.handleError(error);\n            this._handleReconnection(error);\n        });\n    }\n    /**\r\n   * Handle incoming data from peer with enhanced error handling\r\n   * @private\r\n   * @param {Object} data - Data received from peer\r\n   * @param {string} data.event - Event type\r\n   * @param {*} data.data - Event data\r\n   */ handleIncomingData(data) {\n        try {\n            if ((0, $3011e2f121e80011$export$3f32c2013f0dcc1e).PEER) console.log('PeerConnection: Received event:', data.event, 'with data:', data.data);\n            // First, try to find a specific handler for this event\n            const handler = this.messageHandlers.get(data.event);\n            if (handler) {\n                if ((0, $3011e2f121e80011$export$3f32c2013f0dcc1e).PEER) console.log('PeerConnection: Found specific handler for event:', data.event);\n                handler({\n                    ...data.data,\n                    timestamp: Date.now(),\n                    state: this.state.getState()\n                });\n            } else {\n                if ((0, $3011e2f121e80011$export$3f32c2013f0dcc1e).PEER) console.log('PeerConnection: No specific handler for event:', data.event, 'forwarding to data handler');\n                // If no specific handler is found, forward the event to the data handler\n                // This ensures all events are forwarded to the Kinectron class\n                const dataHandler = this.messageHandlers.get('data');\n                // if (data.event === 'bodyFrame') debugger;\n                if (dataHandler) dataHandler(data);\n                else console.warn('PeerConnection: No data handler found for event:', data.event);\n            }\n        } catch (error) {\n            console.error('Error handling incoming data:', error);\n            this.handleError({\n                type: 'data_handling_error',\n                message: 'Error processing received data',\n                originalError: error\n            });\n        }\n    }\n    /**\r\n   * Process queued messages\r\n   * @private\r\n   */ async processMessageQueue() {\n        while(this.messageQueue.length > 0 && this.state.getState() === (0, $529a838b10c0f70a$export$575c13c422fb6041).STATES.CONNECTED){\n            const message = this.messageQueue.shift();\n            try {\n                await this.send(message.event, message.data);\n            } catch (error) {\n                console.error('Failed to send queued message:', error);\n                // Re-queue message if connection is still open\n                if (this.state.getState() === (0, $529a838b10c0f70a$export$575c13c422fb6041).STATES.CONNECTED && this.messageQueue.length < this.maxQueueSize) this.messageQueue.push(message);\n            }\n        }\n    }\n    /**\r\n   * Register a handler for a specific event type with validation\r\n   * @param {string} event - Event type to handle\r\n   * @param {Function} handler - Handler function for the event\r\n   */ on(event, handler) {\n        if (typeof handler !== 'function') throw new Error('Handler must be a function');\n        this.messageHandlers.set(event, handler);\n    }\n    /**\r\n   * Send data to peer with enhanced reliability\r\n   * @param {string} event - Event type\r\n   * @param {*} data - Data to send\r\n   * @returns {Promise<void>}\r\n   */ async send(event, data) {\n        return new Promise((resolve, reject)=>{\n            if (this.state.getState() !== (0, $529a838b10c0f70a$export$575c13c422fb6041).STATES.CONNECTED || !this.connection?.open) {\n                // Queue message if not connected\n                if (this.messageQueue.length < this.maxQueueSize) {\n                    this.messageQueue.push({\n                        event: event,\n                        data: data\n                    });\n                    resolve(); // Resolve since message was queued\n                } else reject(new Error('Message queue full'));\n                return;\n            }\n            try {\n                const message = {\n                    event: event,\n                    data: data,\n                    timestamp: Date.now()\n                };\n                const timeout = setTimeout(()=>{\n                    reject(new Error('Send timeout'));\n                }, 5000);\n                this.connection.send(message);\n                clearTimeout(timeout);\n                resolve();\n            } catch (error) {\n                reject(error);\n            }\n        });\n    }\n    /**\r\n   * Close the peer connection with graceful shutdown\r\n   */ async close() {\n        this._isClosing = true;\n        // Send shutdown message if possible\n        if (this.connection?.open) try {\n            await this.send('shutdown', {\n                reason: 'client_close'\n            });\n        } catch (error) {\n            console.error('Error sending shutdown message:', error);\n        }\n        // Clean up resources\n        await this._cleanup(true);\n        // Reset state\n        this.state.reset();\n        this.messageQueue = [];\n        this._isClosing = false;\n    }\n    /**\r\n   * Check if peer is connected\r\n   * @returns {boolean} Connection status\r\n   */ isConnected() {\n        return this.state.getState() === (0, $529a838b10c0f70a$export$575c13c422fb6041).STATES.CONNECTED && this.connection?.open;\n    }\n}\n\n\n\n\n\n\n/**\r\n * Stream handler factory functions\r\n */ /**\r\n * Utility functions for processing image data from different streams\r\n */ \nfunction $13fbe897b62a3640$export$6bfa04708e643828(frameData, callback) {\n    // Check for both imagedata and imageData formats\n    const imagedata = frameData.imagedata || frameData.imageData;\n    if (!frameData || !imagedata) {\n        (0, $3011e2f121e80011$export$bef1f36f5486a6a3).warn('Invalid frame data received:', frameData);\n        return;\n    }\n    const { width: width, height: height } = imagedata;\n    // Create a canvas to convert image data to a data URL\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    canvas.width = width;\n    canvas.height = height;\n    try {\n        // Check if data is a string (data URL)\n        if (typeof imagedata.data === 'string') {\n            (0, $3011e2f121e80011$export$bef1f36f5486a6a3).data('Processing image data from data URL');\n            $13fbe897b62a3640$export$708bda43d64f1409(imagedata.data, width, height, (src)=>{\n                // Call the user callback with processed frame\n                callback({\n                    src: src,\n                    width: width,\n                    height: height,\n                    raw: imagedata,\n                    timestamp: frameData.timestamp || Date.now()\n                });\n            }, (err)=>{\n                (0, $3011e2f121e80011$export$bef1f36f5486a6a3).error('Error loading image from data URL:', err);\n                // Try to call callback anyway with the raw data\n                callback({\n                    src: imagedata.data,\n                    width: width,\n                    height: height,\n                    raw: imagedata,\n                    timestamp: frameData.timestamp || Date.now()\n                });\n            });\n        } else {\n            (0, $3011e2f121e80011$export$bef1f36f5486a6a3).data('Processing image data from raw pixel data');\n            // Handle raw pixel data\n            const pixelData = $13fbe897b62a3640$export$3f12cadb607c10de(imagedata.data);\n            const imgData = new ImageData(pixelData, width, height);\n            // Put the image data on the canvas\n            ctx.putImageData(imgData, 0, 0);\n            // Convert to data URL for easy display\n            const src = canvas.toDataURL('image/jpeg');\n            // Call the user callback with processed frame\n            callback({\n                src: src,\n                width: width,\n                height: height,\n                raw: imagedata,\n                timestamp: frameData.timestamp || Date.now()\n            });\n        }\n    } catch (error) {\n        (0, $3011e2f121e80011$export$bef1f36f5486a6a3).error('Error processing frame:', error);\n        (0, $3011e2f121e80011$export$bef1f36f5486a6a3).error('Frame data:', imagedata);\n    }\n}\nfunction $13fbe897b62a3640$export$708bda43d64f1409(dataUrl, width, height, onSuccess, onError) {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    canvas.width = width;\n    canvas.height = height;\n    // Create an image from the data URL\n    const img = new Image();\n    img.onload = ()=>{\n        // Draw the image to the canvas\n        ctx.drawImage(img, 0, 0, width, height);\n        // Use the original data URL\n        onSuccess(dataUrl);\n    };\n    // Set error handler\n    img.onerror = (err)=>{\n        if (onError) onError(err);\n    };\n    // Start loading the image\n    img.src = dataUrl;\n}\nfunction $13fbe897b62a3640$export$3f12cadb607c10de(data) {\n    if (data instanceof Uint8ClampedArray) return data;\n    else if (data instanceof Uint8Array) return new Uint8ClampedArray(data);\n    else if (Array.isArray(data)) return new Uint8ClampedArray(data);\n    else // Handle case where data is an object (e.g., from JSON)\n    return new Uint8ClampedArray(Object.values(data));\n}\n\n\n\nfunction $2df2f56f71735229$export$1a5215a6a049f7d8(streamType, callback) {\n    return (data)=>{\n        // Extract the actual frame data\n        const frameData = data.data || data;\n        (0, $3011e2f121e80011$export$bef1f36f5486a6a3).handler(`Frame handler for ${streamType} received:`, frameData);\n        // Check for both imagedata and imageData formats\n        const hasImageData = frameData.imagedata || frameData.imageData;\n        // Only process frames with matching name\n        if (frameData.name === streamType && hasImageData) {\n            // Normalize the data structure to ensure imagedata exists\n            if (frameData.imageData && !frameData.imagedata) frameData.imagedata = frameData.imageData;\n            // Process the image data\n            $13fbe897b62a3640$export$6bfa04708e643828(frameData, callback);\n        } else (0, $3011e2f121e80011$export$bef1f36f5486a6a3).warn(`Received frame event but it's not a valid ${streamType} frame:`, 'name=', frameData.name, 'has imagedata=', !!(frameData.imagedata || frameData.imageData));\n    };\n}\nfunction $2df2f56f71735229$export$e4d1bd1c23c09b9e(callback, unpackFunction) {\n    return (data)=>{\n        if (data && data.imagedata) // Process the data regardless of isPacked flag\n        // The new implementation always unpacks the data\n        unpackFunction(data.imagedata, data.width, data.height, data.width, data.testValues).then((depthValues)=>{\n            // Call the callback with the unpacked data\n            callback({\n                ...data,\n                depthValues: depthValues,\n                timestamp: data.timestamp || Date.now()\n            });\n        }).catch((error)=>{\n            (0, $3011e2f121e80011$export$bef1f36f5486a6a3).error('Error unpacking raw depth data:', error);\n            // Still call the callback with the original data\n            callback({\n                ...data,\n                error: 'Failed to unpack depth data: ' + error.message,\n                timestamp: data.timestamp || Date.now()\n            });\n        });\n        else if (data && data.rawDepthData) // Legacy format - raw depth data is already in a usable format\n        callback({\n            ...data,\n            timestamp: data.timestamp || Date.now()\n        });\n        else {\n            (0, $3011e2f121e80011$export$bef1f36f5486a6a3).warn('Received raw depth frame with invalid data format:', data);\n            callback({\n                ...data,\n                error: 'Invalid data format',\n                timestamp: data.timestamp || Date.now()\n            });\n        }\n    };\n}\nfunction $2df2f56f71735229$export$2105b7696d7712ee(callback) {\n    (0, $3011e2f121e80011$export$bef1f36f5486a6a3).handler('Creating body handler with callback:', callback);\n    return (eventData)=>{\n        const bodyData = eventData.data;\n        if (bodyData && bodyData.bodies) // Body data is already in a usable format (array of body objects)\n        // Just add timestamp and pass it through\n        callback({\n            bodies: bodyData.bodies,\n            timestamp: bodyData.timestamp || Date.now(),\n            floorClipPlane: bodyData.floorClipPlane,\n            trackingId: bodyData.trackingId\n        });\n    };\n}\nfunction $2df2f56f71735229$export$334c6911e6336aba(callback) {\n    return (data)=>{\n        if (data && data.frames) {\n            // Process each frame based on its type\n            const processedFrames = {};\n            // Process each frame in the multiframe data\n            Object.entries(data.frames).forEach(([type, frameData])=>{\n                if (frameData.imagedata) {\n                    // For image-based frames, convert to data URL\n                    const canvas = document.createElement('canvas');\n                    const ctx = canvas.getContext('2d');\n                    const { width: width, height: height } = frameData.imagedata;\n                    canvas.width = width;\n                    canvas.height = height;\n                    // Create ImageData object from the raw data\n                    const imgData = new ImageData($13fbe897b62a3640$export$3f12cadb607c10de(frameData.imagedata.data), width, height);\n                    // Put the image data on the canvas\n                    ctx.putImageData(imgData, 0, 0);\n                    // Convert to data URL\n                    processedFrames[type] = {\n                        src: canvas.toDataURL('image/jpeg'),\n                        width: width,\n                        height: height,\n                        raw: frameData.imagedata\n                    };\n                } else // For non-image data (like body tracking), pass through\n                processedFrames[type] = frameData;\n            });\n            // Call the user callback with processed frames\n            callback({\n                frames: processedFrames,\n                timestamp: data.timestamp || Date.now()\n            });\n        }\n    };\n}\n\n\nclass $4d4b0f11c431333a$export$9369465eba7492ab {\n    constructor(networkConfig){\n        this.peer = new (0, $354d08947efbc941$export$d84cf184fade0488)(networkConfig);\n        this.messageHandlers = new Map();\n        this.state = null;\n        // Set up event handlers\n        this.peer.on('ready', (data)=>{\n            this.state = data.state;\n            const handler = this.messageHandlers.get('ready');\n            if (handler) handler(data);\n        });\n        this.peer.on('error', (error)=>{\n            const handler = this.messageHandlers.get('error');\n            if (handler) handler(error);\n        });\n        // Handle state changes\n        this.peer.on('stateChange', (data)=>{\n            this.state = data.to;\n            const handler = this.messageHandlers.get('stateChange');\n            if (handler) handler(data);\n        });\n        // Handle metrics updates\n        this.peer.on('metrics', (data)=>{\n            const handler = this.messageHandlers.get('metrics');\n            if (handler) handler(data);\n        });\n        // Handle incoming data\n        this.peer.on('data', (data)=>{\n            const { event: event, data: eventData } = data;\n            const handler = this.messageHandlers.get(event);\n            if (handler) // if (event === 'bodyFrame') debugger;\n            handler(eventData);\n            else (0, $3011e2f121e80011$export$bef1f36f5486a6a3).warn('Kinectron: No handler found for event:', event);\n        });\n    }\n    // Event registration\n    on(event, callback) {\n        this.messageHandlers.set(event, callback);\n    }\n    // Get current state\n    getState() {\n        return this.peer.getState();\n    }\n    // Check if connected\n    isConnected() {\n        return this.state === (0, $529a838b10c0f70a$export$575c13c422fb6041).STATES.CONNECTED;\n    }\n    // Set Kinect type (azure or windows)\n    setKinectType(kinectType) {\n        if (!this.isConnected()) {\n            (0, $3011e2f121e80011$export$bef1f36f5486a6a3).warn('Cannot set Kinect type: not connected');\n            return;\n        }\n        this.send('setkinect', kinectType);\n    }\n    // Initialize Kinect\n    initKinect(callback) {\n        if (!this.isConnected()) {\n            (0, $3011e2f121e80011$export$bef1f36f5486a6a3).warn('Cannot initialize Kinect: not connected');\n            return Promise.reject(new Error('Cannot initialize Kinect: not connected'));\n        }\n        // Create a promise that resolves when we get the kinectInitialized event\n        const initPromise = new Promise((resolve, reject)=>{\n            // Set up a one-time handler for the initialization response\n            const handler = (data)=>{\n                // Normalize the success value to handle nested structure\n                let isSuccess = false;\n                if (data.success && typeof data.success === 'object' && data.success.success === true) isSuccess = true;\n                else if (typeof data.success === 'boolean' && data.success === true) isSuccess = true;\n                // Create a normalized result object\n                const normalizedResult = {\n                    success: isSuccess,\n                    alreadyInitialized: !!data.alreadyInitialized,\n                    error: data.error || null,\n                    rawData: data\n                };\n                if (isSuccess || data.alreadyInitialized) resolve(normalizedResult);\n                else reject(new Error(data.error || 'Failed to initialize Kinect'));\n                // Remove the handler after it's been called\n                this.messageHandlers.delete('kinectInitialized');\n            };\n            this.messageHandlers.set('kinectInitialized', handler);\n            // Send initialization request to server\n            this.send('initkinect', {});\n        });\n        // For backward compatibility, if a callback is provided, use it\n        if (callback) initPromise.then((data)=>callback(data)).catch((error)=>callback({\n                success: false,\n                error: error.message\n            }));\n        // Return the promise for modern Promise-based usage\n        return initPromise;\n    }\n    // Send data to peer\n    send(event, data) {\n        if (!this.isConnected()) {\n            (0, $3011e2f121e80011$export$bef1f36f5486a6a3).warn('Cannot send data: not connected');\n            return;\n        }\n        this.peer.send(event, data);\n    }\n    // Start feed methods\n    startColor(callback) {\n        if (callback) // Set up frame handler to process color frames\n        this.messageHandlers.set('frame', (0, $2df2f56f71735229$export$1a5215a6a049f7d8)('color', callback));\n        this.send('feed', {\n            feed: 'color'\n        });\n    }\n    startDepth(callback) {\n        if (callback) // Set up frame handler to process depth frames\n        this.messageHandlers.set('frame', (0, $2df2f56f71735229$export$1a5215a6a049f7d8)('depth', callback));\n        this.send('feed', {\n            feed: 'depth'\n        });\n    }\n    /**\r\n   * Unpacks raw depth data from a WebP image\r\n   * @private\r\n   * @param {string} dataUrl - The data URL containing the depth data\r\n   * @param {number} width - The width of the image\r\n   * @param {number} height - The height of the image\r\n   * @param {number} originalWidth - The original width of the depth data (not used in new implementation)\r\n   * @param {Object} testValues - Test values to verify unpacking accuracy\r\n   * @returns {Promise<Uint16Array>} - Promise resolving to the unpacked depth values\r\n   */ _unpackRawDepthData(dataUrl, width, height, originalWidth, testValues) {\n        // Log using the imported debug module\n        if ((0, $3011e2f121e80011$export$3f32c2013f0dcc1e).DATA) (0, $3011e2f121e80011$export$bef1f36f5486a6a3).data('Unpacking raw depth data with dimensions:', width, 'x', height);\n        return new Promise((resolve, reject)=>{\n            // Create image to load the data URL\n            const img = new Image();\n            img.onload = ()=>{\n                // Use OffscreenCanvas for efficient processing\n                const canvas = new OffscreenCanvas(width, height);\n                const ctx = canvas.getContext('2d');\n                // Draw the image to the canvas\n                ctx.drawImage(img, 0, 0);\n                // Get the pixel data\n                const imageData = ctx.getImageData(0, 0, width, height).data;\n                // Create array for unpacked depth values\n                const depthValues = new Uint16Array(width * height);\n                // Process the raw depth data exactly like the app.js client code\n                let j = 0;\n                for(let i = 0; i < imageData.length; i += 4){\n                    // Extract depth value from R and G channels\n                    const depth = imageData[i + 1] << 8 | imageData[i]; // Get uint16 data from buffer\n                    depthValues[j++] = depth;\n                }\n                // Verify test values if provided\n                if (testValues && (0, $3011e2f121e80011$export$3f32c2013f0dcc1e).DATA) {\n                    const unpackedValue1000 = depthValues[1000];\n                    const unpackedValue2000 = depthValues[2000];\n                    const unpackedValue3000 = depthValues[3000];\n                    (0, $3011e2f121e80011$export$bef1f36f5486a6a3).data('Test values comparison:', {\n                        'Index 1000': {\n                            Original: testValues.index1000,\n                            Unpacked: unpackedValue1000,\n                            Difference: testValues.index1000 - unpackedValue1000\n                        },\n                        'Index 2000': {\n                            Original: testValues.index2000,\n                            Unpacked: unpackedValue2000,\n                            Difference: testValues.index2000 - unpackedValue2000\n                        },\n                        'Index 3000': {\n                            Original: testValues.index3000,\n                            Unpacked: unpackedValue3000,\n                            Difference: testValues.index3000 - unpackedValue3000\n                        }\n                    });\n                }\n                resolve(depthValues);\n            };\n            img.onerror = (err)=>{\n                reject(new Error('Failed to load depth image: ' + err));\n            };\n            img.src = dataUrl;\n        });\n    }\n    startRawDepth(callback) {\n        if (callback) // Set up handler to process raw depth frames\n        this.messageHandlers.set('rawDepth', (0, $2df2f56f71735229$export$e4d1bd1c23c09b9e)(callback, this._unpackRawDepthData.bind(this)));\n        this.send('feed', {\n            feed: 'raw-depth'\n        });\n    }\n    startBodies(callback) {\n        if (callback) // Set up handler to process body tracking frames\n        this.messageHandlers.set('bodyFrame', (0, $2df2f56f71735229$export$2105b7696d7712ee)(callback));\n        this.send('feed', {\n            feed: 'body'\n        });\n    }\n    startKey(callback) {\n        if (callback) // Set up frame handler to process key frames\n        this.messageHandlers.set('frame', (0, $2df2f56f71735229$export$1a5215a6a049f7d8)('key', callback));\n        this.send('feed', {\n            feed: 'key'\n        });\n    }\n    startDepthKey(callback) {\n        if (callback) // Set up handler to process depth key frames\n        this.messageHandlers.set('depth-key', (0, $2df2f56f71735229$export$1a5215a6a049f7d8)('depth-key', callback));\n        this.send('feed', {\n            feed: 'depth-key'\n        });\n    }\n    startRGBD(callback) {\n        if (callback) // Set up frame handler to process RGBD frames\n        this.messageHandlers.set('frame', (0, $2df2f56f71735229$export$1a5215a6a049f7d8)('rgbd', callback));\n        this.send('feed', {\n            feed: 'rgbd'\n        });\n    }\n    startMultiFrame(frames, callback) {\n        if (callback) // Set up handler to process multi-frame data\n        this.messageHandlers.set('multiFrame', (0, $2df2f56f71735229$export$334c6911e6336aba)(callback));\n        this.send('multi', frames);\n    }\n    // Stop all feeds\n    stopAll() {\n        this.send('feed', {\n            feed: 'stop-all'\n        });\n    }\n    // Clean up\n    close() {\n        this.peer.close();\n        this.messageHandlers.clear();\n        this.state = null;\n    }\n}\n\n\nconsole.log('You are running Kinectron API version 1.0.0');\n\n})();\n//# sourceMappingURL=index.js.map\n","/**\r\n * @fileoverview Main entry point for the Kinectron client library\r\n * @version 1.0.0\r\n */\r\n\r\nimport { PeerConnection } from './peer/peerConnection.js';\r\nimport {\r\n  DEFAULT_PEER_CONFIG,\r\n  DEFAULT_PEER_ID,\r\n} from './peer/peerConfig.js';\r\nimport { Kinectron } from './kinectron.js';\r\n\r\nconsole.log('You are running Kinectron API version 1.0.0');\r\n\r\n// Export the modern interface only\r\nexport {\r\n  PeerConnection,\r\n  DEFAULT_PEER_CONFIG,\r\n  DEFAULT_PEER_ID,\r\n  Kinectron,\r\n};\r\n","import Peer from 'peerjs';\r\nimport { DEFAULT_PEER_ID, processPeerConfig } from './peerConfig.js';\r\nimport { NgrokClientState, NgrokClientError } from './ngrokState.js';\r\nimport { DEBUG } from '../utils/debug.js';\r\n\r\n/**\r\n * @typedef {import('./peerConfig.js').PeerNetworkConfig} PeerNetworkConfig\r\n */\r\n\r\n/**\r\n * Enhanced peer-to-peer connection handler with improved reliability\r\n */\r\nexport class PeerConnection {\r\n  /**\r\n   * @param {string|PeerNetworkConfig} [networkConfig] - Network configuration or host address\r\n   * @param {string} [peerId] - ID of the peer to connect to\r\n   */\r\n  constructor(networkConfig, peerId) {\r\n    /** @private */\r\n    this.peer = null;\r\n    /** @private */\r\n    this.connection = null;\r\n    /** @private */\r\n    this.targetPeerId = peerId || DEFAULT_PEER_ID;\r\n    /** @private */\r\n    this.config = processPeerConfig(networkConfig);\r\n    /** @private */\r\n    this.messageHandlers = new Map();\r\n    /** @private */\r\n    this.messageQueue = [];\r\n    /** @private */\r\n    this.maxQueueSize = 100;\r\n    /** @private */\r\n    this.lastPingTime = 0;\r\n    /** @private */\r\n    this.pingInterval = null;\r\n    /** @private */\r\n    this.healthCheckInterval = null;\r\n    /** @private */\r\n    this.clientId = this.generateClientId();\r\n    /** @private */\r\n    this.state = new NgrokClientState();\r\n\r\n    // Forward state events to message handlers\r\n    this.state.on('stateChange', (data) => {\r\n      const handler = this.messageHandlers.get('stateChange');\r\n      if (handler) handler(data);\r\n    });\r\n\r\n    this.state.on('error', (data) => {\r\n      const handler = this.messageHandlers.get('error');\r\n      if (handler) handler(data);\r\n    });\r\n\r\n    this.state.on('metrics', (data) => {\r\n      const handler = this.messageHandlers.get('metrics');\r\n      if (handler) handler(data);\r\n    });\r\n\r\n    this.initialize();\r\n  }\r\n\r\n  /**\r\n   * Generate a consistent client ID\r\n   * @private\r\n   * @returns {string} Client ID\r\n   */\r\n  generateClientId() {\r\n    // Generate unique ID for each instance\r\n    const timestamp = Date.now().toString(36);\r\n    const random = Math.random().toString(36).substr(2, 5);\r\n    const prefix = this.config.host?.includes('ngrok')\r\n      ? 'ngrok'\r\n      : 'local';\r\n    const role = this.config.role || 'default';\r\n    return `${prefix}-${role}-${timestamp}-${random}`;\r\n  }\r\n\r\n  /**\r\n   * Get current connection state\r\n   * @returns {Object} Current state information\r\n   */\r\n  getState() {\r\n    return this.state.getMetadata();\r\n  }\r\n\r\n  /**\r\n   * Initialize the peer connection with enhanced reliability\r\n   * @private\r\n   */\r\n  initialize() {\r\n    try {\r\n      if (this.peer) {\r\n        console.warn('Peer already initialized');\r\n        return;\r\n      }\r\n\r\n      if (DEBUG.PEER) {\r\n        console.log('Initializing peer with config:', this.config);\r\n      }\r\n\r\n      // Check if this is an ngrok connection\r\n      const isNgrok =\r\n        typeof this.config.host === 'string' &&\r\n        this.config.host.includes('ngrok');\r\n\r\n      if (isNgrok) {\r\n        // Set state to validating for ngrok connections\r\n        this.state.setState(NgrokClientState.STATES.VALIDATING);\r\n\r\n        // Validate ngrok URL format\r\n        if (!this.config.host.includes('ngrok-free.app')) {\r\n          throw new NgrokClientError('Invalid ngrok URL format', {\r\n            url: this.config.host,\r\n            reason: 'URL must include ngrok-free.app domain',\r\n          });\r\n        }\r\n      }\r\n\r\n      // Create peer instance with consistent ID\r\n      this.peer = new Peer(this.clientId, {\r\n        ...this.config,\r\n        // Basic reliability options\r\n        reliable: true,\r\n        retries: 2,\r\n        timeout: isNgrok ? 5000 : 3000,\r\n        debug: 0, // Reduced from 3 to 0 to suppress verbose logs\r\n      });\r\n\r\n      // Move to connecting state (skip validation for local connections)\r\n      if (!isNgrok) {\r\n        this.state.setState(NgrokClientState.STATES.CONNECTING);\r\n      }\r\n\r\n      this.setupPeerEventHandlers();\r\n      this.startHealthCheck();\r\n    } catch (error) {\r\n      console.error('Peer initialization error:', error);\r\n      this.handleError(error);\r\n      this.state.setState(NgrokClientState.STATES.ERROR, {\r\n        error: error.message,\r\n        context: 'initialization',\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set up event handlers for the peer instance\r\n   * @private\r\n   */\r\n  setupPeerEventHandlers() {\r\n    this.peer.on('open', (id) => {\r\n      if (DEBUG.PEER) {\r\n        console.log('My peer ID is:', id);\r\n      }\r\n      // Already in CONNECTING state, proceed with connection\r\n      this.connect();\r\n    });\r\n\r\n    this.peer.on('error', (error) => {\r\n      console.error('Peer connection error:', error);\r\n\r\n      // Handle ID taken error by generating new ID\r\n      if (error.type === 'unavailable-id') {\r\n        if (DEBUG.PEER) {\r\n          console.log('Client ID taken, generating new ID');\r\n        }\r\n        this.clientId = this.generateClientId();\r\n        this._cleanup(false);\r\n        this.initialize();\r\n        return;\r\n      }\r\n\r\n      this.handleError(error);\r\n\r\n      // Set error state\r\n      this.state.setState(NgrokClientState.STATES.ERROR, {\r\n        error: error.message,\r\n        type: error.type,\r\n      });\r\n\r\n      // Attempt reconnection if appropriate\r\n      if (this.shouldAttemptReconnection(error)) {\r\n        this._handleReconnection(error);\r\n      }\r\n    });\r\n\r\n    this.peer.on('disconnected', () => {\r\n      if (DEBUG.PEER) {\r\n        console.log('Peer disconnected from server');\r\n      }\r\n      this.state.setState(NgrokClientState.STATES.DISCONNECTED, {\r\n        reason: 'peer_disconnected',\r\n      });\r\n      this._handleReconnection({ type: 'disconnected' });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Start health check interval\r\n   * @private\r\n   */\r\n  startHealthCheck() {\r\n    // Clear any existing intervals\r\n    if (this.healthCheckInterval) {\r\n      clearInterval(this.healthCheckInterval);\r\n    }\r\n    if (this.pingInterval) {\r\n      clearInterval(this.pingInterval);\r\n    }\r\n\r\n    // Start health check\r\n    this.healthCheckInterval = setInterval(() => {\r\n      if (\r\n        this.state.getState() === NgrokClientState.STATES.CONNECTED &&\r\n        this.connection\r\n      ) {\r\n        this.checkConnectionHealth();\r\n      }\r\n    }, 10000);\r\n\r\n    // Start ping interval\r\n    this.pingInterval = setInterval(() => {\r\n      if (\r\n        this.state.getState() === NgrokClientState.STATES.CONNECTED &&\r\n        this.connection?.open\r\n      ) {\r\n        this.sendPing();\r\n      }\r\n    }, 5000);\r\n  }\r\n\r\n  /**\r\n   * Check connection health\r\n   * @private\r\n   */\r\n  async checkConnectionHealth() {\r\n    if (!this.connection?.open) {\r\n      console.warn('Connection appears dead, attempting recovery');\r\n      await this.handleConnectionFailure();\r\n      return;\r\n    }\r\n\r\n    // Check last ping time\r\n    const timeSinceLastPing = Date.now() - this.lastPingTime;\r\n    if (timeSinceLastPing > 15000) {\r\n      // No ping response for 15 seconds\r\n      console.warn('No ping response, connection may be dead');\r\n      await this.handleConnectionFailure();\r\n    }\r\n\r\n    // Update connection metrics\r\n    this.state.updateMetrics({\r\n      latency: timeSinceLastPing,\r\n      timestamp: new Date(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Send ping to peer\r\n   * @private\r\n   */\r\n  sendPing() {\r\n    try {\r\n      this.connection.send({\r\n        event: 'ping',\r\n        data: { timestamp: Date.now() },\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to send ping:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle connection failure\r\n   * @private\r\n   */\r\n  async handleConnectionFailure() {\r\n    if (this.connection) {\r\n      try {\r\n        this.connection.close();\r\n      } catch (error) {\r\n        console.error('Error closing connection:', error);\r\n      }\r\n      this.connection = null;\r\n    }\r\n\r\n    this.state.setState(NgrokClientState.STATES.RECONNECTING, {\r\n      reason: 'connection_failure',\r\n      timestamp: new Date(),\r\n    });\r\n\r\n    await this._handleReconnection({ type: 'connection_failure' });\r\n  }\r\n\r\n  /**\r\n   * Handle errors with enhanced information\r\n   * @private\r\n   * @param {Error} error - The error that occurred\r\n   */\r\n  handleError(error) {\r\n    // Record error in state\r\n    this.state.recordError(error, {\r\n      type: error.type || 'server-error',\r\n      state: this.state.getState(),\r\n      timestamp: new Date().toISOString(),\r\n    });\r\n\r\n    // Forward to message handler\r\n    const handler = this.messageHandlers.get('error');\r\n    if (handler) {\r\n      const errorInfo = {\r\n        status: 'error',\r\n        error: this._getErrorMessage(error),\r\n        details: {\r\n          type: error.type || 'server-error',\r\n          state: this.state.getState(),\r\n          timestamp: new Date().toISOString(),\r\n        },\r\n      };\r\n      handler(errorInfo);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get user-friendly error message\r\n   * @private\r\n   * @param {Error} error - The error object\r\n   * @returns {string} User-friendly error message\r\n   */\r\n  _getErrorMessage(error) {\r\n    const errorMessages = {\r\n      network: 'Network error - Could not connect to peer server',\r\n      'invalid-id':\r\n        'Invalid ID - The peer ID is invalid or already taken',\r\n      'unavailable-id':\r\n        'ID Unavailable - The peer ID is already taken',\r\n      'browser-incompatible':\r\n        'Browser Incompatible - WebRTC is not supported',\r\n      'connection-failure':\r\n        'Connection failed - Unable to establish or maintain connection',\r\n      disconnected: 'Disconnected - Lost connection to peer server',\r\n    };\r\n\r\n    return (\r\n      errorMessages[error.type] ||\r\n      error.message ||\r\n      'Peer connection error'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Determine if reconnection should be attempted\r\n   * @private\r\n   * @param {Error} error - The error that occurred\r\n   * @returns {boolean} Whether to attempt reconnection\r\n   */\r\n  shouldAttemptReconnection(error) {\r\n    // Don't reconnect for certain error types\r\n    const fatalErrors = [\r\n      'browser-incompatible',\r\n      'invalid-id',\r\n      'invalid-key',\r\n    ];\r\n    if (fatalErrors.includes(error.type)) {\r\n      return false;\r\n    }\r\n\r\n    return this.state.getMetadata().metrics.reconnects.count < 3;\r\n  }\r\n\r\n  /**\r\n   * Set connection timeout with enhanced retry logic\r\n   * @private\r\n   */\r\n  _setConnectionTimeout() {\r\n    const timeoutDuration = 15000; // 15 second timeout for ngrok connections\r\n\r\n    setTimeout(() => {\r\n      if (\r\n        this.state.getState() !== NgrokClientState.STATES.CONNECTED\r\n      ) {\r\n        if (DEBUG.PEER) {\r\n          console.log('Connection attempt timed out');\r\n        }\r\n\r\n        if (this.shouldAttemptReconnection({ type: 'timeout' })) {\r\n          this._handleReconnection({ type: 'timeout' });\r\n        } else {\r\n          this.handleError({\r\n            type: 'timeout',\r\n            message: 'Connection timeout - Max attempts reached',\r\n          });\r\n        }\r\n      }\r\n    }, timeoutDuration);\r\n  }\r\n\r\n  /**\r\n   * Handle reconnection logic with improved retry strategy\r\n   * @private\r\n   * @param {Error} error - The error that triggered reconnection\r\n   */\r\n  async _handleReconnection(error) {\r\n    // Update state to reconnecting\r\n    this.state.setState(NgrokClientState.STATES.RECONNECTING, {\r\n      error: error.message,\r\n      attempt: this.state.getMetadata().metrics.reconnects.count + 1,\r\n    });\r\n\r\n    // Use exponential backoff with jitter\r\n    const baseDelay = Math.min(\r\n      2000 *\r\n        Math.pow(\r\n          1.5,\r\n          this.state.getMetadata().metrics.reconnects.count,\r\n        ),\r\n      15000,\r\n    );\r\n    const jitter = baseDelay * 0.2 * (Math.random() * 2 - 1);\r\n    const delay = Math.max(2000, baseDelay + jitter);\r\n\r\n    if (DEBUG.PEER) {\r\n      console.log(\r\n        `Attempting reconnection ${\r\n          this.state.getMetadata().metrics.reconnects.count + 1\r\n        } of 3 in ${Math.round(delay)}ms`,\r\n      );\r\n    }\r\n\r\n    // Wait for delay\r\n    await new Promise((resolve) => setTimeout(resolve, delay));\r\n\r\n    if (\r\n      this.state.getState() === NgrokClientState.STATES.RECONNECTING\r\n    ) {\r\n      if (DEBUG.PEER) {\r\n        console.log('Attempting to reconnect...');\r\n      }\r\n\r\n      // Clean up existing resources\r\n      await this._cleanup(false);\r\n\r\n      // Only try to reconnect if we haven't exceeded max attempts\r\n      if (this.shouldAttemptReconnection(error)) {\r\n        // Move back to connecting state\r\n        this.state.setState(NgrokClientState.STATES.CONNECTING);\r\n        this.initialize();\r\n      } else {\r\n        if (DEBUG.PEER) {\r\n          console.log('Max reconnection attempts reached');\r\n        }\r\n        this.state.setState(NgrokClientState.STATES.ERROR, {\r\n          error: 'Maximum reconnection attempts reached',\r\n          type: 'max_retries',\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clean up resources\r\n   * @private\r\n   * @param {boolean} [isClosing=true] - Whether this is a final cleanup\r\n   */\r\n  async _cleanup(isClosing = true) {\r\n    // Clean up existing peer\r\n    if (this.peer) {\r\n      this.peer.destroy();\r\n      this.peer = null;\r\n    }\r\n\r\n    // Clean up existing connection\r\n    if (this.connection) {\r\n      this.connection.close();\r\n      this.connection = null;\r\n    }\r\n\r\n    // Clear intervals if doing final cleanup\r\n    if (isClosing) {\r\n      if (this.healthCheckInterval) {\r\n        clearInterval(this.healthCheckInterval);\r\n        this.healthCheckInterval = null;\r\n      }\r\n      if (this.pingInterval) {\r\n        clearInterval(this.pingInterval);\r\n        this.pingInterval = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Connect to target peer with enhanced reliability\r\n   */\r\n  connect() {\r\n    try {\r\n      // Check if we already have a connection\r\n      if (this.peer.connections[this.targetPeerId]?.length > 0) {\r\n        const existingConn =\r\n          this.peer.connections[this.targetPeerId][0];\r\n        if (existingConn.open) {\r\n          if (DEBUG.PEER) {\r\n            console.log('Reusing existing connection');\r\n          }\r\n          this.connection = existingConn;\r\n          this.setupConnectionHandlers();\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Create new connection\r\n      if (DEBUG.PEER) {\r\n        console.log('Creating new connection to:', this.targetPeerId);\r\n      }\r\n      this.connection = this.peer.connect(this.targetPeerId, {\r\n        reliable: true,\r\n        serialization: 'binary', // Explicitly set to binary\r\n      });\r\n\r\n      this.setupConnectionHandlers();\r\n      this._setConnectionTimeout();\r\n    } catch (error) {\r\n      console.error('Error establishing connection:', error);\r\n      this._handleReconnection(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set up handlers for the peer connection\r\n   * @private\r\n   */\r\n  setupConnectionHandlers() {\r\n    this.connection.on('open', () => {\r\n      if (DEBUG.PEER) {\r\n        console.log('Connected to peer:', this.targetPeerId);\r\n      }\r\n\r\n      // Update state - Note: NgrokClientState allows connected->connected transition\r\n      // to handle multiple data channels opening on the same connection\r\n      this.state.setState(NgrokClientState.STATES.CONNECTED, {\r\n        peerId: this.targetPeerId,\r\n        timestamp: new Date(),\r\n      });\r\n\r\n      // Process any queued messages\r\n      this.processMessageQueue();\r\n\r\n      // Emit ready event\r\n      const handler = this.messageHandlers.get('ready');\r\n      if (handler) {\r\n        handler({\r\n          status: 'connected',\r\n          peerId: this.targetPeerId,\r\n          state: this.state.getState(),\r\n          timestamp: new Date().toISOString(),\r\n        });\r\n      }\r\n    });\r\n\r\n    this.connection.on('data', (data) => {\r\n      if (data.event === 'pong') {\r\n        this.lastPingTime = Date.now();\r\n        // Update latency metrics\r\n        const latency = Date.now() - data.data.timestamp;\r\n        this.state.updateMetrics({ latency });\r\n        return;\r\n      }\r\n      if (DEBUG.PEER) {\r\n        console.log('Received data from peer:', data);\r\n      }\r\n      this.handleIncomingData(data);\r\n    });\r\n\r\n    this.connection.on('close', () => {\r\n      if (DEBUG.PEER) {\r\n        console.log('Peer connection closed');\r\n      }\r\n\r\n      if (!this._isClosing) {\r\n        this.state.setState(NgrokClientState.STATES.DISCONNECTED, {\r\n          reason: 'connection_closed',\r\n        });\r\n        this._handleReconnection({ type: 'connection_closed' });\r\n      }\r\n    });\r\n\r\n    this.connection.on('error', (error) => {\r\n      console.error('Data connection error:', error);\r\n\r\n      this.state.setState(NgrokClientState.STATES.ERROR, {\r\n        error: error.message,\r\n        type: error.type,\r\n      });\r\n\r\n      this.handleError(error);\r\n      this._handleReconnection(error);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle incoming data from peer with enhanced error handling\r\n   * @private\r\n   * @param {Object} data - Data received from peer\r\n   * @param {string} data.event - Event type\r\n   * @param {*} data.data - Event data\r\n   */\r\n  handleIncomingData(data) {\r\n    try {\r\n      if (DEBUG.PEER) {\r\n        console.log(\r\n          'PeerConnection: Received event:',\r\n          data.event,\r\n          'with data:',\r\n          data.data,\r\n        );\r\n      }\r\n\r\n      // First, try to find a specific handler for this event\r\n      const handler = this.messageHandlers.get(data.event);\r\n\r\n      if (handler) {\r\n        if (DEBUG.PEER) {\r\n          console.log(\r\n            'PeerConnection: Found specific handler for event:',\r\n            data.event,\r\n          );\r\n        }\r\n        handler({\r\n          ...data.data,\r\n          timestamp: Date.now(),\r\n          state: this.state.getState(),\r\n        });\r\n      } else {\r\n        if (DEBUG.PEER) {\r\n          console.log(\r\n            'PeerConnection: No specific handler for event:',\r\n            data.event,\r\n            'forwarding to data handler',\r\n          );\r\n        }\r\n        // If no specific handler is found, forward the event to the data handler\r\n        // This ensures all events are forwarded to the Kinectron class\r\n        const dataHandler = this.messageHandlers.get('data');\r\n\r\n        // if (data.event === 'bodyFrame') debugger;\r\n\r\n        if (dataHandler) {\r\n          dataHandler(data);\r\n        } else {\r\n          console.warn(\r\n            'PeerConnection: No data handler found for event:',\r\n            data.event,\r\n          );\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error handling incoming data:', error);\r\n      this.handleError({\r\n        type: 'data_handling_error',\r\n        message: 'Error processing received data',\r\n        originalError: error,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Process queued messages\r\n   * @private\r\n   */\r\n  async processMessageQueue() {\r\n    while (\r\n      this.messageQueue.length > 0 &&\r\n      this.state.getState() === NgrokClientState.STATES.CONNECTED\r\n    ) {\r\n      const message = this.messageQueue.shift();\r\n      try {\r\n        await this.send(message.event, message.data);\r\n      } catch (error) {\r\n        console.error('Failed to send queued message:', error);\r\n        // Re-queue message if connection is still open\r\n        if (\r\n          this.state.getState() ===\r\n            NgrokClientState.STATES.CONNECTED &&\r\n          this.messageQueue.length < this.maxQueueSize\r\n        ) {\r\n          this.messageQueue.push(message);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register a handler for a specific event type with validation\r\n   * @param {string} event - Event type to handle\r\n   * @param {Function} handler - Handler function for the event\r\n   */\r\n  on(event, handler) {\r\n    if (typeof handler !== 'function') {\r\n      throw new Error('Handler must be a function');\r\n    }\r\n    this.messageHandlers.set(event, handler);\r\n  }\r\n\r\n  /**\r\n   * Send data to peer with enhanced reliability\r\n   * @param {string} event - Event type\r\n   * @param {*} data - Data to send\r\n   * @returns {Promise<void>}\r\n   */\r\n  async send(event, data) {\r\n    return new Promise((resolve, reject) => {\r\n      if (\r\n        this.state.getState() !== NgrokClientState.STATES.CONNECTED ||\r\n        !this.connection?.open\r\n      ) {\r\n        // Queue message if not connected\r\n        if (this.messageQueue.length < this.maxQueueSize) {\r\n          this.messageQueue.push({ event, data });\r\n          resolve(); // Resolve since message was queued\r\n        } else {\r\n          reject(new Error('Message queue full'));\r\n        }\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const message = {\r\n          event,\r\n          data,\r\n          timestamp: Date.now(),\r\n        };\r\n\r\n        const timeout = setTimeout(() => {\r\n          reject(new Error('Send timeout'));\r\n        }, 5000);\r\n\r\n        this.connection.send(message);\r\n        clearTimeout(timeout);\r\n        resolve();\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Close the peer connection with graceful shutdown\r\n   */\r\n  async close() {\r\n    this._isClosing = true;\r\n\r\n    // Send shutdown message if possible\r\n    if (this.connection?.open) {\r\n      try {\r\n        await this.send('shutdown', { reason: 'client_close' });\r\n      } catch (error) {\r\n        console.error('Error sending shutdown message:', error);\r\n      }\r\n    }\r\n\r\n    // Clean up resources\r\n    await this._cleanup(true);\r\n\r\n    // Reset state\r\n    this.state.reset();\r\n    this.messageQueue = [];\r\n    this._isClosing = false;\r\n  }\r\n\r\n  /**\r\n   * Check if peer is connected\r\n   * @returns {boolean} Connection status\r\n   */\r\n  isConnected() {\r\n    return (\r\n      this.state.getState() === NgrokClientState.STATES.CONNECTED &&\r\n      this.connection?.open\r\n    );\r\n  }\r\n}\r\n","import {pack as $gCcbY$pack, unpack as $gCcbY$unpack} from \"peerjs-js-binarypack\";\nimport $gCcbY$webrtcadapter from \"webrtc-adapter\";\nimport {Encoder as $gCcbY$Encoder, Decoder as $gCcbY$Decoder} from \"cbor-x\";\nimport {Encoder as $gCcbY$Encoder1, decodeMultiStream as $gCcbY$decodeMultiStream} from \"@msgpack/msgpack\";\n\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nclass $fcbcc7538a6776d5$export$f1c5f4c9cb95390b {\n    constructor(){\n        this.chunkedMTU = 16300 // The original 60000 bytes setting does not work when sending data from Firefox to Chrome, which is \"cut off\" after 16384 bytes and delivered individually.\n        ;\n        // Binary stuff\n        this._dataCount = 1;\n        this.chunk = (blob)=>{\n            const chunks = [];\n            const size = blob.byteLength;\n            const total = Math.ceil(size / this.chunkedMTU);\n            let index = 0;\n            let start = 0;\n            while(start < size){\n                const end = Math.min(size, start + this.chunkedMTU);\n                const b = blob.slice(start, end);\n                const chunk = {\n                    __peerData: this._dataCount,\n                    n: index,\n                    data: b,\n                    total: total\n                };\n                chunks.push(chunk);\n                start = end;\n                index++;\n            }\n            this._dataCount++;\n            return chunks;\n        };\n    }\n}\nfunction $fcbcc7538a6776d5$export$52c89ebcdc4f53f2(bufs) {\n    let size = 0;\n    for (const buf of bufs)size += buf.byteLength;\n    const result = new Uint8Array(size);\n    let offset = 0;\n    for (const buf of bufs){\n        result.set(buf, offset);\n        offset += buf.byteLength;\n    }\n    return result;\n}\n\n\n\n\nconst $fb63e766cfafaab9$var$webRTCAdapter = //@ts-ignore\n(0, $gCcbY$webrtcadapter).default || (0, $gCcbY$webrtcadapter);\nconst $fb63e766cfafaab9$export$25be9502477c137d = new class {\n    isWebRTCSupported() {\n        return typeof RTCPeerConnection !== \"undefined\";\n    }\n    isBrowserSupported() {\n        const browser = this.getBrowser();\n        const version = this.getVersion();\n        const validBrowser = this.supportedBrowsers.includes(browser);\n        if (!validBrowser) return false;\n        if (browser === \"chrome\") return version >= this.minChromeVersion;\n        if (browser === \"firefox\") return version >= this.minFirefoxVersion;\n        if (browser === \"safari\") return !this.isIOS && version >= this.minSafariVersion;\n        return false;\n    }\n    getBrowser() {\n        return $fb63e766cfafaab9$var$webRTCAdapter.browserDetails.browser;\n    }\n    getVersion() {\n        return $fb63e766cfafaab9$var$webRTCAdapter.browserDetails.version || 0;\n    }\n    isUnifiedPlanSupported() {\n        const browser = this.getBrowser();\n        const version = $fb63e766cfafaab9$var$webRTCAdapter.browserDetails.version || 0;\n        if (browser === \"chrome\" && version < this.minChromeVersion) return false;\n        if (browser === \"firefox\" && version >= this.minFirefoxVersion) return true;\n        if (!window.RTCRtpTransceiver || !(\"currentDirection\" in RTCRtpTransceiver.prototype)) return false;\n        let tempPc;\n        let supported = false;\n        try {\n            tempPc = new RTCPeerConnection();\n            tempPc.addTransceiver(\"audio\");\n            supported = true;\n        } catch (e) {} finally{\n            if (tempPc) tempPc.close();\n        }\n        return supported;\n    }\n    toString() {\n        return `Supports:\n    browser:${this.getBrowser()}\n    version:${this.getVersion()}\n    isIOS:${this.isIOS}\n    isWebRTCSupported:${this.isWebRTCSupported()}\n    isBrowserSupported:${this.isBrowserSupported()}\n    isUnifiedPlanSupported:${this.isUnifiedPlanSupported()}`;\n    }\n    constructor(){\n        this.isIOS = [\n            \"iPad\",\n            \"iPhone\",\n            \"iPod\"\n        ].includes(navigator.platform);\n        this.supportedBrowsers = [\n            \"firefox\",\n            \"chrome\",\n            \"safari\"\n        ];\n        this.minFirefoxVersion = 59;\n        this.minChromeVersion = 72;\n        this.minSafariVersion = 605;\n    }\n}();\n\n\nconst $9a84a32bf0bf36bb$export$f35f128fd59ea256 = (id)=>{\n    // Allow empty ids\n    return !id || /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.test(id);\n};\n\n\nconst $0e5fd1585784c252$export$4e61f672936bec77 = ()=>Math.random().toString(36).slice(2);\n\n\nconst $4f4134156c446392$var$DEFAULT_CONFIG = {\n    iceServers: [\n        {\n            urls: \"stun:stun.l.google.com:19302\"\n        },\n        {\n            urls: [\n                \"turn:eu-0.turn.peerjs.com:3478\",\n                \"turn:us-0.turn.peerjs.com:3478\"\n            ],\n            username: \"peerjs\",\n            credential: \"peerjsp\"\n        }\n    ],\n    sdpSemantics: \"unified-plan\"\n};\nclass $4f4134156c446392$export$f8f26dd395d7e1bd extends (0, $fcbcc7538a6776d5$export$f1c5f4c9cb95390b) {\n    noop() {}\n    blobToArrayBuffer(blob, cb) {\n        const fr = new FileReader();\n        fr.onload = function(evt) {\n            if (evt.target) cb(evt.target.result);\n        };\n        fr.readAsArrayBuffer(blob);\n        return fr;\n    }\n    binaryStringToArrayBuffer(binary) {\n        const byteArray = new Uint8Array(binary.length);\n        for(let i = 0; i < binary.length; i++)byteArray[i] = binary.charCodeAt(i) & 0xff;\n        return byteArray.buffer;\n    }\n    isSecure() {\n        return location.protocol === \"https:\";\n    }\n    constructor(...args){\n        super(...args);\n        this.CLOUD_HOST = \"0.peerjs.com\";\n        this.CLOUD_PORT = 443;\n        // Browsers that need chunking:\n        this.chunkedBrowsers = {\n            Chrome: 1,\n            chrome: 1\n        };\n        // Returns browser-agnostic default config\n        this.defaultConfig = $4f4134156c446392$var$DEFAULT_CONFIG;\n        this.browser = (0, $fb63e766cfafaab9$export$25be9502477c137d).getBrowser();\n        this.browserVersion = (0, $fb63e766cfafaab9$export$25be9502477c137d).getVersion();\n        this.pack = $gCcbY$pack;\n        this.unpack = $gCcbY$unpack;\n        /**\n\t * A hash of WebRTC features mapped to booleans that correspond to whether the feature is supported by the current browser.\n\t *\n\t * :::caution\n\t * Only the properties documented here are guaranteed to be present on `util.supports`\n\t * :::\n\t */ this.supports = function() {\n            const supported = {\n                browser: (0, $fb63e766cfafaab9$export$25be9502477c137d).isBrowserSupported(),\n                webRTC: (0, $fb63e766cfafaab9$export$25be9502477c137d).isWebRTCSupported(),\n                audioVideo: false,\n                data: false,\n                binaryBlob: false,\n                reliable: false\n            };\n            if (!supported.webRTC) return supported;\n            let pc;\n            try {\n                pc = new RTCPeerConnection($4f4134156c446392$var$DEFAULT_CONFIG);\n                supported.audioVideo = true;\n                let dc;\n                try {\n                    dc = pc.createDataChannel(\"_PEERJSTEST\", {\n                        ordered: true\n                    });\n                    supported.data = true;\n                    supported.reliable = !!dc.ordered;\n                    // Binary test\n                    try {\n                        dc.binaryType = \"blob\";\n                        supported.binaryBlob = !(0, $fb63e766cfafaab9$export$25be9502477c137d).isIOS;\n                    } catch (e) {}\n                } catch (e) {} finally{\n                    if (dc) dc.close();\n                }\n            } catch (e) {} finally{\n                if (pc) pc.close();\n            }\n            return supported;\n        }();\n        // Ensure alphanumeric ids\n        this.validateId = (0, $9a84a32bf0bf36bb$export$f35f128fd59ea256);\n        this.randomToken = (0, $0e5fd1585784c252$export$4e61f672936bec77);\n    }\n}\nconst $4f4134156c446392$export$7debb50ef11d5e0b = new $4f4134156c446392$export$f8f26dd395d7e1bd();\n\n\n\nconst $257947e92926277a$var$LOG_PREFIX = \"PeerJS: \";\nvar $257947e92926277a$export$243e62d78d3b544d;\n(function(LogLevel) {\n    /**\n\t * Prints no logs.\n\t */ LogLevel[LogLevel[\"Disabled\"] = 0] = \"Disabled\";\n    /**\n\t * Prints only errors.\n\t */ LogLevel[LogLevel[\"Errors\"] = 1] = \"Errors\";\n    /**\n\t * Prints errors and warnings.\n\t */ LogLevel[LogLevel[\"Warnings\"] = 2] = \"Warnings\";\n    /**\n\t * Prints all logs.\n\t */ LogLevel[LogLevel[\"All\"] = 3] = \"All\";\n})($257947e92926277a$export$243e62d78d3b544d || ($257947e92926277a$export$243e62d78d3b544d = {}));\nclass $257947e92926277a$var$Logger {\n    get logLevel() {\n        return this._logLevel;\n    }\n    set logLevel(logLevel) {\n        this._logLevel = logLevel;\n    }\n    log(...args) {\n        if (this._logLevel >= 3) this._print(3, ...args);\n    }\n    warn(...args) {\n        if (this._logLevel >= 2) this._print(2, ...args);\n    }\n    error(...args) {\n        if (this._logLevel >= 1) this._print(1, ...args);\n    }\n    setLogFunction(fn) {\n        this._print = fn;\n    }\n    _print(logLevel, ...rest) {\n        const copy = [\n            $257947e92926277a$var$LOG_PREFIX,\n            ...rest\n        ];\n        for(const i in copy)if (copy[i] instanceof Error) copy[i] = \"(\" + copy[i].name + \") \" + copy[i].message;\n        if (logLevel >= 3) console.log(...copy);\n        else if (logLevel >= 2) console.warn(\"WARNING\", ...copy);\n        else if (logLevel >= 1) console.error(\"ERROR\", ...copy);\n    }\n    constructor(){\n        this._logLevel = 0;\n    }\n}\nvar $257947e92926277a$export$2e2bcd8739ae039 = new $257947e92926277a$var$Logger();\n\n\nvar $c4dcfd1d1ea86647$exports = {};\n\"use strict\";\nvar $c4dcfd1d1ea86647$var$has = Object.prototype.hasOwnProperty, $c4dcfd1d1ea86647$var$prefix = \"~\";\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */ function $c4dcfd1d1ea86647$var$Events() {}\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n    $c4dcfd1d1ea86647$var$Events.prototype = Object.create(null);\n    //\n    // This hack is needed because the `__proto__` property is still inherited in\n    // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n    //\n    if (!new $c4dcfd1d1ea86647$var$Events().__proto__) $c4dcfd1d1ea86647$var$prefix = false;\n}\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */ function $c4dcfd1d1ea86647$var$EE(fn, context, once) {\n    this.fn = fn;\n    this.context = context;\n    this.once = once || false;\n}\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */ function $c4dcfd1d1ea86647$var$addListener(emitter, event, fn, context, once) {\n    if (typeof fn !== \"function\") throw new TypeError(\"The listener must be a function\");\n    var listener = new $c4dcfd1d1ea86647$var$EE(fn, context || emitter, once), evt = $c4dcfd1d1ea86647$var$prefix ? $c4dcfd1d1ea86647$var$prefix + event : event;\n    if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n    else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n    else emitter._events[evt] = [\n        emitter._events[evt],\n        listener\n    ];\n    return emitter;\n}\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */ function $c4dcfd1d1ea86647$var$clearEvent(emitter, evt) {\n    if (--emitter._eventsCount === 0) emitter._events = new $c4dcfd1d1ea86647$var$Events();\n    else delete emitter._events[evt];\n}\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */ function $c4dcfd1d1ea86647$var$EventEmitter() {\n    this._events = new $c4dcfd1d1ea86647$var$Events();\n    this._eventsCount = 0;\n}\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */ $c4dcfd1d1ea86647$var$EventEmitter.prototype.eventNames = function eventNames() {\n    var names = [], events, name;\n    if (this._eventsCount === 0) return names;\n    for(name in events = this._events)if ($c4dcfd1d1ea86647$var$has.call(events, name)) names.push($c4dcfd1d1ea86647$var$prefix ? name.slice(1) : name);\n    if (Object.getOwnPropertySymbols) return names.concat(Object.getOwnPropertySymbols(events));\n    return names;\n};\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */ $c4dcfd1d1ea86647$var$EventEmitter.prototype.listeners = function listeners(event) {\n    var evt = $c4dcfd1d1ea86647$var$prefix ? $c4dcfd1d1ea86647$var$prefix + event : event, handlers = this._events[evt];\n    if (!handlers) return [];\n    if (handlers.fn) return [\n        handlers.fn\n    ];\n    for(var i = 0, l = handlers.length, ee = new Array(l); i < l; i++)ee[i] = handlers[i].fn;\n    return ee;\n};\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */ $c4dcfd1d1ea86647$var$EventEmitter.prototype.listenerCount = function listenerCount(event) {\n    var evt = $c4dcfd1d1ea86647$var$prefix ? $c4dcfd1d1ea86647$var$prefix + event : event, listeners = this._events[evt];\n    if (!listeners) return 0;\n    if (listeners.fn) return 1;\n    return listeners.length;\n};\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */ $c4dcfd1d1ea86647$var$EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n    var evt = $c4dcfd1d1ea86647$var$prefix ? $c4dcfd1d1ea86647$var$prefix + event : event;\n    if (!this._events[evt]) return false;\n    var listeners = this._events[evt], len = arguments.length, args, i;\n    if (listeners.fn) {\n        if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n        switch(len){\n            case 1:\n                return listeners.fn.call(listeners.context), true;\n            case 2:\n                return listeners.fn.call(listeners.context, a1), true;\n            case 3:\n                return listeners.fn.call(listeners.context, a1, a2), true;\n            case 4:\n                return listeners.fn.call(listeners.context, a1, a2, a3), true;\n            case 5:\n                return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n            case 6:\n                return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n        }\n        for(i = 1, args = new Array(len - 1); i < len; i++)args[i - 1] = arguments[i];\n        listeners.fn.apply(listeners.context, args);\n    } else {\n        var length = listeners.length, j;\n        for(i = 0; i < length; i++){\n            if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n            switch(len){\n                case 1:\n                    listeners[i].fn.call(listeners[i].context);\n                    break;\n                case 2:\n                    listeners[i].fn.call(listeners[i].context, a1);\n                    break;\n                case 3:\n                    listeners[i].fn.call(listeners[i].context, a1, a2);\n                    break;\n                case 4:\n                    listeners[i].fn.call(listeners[i].context, a1, a2, a3);\n                    break;\n                default:\n                    if (!args) for(j = 1, args = new Array(len - 1); j < len; j++)args[j - 1] = arguments[j];\n                    listeners[i].fn.apply(listeners[i].context, args);\n            }\n        }\n    }\n    return true;\n};\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */ $c4dcfd1d1ea86647$var$EventEmitter.prototype.on = function on(event, fn, context) {\n    return $c4dcfd1d1ea86647$var$addListener(this, event, fn, context, false);\n};\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */ $c4dcfd1d1ea86647$var$EventEmitter.prototype.once = function once(event, fn, context) {\n    return $c4dcfd1d1ea86647$var$addListener(this, event, fn, context, true);\n};\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */ $c4dcfd1d1ea86647$var$EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n    var evt = $c4dcfd1d1ea86647$var$prefix ? $c4dcfd1d1ea86647$var$prefix + event : event;\n    if (!this._events[evt]) return this;\n    if (!fn) {\n        $c4dcfd1d1ea86647$var$clearEvent(this, evt);\n        return this;\n    }\n    var listeners = this._events[evt];\n    if (listeners.fn) {\n        if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) $c4dcfd1d1ea86647$var$clearEvent(this, evt);\n    } else {\n        for(var i = 0, events = [], length = listeners.length; i < length; i++)if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) events.push(listeners[i]);\n        //\n        // Reset the array, or remove it completely if we have no more listeners.\n        //\n        if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n        else $c4dcfd1d1ea86647$var$clearEvent(this, evt);\n    }\n    return this;\n};\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */ $c4dcfd1d1ea86647$var$EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n    var evt;\n    if (event) {\n        evt = $c4dcfd1d1ea86647$var$prefix ? $c4dcfd1d1ea86647$var$prefix + event : event;\n        if (this._events[evt]) $c4dcfd1d1ea86647$var$clearEvent(this, evt);\n    } else {\n        this._events = new $c4dcfd1d1ea86647$var$Events();\n        this._eventsCount = 0;\n    }\n    return this;\n};\n//\n// Alias methods names because people roll like that.\n//\n$c4dcfd1d1ea86647$var$EventEmitter.prototype.off = $c4dcfd1d1ea86647$var$EventEmitter.prototype.removeListener;\n$c4dcfd1d1ea86647$var$EventEmitter.prototype.addListener = $c4dcfd1d1ea86647$var$EventEmitter.prototype.on;\n//\n// Expose the prefix.\n//\n$c4dcfd1d1ea86647$var$EventEmitter.prefixed = $c4dcfd1d1ea86647$var$prefix;\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\n$c4dcfd1d1ea86647$var$EventEmitter.EventEmitter = $c4dcfd1d1ea86647$var$EventEmitter;\n$c4dcfd1d1ea86647$exports = $c4dcfd1d1ea86647$var$EventEmitter;\n\n\n\nvar $78455e22dea96b8c$exports = {};\n\n$parcel$export($78455e22dea96b8c$exports, \"ConnectionType\", () => $78455e22dea96b8c$export$3157d57b4135e3bc);\n$parcel$export($78455e22dea96b8c$exports, \"PeerErrorType\", () => $78455e22dea96b8c$export$9547aaa2e39030ff);\n$parcel$export($78455e22dea96b8c$exports, \"BaseConnectionErrorType\", () => $78455e22dea96b8c$export$7974935686149686);\n$parcel$export($78455e22dea96b8c$exports, \"DataConnectionErrorType\", () => $78455e22dea96b8c$export$49ae800c114df41d);\n$parcel$export($78455e22dea96b8c$exports, \"SerializationType\", () => $78455e22dea96b8c$export$89f507cf986a947);\n$parcel$export($78455e22dea96b8c$exports, \"SocketEventType\", () => $78455e22dea96b8c$export$3b5c4a4b6354f023);\n$parcel$export($78455e22dea96b8c$exports, \"ServerMessageType\", () => $78455e22dea96b8c$export$adb4a1754da6f10d);\nvar $78455e22dea96b8c$export$3157d57b4135e3bc;\n(function(ConnectionType) {\n    ConnectionType[\"Data\"] = \"data\";\n    ConnectionType[\"Media\"] = \"media\";\n})($78455e22dea96b8c$export$3157d57b4135e3bc || ($78455e22dea96b8c$export$3157d57b4135e3bc = {}));\nvar $78455e22dea96b8c$export$9547aaa2e39030ff;\n(function(PeerErrorType) {\n    /**\n\t * The client's browser does not support some or all WebRTC features that you are trying to use.\n\t */ PeerErrorType[\"BrowserIncompatible\"] = \"browser-incompatible\";\n    /**\n\t * You've already disconnected this peer from the server and can no longer make any new connections on it.\n\t */ PeerErrorType[\"Disconnected\"] = \"disconnected\";\n    /**\n\t * The ID passed into the Peer constructor contains illegal characters.\n\t */ PeerErrorType[\"InvalidID\"] = \"invalid-id\";\n    /**\n\t * The API key passed into the Peer constructor contains illegal characters or is not in the system (cloud server only).\n\t */ PeerErrorType[\"InvalidKey\"] = \"invalid-key\";\n    /**\n\t * Lost or cannot establish a connection to the signalling server.\n\t */ PeerErrorType[\"Network\"] = \"network\";\n    /**\n\t * The peer you're trying to connect to does not exist.\n\t */ PeerErrorType[\"PeerUnavailable\"] = \"peer-unavailable\";\n    /**\n\t * PeerJS is being used securely, but the cloud server does not support SSL. Use a custom PeerServer.\n\t */ PeerErrorType[\"SslUnavailable\"] = \"ssl-unavailable\";\n    /**\n\t * Unable to reach the server.\n\t */ PeerErrorType[\"ServerError\"] = \"server-error\";\n    /**\n\t * An error from the underlying socket.\n\t */ PeerErrorType[\"SocketError\"] = \"socket-error\";\n    /**\n\t * The underlying socket closed unexpectedly.\n\t */ PeerErrorType[\"SocketClosed\"] = \"socket-closed\";\n    /**\n\t * The ID passed into the Peer constructor is already taken.\n\t *\n\t * :::caution\n\t * This error is not fatal if your peer has open peer-to-peer connections.\n\t * This can happen if you attempt to {@apilink Peer.reconnect} a peer that has been disconnected from the server,\n\t * but its old ID has now been taken.\n\t * :::\n\t */ PeerErrorType[\"UnavailableID\"] = \"unavailable-id\";\n    /**\n\t * Native WebRTC errors.\n\t */ PeerErrorType[\"WebRTC\"] = \"webrtc\";\n})($78455e22dea96b8c$export$9547aaa2e39030ff || ($78455e22dea96b8c$export$9547aaa2e39030ff = {}));\nvar $78455e22dea96b8c$export$7974935686149686;\n(function(BaseConnectionErrorType) {\n    BaseConnectionErrorType[\"NegotiationFailed\"] = \"negotiation-failed\";\n    BaseConnectionErrorType[\"ConnectionClosed\"] = \"connection-closed\";\n})($78455e22dea96b8c$export$7974935686149686 || ($78455e22dea96b8c$export$7974935686149686 = {}));\nvar $78455e22dea96b8c$export$49ae800c114df41d;\n(function(DataConnectionErrorType) {\n    DataConnectionErrorType[\"NotOpenYet\"] = \"not-open-yet\";\n    DataConnectionErrorType[\"MessageToBig\"] = \"message-too-big\";\n})($78455e22dea96b8c$export$49ae800c114df41d || ($78455e22dea96b8c$export$49ae800c114df41d = {}));\nvar $78455e22dea96b8c$export$89f507cf986a947;\n(function(SerializationType) {\n    SerializationType[\"Binary\"] = \"binary\";\n    SerializationType[\"BinaryUTF8\"] = \"binary-utf8\";\n    SerializationType[\"JSON\"] = \"json\";\n    SerializationType[\"None\"] = \"raw\";\n})($78455e22dea96b8c$export$89f507cf986a947 || ($78455e22dea96b8c$export$89f507cf986a947 = {}));\nvar $78455e22dea96b8c$export$3b5c4a4b6354f023;\n(function(SocketEventType) {\n    SocketEventType[\"Message\"] = \"message\";\n    SocketEventType[\"Disconnected\"] = \"disconnected\";\n    SocketEventType[\"Error\"] = \"error\";\n    SocketEventType[\"Close\"] = \"close\";\n})($78455e22dea96b8c$export$3b5c4a4b6354f023 || ($78455e22dea96b8c$export$3b5c4a4b6354f023 = {}));\nvar $78455e22dea96b8c$export$adb4a1754da6f10d;\n(function(ServerMessageType) {\n    ServerMessageType[\"Heartbeat\"] = \"HEARTBEAT\";\n    ServerMessageType[\"Candidate\"] = \"CANDIDATE\";\n    ServerMessageType[\"Offer\"] = \"OFFER\";\n    ServerMessageType[\"Answer\"] = \"ANSWER\";\n    ServerMessageType[\"Open\"] = \"OPEN\";\n    ServerMessageType[\"Error\"] = \"ERROR\";\n    ServerMessageType[\"IdTaken\"] = \"ID-TAKEN\";\n    ServerMessageType[\"InvalidKey\"] = \"INVALID-KEY\";\n    ServerMessageType[\"Leave\"] = \"LEAVE\";\n    ServerMessageType[\"Expire\"] = \"EXPIRE\";\n})($78455e22dea96b8c$export$adb4a1754da6f10d || ($78455e22dea96b8c$export$adb4a1754da6f10d = {}));\n\n\nvar $f5f881ec4575f1fc$exports = {};\n$f5f881ec4575f1fc$exports = JSON.parse('{\"name\":\"peerjs\",\"version\":\"1.5.2\",\"keywords\":[\"peerjs\",\"webrtc\",\"p2p\",\"rtc\"],\"description\":\"PeerJS client\",\"homepage\":\"https://peerjs.com\",\"bugs\":{\"url\":\"https://github.com/peers/peerjs/issues\"},\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/peers/peerjs\"},\"license\":\"MIT\",\"contributors\":[\"Michelle Bu <michelle@michellebu.com>\",\"afrokick <devbyru@gmail.com>\",\"ericz <really.ez@gmail.com>\",\"Jairo <kidandcat@gmail.com>\",\"Jonas Gloning <34194370+jonasgloning@users.noreply.github.com>\",\"Jairo Caro-Accino Viciana <jairo@galax.be>\",\"Carlos Caballero <carlos.caballero.gonzalez@gmail.com>\",\"hc <hheennrryy@gmail.com>\",\"Muhammad Asif <capripio@gmail.com>\",\"PrashoonB <prashoonbhattacharjee@gmail.com>\",\"Harsh Bardhan Mishra <47351025+HarshCasper@users.noreply.github.com>\",\"akotynski <aleksanderkotbury@gmail.com>\",\"lmb <i@lmb.io>\",\"Jairooo <jairocaro@msn.com>\",\"Moritz St\\xfcckler <moritz.stueckler@gmail.com>\",\"Simon <crydotsnakegithub@gmail.com>\",\"Denis Lukov <denismassters@gmail.com>\",\"Philipp Hancke <fippo@andyet.net>\",\"Hans Oksendahl <hansoksendahl@gmail.com>\",\"Jess <jessachandler@gmail.com>\",\"khankuan <khankuan@gmail.com>\",\"DUODVK <kurmanov.work@gmail.com>\",\"XiZhao <kwang1imsa@gmail.com>\",\"Matthias Lohr <matthias@lohr.me>\",\"=frank tree <=frnktrb@googlemail.com>\",\"Andre Eckardt <aeckardt@outlook.com>\",\"Chris Cowan <agentme49@gmail.com>\",\"Alex Chuev <alex@chuev.com>\",\"alxnull <alxnull@e.mail.de>\",\"Yemel Jardi <angel.jardi@gmail.com>\",\"Ben Parnell <benjaminparnell.94@gmail.com>\",\"Benny Lichtner <bennlich@gmail.com>\",\"fresheneesz <bitetrudpublic@gmail.com>\",\"bob.barstead@exaptive.com <bob.barstead@exaptive.com>\",\"chandika <chandika@gmail.com>\",\"emersion <contact@emersion.fr>\",\"Christopher Van <cvan@users.noreply.github.com>\",\"eddieherm <edhermoso@gmail.com>\",\"Eduardo Pinho <enet4mikeenet@gmail.com>\",\"Evandro Zanatta <ezanatta@tray.net.br>\",\"Gardner Bickford <gardner@users.noreply.github.com>\",\"Gian Luca <gianluca.cecchi@cynny.com>\",\"PatrickJS <github@gdi2290.com>\",\"jonnyf <github@jonathanfoss.co.uk>\",\"Hizkia Felix <hizkifw@gmail.com>\",\"Hristo Oskov <hristo.oskov@gmail.com>\",\"Isaac Madwed <i.madwed@gmail.com>\",\"Ilya Konanykhin <ilya.konanykhin@gmail.com>\",\"jasonbarry <jasbarry@me.com>\",\"Jonathan Burke <jonathan.burke.1311@googlemail.com>\",\"Josh Hamit <josh.hamit@gmail.com>\",\"Jordan Austin <jrax86@gmail.com>\",\"Joel Wetzell <jwetzell@yahoo.com>\",\"xizhao <kevin.wang@cloudera.com>\",\"Alberto Torres <kungfoobar@gmail.com>\",\"Jonathan Mayol <mayoljonathan@gmail.com>\",\"Jefferson Felix <me@jsfelix.dev>\",\"Rolf Erik Lekang <me@rolflekang.com>\",\"Kevin Mai-Husan Chia <mhchia@users.noreply.github.com>\",\"Pepijn de Vos <pepijndevos@gmail.com>\",\"JooYoung <qkdlql@naver.com>\",\"Tobias Speicher <rootcommander@gmail.com>\",\"Steve Blaurock <sblaurock@gmail.com>\",\"Kyrylo Shegeda <shegeda@ualberta.ca>\",\"Diwank Singh Tomer <singh@diwank.name>\",\"So\\u0308ren Balko <Soeren.Balko@gmail.com>\",\"Arpit Solanki <solankiarpit1997@gmail.com>\",\"Yuki Ito <yuki@gnnk.net>\",\"Artur Zayats <zag2art@gmail.com>\"],\"funding\":{\"type\":\"opencollective\",\"url\":\"https://opencollective.com/peer\"},\"collective\":{\"type\":\"opencollective\",\"url\":\"https://opencollective.com/peer\"},\"files\":[\"dist/*\"],\"sideEffects\":[\"lib/global.ts\",\"lib/supports.ts\"],\"main\":\"dist/bundler.cjs\",\"module\":\"dist/bundler.mjs\",\"browser-minified\":\"dist/peerjs.min.js\",\"browser-unminified\":\"dist/peerjs.js\",\"browser-minified-cbor\":\"dist/serializer.cbor.mjs\",\"browser-minified-msgpack\":\"dist/serializer.msgpack.mjs\",\"types\":\"dist/types.d.ts\",\"engines\":{\"node\":\">= 14\"},\"targets\":{\"types\":{\"source\":\"lib/exports.ts\"},\"main\":{\"source\":\"lib/exports.ts\",\"sourceMap\":{\"inlineSources\":true}},\"module\":{\"source\":\"lib/exports.ts\",\"includeNodeModules\":[\"eventemitter3\"],\"sourceMap\":{\"inlineSources\":true}},\"browser-minified\":{\"context\":\"browser\",\"outputFormat\":\"global\",\"optimize\":true,\"engines\":{\"browsers\":\"chrome >= 83, edge >= 83, firefox >= 80, safari >= 15\"},\"source\":\"lib/global.ts\"},\"browser-unminified\":{\"context\":\"browser\",\"outputFormat\":\"global\",\"optimize\":false,\"engines\":{\"browsers\":\"chrome >= 83, edge >= 83, firefox >= 80, safari >= 15\"},\"source\":\"lib/global.ts\"},\"browser-minified-cbor\":{\"context\":\"browser\",\"outputFormat\":\"esmodule\",\"isLibrary\":true,\"optimize\":true,\"engines\":{\"browsers\":\"chrome >= 83, edge >= 83, firefox >= 102, safari >= 15\"},\"source\":\"lib/dataconnection/StreamConnection/Cbor.ts\"},\"browser-minified-msgpack\":{\"context\":\"browser\",\"outputFormat\":\"esmodule\",\"isLibrary\":true,\"optimize\":true,\"engines\":{\"browsers\":\"chrome >= 83, edge >= 83, firefox >= 102, safari >= 15\"},\"source\":\"lib/dataconnection/StreamConnection/MsgPack.ts\"}},\"scripts\":{\"contributors\":\"git-authors-cli --print=false && prettier --write package.json && git add package.json package-lock.json && git commit -m \\\\\"chore(contributors): update and sort contributors list\\\\\"\",\"check\":\"tsc --noEmit && tsc -p e2e/tsconfig.json --noEmit\",\"watch\":\"parcel watch\",\"build\":\"rm -rf dist && parcel build\",\"prepublishOnly\":\"npm run build\",\"test\":\"jest\",\"test:watch\":\"jest --watch\",\"coverage\":\"jest --coverage --collectCoverageFrom=\\\\\"./lib/**\\\\\"\",\"format\":\"prettier --write .\",\"format:check\":\"prettier --check .\",\"semantic-release\":\"semantic-release\",\"e2e\":\"wdio run e2e/wdio.local.conf.ts\",\"e2e:bstack\":\"wdio run e2e/wdio.bstack.conf.ts\"},\"devDependencies\":{\"@parcel/config-default\":\"^2.9.3\",\"@parcel/packager-ts\":\"^2.9.3\",\"@parcel/transformer-typescript-tsc\":\"^2.9.3\",\"@parcel/transformer-typescript-types\":\"^2.9.3\",\"@semantic-release/changelog\":\"^6.0.1\",\"@semantic-release/git\":\"^10.0.1\",\"@swc/core\":\"^1.3.27\",\"@swc/jest\":\"^0.2.24\",\"@types/jasmine\":\"^4.3.4\",\"@wdio/browserstack-service\":\"^8.11.2\",\"@wdio/cli\":\"^8.11.2\",\"@wdio/globals\":\"^8.11.2\",\"@wdio/jasmine-framework\":\"^8.11.2\",\"@wdio/local-runner\":\"^8.11.2\",\"@wdio/spec-reporter\":\"^8.11.2\",\"@wdio/types\":\"^8.10.4\",\"http-server\":\"^14.1.1\",\"jest\":\"^29.3.1\",\"jest-environment-jsdom\":\"^29.3.1\",\"mock-socket\":\"^9.0.0\",\"parcel\":\"^2.9.3\",\"prettier\":\"^3.0.0\",\"semantic-release\":\"^21.0.0\",\"ts-node\":\"^10.9.1\",\"typescript\":\"^5.0.0\",\"wdio-geckodriver-service\":\"^5.0.1\"},\"dependencies\":{\"@msgpack/msgpack\":\"^2.8.0\",\"cbor-x\":\"1.5.4\",\"eventemitter3\":\"^4.0.7\",\"peerjs-js-binarypack\":\"^2.1.0\",\"webrtc-adapter\":\"^8.0.0\"},\"alias\":{\"process\":false,\"buffer\":false}}');\n\n\nclass $8f5bfa60836d261d$export$4798917dbf149b79 extends (0, $c4dcfd1d1ea86647$exports.EventEmitter) {\n    constructor(secure, host, port, path, key, pingInterval = 5000){\n        super();\n        this.pingInterval = pingInterval;\n        this._disconnected = true;\n        this._messagesQueue = [];\n        const wsProtocol = secure ? \"wss://\" : \"ws://\";\n        this._baseUrl = wsProtocol + host + \":\" + port + path + \"peerjs?key=\" + key;\n    }\n    start(id, token) {\n        this._id = id;\n        const wsUrl = `${this._baseUrl}&id=${id}&token=${token}`;\n        if (!!this._socket || !this._disconnected) return;\n        this._socket = new WebSocket(wsUrl + \"&version=\" + (0, $f5f881ec4575f1fc$exports.version));\n        this._disconnected = false;\n        this._socket.onmessage = (event)=>{\n            let data;\n            try {\n                data = JSON.parse(event.data);\n                (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Server message received:\", data);\n            } catch (e) {\n                (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Invalid server message\", event.data);\n                return;\n            }\n            this.emit((0, $78455e22dea96b8c$export$3b5c4a4b6354f023).Message, data);\n        };\n        this._socket.onclose = (event)=>{\n            if (this._disconnected) return;\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Socket closed.\", event);\n            this._cleanup();\n            this._disconnected = true;\n            this.emit((0, $78455e22dea96b8c$export$3b5c4a4b6354f023).Disconnected);\n        };\n        // Take care of the queue of connections if necessary and make sure Peer knows\n        // socket is open.\n        this._socket.onopen = ()=>{\n            if (this._disconnected) return;\n            this._sendQueuedMessages();\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Socket open\");\n            this._scheduleHeartbeat();\n        };\n    }\n    _scheduleHeartbeat() {\n        this._wsPingTimer = setTimeout(()=>{\n            this._sendHeartbeat();\n        }, this.pingInterval);\n    }\n    _sendHeartbeat() {\n        if (!this._wsOpen()) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Cannot send heartbeat, because socket closed`);\n            return;\n        }\n        const message = JSON.stringify({\n            type: (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Heartbeat\n        });\n        this._socket.send(message);\n        this._scheduleHeartbeat();\n    }\n    /** Is the websocket currently open? */ _wsOpen() {\n        return !!this._socket && this._socket.readyState === 1;\n    }\n    /** Send queued messages. */ _sendQueuedMessages() {\n        //Create copy of queue and clear it,\n        //because send method push the message back to queue if smth will go wrong\n        const copiedQueue = [\n            ...this._messagesQueue\n        ];\n        this._messagesQueue = [];\n        for (const message of copiedQueue)this.send(message);\n    }\n    /** Exposed send for DC & Peer. */ send(data) {\n        if (this._disconnected) return;\n        // If we didn't get an ID yet, we can't yet send anything so we should queue\n        // up these messages.\n        if (!this._id) {\n            this._messagesQueue.push(data);\n            return;\n        }\n        if (!data.type) {\n            this.emit((0, $78455e22dea96b8c$export$3b5c4a4b6354f023).Error, \"Invalid message\");\n            return;\n        }\n        if (!this._wsOpen()) return;\n        const message = JSON.stringify(data);\n        this._socket.send(message);\n    }\n    close() {\n        if (this._disconnected) return;\n        this._cleanup();\n        this._disconnected = true;\n    }\n    _cleanup() {\n        if (this._socket) {\n            this._socket.onopen = this._socket.onmessage = this._socket.onclose = null;\n            this._socket.close();\n            this._socket = undefined;\n        }\n        clearTimeout(this._wsPingTimer);\n    }\n}\n\n\n\n\n\n\nclass $b82fb8fc0514bfc1$export$89e6bb5ad64bf4a {\n    constructor(connection){\n        this.connection = connection;\n    }\n    /** Returns a PeerConnection object set up correctly (for data, media). */ startConnection(options) {\n        const peerConnection = this._startPeerConnection();\n        // Set the connection's PC.\n        this.connection.peerConnection = peerConnection;\n        if (this.connection.type === (0, $78455e22dea96b8c$export$3157d57b4135e3bc).Media && options._stream) this._addTracksToConnection(options._stream, peerConnection);\n        // What do we need to do now?\n        if (options.originator) {\n            const dataConnection = this.connection;\n            const config = {\n                ordered: !!options.reliable\n            };\n            const dataChannel = peerConnection.createDataChannel(dataConnection.label, config);\n            dataConnection._initializeDataChannel(dataChannel);\n            this._makeOffer();\n        } else this.handleSDP(\"OFFER\", options.sdp);\n    }\n    /** Start a PC. */ _startPeerConnection() {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Creating RTCPeerConnection.\");\n        const peerConnection = new RTCPeerConnection(this.connection.provider.options.config);\n        this._setupListeners(peerConnection);\n        return peerConnection;\n    }\n    /** Set up various WebRTC listeners. */ _setupListeners(peerConnection) {\n        const peerId = this.connection.peer;\n        const connectionId = this.connection.connectionId;\n        const connectionType = this.connection.type;\n        const provider = this.connection.provider;\n        // ICE CANDIDATES.\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Listening for ICE candidates.\");\n        peerConnection.onicecandidate = (evt)=>{\n            if (!evt.candidate || !evt.candidate.candidate) return;\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Received ICE candidates for ${peerId}:`, evt.candidate);\n            provider.socket.send({\n                type: (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Candidate,\n                payload: {\n                    candidate: evt.candidate,\n                    type: connectionType,\n                    connectionId: connectionId\n                },\n                dst: peerId\n            });\n        };\n        peerConnection.oniceconnectionstatechange = ()=>{\n            switch(peerConnection.iceConnectionState){\n                case \"failed\":\n                    (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"iceConnectionState is failed, closing connections to \" + peerId);\n                    this.connection.emitError((0, $78455e22dea96b8c$export$7974935686149686).NegotiationFailed, \"Negotiation of connection to \" + peerId + \" failed.\");\n                    this.connection.close();\n                    break;\n                case \"closed\":\n                    (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"iceConnectionState is closed, closing connections to \" + peerId);\n                    this.connection.emitError((0, $78455e22dea96b8c$export$7974935686149686).ConnectionClosed, \"Connection to \" + peerId + \" closed.\");\n                    this.connection.close();\n                    break;\n                case \"disconnected\":\n                    (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"iceConnectionState changed to disconnected on the connection with \" + peerId);\n                    break;\n                case \"completed\":\n                    peerConnection.onicecandidate = ()=>{};\n                    break;\n            }\n            this.connection.emit(\"iceStateChanged\", peerConnection.iceConnectionState);\n        };\n        // DATACONNECTION.\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Listening for data channel\");\n        // Fired between offer and answer, so options should already be saved\n        // in the options hash.\n        peerConnection.ondatachannel = (evt)=>{\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Received data channel\");\n            const dataChannel = evt.channel;\n            const connection = provider.getConnection(peerId, connectionId);\n            connection._initializeDataChannel(dataChannel);\n        };\n        // MEDIACONNECTION.\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Listening for remote stream\");\n        peerConnection.ontrack = (evt)=>{\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Received remote stream\");\n            const stream = evt.streams[0];\n            const connection = provider.getConnection(peerId, connectionId);\n            if (connection.type === (0, $78455e22dea96b8c$export$3157d57b4135e3bc).Media) {\n                const mediaConnection = connection;\n                this._addStreamToMediaConnection(stream, mediaConnection);\n            }\n        };\n    }\n    cleanup() {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Cleaning up PeerConnection to \" + this.connection.peer);\n        const peerConnection = this.connection.peerConnection;\n        if (!peerConnection) return;\n        this.connection.peerConnection = null;\n        //unsubscribe from all PeerConnection's events\n        peerConnection.onicecandidate = peerConnection.oniceconnectionstatechange = peerConnection.ondatachannel = peerConnection.ontrack = ()=>{};\n        const peerConnectionNotClosed = peerConnection.signalingState !== \"closed\";\n        let dataChannelNotClosed = false;\n        const dataChannel = this.connection.dataChannel;\n        if (dataChannel) dataChannelNotClosed = !!dataChannel.readyState && dataChannel.readyState !== \"closed\";\n        if (peerConnectionNotClosed || dataChannelNotClosed) peerConnection.close();\n    }\n    async _makeOffer() {\n        const peerConnection = this.connection.peerConnection;\n        const provider = this.connection.provider;\n        try {\n            const offer = await peerConnection.createOffer(this.connection.options.constraints);\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Created offer.\");\n            if (this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === \"function\") offer.sdp = this.connection.options.sdpTransform(offer.sdp) || offer.sdp;\n            try {\n                await peerConnection.setLocalDescription(offer);\n                (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Set localDescription:\", offer, `for:${this.connection.peer}`);\n                let payload = {\n                    sdp: offer,\n                    type: this.connection.type,\n                    connectionId: this.connection.connectionId,\n                    metadata: this.connection.metadata\n                };\n                if (this.connection.type === (0, $78455e22dea96b8c$export$3157d57b4135e3bc).Data) {\n                    const dataConnection = this.connection;\n                    payload = {\n                        ...payload,\n                        label: dataConnection.label,\n                        reliable: dataConnection.reliable,\n                        serialization: dataConnection.serialization\n                    };\n                }\n                provider.socket.send({\n                    type: (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Offer,\n                    payload: payload,\n                    dst: this.connection.peer\n                });\n            } catch (err) {\n                // TODO: investigate why _makeOffer is being called from the answer\n                if (err != \"OperationError: Failed to set local offer sdp: Called in wrong state: kHaveRemoteOffer\") {\n                    provider.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).WebRTC, err);\n                    (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Failed to setLocalDescription, \", err);\n                }\n            }\n        } catch (err_1) {\n            provider.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).WebRTC, err_1);\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Failed to createOffer, \", err_1);\n        }\n    }\n    async _makeAnswer() {\n        const peerConnection = this.connection.peerConnection;\n        const provider = this.connection.provider;\n        try {\n            const answer = await peerConnection.createAnswer();\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Created answer.\");\n            if (this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === \"function\") answer.sdp = this.connection.options.sdpTransform(answer.sdp) || answer.sdp;\n            try {\n                await peerConnection.setLocalDescription(answer);\n                (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Set localDescription:`, answer, `for:${this.connection.peer}`);\n                provider.socket.send({\n                    type: (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Answer,\n                    payload: {\n                        sdp: answer,\n                        type: this.connection.type,\n                        connectionId: this.connection.connectionId\n                    },\n                    dst: this.connection.peer\n                });\n            } catch (err) {\n                provider.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).WebRTC, err);\n                (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Failed to setLocalDescription, \", err);\n            }\n        } catch (err_1) {\n            provider.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).WebRTC, err_1);\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Failed to create answer, \", err_1);\n        }\n    }\n    /** Handle an SDP. */ async handleSDP(type, sdp) {\n        sdp = new RTCSessionDescription(sdp);\n        const peerConnection = this.connection.peerConnection;\n        const provider = this.connection.provider;\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Setting remote description\", sdp);\n        const self = this;\n        try {\n            await peerConnection.setRemoteDescription(sdp);\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Set remoteDescription:${type} for:${this.connection.peer}`);\n            if (type === \"OFFER\") await self._makeAnswer();\n        } catch (err) {\n            provider.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).WebRTC, err);\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Failed to setRemoteDescription, \", err);\n        }\n    }\n    /** Handle a candidate. */ async handleCandidate(ice) {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(`handleCandidate:`, ice);\n        try {\n            await this.connection.peerConnection.addIceCandidate(ice);\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Added ICE candidate for:${this.connection.peer}`);\n        } catch (err) {\n            this.connection.provider.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).WebRTC, err);\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Failed to handleCandidate, \", err);\n        }\n    }\n    _addTracksToConnection(stream, peerConnection) {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(`add tracks from stream ${stream.id} to peer connection`);\n        if (!peerConnection.addTrack) return (0, $257947e92926277a$export$2e2bcd8739ae039).error(`Your browser does't support RTCPeerConnection#addTrack. Ignored.`);\n        stream.getTracks().forEach((track)=>{\n            peerConnection.addTrack(track, stream);\n        });\n    }\n    _addStreamToMediaConnection(stream, mediaConnection) {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(`add stream ${stream.id} to media connection ${mediaConnection.connectionId}`);\n        mediaConnection.addStream(stream);\n    }\n}\n\n\n\n\n\nclass $23779d1881157a18$export$6a678e589c8a4542 extends (0, $c4dcfd1d1ea86647$exports.EventEmitter) {\n    /**\n\t * Emits a typed error message.\n\t *\n\t * @internal\n\t */ emitError(type, err) {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).error(\"Error:\", err);\n        // @ts-ignore\n        this.emit(\"error\", new $23779d1881157a18$export$98871882f492de82(`${type}`, err));\n    }\n}\nclass $23779d1881157a18$export$98871882f492de82 extends Error {\n    /**\n\t * @internal\n\t */ constructor(type, err){\n        if (typeof err === \"string\") super(err);\n        else {\n            super();\n            Object.assign(this, err);\n        }\n        this.type = type;\n    }\n}\n\n\nclass $5045192fc6d387ba$export$23a2a68283c24d80 extends (0, $23779d1881157a18$export$6a678e589c8a4542) {\n    /**\n\t * Whether the media connection is active (e.g. your call has been answered).\n\t * You can check this if you want to set a maximum wait time for a one-sided call.\n\t */ get open() {\n        return this._open;\n    }\n    constructor(/**\n\t\t * The ID of the peer on the other end of this connection.\n\t\t */ peer, provider, options){\n        super();\n        this.peer = peer;\n        this.provider = provider;\n        this.options = options;\n        this._open = false;\n        this.metadata = options.metadata;\n    }\n}\n\n\nclass $5c1d08c7c57da9a3$export$4a84e95a2324ac29 extends (0, $5045192fc6d387ba$export$23a2a68283c24d80) {\n    static #_ = this.ID_PREFIX = \"mc_\";\n    /**\n\t * For media connections, this is always 'media'.\n\t */ get type() {\n        return (0, $78455e22dea96b8c$export$3157d57b4135e3bc).Media;\n    }\n    get localStream() {\n        return this._localStream;\n    }\n    get remoteStream() {\n        return this._remoteStream;\n    }\n    constructor(peerId, provider, options){\n        super(peerId, provider, options);\n        this._localStream = this.options._stream;\n        this.connectionId = this.options.connectionId || $5c1d08c7c57da9a3$export$4a84e95a2324ac29.ID_PREFIX + (0, $4f4134156c446392$export$7debb50ef11d5e0b).randomToken();\n        this._negotiator = new (0, $b82fb8fc0514bfc1$export$89e6bb5ad64bf4a)(this);\n        if (this._localStream) this._negotiator.startConnection({\n            _stream: this._localStream,\n            originator: true\n        });\n    }\n    /** Called by the Negotiator when the DataChannel is ready. */ _initializeDataChannel(dc) {\n        this.dataChannel = dc;\n        this.dataChannel.onopen = ()=>{\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`DC#${this.connectionId} dc connection success`);\n            this.emit(\"willCloseOnRemote\");\n        };\n        this.dataChannel.onclose = ()=>{\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`DC#${this.connectionId} dc closed for:`, this.peer);\n            this.close();\n        };\n    }\n    addStream(remoteStream) {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(\"Receiving stream\", remoteStream);\n        this._remoteStream = remoteStream;\n        super.emit(\"stream\", remoteStream); // Should we call this `open`?\n    }\n    /**\n\t * @internal\n\t */ handleMessage(message) {\n        const type = message.type;\n        const payload = message.payload;\n        switch(message.type){\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Answer:\n                // Forward to negotiator\n                this._negotiator.handleSDP(type, payload.sdp);\n                this._open = true;\n                break;\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Candidate:\n                this._negotiator.handleCandidate(payload.candidate);\n                break;\n            default:\n                (0, $257947e92926277a$export$2e2bcd8739ae039).warn(`Unrecognized message type:${type} from peer:${this.peer}`);\n                break;\n        }\n    }\n    /**\n     * When receiving a {@apilink PeerEvents | `call`} event on a peer, you can call\n     * `answer` on the media connection provided by the callback to accept the call\n     * and optionally send your own media stream.\n\n     *\n     * @param stream A WebRTC media stream.\n     * @param options\n     * @returns\n     */ answer(stream, options = {}) {\n        if (this._localStream) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).warn(\"Local stream already exists on this MediaConnection. Are you answering a call twice?\");\n            return;\n        }\n        this._localStream = stream;\n        if (options && options.sdpTransform) this.options.sdpTransform = options.sdpTransform;\n        this._negotiator.startConnection({\n            ...this.options._payload,\n            _stream: stream\n        });\n        // Retrieve lost messages stored because PeerConnection not set up.\n        const messages = this.provider._getMessages(this.connectionId);\n        for (const message of messages)this.handleMessage(message);\n        this._open = true;\n    }\n    /**\n\t * Exposed functionality for users.\n\t */ /**\n\t * Closes the media connection.\n\t */ close() {\n        if (this._negotiator) {\n            this._negotiator.cleanup();\n            this._negotiator = null;\n        }\n        this._localStream = null;\n        this._remoteStream = null;\n        if (this.provider) {\n            this.provider._removeConnection(this);\n            this.provider = null;\n        }\n        if (this.options && this.options._stream) this.options._stream = null;\n        if (!this.open) return;\n        this._open = false;\n        super.emit(\"close\");\n    }\n}\n\n\n\n\n\n\nclass $abf266641927cd89$export$2c4e825dc9120f87 {\n    constructor(_options){\n        this._options = _options;\n    }\n    _buildRequest(method) {\n        const protocol = this._options.secure ? \"https\" : \"http\";\n        const { host: host, port: port, path: path, key: key } = this._options;\n        const url = new URL(`${protocol}://${host}:${port}${path}${key}/${method}`);\n        // TODO: Why timestamp, why random?\n        url.searchParams.set(\"ts\", `${Date.now()}${Math.random()}`);\n        url.searchParams.set(\"version\", (0, $f5f881ec4575f1fc$exports.version));\n        return fetch(url.href, {\n            referrerPolicy: this._options.referrerPolicy\n        });\n    }\n    /** Get a unique ID from the server via XHR and initialize with it. */ async retrieveId() {\n        try {\n            const response = await this._buildRequest(\"id\");\n            if (response.status !== 200) throw new Error(`Error. Status:${response.status}`);\n            return response.text();\n        } catch (error) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).error(\"Error retrieving ID\", error);\n            let pathError = \"\";\n            if (this._options.path === \"/\" && this._options.host !== (0, $4f4134156c446392$export$7debb50ef11d5e0b).CLOUD_HOST) pathError = \" If you passed in a `path` to your self-hosted PeerServer, you'll also need to pass in that same path when creating a new Peer.\";\n            throw new Error(\"Could not get an ID from the server.\" + pathError);\n        }\n    }\n    /** @deprecated */ async listAllPeers() {\n        try {\n            const response = await this._buildRequest(\"peers\");\n            if (response.status !== 200) {\n                if (response.status === 401) {\n                    let helpfulError = \"\";\n                    if (this._options.host === (0, $4f4134156c446392$export$7debb50ef11d5e0b).CLOUD_HOST) helpfulError = \"It looks like you're using the cloud server. You can email team@peerjs.com to enable peer listing for your API key.\";\n                    else helpfulError = \"You need to enable `allow_discovery` on your self-hosted PeerServer to use this feature.\";\n                    throw new Error(\"It doesn't look like you have permission to list peers IDs. \" + helpfulError);\n                }\n                throw new Error(`Error. Status:${response.status}`);\n            }\n            return response.json();\n        } catch (error) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).error(\"Error retrieving list peers\", error);\n            throw new Error(\"Could not get list peers from the server.\" + error);\n        }\n    }\n}\n\n\n\n\n\n\n\n\n\n\nclass $6366c4ca161bc297$export$d365f7ad9d7df9c9 extends (0, $5045192fc6d387ba$export$23a2a68283c24d80) {\n    static #_ = this.ID_PREFIX = \"dc_\";\n    static #_1 = this.MAX_BUFFERED_AMOUNT = 8388608;\n    get type() {\n        return (0, $78455e22dea96b8c$export$3157d57b4135e3bc).Data;\n    }\n    constructor(peerId, provider, options){\n        super(peerId, provider, options);\n        this.connectionId = this.options.connectionId || $6366c4ca161bc297$export$d365f7ad9d7df9c9.ID_PREFIX + (0, $0e5fd1585784c252$export$4e61f672936bec77)();\n        this.label = this.options.label || this.connectionId;\n        this.reliable = !!this.options.reliable;\n        this._negotiator = new (0, $b82fb8fc0514bfc1$export$89e6bb5ad64bf4a)(this);\n        this._negotiator.startConnection(this.options._payload || {\n            originator: true,\n            reliable: this.reliable\n        });\n    }\n    /** Called by the Negotiator when the DataChannel is ready. */ _initializeDataChannel(dc) {\n        this.dataChannel = dc;\n        this.dataChannel.onopen = ()=>{\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`DC#${this.connectionId} dc connection success`);\n            this._open = true;\n            this.emit(\"open\");\n        };\n        this.dataChannel.onmessage = (e)=>{\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`DC#${this.connectionId} dc onmessage:`, e.data);\n        // this._handleDataMessage(e);\n        };\n        this.dataChannel.onclose = ()=>{\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`DC#${this.connectionId} dc closed for:`, this.peer);\n            this.close();\n        };\n    }\n    /**\n\t * Exposed functionality for users.\n\t */ /** Allows user to close connection. */ close(options) {\n        if (options?.flush) {\n            this.send({\n                __peerData: {\n                    type: \"close\"\n                }\n            });\n            return;\n        }\n        if (this._negotiator) {\n            this._negotiator.cleanup();\n            this._negotiator = null;\n        }\n        if (this.provider) {\n            this.provider._removeConnection(this);\n            this.provider = null;\n        }\n        if (this.dataChannel) {\n            this.dataChannel.onopen = null;\n            this.dataChannel.onmessage = null;\n            this.dataChannel.onclose = null;\n            this.dataChannel = null;\n        }\n        if (!this.open) return;\n        this._open = false;\n        super.emit(\"close\");\n    }\n    /** Allows user to send data. */ send(data, chunked = false) {\n        if (!this.open) {\n            this.emitError((0, $78455e22dea96b8c$export$49ae800c114df41d).NotOpenYet, \"Connection is not open. You should listen for the `open` event before sending messages.\");\n            return;\n        }\n        return this._send(data, chunked);\n    }\n    async handleMessage(message) {\n        const payload = message.payload;\n        switch(message.type){\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Answer:\n                await this._negotiator.handleSDP(message.type, payload.sdp);\n                break;\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Candidate:\n                await this._negotiator.handleCandidate(payload.candidate);\n                break;\n            default:\n                (0, $257947e92926277a$export$2e2bcd8739ae039).warn(\"Unrecognized message type:\", message.type, \"from peer:\", this.peer);\n                break;\n        }\n    }\n}\n\n\nclass $a229bedbcaa6ca23$export$ff7c9d4c11d94e8b extends (0, $6366c4ca161bc297$export$d365f7ad9d7df9c9) {\n    get bufferSize() {\n        return this._bufferSize;\n    }\n    _initializeDataChannel(dc) {\n        super._initializeDataChannel(dc);\n        this.dataChannel.binaryType = \"arraybuffer\";\n        this.dataChannel.addEventListener(\"message\", (e)=>this._handleDataMessage(e));\n    }\n    _bufferedSend(msg) {\n        if (this._buffering || !this._trySend(msg)) {\n            this._buffer.push(msg);\n            this._bufferSize = this._buffer.length;\n        }\n    }\n    // Returns true if the send succeeds.\n    _trySend(msg) {\n        if (!this.open) return false;\n        if (this.dataChannel.bufferedAmount > (0, $6366c4ca161bc297$export$d365f7ad9d7df9c9).MAX_BUFFERED_AMOUNT) {\n            this._buffering = true;\n            setTimeout(()=>{\n                this._buffering = false;\n                this._tryBuffer();\n            }, 50);\n            return false;\n        }\n        try {\n            this.dataChannel.send(msg);\n        } catch (e) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).error(`DC#:${this.connectionId} Error when sending:`, e);\n            this._buffering = true;\n            this.close();\n            return false;\n        }\n        return true;\n    }\n    // Try to send the first message in the buffer.\n    _tryBuffer() {\n        if (!this.open) return;\n        if (this._buffer.length === 0) return;\n        const msg = this._buffer[0];\n        if (this._trySend(msg)) {\n            this._buffer.shift();\n            this._bufferSize = this._buffer.length;\n            this._tryBuffer();\n        }\n    }\n    close(options) {\n        if (options?.flush) {\n            this.send({\n                __peerData: {\n                    type: \"close\"\n                }\n            });\n            return;\n        }\n        this._buffer = [];\n        this._bufferSize = 0;\n        super.close();\n    }\n    constructor(...args){\n        super(...args);\n        this._buffer = [];\n        this._bufferSize = 0;\n        this._buffering = false;\n    }\n}\n\n\n\n\nclass $9fcfddb3ae148f88$export$f0a5a64d5bb37108 extends (0, $a229bedbcaa6ca23$export$ff7c9d4c11d94e8b) {\n    close(options) {\n        super.close(options);\n        this._chunkedData = {};\n    }\n    constructor(peerId, provider, options){\n        super(peerId, provider, options);\n        this.chunker = new (0, $fcbcc7538a6776d5$export$f1c5f4c9cb95390b)();\n        this.serialization = (0, $78455e22dea96b8c$export$89f507cf986a947).Binary;\n        this._chunkedData = {};\n    }\n    // Handles a DataChannel message.\n    _handleDataMessage({ data: data }) {\n        const deserializedData = (0, $gCcbY$unpack)(data);\n        // PeerJS specific message\n        const peerData = deserializedData[\"__peerData\"];\n        if (peerData) {\n            if (peerData.type === \"close\") {\n                this.close();\n                return;\n            }\n            // Chunked data -- piece things back together.\n            // @ts-ignore\n            this._handleChunk(deserializedData);\n            return;\n        }\n        this.emit(\"data\", deserializedData);\n    }\n    _handleChunk(data) {\n        const id = data.__peerData;\n        const chunkInfo = this._chunkedData[id] || {\n            data: [],\n            count: 0,\n            total: data.total\n        };\n        chunkInfo.data[data.n] = new Uint8Array(data.data);\n        chunkInfo.count++;\n        this._chunkedData[id] = chunkInfo;\n        if (chunkInfo.total === chunkInfo.count) {\n            // Clean up before making the recursive call to `_handleDataMessage`.\n            delete this._chunkedData[id];\n            // We've received all the chunks--time to construct the complete data.\n            // const data = new Blob(chunkInfo.data);\n            const data = (0, $fcbcc7538a6776d5$export$52c89ebcdc4f53f2)(chunkInfo.data);\n            this._handleDataMessage({\n                data: data\n            });\n        }\n    }\n    _send(data, chunked) {\n        const blob = (0, $gCcbY$pack)(data);\n        if (blob instanceof Promise) return this._send_blob(blob);\n        if (!chunked && blob.byteLength > this.chunker.chunkedMTU) {\n            this._sendChunks(blob);\n            return;\n        }\n        this._bufferedSend(blob);\n    }\n    async _send_blob(blobPromise) {\n        const blob = await blobPromise;\n        if (blob.byteLength > this.chunker.chunkedMTU) {\n            this._sendChunks(blob);\n            return;\n        }\n        this._bufferedSend(blob);\n    }\n    _sendChunks(blob) {\n        const blobs = this.chunker.chunk(blob);\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(`DC#${this.connectionId} Try to send ${blobs.length} chunks...`);\n        for (const blob of blobs)this.send(blob, true);\n    }\n}\n\n\n\n\nclass $bbaee3f15f714663$export$6f88fe47d32c9c94 extends (0, $a229bedbcaa6ca23$export$ff7c9d4c11d94e8b) {\n    _handleDataMessage({ data: data }) {\n        super.emit(\"data\", data);\n    }\n    _send(data, _chunked) {\n        this._bufferedSend(data);\n    }\n    constructor(...args){\n        super(...args);\n        this.serialization = (0, $78455e22dea96b8c$export$89f507cf986a947).None;\n    }\n}\n\n\n\n\n\nclass $817f931e3f9096cf$export$48880ac635f47186 extends (0, $a229bedbcaa6ca23$export$ff7c9d4c11d94e8b) {\n    // Handles a DataChannel message.\n    _handleDataMessage({ data: data }) {\n        const deserializedData = this.parse(this.decoder.decode(data));\n        // PeerJS specific message\n        const peerData = deserializedData[\"__peerData\"];\n        if (peerData && peerData.type === \"close\") {\n            this.close();\n            return;\n        }\n        this.emit(\"data\", deserializedData);\n    }\n    _send(data, _chunked) {\n        const encodedData = this.encoder.encode(this.stringify(data));\n        if (encodedData.byteLength >= (0, $4f4134156c446392$export$7debb50ef11d5e0b).chunkedMTU) {\n            this.emitError((0, $78455e22dea96b8c$export$49ae800c114df41d).MessageToBig, \"Message too big for JSON channel\");\n            return;\n        }\n        this._bufferedSend(encodedData);\n    }\n    constructor(...args){\n        super(...args);\n        this.serialization = (0, $78455e22dea96b8c$export$89f507cf986a947).JSON;\n        this.encoder = new TextEncoder();\n        this.decoder = new TextDecoder();\n        this.stringify = JSON.stringify;\n        this.parse = JSON.parse;\n    }\n}\n\n\n\nclass $416260bce337df90$var$PeerOptions {\n}\nclass $416260bce337df90$export$ecd1fc136c422448 extends (0, $23779d1881157a18$export$6a678e589c8a4542) {\n    static #_ = this.DEFAULT_KEY = \"peerjs\";\n    /**\n\t * The brokering ID of this peer\n\t *\n\t * If no ID was specified in {@apilink Peer | the constructor},\n\t * this will be `undefined` until the {@apilink PeerEvents | `open`} event is emitted.\n\t */ get id() {\n        return this._id;\n    }\n    get options() {\n        return this._options;\n    }\n    get open() {\n        return this._open;\n    }\n    /**\n\t * @internal\n\t */ get socket() {\n        return this._socket;\n    }\n    /**\n\t * A hash of all connections associated with this peer, keyed by the remote peer's ID.\n\t * @deprecated\n\t * Return type will change from Object to Map<string,[]>\n\t */ get connections() {\n        const plainConnections = Object.create(null);\n        for (const [k, v] of this._connections)plainConnections[k] = v;\n        return plainConnections;\n    }\n    /**\n\t * true if this peer and all of its connections can no longer be used.\n\t */ get destroyed() {\n        return this._destroyed;\n    }\n    /**\n\t * false if there is an active connection to the PeerServer.\n\t */ get disconnected() {\n        return this._disconnected;\n    }\n    constructor(id, options){\n        super();\n        this._serializers = {\n            raw: (0, $bbaee3f15f714663$export$6f88fe47d32c9c94),\n            json: (0, $817f931e3f9096cf$export$48880ac635f47186),\n            binary: (0, $9fcfddb3ae148f88$export$f0a5a64d5bb37108),\n            \"binary-utf8\": (0, $9fcfddb3ae148f88$export$f0a5a64d5bb37108),\n            default: (0, $9fcfddb3ae148f88$export$f0a5a64d5bb37108)\n        };\n        this._id = null;\n        this._lastServerId = null;\n        // States.\n        this._destroyed = false // Connections have been killed\n        ;\n        this._disconnected = false // Connection to PeerServer killed but P2P connections still active\n        ;\n        this._open = false // Sockets and such are not yet open.\n        ;\n        this._connections = new Map() // All connections for this peer.\n        ;\n        this._lostMessages = new Map() // src => [list of messages]\n        ;\n        let userId;\n        // Deal with overloading\n        if (id && id.constructor == Object) options = id;\n        else if (id) userId = id.toString();\n        // Configurize options\n        options = {\n            debug: 0,\n            host: (0, $4f4134156c446392$export$7debb50ef11d5e0b).CLOUD_HOST,\n            port: (0, $4f4134156c446392$export$7debb50ef11d5e0b).CLOUD_PORT,\n            path: \"/\",\n            key: $416260bce337df90$export$ecd1fc136c422448.DEFAULT_KEY,\n            token: (0, $4f4134156c446392$export$7debb50ef11d5e0b).randomToken(),\n            config: (0, $4f4134156c446392$export$7debb50ef11d5e0b).defaultConfig,\n            referrerPolicy: \"strict-origin-when-cross-origin\",\n            serializers: {},\n            ...options\n        };\n        this._options = options;\n        this._serializers = {\n            ...this._serializers,\n            ...this.options.serializers\n        };\n        // Detect relative URL host.\n        if (this._options.host === \"/\") this._options.host = window.location.hostname;\n        // Set path correctly.\n        if (this._options.path) {\n            if (this._options.path[0] !== \"/\") this._options.path = \"/\" + this._options.path;\n            if (this._options.path[this._options.path.length - 1] !== \"/\") this._options.path += \"/\";\n        }\n        // Set whether we use SSL to same as current host\n        if (this._options.secure === undefined && this._options.host !== (0, $4f4134156c446392$export$7debb50ef11d5e0b).CLOUD_HOST) this._options.secure = (0, $4f4134156c446392$export$7debb50ef11d5e0b).isSecure();\n        else if (this._options.host == (0, $4f4134156c446392$export$7debb50ef11d5e0b).CLOUD_HOST) this._options.secure = true;\n        // Set a custom log function if present\n        if (this._options.logFunction) (0, $257947e92926277a$export$2e2bcd8739ae039).setLogFunction(this._options.logFunction);\n        (0, $257947e92926277a$export$2e2bcd8739ae039).logLevel = this._options.debug || 0;\n        this._api = new (0, $abf266641927cd89$export$2c4e825dc9120f87)(options);\n        this._socket = this._createServerConnection();\n        // Sanity checks\n        // Ensure WebRTC supported\n        if (!(0, $4f4134156c446392$export$7debb50ef11d5e0b).supports.audioVideo && !(0, $4f4134156c446392$export$7debb50ef11d5e0b).supports.data) {\n            this._delayedAbort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).BrowserIncompatible, \"The current browser does not support WebRTC\");\n            return;\n        }\n        // Ensure alphanumeric id\n        if (!!userId && !(0, $4f4134156c446392$export$7debb50ef11d5e0b).validateId(userId)) {\n            this._delayedAbort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).InvalidID, `ID \"${userId}\" is invalid`);\n            return;\n        }\n        if (userId) this._initialize(userId);\n        else this._api.retrieveId().then((id)=>this._initialize(id)).catch((error)=>this._abort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).ServerError, error));\n    }\n    _createServerConnection() {\n        const socket = new (0, $8f5bfa60836d261d$export$4798917dbf149b79)(this._options.secure, this._options.host, this._options.port, this._options.path, this._options.key, this._options.pingInterval);\n        socket.on((0, $78455e22dea96b8c$export$3b5c4a4b6354f023).Message, (data)=>{\n            this._handleMessage(data);\n        });\n        socket.on((0, $78455e22dea96b8c$export$3b5c4a4b6354f023).Error, (error)=>{\n            this._abort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).SocketError, error);\n        });\n        socket.on((0, $78455e22dea96b8c$export$3b5c4a4b6354f023).Disconnected, ()=>{\n            if (this.disconnected) return;\n            this.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).Network, \"Lost connection to server.\");\n            this.disconnect();\n        });\n        socket.on((0, $78455e22dea96b8c$export$3b5c4a4b6354f023).Close, ()=>{\n            if (this.disconnected) return;\n            this._abort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).SocketClosed, \"Underlying socket is already closed.\");\n        });\n        return socket;\n    }\n    /** Initialize a connection with the server. */ _initialize(id) {\n        this._id = id;\n        this.socket.start(id, this._options.token);\n    }\n    /** Handles messages from the server. */ _handleMessage(message) {\n        const type = message.type;\n        const payload = message.payload;\n        const peerId = message.src;\n        switch(type){\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Open:\n                this._lastServerId = this.id;\n                this._open = true;\n                this.emit(\"open\", this.id);\n                break;\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Error:\n                this._abort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).ServerError, payload.msg);\n                break;\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).IdTaken:\n                this._abort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).UnavailableID, `ID \"${this.id}\" is taken`);\n                break;\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).InvalidKey:\n                this._abort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).InvalidKey, `API KEY \"${this._options.key}\" is invalid`);\n                break;\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Leave:\n                (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Received leave message from ${peerId}`);\n                this._cleanupPeer(peerId);\n                this._connections.delete(peerId);\n                break;\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Expire:\n                this.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).PeerUnavailable, `Could not connect to peer ${peerId}`);\n                break;\n            case (0, $78455e22dea96b8c$export$adb4a1754da6f10d).Offer:\n                {\n                    // we should consider switching this to CALL/CONNECT, but this is the least breaking option.\n                    const connectionId = payload.connectionId;\n                    let connection = this.getConnection(peerId, connectionId);\n                    if (connection) {\n                        connection.close();\n                        (0, $257947e92926277a$export$2e2bcd8739ae039).warn(`Offer received for existing Connection ID:${connectionId}`);\n                    }\n                    // Create a new connection.\n                    if (payload.type === (0, $78455e22dea96b8c$export$3157d57b4135e3bc).Media) {\n                        const mediaConnection = new (0, $5c1d08c7c57da9a3$export$4a84e95a2324ac29)(peerId, this, {\n                            connectionId: connectionId,\n                            _payload: payload,\n                            metadata: payload.metadata\n                        });\n                        connection = mediaConnection;\n                        this._addConnection(peerId, connection);\n                        this.emit(\"call\", mediaConnection);\n                    } else if (payload.type === (0, $78455e22dea96b8c$export$3157d57b4135e3bc).Data) {\n                        const dataConnection = new this._serializers[payload.serialization](peerId, this, {\n                            connectionId: connectionId,\n                            _payload: payload,\n                            metadata: payload.metadata,\n                            label: payload.label,\n                            serialization: payload.serialization,\n                            reliable: payload.reliable\n                        });\n                        connection = dataConnection;\n                        this._addConnection(peerId, connection);\n                        this.emit(\"connection\", dataConnection);\n                    } else {\n                        (0, $257947e92926277a$export$2e2bcd8739ae039).warn(`Received malformed connection type:${payload.type}`);\n                        return;\n                    }\n                    // Find messages.\n                    const messages = this._getMessages(connectionId);\n                    for (const message of messages)connection.handleMessage(message);\n                    break;\n                }\n            default:\n                {\n                    if (!payload) {\n                        (0, $257947e92926277a$export$2e2bcd8739ae039).warn(`You received a malformed message from ${peerId} of type ${type}`);\n                        return;\n                    }\n                    const connectionId = payload.connectionId;\n                    const connection = this.getConnection(peerId, connectionId);\n                    if (connection && connection.peerConnection) // Pass it on.\n                    connection.handleMessage(message);\n                    else if (connectionId) // Store for possible later use\n                    this._storeMessage(connectionId, message);\n                    else (0, $257947e92926277a$export$2e2bcd8739ae039).warn(\"You received an unrecognized message:\", message);\n                    break;\n                }\n        }\n    }\n    /** Stores messages without a set up connection, to be claimed later. */ _storeMessage(connectionId, message) {\n        if (!this._lostMessages.has(connectionId)) this._lostMessages.set(connectionId, []);\n        this._lostMessages.get(connectionId).push(message);\n    }\n    /**\n\t * Retrieve messages from lost message store\n\t * @internal\n\t */ //TODO Change it to private\n    _getMessages(connectionId) {\n        const messages = this._lostMessages.get(connectionId);\n        if (messages) {\n            this._lostMessages.delete(connectionId);\n            return messages;\n        }\n        return [];\n    }\n    /**\n\t * Connects to the remote peer specified by id and returns a data connection.\n\t * @param peer The brokering ID of the remote peer (their {@apilink Peer.id}).\n\t * @param options for specifying details about Peer Connection\n\t */ connect(peer, options = {}) {\n        options = {\n            serialization: \"default\",\n            ...options\n        };\n        if (this.disconnected) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).warn(\"You cannot connect to a new Peer because you called .disconnect() on this Peer and ended your connection with the server. You can create a new Peer to reconnect, or call reconnect on this peer if you believe its ID to still be available.\");\n            this.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).Disconnected, \"Cannot connect to new Peer after disconnecting from server.\");\n            return;\n        }\n        const dataConnection = new this._serializers[options.serialization](peer, this, options);\n        this._addConnection(peer, dataConnection);\n        return dataConnection;\n    }\n    /**\n\t * Calls the remote peer specified by id and returns a media connection.\n\t * @param peer The brokering ID of the remote peer (their peer.id).\n\t * @param stream The caller's media stream\n\t * @param options Metadata associated with the connection, passed in by whoever initiated the connection.\n\t */ call(peer, stream, options = {}) {\n        if (this.disconnected) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).warn(\"You cannot connect to a new Peer because you called .disconnect() on this Peer and ended your connection with the server. You can create a new Peer to reconnect.\");\n            this.emitError((0, $78455e22dea96b8c$export$9547aaa2e39030ff).Disconnected, \"Cannot connect to new Peer after disconnecting from server.\");\n            return;\n        }\n        if (!stream) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).error(\"To call a peer, you must provide a stream from your browser's `getUserMedia`.\");\n            return;\n        }\n        const mediaConnection = new (0, $5c1d08c7c57da9a3$export$4a84e95a2324ac29)(peer, this, {\n            ...options,\n            _stream: stream\n        });\n        this._addConnection(peer, mediaConnection);\n        return mediaConnection;\n    }\n    /** Add a data/media connection to this peer. */ _addConnection(peerId, connection) {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(`add connection ${connection.type}:${connection.connectionId} to peerId:${peerId}`);\n        if (!this._connections.has(peerId)) this._connections.set(peerId, []);\n        this._connections.get(peerId).push(connection);\n    }\n    //TODO should be private\n    _removeConnection(connection) {\n        const connections = this._connections.get(connection.peer);\n        if (connections) {\n            const index = connections.indexOf(connection);\n            if (index !== -1) connections.splice(index, 1);\n        }\n        //remove from lost messages\n        this._lostMessages.delete(connection.connectionId);\n    }\n    /** Retrieve a data/media connection for this peer. */ getConnection(peerId, connectionId) {\n        const connections = this._connections.get(peerId);\n        if (!connections) return null;\n        for (const connection of connections){\n            if (connection.connectionId === connectionId) return connection;\n        }\n        return null;\n    }\n    _delayedAbort(type, message) {\n        setTimeout(()=>{\n            this._abort(type, message);\n        }, 0);\n    }\n    /**\n\t * Emits an error message and destroys the Peer.\n\t * The Peer is not destroyed if it's in a disconnected state, in which case\n\t * it retains its disconnected state and its existing connections.\n\t */ _abort(type, message) {\n        (0, $257947e92926277a$export$2e2bcd8739ae039).error(\"Aborting!\");\n        this.emitError(type, message);\n        if (!this._lastServerId) this.destroy();\n        else this.disconnect();\n    }\n    /**\n\t * Destroys the Peer: closes all active connections as well as the connection\n\t * to the server.\n\t *\n\t * :::caution\n\t * This cannot be undone; the respective peer object will no longer be able\n\t * to create or receive any connections, its ID will be forfeited on the server,\n\t * and all of its data and media connections will be closed.\n\t * :::\n\t */ destroy() {\n        if (this.destroyed) return;\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Destroy peer with ID:${this.id}`);\n        this.disconnect();\n        this._cleanup();\n        this._destroyed = true;\n        this.emit(\"close\");\n    }\n    /** Disconnects every connection on this peer. */ _cleanup() {\n        for (const peerId of this._connections.keys()){\n            this._cleanupPeer(peerId);\n            this._connections.delete(peerId);\n        }\n        this.socket.removeAllListeners();\n    }\n    /** Closes all connections to this peer. */ _cleanupPeer(peerId) {\n        const connections = this._connections.get(peerId);\n        if (!connections) return;\n        for (const connection of connections)connection.close();\n    }\n    /**\n\t * Disconnects the Peer's connection to the PeerServer. Does not close any\n\t *  active connections.\n\t * Warning: The peer can no longer create or accept connections after being\n\t *  disconnected. It also cannot reconnect to the server.\n\t */ disconnect() {\n        if (this.disconnected) return;\n        const currentId = this.id;\n        (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Disconnect peer with ID:${currentId}`);\n        this._disconnected = true;\n        this._open = false;\n        this.socket.close();\n        this._lastServerId = currentId;\n        this._id = null;\n        this.emit(\"disconnected\", currentId);\n    }\n    /** Attempts to reconnect with the same ID.\n\t *\n\t * Only {@apilink Peer.disconnect | disconnected peers} can be reconnected.\n\t * Destroyed peers cannot be reconnected.\n\t * If the connection fails (as an example, if the peer's old ID is now taken),\n\t * the peer's existing connections will not close, but any associated errors events will fire.\n\t */ reconnect() {\n        if (this.disconnected && !this.destroyed) {\n            (0, $257947e92926277a$export$2e2bcd8739ae039).log(`Attempting reconnection to server with ID ${this._lastServerId}`);\n            this._disconnected = false;\n            this._initialize(this._lastServerId);\n        } else if (this.destroyed) throw new Error(\"This peer cannot reconnect to the server. It has already been destroyed.\");\n        else if (!this.disconnected && !this.open) // Do nothing. We're still connecting the first time.\n        (0, $257947e92926277a$export$2e2bcd8739ae039).error(\"In a hurry? We're still trying to make the initial connection!\");\n        else throw new Error(`Peer ${this.id} cannot reconnect because it is not disconnected from the server!`);\n    }\n    /**\n\t * Get a list of available peer IDs. If you're running your own server, you'll\n\t * want to set allow_discovery: true in the PeerServer options. If you're using\n\t * the cloud server, email team@peerjs.com to get the functionality enabled for\n\t * your key.\n\t */ listAllPeers(cb = (_)=>{}) {\n        this._api.listAllPeers().then((peers)=>cb(peers)).catch((error)=>this._abort((0, $78455e22dea96b8c$export$9547aaa2e39030ff).ServerError, error));\n    }\n}\n\n\n\n\n\n\nclass $20dbe68149d7aad9$export$72aa44612e2200cd extends (0, $6366c4ca161bc297$export$d365f7ad9d7df9c9) {\n    constructor(peerId, provider, options){\n        super(peerId, provider, {\n            ...options,\n            reliable: true\n        });\n        this._CHUNK_SIZE = 32768;\n        this._splitStream = new TransformStream({\n            transform: (chunk, controller)=>{\n                for(let split = 0; split < chunk.length; split += this._CHUNK_SIZE)controller.enqueue(chunk.subarray(split, split + this._CHUNK_SIZE));\n            }\n        });\n        this._rawSendStream = new WritableStream({\n            write: async (chunk, controller)=>{\n                const openEvent = new Promise((resolve)=>this.dataChannel.addEventListener(\"bufferedamountlow\", resolve, {\n                        once: true\n                    }));\n                // if we can send the chunk now, send it\n                // if not, we wait until at least half of the sending buffer is free again\n                await (this.dataChannel.bufferedAmount <= (0, $6366c4ca161bc297$export$d365f7ad9d7df9c9).MAX_BUFFERED_AMOUNT - chunk.byteLength || openEvent);\n                // TODO: what can go wrong here?\n                try {\n                    this.dataChannel.send(chunk);\n                } catch (e) {\n                    (0, $257947e92926277a$export$2e2bcd8739ae039).error(`DC#:${this.connectionId} Error when sending:`, e);\n                    controller.error(e);\n                    this.close();\n                }\n            }\n        });\n        this.writer = this._splitStream.writable.getWriter();\n        this._rawReadStream = new ReadableStream({\n            start: (controller)=>{\n                this.once(\"open\", ()=>{\n                    this.dataChannel.addEventListener(\"message\", (e)=>{\n                        controller.enqueue(e.data);\n                    });\n                });\n            }\n        });\n        this._splitStream.readable.pipeTo(this._rawSendStream);\n    }\n    _initializeDataChannel(dc) {\n        super._initializeDataChannel(dc);\n        this.dataChannel.binaryType = \"arraybuffer\";\n        this.dataChannel.bufferedAmountLowThreshold = (0, $6366c4ca161bc297$export$d365f7ad9d7df9c9).MAX_BUFFERED_AMOUNT / 2;\n    }\n}\n\n\nconst $dcf98445f54823f4$var$NullValue = Symbol.for(null);\nfunction $dcf98445f54823f4$var$concatUint8Array(buffer1, buffer2) {\n    const tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n    tmp.set(buffer1, 0);\n    tmp.set(buffer2, buffer1.byteLength);\n    return new Uint8Array(tmp.buffer);\n}\nconst $dcf98445f54823f4$var$iterateOver = async function*(stream) {\n    const reader = stream.getReader();\n    try {\n        while(true){\n            const { done: done, value: value } = await reader.read();\n            if (done) return;\n            yield value;\n        }\n    } finally{\n        reader.releaseLock();\n    }\n};\nclass $dcf98445f54823f4$export$7e9583c3c8a0a2cc extends (0, $20dbe68149d7aad9$export$72aa44612e2200cd) {\n    constructor(peerId, provider, options){\n        super(peerId, provider, {\n            ...options,\n            reliable: true\n        });\n        this.serialization = \"Cbor\";\n        this._encoder = new (0, $gCcbY$Encoder)();\n        this._decoder = new (0, $gCcbY$Decoder)();\n        this._decoderStream = new TransformStream({\n            transform: (abchunk, controller)=>{\n                let chunk = new Uint8Array(abchunk);\n                if (this._inc) {\n                    chunk = $dcf98445f54823f4$var$concatUint8Array(this._inc, chunk);\n                    this._inc = null;\n                }\n                let values;\n                try {\n                    values = this._decoder.decodeMultiple(chunk);\n                } catch (error) {\n                    if (error.incomplete) {\n                        this._inc = chunk.subarray(error.lastPosition);\n                        values = error.values;\n                    } else throw error;\n                } finally{\n                    for (let value of values || []){\n                        if (value === null) value = $dcf98445f54823f4$var$NullValue;\n                        controller.enqueue(value);\n                    }\n                }\n            }\n        });\n        this._rawReadStream.pipeTo(this._decoderStream.writable);\n        (async ()=>{\n            for await (const msg of $dcf98445f54823f4$var$iterateOver(this._decoderStream.readable)){\n                if (msg.__peerData?.type === \"close\") {\n                    this.close();\n                    return;\n                }\n                this.emit(\"data\", msg);\n            }\n        })();\n    }\n    _send(data) {\n        return this.writer.write(this._encoder.encode(data));\n    }\n}\n\n\nclass $3849fc09dd8f140b$export$f6a74c7ffa2903e6 extends (0, $416260bce337df90$export$ecd1fc136c422448) {\n    constructor(...args){\n        super(...args);\n        this._serializers = {\n            Cbor: $dcf98445f54823f4$export$7e9583c3c8a0a2cc,\n            default: (0, $dcf98445f54823f4$export$7e9583c3c8a0a2cc)\n        };\n    }\n}\n\n\n\n\n\nclass $6e39230ab36396ad$export$80f5de1a66c4d624 extends (0, $20dbe68149d7aad9$export$72aa44612e2200cd) {\n    constructor(peerId, provider, options){\n        super(peerId, provider, options);\n        this.serialization = \"MsgPack\";\n        this._encoder = new (0, $gCcbY$Encoder1)();\n        (async ()=>{\n            for await (const msg of (0, $gCcbY$decodeMultiStream)(this._rawReadStream)){\n                // @ts-ignore\n                if (msg.__peerData?.type === \"close\") {\n                    this.close();\n                    return;\n                }\n                this.emit(\"data\", msg);\n            }\n        })();\n    }\n    _send(data) {\n        return this.writer.write(this._encoder.encode(data));\n    }\n}\n\n\nclass $1e0aff16be2c328e$export$d72c7bf8eef50853 extends (0, $416260bce337df90$export$ecd1fc136c422448) {\n    constructor(...args){\n        super(...args);\n        this._serializers = {\n            MsgPack: $6e39230ab36396ad$export$80f5de1a66c4d624,\n            default: (0, $6e39230ab36396ad$export$80f5de1a66c4d624)\n        };\n    }\n}\n\n\n\n\n\n\n\n\nvar $dd0187d7f28e386f$export$2e2bcd8739ae039 = (0, $416260bce337df90$export$ecd1fc136c422448);\n\n\nexport {$dd0187d7f28e386f$export$2e2bcd8739ae039 as default, $4f4134156c446392$export$7debb50ef11d5e0b as util, $a229bedbcaa6ca23$export$ff7c9d4c11d94e8b as BufferedConnection, $20dbe68149d7aad9$export$72aa44612e2200cd as StreamConnection, $dcf98445f54823f4$export$7e9583c3c8a0a2cc as Cbor, $6e39230ab36396ad$export$80f5de1a66c4d624 as MsgPack, $416260bce337df90$export$ecd1fc136c422448 as Peer, $1e0aff16be2c328e$export$d72c7bf8eef50853 as MsgPackPeer, $3849fc09dd8f140b$export$f6a74c7ffa2903e6 as CborPeer, $23779d1881157a18$export$98871882f492de82 as PeerError, $78455e22dea96b8c$export$3157d57b4135e3bc as ConnectionType, $78455e22dea96b8c$export$9547aaa2e39030ff as PeerErrorType, $78455e22dea96b8c$export$7974935686149686 as BaseConnectionErrorType, $78455e22dea96b8c$export$49ae800c114df41d as DataConnectionErrorType, $78455e22dea96b8c$export$89f507cf986a947 as SerializationType, $78455e22dea96b8c$export$3b5c4a4b6354f023 as SocketEventType, $78455e22dea96b8c$export$adb4a1754da6f10d as ServerMessageType};\n//# sourceMappingURL=bundler.mjs.map\n","export { util, type Util } from \"./util\";\nimport { Peer } from \"./peer\";\nimport { CborPeer } from \"./cborPeer\";\nimport { MsgPackPeer } from \"./msgPackPeer\";\n\nexport type { PeerEvents, PeerOptions } from \"./peer\";\n\nexport type {\n\tPeerJSOption,\n\tPeerConnectOption,\n\tAnswerOption,\n\tCallOption,\n} from \"./optionInterfaces\";\nexport type { UtilSupportsObj } from \"./util\";\nexport type { DataConnection } from \"./dataconnection/DataConnection\";\nexport type { MediaConnection } from \"./mediaconnection\";\nexport type { LogLevel } from \"./logger\";\nexport * from \"./enums\";\n\nexport { BufferedConnection } from \"./dataconnection/BufferedConnection/BufferedConnection\";\nexport { StreamConnection } from \"./dataconnection/StreamConnection/StreamConnection\";\nexport { Cbor } from \"./dataconnection/StreamConnection/Cbor\";\nexport { MsgPack } from \"./dataconnection/StreamConnection/MsgPack\";\nexport type { SerializerMapping } from \"./peer\";\n\nexport { Peer, MsgPackPeer, CborPeer };\n\nexport { PeerError } from \"./peerError\";\nexport default Peer;\n","import { BinaryPackChunker } from \"./dataconnection/BufferedConnection/binaryPackChunker\";\nimport * as BinaryPack from \"peerjs-js-binarypack\";\nimport { Supports } from \"./supports\";\nimport { validateId } from \"./utils/validateId\";\nimport { randomToken } from \"./utils/randomToken\";\n\nexport interface UtilSupportsObj {\n\t/**\n\t * The current browser.\n\t * This property can be useful in determining whether two peers can connect.\n\t *\n\t * ```ts\n\t * if (util.browser === 'firefox') {\n\t *  // OK to peer with Firefox peers.\n\t * }\n\t * ```\n\t *\n\t * `util.browser` can currently have the values\n\t * `'firefox', 'chrome', 'safari', 'edge', 'Not a supported browser.', 'Not a browser.' (unknown WebRTC-compatible agent).\n\t */\n\tbrowser: boolean;\n\twebRTC: boolean;\n\t/**\n\t * True if the current browser supports media streams and PeerConnection.\n\t */\n\taudioVideo: boolean;\n\t/**\n\t * True if the current browser supports DataChannel and PeerConnection.\n\t */\n\tdata: boolean;\n\tbinaryBlob: boolean;\n\t/**\n\t * True if the current browser supports reliable DataChannels.\n\t */\n\treliable: boolean;\n}\n\nconst DEFAULT_CONFIG = {\n\ticeServers: [\n\t\t{ urls: \"stun:stun.l.google.com:19302\" },\n\t\t{\n\t\t\turls: [\n\t\t\t\t\"turn:eu-0.turn.peerjs.com:3478\",\n\t\t\t\t\"turn:us-0.turn.peerjs.com:3478\",\n\t\t\t],\n\t\t\tusername: \"peerjs\",\n\t\t\tcredential: \"peerjsp\",\n\t\t},\n\t],\n\tsdpSemantics: \"unified-plan\",\n};\n\nexport class Util extends BinaryPackChunker {\n\tnoop(): void {}\n\n\treadonly CLOUD_HOST = \"0.peerjs.com\";\n\treadonly CLOUD_PORT = 443;\n\n\t// Browsers that need chunking:\n\treadonly chunkedBrowsers = { Chrome: 1, chrome: 1 };\n\n\t// Returns browser-agnostic default config\n\treadonly defaultConfig = DEFAULT_CONFIG;\n\n\treadonly browser = Supports.getBrowser();\n\treadonly browserVersion = Supports.getVersion();\n\n\tpack = BinaryPack.pack;\n\tunpack = BinaryPack.unpack;\n\n\t/**\n\t * A hash of WebRTC features mapped to booleans that correspond to whether the feature is supported by the current browser.\n\t *\n\t * :::caution\n\t * Only the properties documented here are guaranteed to be present on `util.supports`\n\t * :::\n\t */\n\treadonly supports = (function () {\n\t\tconst supported: UtilSupportsObj = {\n\t\t\tbrowser: Supports.isBrowserSupported(),\n\t\t\twebRTC: Supports.isWebRTCSupported(),\n\t\t\taudioVideo: false,\n\t\t\tdata: false,\n\t\t\tbinaryBlob: false,\n\t\t\treliable: false,\n\t\t};\n\n\t\tif (!supported.webRTC) return supported;\n\n\t\tlet pc: RTCPeerConnection;\n\n\t\ttry {\n\t\t\tpc = new RTCPeerConnection(DEFAULT_CONFIG);\n\n\t\t\tsupported.audioVideo = true;\n\n\t\t\tlet dc: RTCDataChannel;\n\n\t\t\ttry {\n\t\t\t\tdc = pc.createDataChannel(\"_PEERJSTEST\", { ordered: true });\n\t\t\t\tsupported.data = true;\n\t\t\t\tsupported.reliable = !!dc.ordered;\n\n\t\t\t\t// Binary test\n\t\t\t\ttry {\n\t\t\t\t\tdc.binaryType = \"blob\";\n\t\t\t\t\tsupported.binaryBlob = !Supports.isIOS;\n\t\t\t\t} catch (e) {}\n\t\t\t} catch (e) {\n\t\t\t} finally {\n\t\t\t\tif (dc) {\n\t\t\t\t\tdc.close();\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t} finally {\n\t\t\tif (pc) {\n\t\t\t\tpc.close();\n\t\t\t}\n\t\t}\n\n\t\treturn supported;\n\t})();\n\n\t// Ensure alphanumeric ids\n\tvalidateId = validateId;\n\trandomToken = randomToken;\n\n\tblobToArrayBuffer(\n\t\tblob: Blob,\n\t\tcb: (arg: ArrayBuffer | null) => void,\n\t): FileReader {\n\t\tconst fr = new FileReader();\n\n\t\tfr.onload = function (evt) {\n\t\t\tif (evt.target) {\n\t\t\t\tcb(evt.target.result as ArrayBuffer);\n\t\t\t}\n\t\t};\n\n\t\tfr.readAsArrayBuffer(blob);\n\n\t\treturn fr;\n\t}\n\n\tbinaryStringToArrayBuffer(binary: string): ArrayBuffer | SharedArrayBuffer {\n\t\tconst byteArray = new Uint8Array(binary.length);\n\n\t\tfor (let i = 0; i < binary.length; i++) {\n\t\t\tbyteArray[i] = binary.charCodeAt(i) & 0xff;\n\t\t}\n\n\t\treturn byteArray.buffer;\n\t}\n\tisSecure(): boolean {\n\t\treturn location.protocol === \"https:\";\n\t}\n}\n\n/**\n * Provides a variety of helpful utilities.\n *\n * :::caution\n * Only the utilities documented here are guaranteed to be present on `util`.\n * Undocumented utilities can be removed without warning.\n * We don't consider these to be breaking changes.\n * :::\n */\nexport const util = new Util();\n","export class BinaryPackChunker {\n\treadonly chunkedMTU = 16300; // The original 60000 bytes setting does not work when sending data from Firefox to Chrome, which is \"cut off\" after 16384 bytes and delivered individually.\n\n\t// Binary stuff\n\n\tprivate _dataCount: number = 1;\n\n\tchunk = (\n\t\tblob: ArrayBuffer,\n\t): { __peerData: number; n: number; total: number; data: Uint8Array }[] => {\n\t\tconst chunks = [];\n\t\tconst size = blob.byteLength;\n\t\tconst total = Math.ceil(size / this.chunkedMTU);\n\n\t\tlet index = 0;\n\t\tlet start = 0;\n\n\t\twhile (start < size) {\n\t\t\tconst end = Math.min(size, start + this.chunkedMTU);\n\t\t\tconst b = blob.slice(start, end);\n\n\t\t\tconst chunk = {\n\t\t\t\t__peerData: this._dataCount,\n\t\t\t\tn: index,\n\t\t\t\tdata: b,\n\t\t\t\ttotal,\n\t\t\t};\n\n\t\t\tchunks.push(chunk);\n\n\t\t\tstart = end;\n\t\t\tindex++;\n\t\t}\n\n\t\tthis._dataCount++;\n\n\t\treturn chunks;\n\t};\n}\n\nexport function concatArrayBuffers(bufs: Uint8Array[]) {\n\tlet size = 0;\n\tfor (const buf of bufs) {\n\t\tsize += buf.byteLength;\n\t}\n\tconst result = new Uint8Array(size);\n\tlet offset = 0;\n\tfor (const buf of bufs) {\n\t\tresult.set(buf, offset);\n\t\toffset += buf.byteLength;\n\t}\n\treturn result;\n}\n","import webRTCAdapter_import from \"webrtc-adapter\";\n\nconst webRTCAdapter: typeof webRTCAdapter_import =\n\t//@ts-ignore\n\twebRTCAdapter_import.default || webRTCAdapter_import;\n\nexport const Supports = new (class {\n\treadonly isIOS = [\"iPad\", \"iPhone\", \"iPod\"].includes(navigator.platform);\n\treadonly supportedBrowsers = [\"firefox\", \"chrome\", \"safari\"];\n\n\treadonly minFirefoxVersion = 59;\n\treadonly minChromeVersion = 72;\n\treadonly minSafariVersion = 605;\n\n\tisWebRTCSupported(): boolean {\n\t\treturn typeof RTCPeerConnection !== \"undefined\";\n\t}\n\n\tisBrowserSupported(): boolean {\n\t\tconst browser = this.getBrowser();\n\t\tconst version = this.getVersion();\n\n\t\tconst validBrowser = this.supportedBrowsers.includes(browser);\n\n\t\tif (!validBrowser) return false;\n\n\t\tif (browser === \"chrome\") return version >= this.minChromeVersion;\n\t\tif (browser === \"firefox\") return version >= this.minFirefoxVersion;\n\t\tif (browser === \"safari\")\n\t\t\treturn !this.isIOS && version >= this.minSafariVersion;\n\n\t\treturn false;\n\t}\n\n\tgetBrowser(): string {\n\t\treturn webRTCAdapter.browserDetails.browser;\n\t}\n\n\tgetVersion(): number {\n\t\treturn webRTCAdapter.browserDetails.version || 0;\n\t}\n\n\tisUnifiedPlanSupported(): boolean {\n\t\tconst browser = this.getBrowser();\n\t\tconst version = webRTCAdapter.browserDetails.version || 0;\n\n\t\tif (browser === \"chrome\" && version < this.minChromeVersion) return false;\n\t\tif (browser === \"firefox\" && version >= this.minFirefoxVersion) return true;\n\t\tif (\n\t\t\t!window.RTCRtpTransceiver ||\n\t\t\t!(\"currentDirection\" in RTCRtpTransceiver.prototype)\n\t\t)\n\t\t\treturn false;\n\n\t\tlet tempPc: RTCPeerConnection;\n\t\tlet supported = false;\n\n\t\ttry {\n\t\t\ttempPc = new RTCPeerConnection();\n\t\t\ttempPc.addTransceiver(\"audio\");\n\t\t\tsupported = true;\n\t\t} catch (e) {\n\t\t} finally {\n\t\t\tif (tempPc) {\n\t\t\t\ttempPc.close();\n\t\t\t}\n\t\t}\n\n\t\treturn supported;\n\t}\n\n\ttoString(): string {\n\t\treturn `Supports:\n    browser:${this.getBrowser()}\n    version:${this.getVersion()}\n    isIOS:${this.isIOS}\n    isWebRTCSupported:${this.isWebRTCSupported()}\n    isBrowserSupported:${this.isBrowserSupported()}\n    isUnifiedPlanSupported:${this.isUnifiedPlanSupported()}`;\n\t}\n})();\n","export const validateId = (id: string): boolean => {\n\t// Allow empty ids\n\treturn !id || /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.test(id);\n};\n","export const randomToken = () => Math.random().toString(36).slice(2);\n","import { util } from \"./util\";\nimport logger, { LogLevel } from \"./logger\";\nimport { Socket } from \"./socket\";\nimport { MediaConnection } from \"./mediaconnection\";\nimport type { DataConnection } from \"./dataconnection/DataConnection\";\nimport {\n\tConnectionType,\n\tPeerErrorType,\n\tServerMessageType,\n\tSocketEventType,\n} from \"./enums\";\nimport type { ServerMessage } from \"./servermessage\";\nimport { API } from \"./api\";\nimport type {\n\tCallOption,\n\tPeerConnectOption,\n\tPeerJSOption,\n} from \"./optionInterfaces\";\nimport { BinaryPack } from \"./dataconnection/BufferedConnection/BinaryPack\";\nimport { Raw } from \"./dataconnection/BufferedConnection/Raw\";\nimport { Json } from \"./dataconnection/BufferedConnection/Json\";\n\nimport { EventEmitterWithError, PeerError } from \"./peerError\";\n\nclass PeerOptions implements PeerJSOption {\n\t/**\n\t * Prints log messages depending on the debug level passed in.\n\t */\n\tdebug?: LogLevel;\n\t/**\n\t * Server host. Defaults to `0.peerjs.com`.\n\t * Also accepts `'/'` to signify relative hostname.\n\t */\n\thost?: string;\n\t/**\n\t * Server port. Defaults to `443`.\n\t */\n\tport?: number;\n\t/**\n\t * The path where your self-hosted PeerServer is running. Defaults to `'/'`\n\t */\n\tpath?: string;\n\t/**\n\t * API key for the PeerServer.\n\t * This is not used anymore.\n\t * @deprecated\n\t */\n\tkey?: string;\n\ttoken?: string;\n\t/**\n\t * Configuration hash passed to RTCPeerConnection.\n\t * This hash contains any custom ICE/TURN server configuration.\n\t *\n\t * Defaults to {@apilink util.defaultConfig}\n\t */\n\tconfig?: any;\n\t/**\n\t * Set to true `true` if you're using TLS.\n\t * :::danger\n\t * If possible *always use TLS*\n\t * :::\n\t */\n\tsecure?: boolean;\n\tpingInterval?: number;\n\treferrerPolicy?: ReferrerPolicy;\n\tlogFunction?: (logLevel: LogLevel, ...rest: any[]) => void;\n\tserializers?: SerializerMapping;\n}\n\nexport { type PeerOptions };\n\nexport interface SerializerMapping {\n\t[key: string]: new (\n\t\tpeerId: string,\n\t\tprovider: Peer,\n\t\toptions: any,\n\t) => DataConnection;\n}\n\nexport interface PeerEvents {\n\t/**\n\t * Emitted when a connection to the PeerServer is established.\n\t *\n\t * You may use the peer before this is emitted, but messages to the server will be queued. <code>id</code> is the brokering ID of the peer (which was either provided in the constructor or assigned by the server).<span class='tip'>You should not wait for this event before connecting to other peers if connection speed is important.</span>\n\t */\n\topen: (id: string) => void;\n\t/**\n\t * Emitted when a new data connection is established from a remote peer.\n\t */\n\tconnection: (dataConnection: DataConnection) => void;\n\t/**\n\t * Emitted when a remote peer attempts to call you.\n\t */\n\tcall: (mediaConnection: MediaConnection) => void;\n\t/**\n\t * Emitted when the peer is destroyed and can no longer accept or create any new connections.\n\t */\n\tclose: () => void;\n\t/**\n\t * Emitted when the peer is disconnected from the signalling server\n\t */\n\tdisconnected: (currentId: string) => void;\n\t/**\n\t * Errors on the peer are almost always fatal and will destroy the peer.\n\t *\n\t * Errors from the underlying socket and PeerConnections are forwarded here.\n\t */\n\terror: (error: PeerError<`${PeerErrorType}`>) => void;\n}\n/**\n * A peer who can initiate connections with other peers.\n */\nexport class Peer extends EventEmitterWithError<PeerErrorType, PeerEvents> {\n\tprivate static readonly DEFAULT_KEY = \"peerjs\";\n\n\tprotected readonly _serializers: SerializerMapping = {\n\t\traw: Raw,\n\t\tjson: Json,\n\t\tbinary: BinaryPack,\n\t\t\"binary-utf8\": BinaryPack,\n\n\t\tdefault: BinaryPack,\n\t};\n\tprivate readonly _options: PeerOptions;\n\tprivate readonly _api: API;\n\tprivate readonly _socket: Socket;\n\n\tprivate _id: string | null = null;\n\tprivate _lastServerId: string | null = null;\n\n\t// States.\n\tprivate _destroyed = false; // Connections have been killed\n\tprivate _disconnected = false; // Connection to PeerServer killed but P2P connections still active\n\tprivate _open = false; // Sockets and such are not yet open.\n\tprivate readonly _connections: Map<\n\t\tstring,\n\t\t(DataConnection | MediaConnection)[]\n\t> = new Map(); // All connections for this peer.\n\tprivate readonly _lostMessages: Map<string, ServerMessage[]> = new Map(); // src => [list of messages]\n\t/**\n\t * The brokering ID of this peer\n\t *\n\t * If no ID was specified in {@apilink Peer | the constructor},\n\t * this will be `undefined` until the {@apilink PeerEvents | `open`} event is emitted.\n\t */\n\tget id() {\n\t\treturn this._id;\n\t}\n\n\tget options() {\n\t\treturn this._options;\n\t}\n\n\tget open() {\n\t\treturn this._open;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tget socket() {\n\t\treturn this._socket;\n\t}\n\n\t/**\n\t * A hash of all connections associated with this peer, keyed by the remote peer's ID.\n\t * @deprecated\n\t * Return type will change from Object to Map<string,[]>\n\t */\n\tget connections(): Object {\n\t\tconst plainConnections = Object.create(null);\n\n\t\tfor (const [k, v] of this._connections) {\n\t\t\tplainConnections[k] = v;\n\t\t}\n\n\t\treturn plainConnections;\n\t}\n\n\t/**\n\t * true if this peer and all of its connections can no longer be used.\n\t */\n\tget destroyed() {\n\t\treturn this._destroyed;\n\t}\n\t/**\n\t * false if there is an active connection to the PeerServer.\n\t */\n\tget disconnected() {\n\t\treturn this._disconnected;\n\t}\n\n\t/**\n\t * A peer can connect to other peers and listen for connections.\n\t */\n\tconstructor();\n\n\t/**\n\t * A peer can connect to other peers and listen for connections.\n\t * @param options for specifying details about PeerServer\n\t */\n\tconstructor(options: PeerOptions);\n\n\t/**\n\t * A peer can connect to other peers and listen for connections.\n\t * @param id Other peers can connect to this peer using the provided ID.\n\t *     If no ID is given, one will be generated by the brokering server.\n\t * The ID must start and end with an alphanumeric character (lower or upper case character or a digit). In the middle of the ID spaces, dashes (-) and underscores (_) are allowed. Use {@apilink PeerOptions.metadata } to send identifying information.\n\t * @param options for specifying details about PeerServer\n\t */\n\tconstructor(id: string, options?: PeerOptions);\n\n\tconstructor(id?: string | PeerOptions, options?: PeerOptions) {\n\t\tsuper();\n\n\t\tlet userId: string | undefined;\n\n\t\t// Deal with overloading\n\t\tif (id && id.constructor == Object) {\n\t\t\toptions = id as PeerOptions;\n\t\t} else if (id) {\n\t\t\tuserId = id.toString();\n\t\t}\n\n\t\t// Configurize options\n\t\toptions = {\n\t\t\tdebug: 0, // 1: Errors, 2: Warnings, 3: All logs\n\t\t\thost: util.CLOUD_HOST,\n\t\t\tport: util.CLOUD_PORT,\n\t\t\tpath: \"/\",\n\t\t\tkey: Peer.DEFAULT_KEY,\n\t\t\ttoken: util.randomToken(),\n\t\t\tconfig: util.defaultConfig,\n\t\t\treferrerPolicy: \"strict-origin-when-cross-origin\",\n\t\t\tserializers: {},\n\t\t\t...options,\n\t\t};\n\t\tthis._options = options;\n\t\tthis._serializers = { ...this._serializers, ...this.options.serializers };\n\n\t\t// Detect relative URL host.\n\t\tif (this._options.host === \"/\") {\n\t\t\tthis._options.host = window.location.hostname;\n\t\t}\n\n\t\t// Set path correctly.\n\t\tif (this._options.path) {\n\t\t\tif (this._options.path[0] !== \"/\") {\n\t\t\t\tthis._options.path = \"/\" + this._options.path;\n\t\t\t}\n\t\t\tif (this._options.path[this._options.path.length - 1] !== \"/\") {\n\t\t\t\tthis._options.path += \"/\";\n\t\t\t}\n\t\t}\n\n\t\t// Set whether we use SSL to same as current host\n\t\tif (\n\t\t\tthis._options.secure === undefined &&\n\t\t\tthis._options.host !== util.CLOUD_HOST\n\t\t) {\n\t\t\tthis._options.secure = util.isSecure();\n\t\t} else if (this._options.host == util.CLOUD_HOST) {\n\t\t\tthis._options.secure = true;\n\t\t}\n\t\t// Set a custom log function if present\n\t\tif (this._options.logFunction) {\n\t\t\tlogger.setLogFunction(this._options.logFunction);\n\t\t}\n\n\t\tlogger.logLevel = this._options.debug || 0;\n\n\t\tthis._api = new API(options);\n\t\tthis._socket = this._createServerConnection();\n\n\t\t// Sanity checks\n\t\t// Ensure WebRTC supported\n\t\tif (!util.supports.audioVideo && !util.supports.data) {\n\t\t\tthis._delayedAbort(\n\t\t\t\tPeerErrorType.BrowserIncompatible,\n\t\t\t\t\"The current browser does not support WebRTC\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Ensure alphanumeric id\n\t\tif (!!userId && !util.validateId(userId)) {\n\t\t\tthis._delayedAbort(PeerErrorType.InvalidID, `ID \"${userId}\" is invalid`);\n\t\t\treturn;\n\t\t}\n\n\t\tif (userId) {\n\t\t\tthis._initialize(userId);\n\t\t} else {\n\t\t\tthis._api\n\t\t\t\t.retrieveId()\n\t\t\t\t.then((id) => this._initialize(id))\n\t\t\t\t.catch((error) => this._abort(PeerErrorType.ServerError, error));\n\t\t}\n\t}\n\n\tprivate _createServerConnection(): Socket {\n\t\tconst socket = new Socket(\n\t\t\tthis._options.secure,\n\t\t\tthis._options.host!,\n\t\t\tthis._options.port!,\n\t\t\tthis._options.path!,\n\t\t\tthis._options.key!,\n\t\t\tthis._options.pingInterval,\n\t\t);\n\n\t\tsocket.on(SocketEventType.Message, (data: ServerMessage) => {\n\t\t\tthis._handleMessage(data);\n\t\t});\n\n\t\tsocket.on(SocketEventType.Error, (error: string) => {\n\t\t\tthis._abort(PeerErrorType.SocketError, error);\n\t\t});\n\n\t\tsocket.on(SocketEventType.Disconnected, () => {\n\t\t\tif (this.disconnected) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.emitError(PeerErrorType.Network, \"Lost connection to server.\");\n\t\t\tthis.disconnect();\n\t\t});\n\n\t\tsocket.on(SocketEventType.Close, () => {\n\t\t\tif (this.disconnected) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._abort(\n\t\t\t\tPeerErrorType.SocketClosed,\n\t\t\t\t\"Underlying socket is already closed.\",\n\t\t\t);\n\t\t});\n\n\t\treturn socket;\n\t}\n\n\t/** Initialize a connection with the server. */\n\tprivate _initialize(id: string): void {\n\t\tthis._id = id;\n\t\tthis.socket.start(id, this._options.token!);\n\t}\n\n\t/** Handles messages from the server. */\n\tprivate _handleMessage(message: ServerMessage): void {\n\t\tconst type = message.type;\n\t\tconst payload = message.payload;\n\t\tconst peerId = message.src;\n\n\t\tswitch (type) {\n\t\t\tcase ServerMessageType.Open: // The connection to the server is open.\n\t\t\t\tthis._lastServerId = this.id;\n\t\t\t\tthis._open = true;\n\t\t\t\tthis.emit(\"open\", this.id);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.Error: // Server error.\n\t\t\t\tthis._abort(PeerErrorType.ServerError, payload.msg);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.IdTaken: // The selected ID is taken.\n\t\t\t\tthis._abort(PeerErrorType.UnavailableID, `ID \"${this.id}\" is taken`);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.InvalidKey: // The given API key cannot be found.\n\t\t\t\tthis._abort(\n\t\t\t\t\tPeerErrorType.InvalidKey,\n\t\t\t\t\t`API KEY \"${this._options.key}\" is invalid`,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.Leave: // Another peer has closed its connection to this peer.\n\t\t\t\tlogger.log(`Received leave message from ${peerId}`);\n\t\t\t\tthis._cleanupPeer(peerId);\n\t\t\t\tthis._connections.delete(peerId);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.Expire: // The offer sent to a peer has expired without response.\n\t\t\t\tthis.emitError(\n\t\t\t\t\tPeerErrorType.PeerUnavailable,\n\t\t\t\t\t`Could not connect to peer ${peerId}`,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.Offer: {\n\t\t\t\t// we should consider switching this to CALL/CONNECT, but this is the least breaking option.\n\t\t\t\tconst connectionId = payload.connectionId;\n\t\t\t\tlet connection = this.getConnection(peerId, connectionId);\n\n\t\t\t\tif (connection) {\n\t\t\t\t\tconnection.close();\n\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t`Offer received for existing Connection ID:${connectionId}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Create a new connection.\n\t\t\t\tif (payload.type === ConnectionType.Media) {\n\t\t\t\t\tconst mediaConnection = new MediaConnection(peerId, this, {\n\t\t\t\t\t\tconnectionId: connectionId,\n\t\t\t\t\t\t_payload: payload,\n\t\t\t\t\t\tmetadata: payload.metadata,\n\t\t\t\t\t});\n\t\t\t\t\tconnection = mediaConnection;\n\t\t\t\t\tthis._addConnection(peerId, connection);\n\t\t\t\t\tthis.emit(\"call\", mediaConnection);\n\t\t\t\t} else if (payload.type === ConnectionType.Data) {\n\t\t\t\t\tconst dataConnection = new this._serializers[payload.serialization](\n\t\t\t\t\t\tpeerId,\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconnectionId: connectionId,\n\t\t\t\t\t\t\t_payload: payload,\n\t\t\t\t\t\t\tmetadata: payload.metadata,\n\t\t\t\t\t\t\tlabel: payload.label,\n\t\t\t\t\t\t\tserialization: payload.serialization,\n\t\t\t\t\t\t\treliable: payload.reliable,\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t\tconnection = dataConnection;\n\n\t\t\t\t\tthis._addConnection(peerId, connection);\n\t\t\t\t\tthis.emit(\"connection\", dataConnection);\n\t\t\t\t} else {\n\t\t\t\t\tlogger.warn(`Received malformed connection type:${payload.type}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Find messages.\n\t\t\t\tconst messages = this._getMessages(connectionId);\n\t\t\t\tfor (const message of messages) {\n\t\t\t\t\tconnection.handleMessage(message);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tif (!payload) {\n\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t`You received a malformed message from ${peerId} of type ${type}`,\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst connectionId = payload.connectionId;\n\t\t\t\tconst connection = this.getConnection(peerId, connectionId);\n\n\t\t\t\tif (connection && connection.peerConnection) {\n\t\t\t\t\t// Pass it on.\n\t\t\t\t\tconnection.handleMessage(message);\n\t\t\t\t} else if (connectionId) {\n\t\t\t\t\t// Store for possible later use\n\t\t\t\t\tthis._storeMessage(connectionId, message);\n\t\t\t\t} else {\n\t\t\t\t\tlogger.warn(\"You received an unrecognized message:\", message);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/** Stores messages without a set up connection, to be claimed later. */\n\tprivate _storeMessage(connectionId: string, message: ServerMessage): void {\n\t\tif (!this._lostMessages.has(connectionId)) {\n\t\t\tthis._lostMessages.set(connectionId, []);\n\t\t}\n\n\t\tthis._lostMessages.get(connectionId).push(message);\n\t}\n\n\t/**\n\t * Retrieve messages from lost message store\n\t * @internal\n\t */\n\t//TODO Change it to private\n\tpublic _getMessages(connectionId: string): ServerMessage[] {\n\t\tconst messages = this._lostMessages.get(connectionId);\n\n\t\tif (messages) {\n\t\t\tthis._lostMessages.delete(connectionId);\n\t\t\treturn messages;\n\t\t}\n\n\t\treturn [];\n\t}\n\n\t/**\n\t * Connects to the remote peer specified by id and returns a data connection.\n\t * @param peer The brokering ID of the remote peer (their {@apilink Peer.id}).\n\t * @param options for specifying details about Peer Connection\n\t */\n\tconnect(peer: string, options: PeerConnectOption = {}): DataConnection {\n\t\toptions = {\n\t\t\tserialization: \"default\",\n\t\t\t...options,\n\t\t};\n\t\tif (this.disconnected) {\n\t\t\tlogger.warn(\n\t\t\t\t\"You cannot connect to a new Peer because you called \" +\n\t\t\t\t\t\".disconnect() on this Peer and ended your connection with the \" +\n\t\t\t\t\t\"server. You can create a new Peer to reconnect, or call reconnect \" +\n\t\t\t\t\t\"on this peer if you believe its ID to still be available.\",\n\t\t\t);\n\t\t\tthis.emitError(\n\t\t\t\tPeerErrorType.Disconnected,\n\t\t\t\t\"Cannot connect to new Peer after disconnecting from server.\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst dataConnection = new this._serializers[options.serialization](\n\t\t\tpeer,\n\t\t\tthis,\n\t\t\toptions,\n\t\t);\n\t\tthis._addConnection(peer, dataConnection);\n\t\treturn dataConnection;\n\t}\n\n\t/**\n\t * Calls the remote peer specified by id and returns a media connection.\n\t * @param peer The brokering ID of the remote peer (their peer.id).\n\t * @param stream The caller's media stream\n\t * @param options Metadata associated with the connection, passed in by whoever initiated the connection.\n\t */\n\tcall(\n\t\tpeer: string,\n\t\tstream: MediaStream,\n\t\toptions: CallOption = {},\n\t): MediaConnection {\n\t\tif (this.disconnected) {\n\t\t\tlogger.warn(\n\t\t\t\t\"You cannot connect to a new Peer because you called \" +\n\t\t\t\t\t\".disconnect() on this Peer and ended your connection with the \" +\n\t\t\t\t\t\"server. You can create a new Peer to reconnect.\",\n\t\t\t);\n\t\t\tthis.emitError(\n\t\t\t\tPeerErrorType.Disconnected,\n\t\t\t\t\"Cannot connect to new Peer after disconnecting from server.\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!stream) {\n\t\t\tlogger.error(\n\t\t\t\t\"To call a peer, you must provide a stream from your browser's `getUserMedia`.\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst mediaConnection = new MediaConnection(peer, this, {\n\t\t\t...options,\n\t\t\t_stream: stream,\n\t\t});\n\t\tthis._addConnection(peer, mediaConnection);\n\t\treturn mediaConnection;\n\t}\n\n\t/** Add a data/media connection to this peer. */\n\tprivate _addConnection(\n\t\tpeerId: string,\n\t\tconnection: MediaConnection | DataConnection,\n\t): void {\n\t\tlogger.log(\n\t\t\t`add connection ${connection.type}:${connection.connectionId} to peerId:${peerId}`,\n\t\t);\n\n\t\tif (!this._connections.has(peerId)) {\n\t\t\tthis._connections.set(peerId, []);\n\t\t}\n\t\tthis._connections.get(peerId).push(connection);\n\t}\n\n\t//TODO should be private\n\t_removeConnection(connection: DataConnection | MediaConnection): void {\n\t\tconst connections = this._connections.get(connection.peer);\n\n\t\tif (connections) {\n\t\t\tconst index = connections.indexOf(connection);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tconnections.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\t//remove from lost messages\n\t\tthis._lostMessages.delete(connection.connectionId);\n\t}\n\n\t/** Retrieve a data/media connection for this peer. */\n\tgetConnection(\n\t\tpeerId: string,\n\t\tconnectionId: string,\n\t): null | DataConnection | MediaConnection {\n\t\tconst connections = this._connections.get(peerId);\n\t\tif (!connections) {\n\t\t\treturn null;\n\t\t}\n\n\t\tfor (const connection of connections) {\n\t\t\tif (connection.connectionId === connectionId) {\n\t\t\t\treturn connection;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _delayedAbort(type: PeerErrorType, message: string | Error): void {\n\t\tsetTimeout(() => {\n\t\t\tthis._abort(type, message);\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Emits an error message and destroys the Peer.\n\t * The Peer is not destroyed if it's in a disconnected state, in which case\n\t * it retains its disconnected state and its existing connections.\n\t */\n\tprivate _abort(type: PeerErrorType, message: string | Error): void {\n\t\tlogger.error(\"Aborting!\");\n\n\t\tthis.emitError(type, message);\n\n\t\tif (!this._lastServerId) {\n\t\t\tthis.destroy();\n\t\t} else {\n\t\t\tthis.disconnect();\n\t\t}\n\t}\n\n\t/**\n\t * Destroys the Peer: closes all active connections as well as the connection\n\t * to the server.\n\t *\n\t * :::caution\n\t * This cannot be undone; the respective peer object will no longer be able\n\t * to create or receive any connections, its ID will be forfeited on the server,\n\t * and all of its data and media connections will be closed.\n\t * :::\n\t */\n\tdestroy(): void {\n\t\tif (this.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tlogger.log(`Destroy peer with ID:${this.id}`);\n\n\t\tthis.disconnect();\n\t\tthis._cleanup();\n\n\t\tthis._destroyed = true;\n\n\t\tthis.emit(\"close\");\n\t}\n\n\t/** Disconnects every connection on this peer. */\n\tprivate _cleanup(): void {\n\t\tfor (const peerId of this._connections.keys()) {\n\t\t\tthis._cleanupPeer(peerId);\n\t\t\tthis._connections.delete(peerId);\n\t\t}\n\n\t\tthis.socket.removeAllListeners();\n\t}\n\n\t/** Closes all connections to this peer. */\n\tprivate _cleanupPeer(peerId: string): void {\n\t\tconst connections = this._connections.get(peerId);\n\n\t\tif (!connections) return;\n\n\t\tfor (const connection of connections) {\n\t\t\tconnection.close();\n\t\t}\n\t}\n\n\t/**\n\t * Disconnects the Peer's connection to the PeerServer. Does not close any\n\t *  active connections.\n\t * Warning: The peer can no longer create or accept connections after being\n\t *  disconnected. It also cannot reconnect to the server.\n\t */\n\tdisconnect(): void {\n\t\tif (this.disconnected) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentId = this.id;\n\n\t\tlogger.log(`Disconnect peer with ID:${currentId}`);\n\n\t\tthis._disconnected = true;\n\t\tthis._open = false;\n\n\t\tthis.socket.close();\n\n\t\tthis._lastServerId = currentId;\n\t\tthis._id = null;\n\n\t\tthis.emit(\"disconnected\", currentId);\n\t}\n\n\t/** Attempts to reconnect with the same ID.\n\t *\n\t * Only {@apilink Peer.disconnect | disconnected peers} can be reconnected.\n\t * Destroyed peers cannot be reconnected.\n\t * If the connection fails (as an example, if the peer's old ID is now taken),\n\t * the peer's existing connections will not close, but any associated errors events will fire.\n\t */\n\treconnect(): void {\n\t\tif (this.disconnected && !this.destroyed) {\n\t\t\tlogger.log(\n\t\t\t\t`Attempting reconnection to server with ID ${this._lastServerId}`,\n\t\t\t);\n\t\t\tthis._disconnected = false;\n\t\t\tthis._initialize(this._lastServerId!);\n\t\t} else if (this.destroyed) {\n\t\t\tthrow new Error(\n\t\t\t\t\"This peer cannot reconnect to the server. It has already been destroyed.\",\n\t\t\t);\n\t\t} else if (!this.disconnected && !this.open) {\n\t\t\t// Do nothing. We're still connecting the first time.\n\t\t\tlogger.error(\n\t\t\t\t\"In a hurry? We're still trying to make the initial connection!\",\n\t\t\t);\n\t\t} else {\n\t\t\tthrow new Error(\n\t\t\t\t`Peer ${this.id} cannot reconnect because it is not disconnected from the server!`,\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Get a list of available peer IDs. If you're running your own server, you'll\n\t * want to set allow_discovery: true in the PeerServer options. If you're using\n\t * the cloud server, email team@peerjs.com to get the functionality enabled for\n\t * your key.\n\t */\n\tlistAllPeers(cb = (_: any[]) => {}): void {\n\t\tthis._api\n\t\t\t.listAllPeers()\n\t\t\t.then((peers) => cb(peers))\n\t\t\t.catch((error) => this._abort(PeerErrorType.ServerError, error));\n\t}\n}\n","const LOG_PREFIX = \"PeerJS: \";\n\n/*\nPrints log messages depending on the debug level passed in. Defaults to 0.\n0  Prints no logs.\n1  Prints only errors.\n2  Prints errors and warnings.\n3  Prints all logs.\n*/\nexport enum LogLevel {\n\t/**\n\t * Prints no logs.\n\t */\n\tDisabled,\n\t/**\n\t * Prints only errors.\n\t */\n\tErrors,\n\t/**\n\t * Prints errors and warnings.\n\t */\n\tWarnings,\n\t/**\n\t * Prints all logs.\n\t */\n\tAll,\n}\n\nclass Logger {\n\tprivate _logLevel = LogLevel.Disabled;\n\n\tget logLevel(): LogLevel {\n\t\treturn this._logLevel;\n\t}\n\n\tset logLevel(logLevel: LogLevel) {\n\t\tthis._logLevel = logLevel;\n\t}\n\n\tlog(...args: any[]) {\n\t\tif (this._logLevel >= LogLevel.All) {\n\t\t\tthis._print(LogLevel.All, ...args);\n\t\t}\n\t}\n\n\twarn(...args: any[]) {\n\t\tif (this._logLevel >= LogLevel.Warnings) {\n\t\t\tthis._print(LogLevel.Warnings, ...args);\n\t\t}\n\t}\n\n\terror(...args: any[]) {\n\t\tif (this._logLevel >= LogLevel.Errors) {\n\t\t\tthis._print(LogLevel.Errors, ...args);\n\t\t}\n\t}\n\n\tsetLogFunction(fn: (logLevel: LogLevel, ..._: any[]) => void): void {\n\t\tthis._print = fn;\n\t}\n\n\tprivate _print(logLevel: LogLevel, ...rest: any[]): void {\n\t\tconst copy = [LOG_PREFIX, ...rest];\n\n\t\tfor (const i in copy) {\n\t\t\tif (copy[i] instanceof Error) {\n\t\t\t\tcopy[i] = \"(\" + copy[i].name + \") \" + copy[i].message;\n\t\t\t}\n\t\t}\n\n\t\tif (logLevel >= LogLevel.All) {\n\t\t\tconsole.log(...copy);\n\t\t} else if (logLevel >= LogLevel.Warnings) {\n\t\t\tconsole.warn(\"WARNING\", ...copy);\n\t\t} else if (logLevel >= LogLevel.Errors) {\n\t\t\tconsole.error(\"ERROR\", ...copy);\n\t\t}\n\t}\n}\n\nexport default new Logger();\n","import { EventEmitter } from \"eventemitter3\";\nimport logger from \"./logger\";\nimport { ServerMessageType, SocketEventType } from \"./enums\";\nimport { version } from \"../package.json\";\n\n/**\n * An abstraction on top of WebSockets to provide fastest\n * possible connection for peers.\n */\nexport class Socket extends EventEmitter {\n\tprivate _disconnected: boolean = true;\n\tprivate _id?: string;\n\tprivate _messagesQueue: Array<object> = [];\n\tprivate _socket?: WebSocket;\n\tprivate _wsPingTimer?: any;\n\tprivate readonly _baseUrl: string;\n\n\tconstructor(\n\t\tsecure: any,\n\t\thost: string,\n\t\tport: number,\n\t\tpath: string,\n\t\tkey: string,\n\t\tprivate readonly pingInterval: number = 5000,\n\t) {\n\t\tsuper();\n\n\t\tconst wsProtocol = secure ? \"wss://\" : \"ws://\";\n\n\t\tthis._baseUrl = wsProtocol + host + \":\" + port + path + \"peerjs?key=\" + key;\n\t}\n\n\tstart(id: string, token: string): void {\n\t\tthis._id = id;\n\n\t\tconst wsUrl = `${this._baseUrl}&id=${id}&token=${token}`;\n\n\t\tif (!!this._socket || !this._disconnected) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._socket = new WebSocket(wsUrl + \"&version=\" + version);\n\t\tthis._disconnected = false;\n\n\t\tthis._socket.onmessage = (event) => {\n\t\t\tlet data;\n\n\t\t\ttry {\n\t\t\t\tdata = JSON.parse(event.data);\n\t\t\t\tlogger.log(\"Server message received:\", data);\n\t\t\t} catch (e) {\n\t\t\t\tlogger.log(\"Invalid server message\", event.data);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.emit(SocketEventType.Message, data);\n\t\t};\n\n\t\tthis._socket.onclose = (event) => {\n\t\t\tif (this._disconnected) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlogger.log(\"Socket closed.\", event);\n\n\t\t\tthis._cleanup();\n\t\t\tthis._disconnected = true;\n\n\t\t\tthis.emit(SocketEventType.Disconnected);\n\t\t};\n\n\t\t// Take care of the queue of connections if necessary and make sure Peer knows\n\t\t// socket is open.\n\t\tthis._socket.onopen = () => {\n\t\t\tif (this._disconnected) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._sendQueuedMessages();\n\n\t\t\tlogger.log(\"Socket open\");\n\n\t\t\tthis._scheduleHeartbeat();\n\t\t};\n\t}\n\n\tprivate _scheduleHeartbeat(): void {\n\t\tthis._wsPingTimer = setTimeout(() => {\n\t\t\tthis._sendHeartbeat();\n\t\t}, this.pingInterval);\n\t}\n\n\tprivate _sendHeartbeat(): void {\n\t\tif (!this._wsOpen()) {\n\t\t\tlogger.log(`Cannot send heartbeat, because socket closed`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = JSON.stringify({ type: ServerMessageType.Heartbeat });\n\n\t\tthis._socket!.send(message);\n\n\t\tthis._scheduleHeartbeat();\n\t}\n\n\t/** Is the websocket currently open? */\n\tprivate _wsOpen(): boolean {\n\t\treturn !!this._socket && this._socket.readyState === 1;\n\t}\n\n\t/** Send queued messages. */\n\tprivate _sendQueuedMessages(): void {\n\t\t//Create copy of queue and clear it,\n\t\t//because send method push the message back to queue if smth will go wrong\n\t\tconst copiedQueue = [...this._messagesQueue];\n\t\tthis._messagesQueue = [];\n\n\t\tfor (const message of copiedQueue) {\n\t\t\tthis.send(message);\n\t\t}\n\t}\n\n\t/** Exposed send for DC & Peer. */\n\tsend(data: any): void {\n\t\tif (this._disconnected) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If we didn't get an ID yet, we can't yet send anything so we should queue\n\t\t// up these messages.\n\t\tif (!this._id) {\n\t\t\tthis._messagesQueue.push(data);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!data.type) {\n\t\t\tthis.emit(SocketEventType.Error, \"Invalid message\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._wsOpen()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = JSON.stringify(data);\n\n\t\tthis._socket!.send(message);\n\t}\n\n\tclose(): void {\n\t\tif (this._disconnected) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._cleanup();\n\n\t\tthis._disconnected = true;\n\t}\n\n\tprivate _cleanup(): void {\n\t\tif (this._socket) {\n\t\t\tthis._socket.onopen =\n\t\t\t\tthis._socket.onmessage =\n\t\t\t\tthis._socket.onclose =\n\t\t\t\t\tnull;\n\t\t\tthis._socket.close();\n\t\t\tthis._socket = undefined;\n\t\t}\n\n\t\tclearTimeout(this._wsPingTimer!);\n\t}\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","export enum ConnectionType {\n\tData = \"data\",\n\tMedia = \"media\",\n}\n\nexport enum PeerErrorType {\n\t/**\n\t * The client's browser does not support some or all WebRTC features that you are trying to use.\n\t */\n\tBrowserIncompatible = \"browser-incompatible\",\n\t/**\n\t * You've already disconnected this peer from the server and can no longer make any new connections on it.\n\t */\n\tDisconnected = \"disconnected\",\n\t/**\n\t * The ID passed into the Peer constructor contains illegal characters.\n\t */\n\tInvalidID = \"invalid-id\",\n\t/**\n\t * The API key passed into the Peer constructor contains illegal characters or is not in the system (cloud server only).\n\t */\n\tInvalidKey = \"invalid-key\",\n\t/**\n\t * Lost or cannot establish a connection to the signalling server.\n\t */\n\tNetwork = \"network\",\n\t/**\n\t * The peer you're trying to connect to does not exist.\n\t */\n\tPeerUnavailable = \"peer-unavailable\",\n\t/**\n\t * PeerJS is being used securely, but the cloud server does not support SSL. Use a custom PeerServer.\n\t */\n\tSslUnavailable = \"ssl-unavailable\",\n\t/**\n\t * Unable to reach the server.\n\t */\n\tServerError = \"server-error\",\n\t/**\n\t * An error from the underlying socket.\n\t */\n\tSocketError = \"socket-error\",\n\t/**\n\t * The underlying socket closed unexpectedly.\n\t */\n\tSocketClosed = \"socket-closed\",\n\t/**\n\t * The ID passed into the Peer constructor is already taken.\n\t *\n\t * :::caution\n\t * This error is not fatal if your peer has open peer-to-peer connections.\n\t * This can happen if you attempt to {@apilink Peer.reconnect} a peer that has been disconnected from the server,\n\t * but its old ID has now been taken.\n\t * :::\n\t */\n\tUnavailableID = \"unavailable-id\",\n\t/**\n\t * Native WebRTC errors.\n\t */\n\tWebRTC = \"webrtc\",\n}\n\nexport enum BaseConnectionErrorType {\n\tNegotiationFailed = \"negotiation-failed\",\n\tConnectionClosed = \"connection-closed\",\n}\n\nexport enum DataConnectionErrorType {\n\tNotOpenYet = \"not-open-yet\",\n\tMessageToBig = \"message-too-big\",\n}\n\nexport enum SerializationType {\n\tBinary = \"binary\",\n\tBinaryUTF8 = \"binary-utf8\",\n\tJSON = \"json\",\n\tNone = \"raw\",\n}\n\nexport enum SocketEventType {\n\tMessage = \"message\",\n\tDisconnected = \"disconnected\",\n\tError = \"error\",\n\tClose = \"close\",\n}\n\nexport enum ServerMessageType {\n\tHeartbeat = \"HEARTBEAT\",\n\tCandidate = \"CANDIDATE\",\n\tOffer = \"OFFER\",\n\tAnswer = \"ANSWER\",\n\tOpen = \"OPEN\", // The connection to the server is open.\n\tError = \"ERROR\", // Server error.\n\tIdTaken = \"ID-TAKEN\", // The selected ID is taken.\n\tInvalidKey = \"INVALID-KEY\", // The given API key cannot be found.\n\tLeave = \"LEAVE\", // Another peer has closed its connection to this peer.\n\tExpire = \"EXPIRE\", // The offer sent to a peer has expired without response.\n}\n","{\n\t\"name\": \"peerjs\",\n\t\"version\": \"1.5.2\",\n\t\"keywords\": [\n\t\t\"peerjs\",\n\t\t\"webrtc\",\n\t\t\"p2p\",\n\t\t\"rtc\"\n\t],\n\t\"description\": \"PeerJS client\",\n\t\"homepage\": \"https://peerjs.com\",\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/peers/peerjs/issues\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://github.com/peers/peerjs\"\n\t},\n\t\"license\": \"MIT\",\n\t\"contributors\": [\n\t\t\"Michelle Bu <michelle@michellebu.com>\",\n\t\t\"afrokick <devbyru@gmail.com>\",\n\t\t\"ericz <really.ez@gmail.com>\",\n\t\t\"Jairo <kidandcat@gmail.com>\",\n\t\t\"Jonas Gloning <34194370+jonasgloning@users.noreply.github.com>\",\n\t\t\"Jairo Caro-Accino Viciana <jairo@galax.be>\",\n\t\t\"Carlos Caballero <carlos.caballero.gonzalez@gmail.com>\",\n\t\t\"hc <hheennrryy@gmail.com>\",\n\t\t\"Muhammad Asif <capripio@gmail.com>\",\n\t\t\"PrashoonB <prashoonbhattacharjee@gmail.com>\",\n\t\t\"Harsh Bardhan Mishra <47351025+HarshCasper@users.noreply.github.com>\",\n\t\t\"akotynski <aleksanderkotbury@gmail.com>\",\n\t\t\"lmb <i@lmb.io>\",\n\t\t\"Jairooo <jairocaro@msn.com>\",\n\t\t\"Moritz Stückler <moritz.stueckler@gmail.com>\",\n\t\t\"Simon <crydotsnakegithub@gmail.com>\",\n\t\t\"Denis Lukov <denismassters@gmail.com>\",\n\t\t\"Philipp Hancke <fippo@andyet.net>\",\n\t\t\"Hans Oksendahl <hansoksendahl@gmail.com>\",\n\t\t\"Jess <jessachandler@gmail.com>\",\n\t\t\"khankuan <khankuan@gmail.com>\",\n\t\t\"DUODVK <kurmanov.work@gmail.com>\",\n\t\t\"XiZhao <kwang1imsa@gmail.com>\",\n\t\t\"Matthias Lohr <matthias@lohr.me>\",\n\t\t\"=frank tree <=frnktrb@googlemail.com>\",\n\t\t\"Andre Eckardt <aeckardt@outlook.com>\",\n\t\t\"Chris Cowan <agentme49@gmail.com>\",\n\t\t\"Alex Chuev <alex@chuev.com>\",\n\t\t\"alxnull <alxnull@e.mail.de>\",\n\t\t\"Yemel Jardi <angel.jardi@gmail.com>\",\n\t\t\"Ben Parnell <benjaminparnell.94@gmail.com>\",\n\t\t\"Benny Lichtner <bennlich@gmail.com>\",\n\t\t\"fresheneesz <bitetrudpublic@gmail.com>\",\n\t\t\"bob.barstead@exaptive.com <bob.barstead@exaptive.com>\",\n\t\t\"chandika <chandika@gmail.com>\",\n\t\t\"emersion <contact@emersion.fr>\",\n\t\t\"Christopher Van <cvan@users.noreply.github.com>\",\n\t\t\"eddieherm <edhermoso@gmail.com>\",\n\t\t\"Eduardo Pinho <enet4mikeenet@gmail.com>\",\n\t\t\"Evandro Zanatta <ezanatta@tray.net.br>\",\n\t\t\"Gardner Bickford <gardner@users.noreply.github.com>\",\n\t\t\"Gian Luca <gianluca.cecchi@cynny.com>\",\n\t\t\"PatrickJS <github@gdi2290.com>\",\n\t\t\"jonnyf <github@jonathanfoss.co.uk>\",\n\t\t\"Hizkia Felix <hizkifw@gmail.com>\",\n\t\t\"Hristo Oskov <hristo.oskov@gmail.com>\",\n\t\t\"Isaac Madwed <i.madwed@gmail.com>\",\n\t\t\"Ilya Konanykhin <ilya.konanykhin@gmail.com>\",\n\t\t\"jasonbarry <jasbarry@me.com>\",\n\t\t\"Jonathan Burke <jonathan.burke.1311@googlemail.com>\",\n\t\t\"Josh Hamit <josh.hamit@gmail.com>\",\n\t\t\"Jordan Austin <jrax86@gmail.com>\",\n\t\t\"Joel Wetzell <jwetzell@yahoo.com>\",\n\t\t\"xizhao <kevin.wang@cloudera.com>\",\n\t\t\"Alberto Torres <kungfoobar@gmail.com>\",\n\t\t\"Jonathan Mayol <mayoljonathan@gmail.com>\",\n\t\t\"Jefferson Felix <me@jsfelix.dev>\",\n\t\t\"Rolf Erik Lekang <me@rolflekang.com>\",\n\t\t\"Kevin Mai-Husan Chia <mhchia@users.noreply.github.com>\",\n\t\t\"Pepijn de Vos <pepijndevos@gmail.com>\",\n\t\t\"JooYoung <qkdlql@naver.com>\",\n\t\t\"Tobias Speicher <rootcommander@gmail.com>\",\n\t\t\"Steve Blaurock <sblaurock@gmail.com>\",\n\t\t\"Kyrylo Shegeda <shegeda@ualberta.ca>\",\n\t\t\"Diwank Singh Tomer <singh@diwank.name>\",\n\t\t\"Sören Balko <Soeren.Balko@gmail.com>\",\n\t\t\"Arpit Solanki <solankiarpit1997@gmail.com>\",\n\t\t\"Yuki Ito <yuki@gnnk.net>\",\n\t\t\"Artur Zayats <zag2art@gmail.com>\"\n\t],\n\t\"funding\": {\n\t\t\"type\": \"opencollective\",\n\t\t\"url\": \"https://opencollective.com/peer\"\n\t},\n\t\"collective\": {\n\t\t\"type\": \"opencollective\",\n\t\t\"url\": \"https://opencollective.com/peer\"\n\t},\n\t\"files\": [\n\t\t\"dist/*\"\n\t],\n\t\"sideEffects\": [\n\t\t\"lib/global.ts\",\n\t\t\"lib/supports.ts\"\n\t],\n\t\"main\": \"dist/bundler.cjs\",\n\t\"module\": \"dist/bundler.mjs\",\n\t\"browser-minified\": \"dist/peerjs.min.js\",\n\t\"browser-unminified\": \"dist/peerjs.js\",\n\t\"browser-minified-cbor\": \"dist/serializer.cbor.mjs\",\n\t\"browser-minified-msgpack\": \"dist/serializer.msgpack.mjs\",\n\t\"types\": \"dist/types.d.ts\",\n\t\"engines\": {\n\t\t\"node\": \">= 14\"\n\t},\n\t\"targets\": {\n\t\t\"types\": {\n\t\t\t\"source\": \"lib/exports.ts\"\n\t\t},\n\t\t\"main\": {\n\t\t\t\"source\": \"lib/exports.ts\",\n\t\t\t\"sourceMap\": {\n\t\t\t\t\"inlineSources\": true\n\t\t\t}\n\t\t},\n\t\t\"module\": {\n\t\t\t\"source\": \"lib/exports.ts\",\n\t\t\t\"includeNodeModules\": [\n\t\t\t\t\"eventemitter3\"\n\t\t\t],\n\t\t\t\"sourceMap\": {\n\t\t\t\t\"inlineSources\": true\n\t\t\t}\n\t\t},\n\t\t\"browser-minified\": {\n\t\t\t\"context\": \"browser\",\n\t\t\t\"outputFormat\": \"global\",\n\t\t\t\"optimize\": true,\n\t\t\t\"engines\": {\n\t\t\t\t\"browsers\": \"chrome >= 83, edge >= 83, firefox >= 80, safari >= 15\"\n\t\t\t},\n\t\t\t\"source\": \"lib/global.ts\"\n\t\t},\n\t\t\"browser-unminified\": {\n\t\t\t\"context\": \"browser\",\n\t\t\t\"outputFormat\": \"global\",\n\t\t\t\"optimize\": false,\n\t\t\t\"engines\": {\n\t\t\t\t\"browsers\": \"chrome >= 83, edge >= 83, firefox >= 80, safari >= 15\"\n\t\t\t},\n\t\t\t\"source\": \"lib/global.ts\"\n\t\t},\n\t\t\"browser-minified-cbor\": {\n\t\t\t\"context\": \"browser\",\n\t\t\t\"outputFormat\": \"esmodule\",\n\t\t\t\"isLibrary\": true,\n\t\t\t\"optimize\": true,\n\t\t\t\"engines\": {\n\t\t\t\t\"browsers\": \"chrome >= 83, edge >= 83, firefox >= 102, safari >= 15\"\n\t\t\t},\n\t\t\t\"source\": \"lib/dataconnection/StreamConnection/Cbor.ts\"\n\t\t},\n\t\t\"browser-minified-msgpack\": {\n\t\t\t\"context\": \"browser\",\n\t\t\t\"outputFormat\": \"esmodule\",\n\t\t\t\"isLibrary\": true,\n\t\t\t\"optimize\": true,\n\t\t\t\"engines\": {\n\t\t\t\t\"browsers\": \"chrome >= 83, edge >= 83, firefox >= 102, safari >= 15\"\n\t\t\t},\n\t\t\t\"source\": \"lib/dataconnection/StreamConnection/MsgPack.ts\"\n\t\t}\n\t},\n\t\"scripts\": {\n\t\t\"contributors\": \"git-authors-cli --print=false && prettier --write package.json && git add package.json package-lock.json && git commit -m \\\"chore(contributors): update and sort contributors list\\\"\",\n\t\t\"check\": \"tsc --noEmit && tsc -p e2e/tsconfig.json --noEmit\",\n\t\t\"watch\": \"parcel watch\",\n\t\t\"build\": \"rm -rf dist && parcel build\",\n\t\t\"prepublishOnly\": \"npm run build\",\n\t\t\"test\": \"jest\",\n\t\t\"test:watch\": \"jest --watch\",\n\t\t\"coverage\": \"jest --coverage --collectCoverageFrom=\\\"./lib/**\\\"\",\n\t\t\"format\": \"prettier --write .\",\n\t\t\"format:check\": \"prettier --check .\",\n\t\t\"semantic-release\": \"semantic-release\",\n\t\t\"e2e\": \"wdio run e2e/wdio.local.conf.ts\",\n\t\t\"e2e:bstack\": \"wdio run e2e/wdio.bstack.conf.ts\"\n\t},\n\t\"devDependencies\": {\n\t\t\"@parcel/config-default\": \"^2.9.3\",\n\t\t\"@parcel/packager-ts\": \"^2.9.3\",\n\t\t\"@parcel/transformer-typescript-tsc\": \"^2.9.3\",\n\t\t\"@parcel/transformer-typescript-types\": \"^2.9.3\",\n\t\t\"@semantic-release/changelog\": \"^6.0.1\",\n\t\t\"@semantic-release/git\": \"^10.0.1\",\n\t\t\"@swc/core\": \"^1.3.27\",\n\t\t\"@swc/jest\": \"^0.2.24\",\n\t\t\"@types/jasmine\": \"^4.3.4\",\n\t\t\"@wdio/browserstack-service\": \"^8.11.2\",\n\t\t\"@wdio/cli\": \"^8.11.2\",\n\t\t\"@wdio/globals\": \"^8.11.2\",\n\t\t\"@wdio/jasmine-framework\": \"^8.11.2\",\n\t\t\"@wdio/local-runner\": \"^8.11.2\",\n\t\t\"@wdio/spec-reporter\": \"^8.11.2\",\n\t\t\"@wdio/types\": \"^8.10.4\",\n\t\t\"http-server\": \"^14.1.1\",\n\t\t\"jest\": \"^29.3.1\",\n\t\t\"jest-environment-jsdom\": \"^29.3.1\",\n\t\t\"mock-socket\": \"^9.0.0\",\n\t\t\"parcel\": \"^2.9.3\",\n\t\t\"prettier\": \"^3.0.0\",\n\t\t\"semantic-release\": \"^21.0.0\",\n\t\t\"ts-node\": \"^10.9.1\",\n\t\t\"typescript\": \"^5.0.0\",\n\t\t\"wdio-geckodriver-service\": \"^5.0.1\"\n\t},\n\t\"dependencies\": {\n\t\t\"@msgpack/msgpack\": \"^2.8.0\",\n\t\t\"cbor-x\": \"1.5.4\",\n\t\t\"eventemitter3\": \"^4.0.7\",\n\t\t\"peerjs-js-binarypack\": \"^2.1.0\",\n\t\t\"webrtc-adapter\": \"^8.0.0\"\n\t},\n\t\"alias\": {\n\t\t\"process\": false,\n\t\t\"buffer\": false\n\t}\n}\n","import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { Negotiator } from \"./negotiator\";\nimport { ConnectionType, ServerMessageType } from \"./enums\";\nimport type { Peer } from \"./peer\";\nimport { BaseConnection, type BaseConnectionEvents } from \"./baseconnection\";\nimport type { ServerMessage } from \"./servermessage\";\nimport type { AnswerOption } from \"./optionInterfaces\";\n\nexport interface MediaConnectionEvents extends BaseConnectionEvents<never> {\n\t/**\n\t * Emitted when a connection to the PeerServer is established.\n\t *\n\t * ```ts\n\t * mediaConnection.on('stream', (stream) => { ... });\n\t * ```\n\t */\n\tstream: (stream: MediaStream) => void;\n\t/**\n\t * Emitted when the auxiliary data channel is established.\n\t * After this event, hanging up will close the connection cleanly on the remote peer.\n\t * @beta\n\t */\n\twillCloseOnRemote: () => void;\n}\n\n/**\n * Wraps WebRTC's media streams.\n * To get one, use {@apilink Peer.call} or listen for the {@apilink PeerEvents | `call`} event.\n */\nexport class MediaConnection extends BaseConnection<MediaConnectionEvents> {\n\tprivate static readonly ID_PREFIX = \"mc_\";\n\treadonly label: string;\n\n\tprivate _negotiator: Negotiator<MediaConnectionEvents, this>;\n\tprivate _localStream: MediaStream;\n\tprivate _remoteStream: MediaStream;\n\n\t/**\n\t * For media connections, this is always 'media'.\n\t */\n\tget type() {\n\t\treturn ConnectionType.Media;\n\t}\n\n\tget localStream(): MediaStream {\n\t\treturn this._localStream;\n\t}\n\n\tget remoteStream(): MediaStream {\n\t\treturn this._remoteStream;\n\t}\n\n\tconstructor(peerId: string, provider: Peer, options: any) {\n\t\tsuper(peerId, provider, options);\n\n\t\tthis._localStream = this.options._stream;\n\t\tthis.connectionId =\n\t\t\tthis.options.connectionId ||\n\t\t\tMediaConnection.ID_PREFIX + util.randomToken();\n\n\t\tthis._negotiator = new Negotiator(this);\n\n\t\tif (this._localStream) {\n\t\t\tthis._negotiator.startConnection({\n\t\t\t\t_stream: this._localStream,\n\t\t\t\toriginator: true,\n\t\t\t});\n\t\t}\n\t}\n\n\t/** Called by the Negotiator when the DataChannel is ready. */\n\toverride _initializeDataChannel(dc: RTCDataChannel): void {\n\t\tthis.dataChannel = dc;\n\n\t\tthis.dataChannel.onopen = () => {\n\t\t\tlogger.log(`DC#${this.connectionId} dc connection success`);\n\t\t\tthis.emit(\"willCloseOnRemote\");\n\t\t};\n\n\t\tthis.dataChannel.onclose = () => {\n\t\t\tlogger.log(`DC#${this.connectionId} dc closed for:`, this.peer);\n\t\t\tthis.close();\n\t\t};\n\t}\n\taddStream(remoteStream) {\n\t\tlogger.log(\"Receiving stream\", remoteStream);\n\n\t\tthis._remoteStream = remoteStream;\n\t\tsuper.emit(\"stream\", remoteStream); // Should we call this `open`?\n\t}\n\n\t/**\n\t * @internal\n\t */\n\thandleMessage(message: ServerMessage): void {\n\t\tconst type = message.type;\n\t\tconst payload = message.payload;\n\n\t\tswitch (message.type) {\n\t\t\tcase ServerMessageType.Answer:\n\t\t\t\t// Forward to negotiator\n\t\t\t\tvoid this._negotiator.handleSDP(type, payload.sdp);\n\t\t\t\tthis._open = true;\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.Candidate:\n\t\t\t\tvoid this._negotiator.handleCandidate(payload.candidate);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlogger.warn(`Unrecognized message type:${type} from peer:${this.peer}`);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n     * When receiving a {@apilink PeerEvents | `call`} event on a peer, you can call\n     * `answer` on the media connection provided by the callback to accept the call\n     * and optionally send your own media stream.\n\n     *\n     * @param stream A WebRTC media stream.\n     * @param options\n     * @returns\n     */\n\tanswer(stream?: MediaStream, options: AnswerOption = {}): void {\n\t\tif (this._localStream) {\n\t\t\tlogger.warn(\n\t\t\t\t\"Local stream already exists on this MediaConnection. Are you answering a call twice?\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._localStream = stream;\n\n\t\tif (options && options.sdpTransform) {\n\t\t\tthis.options.sdpTransform = options.sdpTransform;\n\t\t}\n\n\t\tthis._negotiator.startConnection({\n\t\t\t...this.options._payload,\n\t\t\t_stream: stream,\n\t\t});\n\t\t// Retrieve lost messages stored because PeerConnection not set up.\n\t\tconst messages = this.provider._getMessages(this.connectionId);\n\n\t\tfor (const message of messages) {\n\t\t\tthis.handleMessage(message);\n\t\t}\n\n\t\tthis._open = true;\n\t}\n\n\t/**\n\t * Exposed functionality for users.\n\t */\n\n\t/**\n\t * Closes the media connection.\n\t */\n\tclose(): void {\n\t\tif (this._negotiator) {\n\t\t\tthis._negotiator.cleanup();\n\t\t\tthis._negotiator = null;\n\t\t}\n\n\t\tthis._localStream = null;\n\t\tthis._remoteStream = null;\n\n\t\tif (this.provider) {\n\t\t\tthis.provider._removeConnection(this);\n\n\t\t\tthis.provider = null;\n\t\t}\n\n\t\tif (this.options && this.options._stream) {\n\t\t\tthis.options._stream = null;\n\t\t}\n\n\t\tif (!this.open) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._open = false;\n\n\t\tsuper.emit(\"close\");\n\t}\n}\n","import logger from \"./logger\";\nimport type { MediaConnection } from \"./mediaconnection\";\nimport type { DataConnection } from \"./dataconnection/DataConnection\";\nimport {\n\tBaseConnectionErrorType,\n\tConnectionType,\n\tPeerErrorType,\n\tServerMessageType,\n} from \"./enums\";\nimport type { BaseConnection, BaseConnectionEvents } from \"./baseconnection\";\nimport type { ValidEventTypes } from \"eventemitter3\";\n\n/**\n * Manages all negotiations between Peers.\n */\nexport class Negotiator<\n\tEvents extends ValidEventTypes,\n\tConnectionType extends BaseConnection<Events | BaseConnectionEvents>,\n> {\n\tconstructor(readonly connection: ConnectionType) {}\n\n\t/** Returns a PeerConnection object set up correctly (for data, media). */\n\tstartConnection(options: any) {\n\t\tconst peerConnection = this._startPeerConnection();\n\n\t\t// Set the connection's PC.\n\t\tthis.connection.peerConnection = peerConnection;\n\n\t\tif (this.connection.type === ConnectionType.Media && options._stream) {\n\t\t\tthis._addTracksToConnection(options._stream, peerConnection);\n\t\t}\n\n\t\t// What do we need to do now?\n\t\tif (options.originator) {\n\t\t\tconst dataConnection = this.connection;\n\n\t\t\tconst config: RTCDataChannelInit = { ordered: !!options.reliable };\n\n\t\t\tconst dataChannel = peerConnection.createDataChannel(\n\t\t\t\tdataConnection.label,\n\t\t\t\tconfig,\n\t\t\t);\n\t\t\tdataConnection._initializeDataChannel(dataChannel);\n\n\t\t\tvoid this._makeOffer();\n\t\t} else {\n\t\t\tvoid this.handleSDP(\"OFFER\", options.sdp);\n\t\t}\n\t}\n\n\t/** Start a PC. */\n\tprivate _startPeerConnection(): RTCPeerConnection {\n\t\tlogger.log(\"Creating RTCPeerConnection.\");\n\n\t\tconst peerConnection = new RTCPeerConnection(\n\t\t\tthis.connection.provider.options.config,\n\t\t);\n\n\t\tthis._setupListeners(peerConnection);\n\n\t\treturn peerConnection;\n\t}\n\n\t/** Set up various WebRTC listeners. */\n\tprivate _setupListeners(peerConnection: RTCPeerConnection) {\n\t\tconst peerId = this.connection.peer;\n\t\tconst connectionId = this.connection.connectionId;\n\t\tconst connectionType = this.connection.type;\n\t\tconst provider = this.connection.provider;\n\n\t\t// ICE CANDIDATES.\n\t\tlogger.log(\"Listening for ICE candidates.\");\n\n\t\tpeerConnection.onicecandidate = (evt) => {\n\t\t\tif (!evt.candidate || !evt.candidate.candidate) return;\n\n\t\t\tlogger.log(`Received ICE candidates for ${peerId}:`, evt.candidate);\n\n\t\t\tprovider.socket.send({\n\t\t\t\ttype: ServerMessageType.Candidate,\n\t\t\t\tpayload: {\n\t\t\t\t\tcandidate: evt.candidate,\n\t\t\t\t\ttype: connectionType,\n\t\t\t\t\tconnectionId: connectionId,\n\t\t\t\t},\n\t\t\t\tdst: peerId,\n\t\t\t});\n\t\t};\n\n\t\tpeerConnection.oniceconnectionstatechange = () => {\n\t\t\tswitch (peerConnection.iceConnectionState) {\n\t\t\t\tcase \"failed\":\n\t\t\t\t\tlogger.log(\n\t\t\t\t\t\t\"iceConnectionState is failed, closing connections to \" + peerId,\n\t\t\t\t\t);\n\t\t\t\t\tthis.connection.emitError(\n\t\t\t\t\t\tBaseConnectionErrorType.NegotiationFailed,\n\t\t\t\t\t\t\"Negotiation of connection to \" + peerId + \" failed.\",\n\t\t\t\t\t);\n\t\t\t\t\tthis.connection.close();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"closed\":\n\t\t\t\t\tlogger.log(\n\t\t\t\t\t\t\"iceConnectionState is closed, closing connections to \" + peerId,\n\t\t\t\t\t);\n\t\t\t\t\tthis.connection.emitError(\n\t\t\t\t\t\tBaseConnectionErrorType.ConnectionClosed,\n\t\t\t\t\t\t\"Connection to \" + peerId + \" closed.\",\n\t\t\t\t\t);\n\t\t\t\t\tthis.connection.close();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"disconnected\":\n\t\t\t\t\tlogger.log(\n\t\t\t\t\t\t\"iceConnectionState changed to disconnected on the connection with \" +\n\t\t\t\t\t\t\tpeerId,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"completed\":\n\t\t\t\t\tpeerConnection.onicecandidate = () => {};\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis.connection.emit(\n\t\t\t\t\"iceStateChanged\",\n\t\t\t\tpeerConnection.iceConnectionState,\n\t\t\t);\n\t\t};\n\n\t\t// DATACONNECTION.\n\t\tlogger.log(\"Listening for data channel\");\n\t\t// Fired between offer and answer, so options should already be saved\n\t\t// in the options hash.\n\t\tpeerConnection.ondatachannel = (evt) => {\n\t\t\tlogger.log(\"Received data channel\");\n\n\t\t\tconst dataChannel = evt.channel;\n\t\t\tconst connection = <DataConnection>(\n\t\t\t\tprovider.getConnection(peerId, connectionId)\n\t\t\t);\n\n\t\t\tconnection._initializeDataChannel(dataChannel);\n\t\t};\n\n\t\t// MEDIACONNECTION.\n\t\tlogger.log(\"Listening for remote stream\");\n\n\t\tpeerConnection.ontrack = (evt) => {\n\t\t\tlogger.log(\"Received remote stream\");\n\n\t\t\tconst stream = evt.streams[0];\n\t\t\tconst connection = provider.getConnection(peerId, connectionId);\n\n\t\t\tif (connection.type === ConnectionType.Media) {\n\t\t\t\tconst mediaConnection = <MediaConnection>connection;\n\n\t\t\t\tthis._addStreamToMediaConnection(stream, mediaConnection);\n\t\t\t}\n\t\t};\n\t}\n\n\tcleanup(): void {\n\t\tlogger.log(\"Cleaning up PeerConnection to \" + this.connection.peer);\n\n\t\tconst peerConnection = this.connection.peerConnection;\n\n\t\tif (!peerConnection) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.connection.peerConnection = null;\n\n\t\t//unsubscribe from all PeerConnection's events\n\t\tpeerConnection.onicecandidate =\n\t\t\tpeerConnection.oniceconnectionstatechange =\n\t\t\tpeerConnection.ondatachannel =\n\t\t\tpeerConnection.ontrack =\n\t\t\t\t() => {};\n\n\t\tconst peerConnectionNotClosed = peerConnection.signalingState !== \"closed\";\n\t\tlet dataChannelNotClosed = false;\n\n\t\tconst dataChannel = this.connection.dataChannel;\n\n\t\tif (dataChannel) {\n\t\t\tdataChannelNotClosed =\n\t\t\t\t!!dataChannel.readyState && dataChannel.readyState !== \"closed\";\n\t\t}\n\n\t\tif (peerConnectionNotClosed || dataChannelNotClosed) {\n\t\t\tpeerConnection.close();\n\t\t}\n\t}\n\n\tprivate async _makeOffer(): Promise<void> {\n\t\tconst peerConnection = this.connection.peerConnection;\n\t\tconst provider = this.connection.provider;\n\n\t\ttry {\n\t\t\tconst offer = await peerConnection.createOffer(\n\t\t\t\tthis.connection.options.constraints,\n\t\t\t);\n\n\t\t\tlogger.log(\"Created offer.\");\n\n\t\t\tif (\n\t\t\t\tthis.connection.options.sdpTransform &&\n\t\t\t\ttypeof this.connection.options.sdpTransform === \"function\"\n\t\t\t) {\n\t\t\t\toffer.sdp =\n\t\t\t\t\tthis.connection.options.sdpTransform(offer.sdp) || offer.sdp;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait peerConnection.setLocalDescription(offer);\n\n\t\t\t\tlogger.log(\n\t\t\t\t\t\"Set localDescription:\",\n\t\t\t\t\toffer,\n\t\t\t\t\t`for:${this.connection.peer}`,\n\t\t\t\t);\n\n\t\t\t\tlet payload: any = {\n\t\t\t\t\tsdp: offer,\n\t\t\t\t\ttype: this.connection.type,\n\t\t\t\t\tconnectionId: this.connection.connectionId,\n\t\t\t\t\tmetadata: this.connection.metadata,\n\t\t\t\t};\n\n\t\t\t\tif (this.connection.type === ConnectionType.Data) {\n\t\t\t\t\tconst dataConnection = <DataConnection>(<unknown>this.connection);\n\n\t\t\t\t\tpayload = {\n\t\t\t\t\t\t...payload,\n\t\t\t\t\t\tlabel: dataConnection.label,\n\t\t\t\t\t\treliable: dataConnection.reliable,\n\t\t\t\t\t\tserialization: dataConnection.serialization,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tprovider.socket.send({\n\t\t\t\t\ttype: ServerMessageType.Offer,\n\t\t\t\t\tpayload,\n\t\t\t\t\tdst: this.connection.peer,\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\t// TODO: investigate why _makeOffer is being called from the answer\n\t\t\t\tif (\n\t\t\t\t\terr !=\n\t\t\t\t\t\"OperationError: Failed to set local offer sdp: Called in wrong state: kHaveRemoteOffer\"\n\t\t\t\t) {\n\t\t\t\t\tprovider.emitError(PeerErrorType.WebRTC, err);\n\t\t\t\t\tlogger.log(\"Failed to setLocalDescription, \", err);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err_1) {\n\t\t\tprovider.emitError(PeerErrorType.WebRTC, err_1);\n\t\t\tlogger.log(\"Failed to createOffer, \", err_1);\n\t\t}\n\t}\n\n\tprivate async _makeAnswer(): Promise<void> {\n\t\tconst peerConnection = this.connection.peerConnection;\n\t\tconst provider = this.connection.provider;\n\n\t\ttry {\n\t\t\tconst answer = await peerConnection.createAnswer();\n\t\t\tlogger.log(\"Created answer.\");\n\n\t\t\tif (\n\t\t\t\tthis.connection.options.sdpTransform &&\n\t\t\t\ttypeof this.connection.options.sdpTransform === \"function\"\n\t\t\t) {\n\t\t\t\tanswer.sdp =\n\t\t\t\t\tthis.connection.options.sdpTransform(answer.sdp) || answer.sdp;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait peerConnection.setLocalDescription(answer);\n\n\t\t\t\tlogger.log(\n\t\t\t\t\t`Set localDescription:`,\n\t\t\t\t\tanswer,\n\t\t\t\t\t`for:${this.connection.peer}`,\n\t\t\t\t);\n\n\t\t\t\tprovider.socket.send({\n\t\t\t\t\ttype: ServerMessageType.Answer,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tsdp: answer,\n\t\t\t\t\t\ttype: this.connection.type,\n\t\t\t\t\t\tconnectionId: this.connection.connectionId,\n\t\t\t\t\t},\n\t\t\t\t\tdst: this.connection.peer,\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\tprovider.emitError(PeerErrorType.WebRTC, err);\n\t\t\t\tlogger.log(\"Failed to setLocalDescription, \", err);\n\t\t\t}\n\t\t} catch (err_1) {\n\t\t\tprovider.emitError(PeerErrorType.WebRTC, err_1);\n\t\t\tlogger.log(\"Failed to create answer, \", err_1);\n\t\t}\n\t}\n\n\t/** Handle an SDP. */\n\tasync handleSDP(type: string, sdp: any): Promise<void> {\n\t\tsdp = new RTCSessionDescription(sdp);\n\t\tconst peerConnection = this.connection.peerConnection;\n\t\tconst provider = this.connection.provider;\n\n\t\tlogger.log(\"Setting remote description\", sdp);\n\n\t\tconst self = this;\n\n\t\ttry {\n\t\t\tawait peerConnection.setRemoteDescription(sdp);\n\t\t\tlogger.log(`Set remoteDescription:${type} for:${this.connection.peer}`);\n\t\t\tif (type === \"OFFER\") {\n\t\t\t\tawait self._makeAnswer();\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tprovider.emitError(PeerErrorType.WebRTC, err);\n\t\t\tlogger.log(\"Failed to setRemoteDescription, \", err);\n\t\t}\n\t}\n\n\t/** Handle a candidate. */\n\tasync handleCandidate(ice: RTCIceCandidate) {\n\t\tlogger.log(`handleCandidate:`, ice);\n\n\t\ttry {\n\t\t\tawait this.connection.peerConnection.addIceCandidate(ice);\n\t\t\tlogger.log(`Added ICE candidate for:${this.connection.peer}`);\n\t\t} catch (err) {\n\t\t\tthis.connection.provider.emitError(PeerErrorType.WebRTC, err);\n\t\t\tlogger.log(\"Failed to handleCandidate, \", err);\n\t\t}\n\t}\n\n\tprivate _addTracksToConnection(\n\t\tstream: MediaStream,\n\t\tpeerConnection: RTCPeerConnection,\n\t): void {\n\t\tlogger.log(`add tracks from stream ${stream.id} to peer connection`);\n\n\t\tif (!peerConnection.addTrack) {\n\t\t\treturn logger.error(\n\t\t\t\t`Your browser does't support RTCPeerConnection#addTrack. Ignored.`,\n\t\t\t);\n\t\t}\n\n\t\tstream.getTracks().forEach((track) => {\n\t\t\tpeerConnection.addTrack(track, stream);\n\t\t});\n\t}\n\n\tprivate _addStreamToMediaConnection(\n\t\tstream: MediaStream,\n\t\tmediaConnection: MediaConnection,\n\t): void {\n\t\tlogger.log(\n\t\t\t`add stream ${stream.id} to media connection ${mediaConnection.connectionId}`,\n\t\t);\n\n\t\tmediaConnection.addStream(stream);\n\t}\n}\n","import type { Peer } from \"./peer\";\nimport type { ServerMessage } from \"./servermessage\";\nimport type { ConnectionType } from \"./enums\";\nimport { BaseConnectionErrorType } from \"./enums\";\nimport {\n\tEventEmitterWithError,\n\ttype EventsWithError,\n\tPeerError,\n} from \"./peerError\";\nimport type { ValidEventTypes } from \"eventemitter3\";\n\nexport interface BaseConnectionEvents<\n\tErrorType extends string = BaseConnectionErrorType,\n> extends EventsWithError<ErrorType> {\n\t/**\n\t * Emitted when either you or the remote peer closes the connection.\n\t *\n\t * ```ts\n\t * connection.on('close', () => { ... });\n\t * ```\n\t */\n\tclose: () => void;\n\t/**\n\t * ```ts\n\t * connection.on('error', (error) => { ... });\n\t * ```\n\t */\n\terror: (error: PeerError<`${ErrorType}`>) => void;\n\ticeStateChanged: (state: RTCIceConnectionState) => void;\n}\n\nexport abstract class BaseConnection<\n\tSubClassEvents extends ValidEventTypes,\n\tErrorType extends string = never,\n> extends EventEmitterWithError<\n\tErrorType | BaseConnectionErrorType,\n\tSubClassEvents & BaseConnectionEvents<BaseConnectionErrorType | ErrorType>\n> {\n\tprotected _open = false;\n\n\t/**\n\t * Any type of metadata associated with the connection,\n\t * passed in by whoever initiated the connection.\n\t */\n\treadonly metadata: any;\n\tconnectionId: string;\n\n\tpeerConnection: RTCPeerConnection;\n\tdataChannel: RTCDataChannel;\n\n\tabstract get type(): ConnectionType;\n\n\t/**\n\t * The optional label passed in or assigned by PeerJS when the connection was initiated.\n\t */\n\tlabel: string;\n\n\t/**\n\t * Whether the media connection is active (e.g. your call has been answered).\n\t * You can check this if you want to set a maximum wait time for a one-sided call.\n\t */\n\tget open() {\n\t\treturn this._open;\n\t}\n\n\tprotected constructor(\n\t\t/**\n\t\t * The ID of the peer on the other end of this connection.\n\t\t */\n\t\treadonly peer: string,\n\t\tpublic provider: Peer,\n\t\treadonly options: any,\n\t) {\n\t\tsuper();\n\n\t\tthis.metadata = options.metadata;\n\t}\n\n\tabstract close(): void;\n\n\t/**\n\t * @internal\n\t */\n\tabstract handleMessage(message: ServerMessage): void;\n\n\t/**\n\t * Called by the Negotiator when the DataChannel is ready.\n\t * @internal\n\t * */\n\tabstract _initializeDataChannel(dc: RTCDataChannel): void;\n}\n","import { EventEmitter } from \"eventemitter3\";\nimport logger from \"./logger\";\n\nexport interface EventsWithError<ErrorType extends string> {\n\terror: (error: PeerError<`${ErrorType}`>) => void;\n}\n\nexport class EventEmitterWithError<\n\tErrorType extends string,\n\tEvents extends EventsWithError<ErrorType>,\n> extends EventEmitter<Events, never> {\n\t/**\n\t * Emits a typed error message.\n\t *\n\t * @internal\n\t */\n\temitError(type: ErrorType, err: string | Error): void {\n\t\tlogger.error(\"Error:\", err);\n\n\t\t// @ts-ignore\n\t\tthis.emit(\"error\", new PeerError<`${ErrorType}`>(`${type}`, err));\n\t}\n}\n/**\n * A PeerError is emitted whenever an error occurs.\n * It always has a `.type`, which can be used to identify the error.\n */\nexport class PeerError<T extends string> extends Error {\n\t/**\n\t * @internal\n\t */\n\tconstructor(type: T, err: Error | string) {\n\t\tif (typeof err === \"string\") {\n\t\t\tsuper(err);\n\t\t} else {\n\t\t\tsuper();\n\t\t\tObject.assign(this, err);\n\t\t}\n\n\t\tthis.type = type;\n\t}\n\n\tpublic type: T;\n}\n","import { util } from \"./util\";\nimport logger from \"./logger\";\nimport type { PeerJSOption } from \"./optionInterfaces\";\nimport { version } from \"../package.json\";\n\nexport class API {\n\tconstructor(private readonly _options: PeerJSOption) {}\n\n\tprivate _buildRequest(method: string): Promise<Response> {\n\t\tconst protocol = this._options.secure ? \"https\" : \"http\";\n\t\tconst { host, port, path, key } = this._options;\n\t\tconst url = new URL(`${protocol}://${host}:${port}${path}${key}/${method}`);\n\t\t// TODO: Why timestamp, why random?\n\t\turl.searchParams.set(\"ts\", `${Date.now()}${Math.random()}`);\n\t\turl.searchParams.set(\"version\", version);\n\t\treturn fetch(url.href, {\n\t\t\treferrerPolicy: this._options.referrerPolicy,\n\t\t});\n\t}\n\n\t/** Get a unique ID from the server via XHR and initialize with it. */\n\tasync retrieveId(): Promise<string> {\n\t\ttry {\n\t\t\tconst response = await this._buildRequest(\"id\");\n\n\t\t\tif (response.status !== 200) {\n\t\t\t\tthrow new Error(`Error. Status:${response.status}`);\n\t\t\t}\n\n\t\t\treturn response.text();\n\t\t} catch (error) {\n\t\t\tlogger.error(\"Error retrieving ID\", error);\n\n\t\t\tlet pathError = \"\";\n\n\t\t\tif (\n\t\t\t\tthis._options.path === \"/\" &&\n\t\t\t\tthis._options.host !== util.CLOUD_HOST\n\t\t\t) {\n\t\t\t\tpathError =\n\t\t\t\t\t\" If you passed in a `path` to your self-hosted PeerServer, \" +\n\t\t\t\t\t\"you'll also need to pass in that same path when creating a new \" +\n\t\t\t\t\t\"Peer.\";\n\t\t\t}\n\n\t\t\tthrow new Error(\"Could not get an ID from the server.\" + pathError);\n\t\t}\n\t}\n\n\t/** @deprecated */\n\tasync listAllPeers(): Promise<any[]> {\n\t\ttry {\n\t\t\tconst response = await this._buildRequest(\"peers\");\n\n\t\t\tif (response.status !== 200) {\n\t\t\t\tif (response.status === 401) {\n\t\t\t\t\tlet helpfulError = \"\";\n\n\t\t\t\t\tif (this._options.host === util.CLOUD_HOST) {\n\t\t\t\t\t\thelpfulError =\n\t\t\t\t\t\t\t\"It looks like you're using the cloud server. You can email \" +\n\t\t\t\t\t\t\t\"team@peerjs.com to enable peer listing for your API key.\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\thelpfulError =\n\t\t\t\t\t\t\t\"You need to enable `allow_discovery` on your self-hosted \" +\n\t\t\t\t\t\t\t\"PeerServer to use this feature.\";\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\"It doesn't look like you have permission to list peers IDs. \" +\n\t\t\t\t\t\t\thelpfulError,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Error. Status:${response.status}`);\n\t\t\t}\n\n\t\t\treturn response.json();\n\t\t} catch (error) {\n\t\t\tlogger.error(\"Error retrieving list peers\", error);\n\n\t\t\tthrow new Error(\"Could not get list peers from the server.\" + error);\n\t\t}\n\t}\n}\n","import { BinaryPackChunker, concatArrayBuffers } from \"./binaryPackChunker\";\nimport logger from \"../../logger\";\nimport type { Peer } from \"../../peer\";\nimport { BufferedConnection } from \"./BufferedConnection\";\nimport { SerializationType } from \"../../enums\";\nimport { pack, type Packable, unpack } from \"peerjs-js-binarypack\";\n\nexport class BinaryPack extends BufferedConnection {\n\tprivate readonly chunker = new BinaryPackChunker();\n\treadonly serialization = SerializationType.Binary;\n\n\tprivate _chunkedData: {\n\t\t[id: number]: {\n\t\t\tdata: Uint8Array[];\n\t\t\tcount: number;\n\t\t\ttotal: number;\n\t\t};\n\t} = {};\n\n\tpublic override close(options?: { flush?: boolean }) {\n\t\tsuper.close(options);\n\t\tthis._chunkedData = {};\n\t}\n\n\tconstructor(peerId: string, provider: Peer, options: any) {\n\t\tsuper(peerId, provider, options);\n\t}\n\n\t// Handles a DataChannel message.\n\tprotected override _handleDataMessage({ data }: { data: Uint8Array }): void {\n\t\tconst deserializedData = unpack(data);\n\n\t\t// PeerJS specific message\n\t\tconst peerData = deserializedData[\"__peerData\"];\n\t\tif (peerData) {\n\t\t\tif (peerData.type === \"close\") {\n\t\t\t\tthis.close();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Chunked data -- piece things back together.\n\t\t\t// @ts-ignore\n\t\t\tthis._handleChunk(deserializedData);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.emit(\"data\", deserializedData);\n\t}\n\n\tprivate _handleChunk(data: {\n\t\t__peerData: number;\n\t\tn: number;\n\t\ttotal: number;\n\t\tdata: ArrayBuffer;\n\t}): void {\n\t\tconst id = data.__peerData;\n\t\tconst chunkInfo = this._chunkedData[id] || {\n\t\t\tdata: [],\n\t\t\tcount: 0,\n\t\t\ttotal: data.total,\n\t\t};\n\n\t\tchunkInfo.data[data.n] = new Uint8Array(data.data);\n\t\tchunkInfo.count++;\n\t\tthis._chunkedData[id] = chunkInfo;\n\n\t\tif (chunkInfo.total === chunkInfo.count) {\n\t\t\t// Clean up before making the recursive call to `_handleDataMessage`.\n\t\t\tdelete this._chunkedData[id];\n\n\t\t\t// We've received all the chunks--time to construct the complete data.\n\t\t\t// const data = new Blob(chunkInfo.data);\n\t\t\tconst data = concatArrayBuffers(chunkInfo.data);\n\t\t\tthis._handleDataMessage({ data });\n\t\t}\n\t}\n\n\tprotected override _send(data: Packable, chunked: boolean) {\n\t\tconst blob = pack(data);\n\t\tif (blob instanceof Promise) {\n\t\t\treturn this._send_blob(blob);\n\t\t}\n\n\t\tif (!chunked && blob.byteLength > this.chunker.chunkedMTU) {\n\t\t\tthis._sendChunks(blob);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._bufferedSend(blob);\n\t}\n\tprivate async _send_blob(blobPromise: Promise<ArrayBufferLike>) {\n\t\tconst blob = await blobPromise;\n\t\tif (blob.byteLength > this.chunker.chunkedMTU) {\n\t\t\tthis._sendChunks(blob);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._bufferedSend(blob);\n\t}\n\n\tprivate _sendChunks(blob: ArrayBuffer) {\n\t\tconst blobs = this.chunker.chunk(blob);\n\t\tlogger.log(`DC#${this.connectionId} Try to send ${blobs.length} chunks...`);\n\n\t\tfor (const blob of blobs) {\n\t\t\tthis.send(blob, true);\n\t\t}\n\t}\n}\n","import logger from \"../../logger\";\nimport { DataConnection } from \"../DataConnection\";\n\nexport abstract class BufferedConnection extends DataConnection {\n\tprivate _buffer: any[] = [];\n\tprivate _bufferSize = 0;\n\tprivate _buffering = false;\n\n\tpublic get bufferSize(): number {\n\t\treturn this._bufferSize;\n\t}\n\n\tpublic override _initializeDataChannel(dc: RTCDataChannel) {\n\t\tsuper._initializeDataChannel(dc);\n\t\tthis.dataChannel.binaryType = \"arraybuffer\";\n\t\tthis.dataChannel.addEventListener(\"message\", (e) =>\n\t\t\tthis._handleDataMessage(e),\n\t\t);\n\t}\n\n\tprotected abstract _handleDataMessage(e: MessageEvent): void;\n\n\tprotected _bufferedSend(msg: ArrayBuffer): void {\n\t\tif (this._buffering || !this._trySend(msg)) {\n\t\t\tthis._buffer.push(msg);\n\t\t\tthis._bufferSize = this._buffer.length;\n\t\t}\n\t}\n\n\t// Returns true if the send succeeds.\n\tprivate _trySend(msg: ArrayBuffer): boolean {\n\t\tif (!this.open) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.dataChannel.bufferedAmount > DataConnection.MAX_BUFFERED_AMOUNT) {\n\t\t\tthis._buffering = true;\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis._buffering = false;\n\t\t\t\tthis._tryBuffer();\n\t\t\t}, 50);\n\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\tthis.dataChannel.send(msg);\n\t\t} catch (e) {\n\t\t\tlogger.error(`DC#:${this.connectionId} Error when sending:`, e);\n\t\t\tthis._buffering = true;\n\n\t\t\tthis.close();\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t// Try to send the first message in the buffer.\n\tprivate _tryBuffer(): void {\n\t\tif (!this.open) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._buffer.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst msg = this._buffer[0];\n\n\t\tif (this._trySend(msg)) {\n\t\t\tthis._buffer.shift();\n\t\t\tthis._bufferSize = this._buffer.length;\n\t\t\tthis._tryBuffer();\n\t\t}\n\t}\n\n\tpublic override close(options?: { flush?: boolean }) {\n\t\tif (options?.flush) {\n\t\t\tthis.send({\n\t\t\t\t__peerData: {\n\t\t\t\t\ttype: \"close\",\n\t\t\t\t},\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tthis._buffer = [];\n\t\tthis._bufferSize = 0;\n\t\tsuper.close();\n\t}\n}\n","import logger from \"../logger\";\nimport { Negotiator } from \"../negotiator\";\nimport {\n\tBaseConnectionErrorType,\n\tConnectionType,\n\tDataConnectionErrorType,\n\tServerMessageType,\n} from \"../enums\";\nimport type { Peer } from \"../peer\";\nimport { BaseConnection, type BaseConnectionEvents } from \"../baseconnection\";\nimport type { ServerMessage } from \"../servermessage\";\nimport type { EventsWithError } from \"../peerError\";\nimport { randomToken } from \"../utils/randomToken\";\n\nexport interface DataConnectionEvents\n\textends EventsWithError<DataConnectionErrorType | BaseConnectionErrorType>,\n\t\tBaseConnectionEvents<DataConnectionErrorType | BaseConnectionErrorType> {\n\t/**\n\t * Emitted when data is received from the remote peer.\n\t */\n\tdata: (data: unknown) => void;\n\t/**\n\t * Emitted when the connection is established and ready-to-use.\n\t */\n\topen: () => void;\n}\n\n/**\n * Wraps a DataChannel between two Peers.\n */\nexport abstract class DataConnection extends BaseConnection<\n\tDataConnectionEvents,\n\tDataConnectionErrorType\n> {\n\tprotected static readonly ID_PREFIX = \"dc_\";\n\tprotected static readonly MAX_BUFFERED_AMOUNT = 8 * 1024 * 1024;\n\n\tprivate _negotiator: Negotiator<DataConnectionEvents, this>;\n\tabstract readonly serialization: string;\n\treadonly reliable: boolean;\n\n\tpublic get type() {\n\t\treturn ConnectionType.Data;\n\t}\n\n\tconstructor(peerId: string, provider: Peer, options: any) {\n\t\tsuper(peerId, provider, options);\n\n\t\tthis.connectionId =\n\t\t\tthis.options.connectionId || DataConnection.ID_PREFIX + randomToken();\n\n\t\tthis.label = this.options.label || this.connectionId;\n\t\tthis.reliable = !!this.options.reliable;\n\n\t\tthis._negotiator = new Negotiator(this);\n\n\t\tthis._negotiator.startConnection(\n\t\t\tthis.options._payload || {\n\t\t\t\toriginator: true,\n\t\t\t\treliable: this.reliable,\n\t\t\t},\n\t\t);\n\t}\n\n\t/** Called by the Negotiator when the DataChannel is ready. */\n\toverride _initializeDataChannel(dc: RTCDataChannel): void {\n\t\tthis.dataChannel = dc;\n\n\t\tthis.dataChannel.onopen = () => {\n\t\t\tlogger.log(`DC#${this.connectionId} dc connection success`);\n\t\t\tthis._open = true;\n\t\t\tthis.emit(\"open\");\n\t\t};\n\n\t\tthis.dataChannel.onmessage = (e) => {\n\t\t\tlogger.log(`DC#${this.connectionId} dc onmessage:`, e.data);\n\t\t\t// this._handleDataMessage(e);\n\t\t};\n\n\t\tthis.dataChannel.onclose = () => {\n\t\t\tlogger.log(`DC#${this.connectionId} dc closed for:`, this.peer);\n\t\t\tthis.close();\n\t\t};\n\t}\n\n\t/**\n\t * Exposed functionality for users.\n\t */\n\n\t/** Allows user to close connection. */\n\tclose(options?: { flush?: boolean }): void {\n\t\tif (options?.flush) {\n\t\t\tthis.send({\n\t\t\t\t__peerData: {\n\t\t\t\t\ttype: \"close\",\n\t\t\t\t},\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tif (this._negotiator) {\n\t\t\tthis._negotiator.cleanup();\n\t\t\tthis._negotiator = null;\n\t\t}\n\n\t\tif (this.provider) {\n\t\t\tthis.provider._removeConnection(this);\n\n\t\t\tthis.provider = null;\n\t\t}\n\n\t\tif (this.dataChannel) {\n\t\t\tthis.dataChannel.onopen = null;\n\t\t\tthis.dataChannel.onmessage = null;\n\t\t\tthis.dataChannel.onclose = null;\n\t\t\tthis.dataChannel = null;\n\t\t}\n\n\t\tif (!this.open) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._open = false;\n\n\t\tsuper.emit(\"close\");\n\t}\n\n\tprotected abstract _send(data: any, chunked: boolean): void | Promise<void>;\n\n\t/** Allows user to send data. */\n\tpublic send(data: any, chunked = false) {\n\t\tif (!this.open) {\n\t\t\tthis.emitError(\n\t\t\t\tDataConnectionErrorType.NotOpenYet,\n\t\t\t\t\"Connection is not open. You should listen for the `open` event before sending messages.\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\treturn this._send(data, chunked);\n\t}\n\n\tasync handleMessage(message: ServerMessage) {\n\t\tconst payload = message.payload;\n\n\t\tswitch (message.type) {\n\t\t\tcase ServerMessageType.Answer:\n\t\t\t\tawait this._negotiator.handleSDP(message.type, payload.sdp);\n\t\t\t\tbreak;\n\t\t\tcase ServerMessageType.Candidate:\n\t\t\t\tawait this._negotiator.handleCandidate(payload.candidate);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlogger.warn(\n\t\t\t\t\t\"Unrecognized message type:\",\n\t\t\t\t\tmessage.type,\n\t\t\t\t\t\"from peer:\",\n\t\t\t\t\tthis.peer,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { BufferedConnection } from \"./BufferedConnection\";\nimport { SerializationType } from \"../../enums\";\n\nexport class Raw extends BufferedConnection {\n\treadonly serialization = SerializationType.None;\n\n\tprotected _handleDataMessage({ data }) {\n\t\tsuper.emit(\"data\", data);\n\t}\n\n\toverride _send(data, _chunked) {\n\t\tthis._bufferedSend(data);\n\t}\n}\n","import { BufferedConnection } from \"./BufferedConnection\";\nimport { DataConnectionErrorType, SerializationType } from \"../../enums\";\nimport { util } from \"../../util\";\n\nexport class Json extends BufferedConnection {\n\treadonly serialization = SerializationType.JSON;\n\tprivate readonly encoder = new TextEncoder();\n\tprivate readonly decoder = new TextDecoder();\n\n\tstringify: (data: any) => string = JSON.stringify;\n\tparse: (data: string) => any = JSON.parse;\n\n\t// Handles a DataChannel message.\n\tprotected override _handleDataMessage({ data }: { data: Uint8Array }): void {\n\t\tconst deserializedData = this.parse(this.decoder.decode(data));\n\n\t\t// PeerJS specific message\n\t\tconst peerData = deserializedData[\"__peerData\"];\n\t\tif (peerData && peerData.type === \"close\") {\n\t\t\tthis.close();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.emit(\"data\", deserializedData);\n\t}\n\n\toverride _send(data, _chunked) {\n\t\tconst encodedData = this.encoder.encode(this.stringify(data));\n\t\tif (encodedData.byteLength >= util.chunkedMTU) {\n\t\t\tthis.emitError(\n\t\t\t\tDataConnectionErrorType.MessageToBig,\n\t\t\t\t\"Message too big for JSON channel\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\tthis._bufferedSend(encodedData);\n\t}\n}\n","import { Peer, type SerializerMapping } from \"./peer\";\nimport { Cbor } from \"./dataconnection/StreamConnection/Cbor\";\n\nexport class CborPeer extends Peer {\n\toverride _serializers: SerializerMapping = {\n\t\tCbor,\n\t\tdefault: Cbor,\n\t};\n}\n","import type { Peer } from \"../../peer.js\";\nimport { Decoder, Encoder } from \"cbor-x\";\nimport { StreamConnection } from \"./StreamConnection.js\";\n\nconst NullValue = Symbol.for(null);\n\nfunction concatUint8Array(buffer1: Uint8Array, buffer2: Uint8Array) {\n\tconst tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n\ttmp.set(buffer1, 0);\n\ttmp.set(buffer2, buffer1.byteLength);\n\treturn new Uint8Array(tmp.buffer);\n}\n\nconst iterateOver = async function* (stream: ReadableStream) {\n\tconst reader = stream.getReader();\n\ttry {\n\t\twhile (true) {\n\t\t\tconst { done, value } = await reader.read();\n\t\t\tif (done) return;\n\t\t\tyield value;\n\t\t}\n\t} finally {\n\t\treader.releaseLock();\n\t}\n};\n\nexport class Cbor extends StreamConnection {\n\treadonly serialization = \"Cbor\";\n\tprivate _encoder = new Encoder();\n\tprivate _decoder = new Decoder();\n\tprivate _inc;\n\tprivate _decoderStream = new TransformStream<ArrayBuffer, unknown>({\n\t\ttransform: (abchunk, controller) => {\n\t\t\tlet chunk = new Uint8Array(abchunk);\n\t\t\tif (this._inc) {\n\t\t\t\tchunk = concatUint8Array(this._inc, chunk);\n\t\t\t\tthis._inc = null;\n\t\t\t}\n\t\t\tlet values;\n\t\t\ttry {\n\t\t\t\tvalues = this._decoder.decodeMultiple(chunk);\n\t\t\t} catch (error) {\n\t\t\t\tif (error.incomplete) {\n\t\t\t\t\tthis._inc = chunk.subarray(error.lastPosition);\n\t\t\t\t\tvalues = error.values;\n\t\t\t\t} else throw error;\n\t\t\t} finally {\n\t\t\t\tfor (let value of values || []) {\n\t\t\t\t\tif (value === null) value = NullValue;\n\t\t\t\t\tcontroller.enqueue(value);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t});\n\n\tconstructor(peerId: string, provider: Peer, options: any) {\n\t\tsuper(peerId, provider, { ...options, reliable: true });\n\n\t\tvoid this._rawReadStream.pipeTo(this._decoderStream.writable);\n\n\t\t(async () => {\n\t\t\tfor await (const msg of iterateOver(this._decoderStream.readable)) {\n\t\t\t\tif (msg.__peerData?.type === \"close\") {\n\t\t\t\t\tthis.close();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.emit(\"data\", msg);\n\t\t\t}\n\t\t})();\n\t}\n\n\tprotected override _send(data) {\n\t\treturn this.writer.write(this._encoder.encode(data));\n\t}\n}\n","import logger from \"../../logger.js\";\nimport type { Peer } from \"../../peer.js\";\nimport { DataConnection } from \"../DataConnection.js\";\n\nexport abstract class StreamConnection extends DataConnection {\n\tprivate _CHUNK_SIZE = 1024 * 8 * 4;\n\tprivate _splitStream = new TransformStream<Uint8Array>({\n\t\ttransform: (chunk, controller) => {\n\t\t\tfor (let split = 0; split < chunk.length; split += this._CHUNK_SIZE) {\n\t\t\t\tcontroller.enqueue(chunk.subarray(split, split + this._CHUNK_SIZE));\n\t\t\t}\n\t\t},\n\t});\n\tprivate _rawSendStream = new WritableStream<ArrayBuffer>({\n\t\twrite: async (chunk, controller) => {\n\t\t\tconst openEvent = new Promise((resolve) =>\n\t\t\t\tthis.dataChannel.addEventListener(\"bufferedamountlow\", resolve, {\n\t\t\t\t\tonce: true,\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\t// if we can send the chunk now, send it\n\t\t\t// if not, we wait until at least half of the sending buffer is free again\n\t\t\tawait (this.dataChannel.bufferedAmount <=\n\t\t\t\tDataConnection.MAX_BUFFERED_AMOUNT - chunk.byteLength || openEvent);\n\n\t\t\t// TODO: what can go wrong here?\n\t\t\ttry {\n\t\t\t\tthis.dataChannel.send(chunk);\n\t\t\t} catch (e) {\n\t\t\t\tlogger.error(`DC#:${this.connectionId} Error when sending:`, e);\n\t\t\t\tcontroller.error(e);\n\t\t\t\tthis.close();\n\t\t\t}\n\t\t},\n\t});\n\tprotected writer = this._splitStream.writable.getWriter();\n\n\tprotected _rawReadStream = new ReadableStream<ArrayBuffer>({\n\t\tstart: (controller) => {\n\t\t\tthis.once(\"open\", () => {\n\t\t\t\tthis.dataChannel.addEventListener(\"message\", (e) => {\n\t\t\t\t\tcontroller.enqueue(e.data);\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t});\n\n\tprotected constructor(peerId: string, provider: Peer, options: any) {\n\t\tsuper(peerId, provider, { ...options, reliable: true });\n\n\t\tvoid this._splitStream.readable.pipeTo(this._rawSendStream);\n\t}\n\n\tpublic override _initializeDataChannel(dc) {\n\t\tsuper._initializeDataChannel(dc);\n\t\tthis.dataChannel.binaryType = \"arraybuffer\";\n\t\tthis.dataChannel.bufferedAmountLowThreshold =\n\t\t\tDataConnection.MAX_BUFFERED_AMOUNT / 2;\n\t}\n}\n","import { Peer, type SerializerMapping } from \"./peer\";\nimport { MsgPack } from \"./exports\";\n\nexport class MsgPackPeer extends Peer {\n\toverride _serializers: SerializerMapping = {\n\t\tMsgPack,\n\t\tdefault: MsgPack,\n\t};\n}\n","import { decodeMultiStream, Encoder } from \"@msgpack/msgpack\";\nimport { StreamConnection } from \"./StreamConnection.js\";\nimport type { Peer } from \"../../peer.js\";\n\nexport class MsgPack extends StreamConnection {\n\treadonly serialization = \"MsgPack\";\n\tprivate _encoder = new Encoder();\n\n\tconstructor(peerId: string, provider: Peer, options: any) {\n\t\tsuper(peerId, provider, options);\n\n\t\t(async () => {\n\t\t\tfor await (const msg of decodeMultiStream(this._rawReadStream)) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tif (msg.__peerData?.type === \"close\") {\n\t\t\t\t\tthis.close();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.emit(\"data\", msg);\n\t\t\t}\n\t\t})();\n\t}\n\n\tprotected override _send(data) {\n\t\treturn this.writer.write(this._encoder.encode(data));\n\t}\n}\n","class $e8379818650e2442$export$93654d4f2d6cd524 {\n    constructor(){\n        this.encoder = new TextEncoder();\n        this._pieces = [];\n        this._parts = [];\n    }\n    append_buffer(data) {\n        this.flush();\n        this._parts.push(data);\n    }\n    append(data) {\n        this._pieces.push(data);\n    }\n    flush() {\n        if (this._pieces.length > 0) {\n            const buf = new Uint8Array(this._pieces);\n            this._parts.push(buf);\n            this._pieces = [];\n        }\n    }\n    toArrayBuffer() {\n        const buffer = [];\n        for (const part of this._parts)buffer.push(part);\n        return $e8379818650e2442$var$concatArrayBuffers(buffer).buffer;\n    }\n}\nfunction $e8379818650e2442$var$concatArrayBuffers(bufs) {\n    let size = 0;\n    for (const buf of bufs)size += buf.byteLength;\n    const result = new Uint8Array(size);\n    let offset = 0;\n    for (const buf of bufs){\n        const view = new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n        result.set(view, offset);\n        offset += buf.byteLength;\n    }\n    return result;\n}\n\n\nfunction $0cfd7828ad59115f$export$417857010dc9287f(data) {\n    const unpacker = new $0cfd7828ad59115f$var$Unpacker(data);\n    return unpacker.unpack();\n}\nfunction $0cfd7828ad59115f$export$2a703dbb0cb35339(data) {\n    const packer = new $0cfd7828ad59115f$export$b9ec4b114aa40074();\n    const res = packer.pack(data);\n    if (res instanceof Promise) return res.then(()=>packer.getBuffer());\n    return packer.getBuffer();\n}\nclass $0cfd7828ad59115f$var$Unpacker {\n    constructor(data){\n        this.index = 0;\n        this.dataBuffer = data;\n        this.dataView = new Uint8Array(this.dataBuffer);\n        this.length = this.dataBuffer.byteLength;\n    }\n    unpack() {\n        const type = this.unpack_uint8();\n        if (type < 0x80) return type;\n        else if ((type ^ 0xe0) < 0x20) return (type ^ 0xe0) - 0x20;\n        let size;\n        if ((size = type ^ 0xa0) <= 0x0f) return this.unpack_raw(size);\n        else if ((size = type ^ 0xb0) <= 0x0f) return this.unpack_string(size);\n        else if ((size = type ^ 0x90) <= 0x0f) return this.unpack_array(size);\n        else if ((size = type ^ 0x80) <= 0x0f) return this.unpack_map(size);\n        switch(type){\n            case 0xc0:\n                return null;\n            case 0xc1:\n                return undefined;\n            case 0xc2:\n                return false;\n            case 0xc3:\n                return true;\n            case 0xca:\n                return this.unpack_float();\n            case 0xcb:\n                return this.unpack_double();\n            case 0xcc:\n                return this.unpack_uint8();\n            case 0xcd:\n                return this.unpack_uint16();\n            case 0xce:\n                return this.unpack_uint32();\n            case 0xcf:\n                return this.unpack_uint64();\n            case 0xd0:\n                return this.unpack_int8();\n            case 0xd1:\n                return this.unpack_int16();\n            case 0xd2:\n                return this.unpack_int32();\n            case 0xd3:\n                return this.unpack_int64();\n            case 0xd4:\n                return undefined;\n            case 0xd5:\n                return undefined;\n            case 0xd6:\n                return undefined;\n            case 0xd7:\n                return undefined;\n            case 0xd8:\n                size = this.unpack_uint16();\n                return this.unpack_string(size);\n            case 0xd9:\n                size = this.unpack_uint32();\n                return this.unpack_string(size);\n            case 0xda:\n                size = this.unpack_uint16();\n                return this.unpack_raw(size);\n            case 0xdb:\n                size = this.unpack_uint32();\n                return this.unpack_raw(size);\n            case 0xdc:\n                size = this.unpack_uint16();\n                return this.unpack_array(size);\n            case 0xdd:\n                size = this.unpack_uint32();\n                return this.unpack_array(size);\n            case 0xde:\n                size = this.unpack_uint16();\n                return this.unpack_map(size);\n            case 0xdf:\n                size = this.unpack_uint32();\n                return this.unpack_map(size);\n        }\n    }\n    unpack_uint8() {\n        const byte = this.dataView[this.index] & 0xff;\n        this.index++;\n        return byte;\n    }\n    unpack_uint16() {\n        const bytes = this.read(2);\n        const uint16 = (bytes[0] & 0xff) * 256 + (bytes[1] & 0xff);\n        this.index += 2;\n        return uint16;\n    }\n    unpack_uint32() {\n        const bytes = this.read(4);\n        const uint32 = ((bytes[0] * 256 + bytes[1]) * 256 + bytes[2]) * 256 + bytes[3];\n        this.index += 4;\n        return uint32;\n    }\n    unpack_uint64() {\n        const bytes = this.read(8);\n        const uint64 = ((((((bytes[0] * 256 + bytes[1]) * 256 + bytes[2]) * 256 + bytes[3]) * 256 + bytes[4]) * 256 + bytes[5]) * 256 + bytes[6]) * 256 + bytes[7];\n        this.index += 8;\n        return uint64;\n    }\n    unpack_int8() {\n        const uint8 = this.unpack_uint8();\n        return uint8 < 0x80 ? uint8 : uint8 - 256;\n    }\n    unpack_int16() {\n        const uint16 = this.unpack_uint16();\n        return uint16 < 0x8000 ? uint16 : uint16 - 65536;\n    }\n    unpack_int32() {\n        const uint32 = this.unpack_uint32();\n        return uint32 < 2 ** 31 ? uint32 : uint32 - 2 ** 32;\n    }\n    unpack_int64() {\n        const uint64 = this.unpack_uint64();\n        return uint64 < 2 ** 63 ? uint64 : uint64 - 2 ** 64;\n    }\n    unpack_raw(size) {\n        if (this.length < this.index + size) throw new Error(`BinaryPackFailure: index is out of range ${this.index} ${size} ${this.length}`);\n        const buf = this.dataBuffer.slice(this.index, this.index + size);\n        this.index += size;\n        return buf;\n    }\n    unpack_string(size) {\n        const bytes = this.read(size);\n        let i = 0;\n        let str = \"\";\n        let c;\n        let code;\n        while(i < size){\n            c = bytes[i];\n            // The length of a UTF-8 sequence is specified in the first byte:\n            // 0xxxxxxx means length 1,\n            // 110xxxxx means length 2,\n            // 1110xxxx means length 3,\n            // 11110xxx means length 4.\n            // 10xxxxxx is for non-initial bytes.\n            if (c < 0xa0) {\n                // One-byte sequence: bits 0xxxxxxx\n                code = c;\n                i++;\n            } else if ((c ^ 0xc0) < 0x20) {\n                // Two-byte sequence: bits 110xxxxx 10xxxxxx\n                code = (c & 0x1f) << 6 | bytes[i + 1] & 0x3f;\n                i += 2;\n            } else if ((c ^ 0xe0) < 0x10) {\n                // Three-byte sequence: bits 1110xxxx 10xxxxxx 10xxxxxx\n                code = (c & 0x0f) << 12 | (bytes[i + 1] & 0x3f) << 6 | bytes[i + 2] & 0x3f;\n                i += 3;\n            } else {\n                // Four-byte sequence: bits 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n                code = (c & 0x07) << 18 | (bytes[i + 1] & 0x3f) << 12 | (bytes[i + 2] & 0x3f) << 6 | bytes[i + 3] & 0x3f;\n                i += 4;\n            }\n            str += String.fromCodePoint(code);\n        }\n        this.index += size;\n        return str;\n    }\n    unpack_array(size) {\n        const objects = new Array(size);\n        for(let i = 0; i < size; i++)objects[i] = this.unpack();\n        return objects;\n    }\n    unpack_map(size) {\n        const map = {};\n        for(let i = 0; i < size; i++){\n            const key = this.unpack();\n            map[key] = this.unpack();\n        }\n        return map;\n    }\n    unpack_float() {\n        const uint32 = this.unpack_uint32();\n        const sign = uint32 >> 31;\n        const exp = (uint32 >> 23 & 0xff) - 127;\n        const fraction = uint32 & 0x7fffff | 0x800000;\n        return (sign === 0 ? 1 : -1) * fraction * 2 ** (exp - 23);\n    }\n    unpack_double() {\n        const h32 = this.unpack_uint32();\n        const l32 = this.unpack_uint32();\n        const sign = h32 >> 31;\n        const exp = (h32 >> 20 & 0x7ff) - 1023;\n        const hfrac = h32 & 0xfffff | 0x100000;\n        const frac = hfrac * 2 ** (exp - 20) + l32 * 2 ** (exp - 52);\n        return (sign === 0 ? 1 : -1) * frac;\n    }\n    read(length) {\n        const j = this.index;\n        if (j + length <= this.length) return this.dataView.subarray(j, j + length);\n        else throw new Error(\"BinaryPackFailure: read index out of range\");\n    }\n}\nclass $0cfd7828ad59115f$export$b9ec4b114aa40074 {\n    getBuffer() {\n        return this._bufferBuilder.toArrayBuffer();\n    }\n    pack(value) {\n        if (typeof value === \"string\") this.pack_string(value);\n        else if (typeof value === \"number\") {\n            if (Math.floor(value) === value) this.pack_integer(value);\n            else this.pack_double(value);\n        } else if (typeof value === \"boolean\") {\n            if (value === true) this._bufferBuilder.append(0xc3);\n            else if (value === false) this._bufferBuilder.append(0xc2);\n        } else if (value === undefined) this._bufferBuilder.append(0xc0);\n        else if (typeof value === \"object\") {\n            if (value === null) this._bufferBuilder.append(0xc0);\n            else {\n                const constructor = value.constructor;\n                if (value instanceof Array) {\n                    const res = this.pack_array(value);\n                    if (res instanceof Promise) return res.then(()=>this._bufferBuilder.flush());\n                } else if (value instanceof ArrayBuffer) this.pack_bin(new Uint8Array(value));\n                else if (\"BYTES_PER_ELEMENT\" in value) {\n                    const v = value;\n                    this.pack_bin(new Uint8Array(v.buffer, v.byteOffset, v.byteLength));\n                } else if (value instanceof Date) this.pack_string(value.toString());\n                else if (value instanceof Blob) return value.arrayBuffer().then((buffer)=>{\n                    this.pack_bin(new Uint8Array(buffer));\n                    this._bufferBuilder.flush();\n                });\n                else if (constructor == Object || constructor.toString().startsWith(\"class\")) {\n                    const res = this.pack_object(value);\n                    if (res instanceof Promise) return res.then(()=>this._bufferBuilder.flush());\n                } else throw new Error(`Type \"${constructor.toString()}\" not yet supported`);\n            }\n        } else throw new Error(`Type \"${typeof value}\" not yet supported`);\n        this._bufferBuilder.flush();\n    }\n    pack_bin(blob) {\n        const length = blob.length;\n        if (length <= 0x0f) this.pack_uint8(0xa0 + length);\n        else if (length <= 0xffff) {\n            this._bufferBuilder.append(0xda);\n            this.pack_uint16(length);\n        } else if (length <= 0xffffffff) {\n            this._bufferBuilder.append(0xdb);\n            this.pack_uint32(length);\n        } else throw new Error(\"Invalid length\");\n        this._bufferBuilder.append_buffer(blob);\n    }\n    pack_string(str) {\n        const encoded = this._textEncoder.encode(str);\n        const length = encoded.length;\n        if (length <= 0x0f) this.pack_uint8(0xb0 + length);\n        else if (length <= 0xffff) {\n            this._bufferBuilder.append(0xd8);\n            this.pack_uint16(length);\n        } else if (length <= 0xffffffff) {\n            this._bufferBuilder.append(0xd9);\n            this.pack_uint32(length);\n        } else throw new Error(\"Invalid length\");\n        this._bufferBuilder.append_buffer(encoded);\n    }\n    pack_array(ary) {\n        const length = ary.length;\n        if (length <= 0x0f) this.pack_uint8(0x90 + length);\n        else if (length <= 0xffff) {\n            this._bufferBuilder.append(0xdc);\n            this.pack_uint16(length);\n        } else if (length <= 0xffffffff) {\n            this._bufferBuilder.append(0xdd);\n            this.pack_uint32(length);\n        } else throw new Error(\"Invalid length\");\n        const packNext = (index)=>{\n            if (index < length) {\n                const res = this.pack(ary[index]);\n                if (res instanceof Promise) return res.then(()=>packNext(index + 1));\n                return packNext(index + 1);\n            }\n        };\n        return packNext(0);\n    }\n    pack_integer(num) {\n        if (num >= -32 && num <= 0x7f) this._bufferBuilder.append(num & 0xff);\n        else if (num >= 0x00 && num <= 0xff) {\n            this._bufferBuilder.append(0xcc);\n            this.pack_uint8(num);\n        } else if (num >= -128 && num <= 0x7f) {\n            this._bufferBuilder.append(0xd0);\n            this.pack_int8(num);\n        } else if (num >= 0x0000 && num <= 0xffff) {\n            this._bufferBuilder.append(0xcd);\n            this.pack_uint16(num);\n        } else if (num >= -32768 && num <= 0x7fff) {\n            this._bufferBuilder.append(0xd1);\n            this.pack_int16(num);\n        } else if (num >= 0x00000000 && num <= 0xffffffff) {\n            this._bufferBuilder.append(0xce);\n            this.pack_uint32(num);\n        } else if (num >= -2147483648 && num <= 0x7fffffff) {\n            this._bufferBuilder.append(0xd2);\n            this.pack_int32(num);\n        } else if (num >= -9223372036854776000 && num <= 0x7fffffffffffffff) {\n            this._bufferBuilder.append(0xd3);\n            this.pack_int64(num);\n        } else if (num >= 0x0000000000000000 && num <= 0xffffffffffffffff) {\n            this._bufferBuilder.append(0xcf);\n            this.pack_uint64(num);\n        } else throw new Error(\"Invalid integer\");\n    }\n    pack_double(num) {\n        let sign = 0;\n        if (num < 0) {\n            sign = 1;\n            num = -num;\n        }\n        const exp = Math.floor(Math.log(num) / Math.LN2);\n        const frac0 = num / 2 ** exp - 1;\n        const frac1 = Math.floor(frac0 * 2 ** 52);\n        const b32 = 2 ** 32;\n        const h32 = sign << 31 | exp + 1023 << 20 | frac1 / b32 & 0x0fffff;\n        const l32 = frac1 % b32;\n        this._bufferBuilder.append(0xcb);\n        this.pack_int32(h32);\n        this.pack_int32(l32);\n    }\n    pack_object(obj) {\n        const keys = Object.keys(obj);\n        const length = keys.length;\n        if (length <= 0x0f) this.pack_uint8(0x80 + length);\n        else if (length <= 0xffff) {\n            this._bufferBuilder.append(0xde);\n            this.pack_uint16(length);\n        } else if (length <= 0xffffffff) {\n            this._bufferBuilder.append(0xdf);\n            this.pack_uint32(length);\n        } else throw new Error(\"Invalid length\");\n        const packNext = (index)=>{\n            if (index < keys.length) {\n                const prop = keys[index];\n                // eslint-disable-next-line no-prototype-builtins\n                if (obj.hasOwnProperty(prop)) {\n                    this.pack(prop);\n                    const res = this.pack(obj[prop]);\n                    if (res instanceof Promise) return res.then(()=>packNext(index + 1));\n                }\n                return packNext(index + 1);\n            }\n        };\n        return packNext(0);\n    }\n    pack_uint8(num) {\n        this._bufferBuilder.append(num);\n    }\n    pack_uint16(num) {\n        this._bufferBuilder.append(num >> 8);\n        this._bufferBuilder.append(num & 0xff);\n    }\n    pack_uint32(num) {\n        const n = num & 0xffffffff;\n        this._bufferBuilder.append((n & 0xff000000) >>> 24);\n        this._bufferBuilder.append((n & 0x00ff0000) >>> 16);\n        this._bufferBuilder.append((n & 0x0000ff00) >>> 8);\n        this._bufferBuilder.append(n & 0x000000ff);\n    }\n    pack_uint64(num) {\n        const high = num / 2 ** 32;\n        const low = num % 2 ** 32;\n        this._bufferBuilder.append((high & 0xff000000) >>> 24);\n        this._bufferBuilder.append((high & 0x00ff0000) >>> 16);\n        this._bufferBuilder.append((high & 0x0000ff00) >>> 8);\n        this._bufferBuilder.append(high & 0x000000ff);\n        this._bufferBuilder.append((low & 0xff000000) >>> 24);\n        this._bufferBuilder.append((low & 0x00ff0000) >>> 16);\n        this._bufferBuilder.append((low & 0x0000ff00) >>> 8);\n        this._bufferBuilder.append(low & 0x000000ff);\n    }\n    pack_int8(num) {\n        this._bufferBuilder.append(num & 0xff);\n    }\n    pack_int16(num) {\n        this._bufferBuilder.append((num & 0xff00) >> 8);\n        this._bufferBuilder.append(num & 0xff);\n    }\n    pack_int32(num) {\n        this._bufferBuilder.append(num >>> 24 & 0xff);\n        this._bufferBuilder.append((num & 0x00ff0000) >>> 16);\n        this._bufferBuilder.append((num & 0x0000ff00) >>> 8);\n        this._bufferBuilder.append(num & 0x000000ff);\n    }\n    pack_int64(num) {\n        const high = Math.floor(num / 2 ** 32);\n        const low = num % 2 ** 32;\n        this._bufferBuilder.append((high & 0xff000000) >>> 24);\n        this._bufferBuilder.append((high & 0x00ff0000) >>> 16);\n        this._bufferBuilder.append((high & 0x0000ff00) >>> 8);\n        this._bufferBuilder.append(high & 0x000000ff);\n        this._bufferBuilder.append((low & 0xff000000) >>> 24);\n        this._bufferBuilder.append((low & 0x00ff0000) >>> 16);\n        this._bufferBuilder.append((low & 0x0000ff00) >>> 8);\n        this._bufferBuilder.append(low & 0x000000ff);\n    }\n    constructor(){\n        this._bufferBuilder = new (0, $e8379818650e2442$export$93654d4f2d6cd524)();\n        this._textEncoder = new TextEncoder();\n    }\n}\n\n\nexport {$0cfd7828ad59115f$export$417857010dc9287f as unpack, $0cfd7828ad59115f$export$2a703dbb0cb35339 as pack, $0cfd7828ad59115f$export$b9ec4b114aa40074 as Packer};\n//# sourceMappingURL=binarypack.mjs.map\n","import { BufferBuilder } from \"./bufferbuilder\";\n\nexport type Packable =\n\t| null\n\t| undefined\n\t| string\n\t| number\n\t| boolean\n\t| Date\n\t| ArrayBuffer\n\t| Blob\n\t| Array<Packable>\n\t| { [key: string]: Packable }\n\t| ({ BYTES_PER_ELEMENT: number } & ArrayBufferView);\nexport type Unpackable =\n\t| null\n\t| undefined\n\t| string\n\t| number\n\t| boolean\n\t| ArrayBuffer\n\t| Array<Unpackable>\n\t| { [key: string]: Unpackable };\n\nexport function unpack<T extends Unpackable>(data: ArrayBuffer) {\n\tconst unpacker = new Unpacker(data);\n\treturn unpacker.unpack() as T;\n}\n\nexport function pack(data: Packable) {\n\tconst packer = new Packer();\n\tconst res = packer.pack(data);\n\tif (res instanceof Promise) {\n\t\treturn res.then(() => packer.getBuffer());\n\t}\n\treturn packer.getBuffer();\n}\n\nclass Unpacker {\n\tprivate index: number;\n\tprivate readonly dataBuffer: ArrayBuffer;\n\tprivate readonly dataView: Uint8Array;\n\tprivate readonly length: number;\n\n\tconstructor(data: ArrayBuffer) {\n\t\tthis.index = 0;\n\t\tthis.dataBuffer = data;\n\t\tthis.dataView = new Uint8Array(this.dataBuffer);\n\t\tthis.length = this.dataBuffer.byteLength;\n\t}\n\n\tunpack(): Unpackable {\n\t\tconst type = this.unpack_uint8();\n\t\tif (type < 0x80) {\n\t\t\treturn type;\n\t\t} else if ((type ^ 0xe0) < 0x20) {\n\t\t\treturn (type ^ 0xe0) - 0x20;\n\t\t}\n\n\t\tlet size;\n\t\tif ((size = type ^ 0xa0) <= 0x0f) {\n\t\t\treturn this.unpack_raw(size);\n\t\t} else if ((size = type ^ 0xb0) <= 0x0f) {\n\t\t\treturn this.unpack_string(size);\n\t\t} else if ((size = type ^ 0x90) <= 0x0f) {\n\t\t\treturn this.unpack_array(size);\n\t\t} else if ((size = type ^ 0x80) <= 0x0f) {\n\t\t\treturn this.unpack_map(size);\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase 0xc0:\n\t\t\t\treturn null;\n\t\t\tcase 0xc1:\n\t\t\t\treturn undefined;\n\t\t\tcase 0xc2:\n\t\t\t\treturn false;\n\t\t\tcase 0xc3:\n\t\t\t\treturn true;\n\t\t\tcase 0xca:\n\t\t\t\treturn this.unpack_float();\n\t\t\tcase 0xcb:\n\t\t\t\treturn this.unpack_double();\n\t\t\tcase 0xcc:\n\t\t\t\treturn this.unpack_uint8();\n\t\t\tcase 0xcd:\n\t\t\t\treturn this.unpack_uint16();\n\t\t\tcase 0xce:\n\t\t\t\treturn this.unpack_uint32();\n\t\t\tcase 0xcf:\n\t\t\t\treturn this.unpack_uint64();\n\t\t\tcase 0xd0:\n\t\t\t\treturn this.unpack_int8();\n\t\t\tcase 0xd1:\n\t\t\t\treturn this.unpack_int16();\n\t\t\tcase 0xd2:\n\t\t\t\treturn this.unpack_int32();\n\t\t\tcase 0xd3:\n\t\t\t\treturn this.unpack_int64();\n\t\t\tcase 0xd4:\n\t\t\t\treturn undefined;\n\t\t\tcase 0xd5:\n\t\t\t\treturn undefined;\n\t\t\tcase 0xd6:\n\t\t\t\treturn undefined;\n\t\t\tcase 0xd7:\n\t\t\t\treturn undefined;\n\t\t\tcase 0xd8:\n\t\t\t\tsize = this.unpack_uint16();\n\t\t\t\treturn this.unpack_string(size);\n\t\t\tcase 0xd9:\n\t\t\t\tsize = this.unpack_uint32();\n\t\t\t\treturn this.unpack_string(size);\n\t\t\tcase 0xda:\n\t\t\t\tsize = this.unpack_uint16();\n\t\t\t\treturn this.unpack_raw(size);\n\t\t\tcase 0xdb:\n\t\t\t\tsize = this.unpack_uint32();\n\t\t\t\treturn this.unpack_raw(size);\n\t\t\tcase 0xdc:\n\t\t\t\tsize = this.unpack_uint16();\n\t\t\t\treturn this.unpack_array(size);\n\t\t\tcase 0xdd:\n\t\t\t\tsize = this.unpack_uint32();\n\t\t\t\treturn this.unpack_array(size);\n\t\t\tcase 0xde:\n\t\t\t\tsize = this.unpack_uint16();\n\t\t\t\treturn this.unpack_map(size);\n\t\t\tcase 0xdf:\n\t\t\t\tsize = this.unpack_uint32();\n\t\t\t\treturn this.unpack_map(size);\n\t\t}\n\t}\n\n\tunpack_uint8() {\n\t\tconst byte = this.dataView[this.index] & 0xff;\n\t\tthis.index++;\n\t\treturn byte;\n\t}\n\n\tunpack_uint16() {\n\t\tconst bytes = this.read(2);\n\t\tconst uint16 = (bytes[0] & 0xff) * 256 + (bytes[1] & 0xff);\n\t\tthis.index += 2;\n\t\treturn uint16;\n\t}\n\n\tunpack_uint32() {\n\t\tconst bytes = this.read(4);\n\t\tconst uint32 =\n\t\t\t((bytes[0] * 256 + bytes[1]) * 256 + bytes[2]) * 256 + bytes[3];\n\t\tthis.index += 4;\n\t\treturn uint32;\n\t}\n\n\tunpack_uint64() {\n\t\tconst bytes = this.read(8);\n\t\tconst uint64 =\n\t\t\t((((((bytes[0] * 256 + bytes[1]) * 256 + bytes[2]) * 256 + bytes[3]) *\n\t\t\t\t256 +\n\t\t\t\tbytes[4]) *\n\t\t\t\t256 +\n\t\t\t\tbytes[5]) *\n\t\t\t\t256 +\n\t\t\t\tbytes[6]) *\n\t\t\t\t256 +\n\t\t\tbytes[7];\n\t\tthis.index += 8;\n\t\treturn uint64;\n\t}\n\n\tunpack_int8() {\n\t\tconst uint8 = this.unpack_uint8();\n\t\treturn uint8 < 0x80 ? uint8 : uint8 - (1 << 8);\n\t}\n\n\tunpack_int16() {\n\t\tconst uint16 = this.unpack_uint16();\n\t\treturn uint16 < 0x8000 ? uint16 : uint16 - (1 << 16);\n\t}\n\n\tunpack_int32() {\n\t\tconst uint32 = this.unpack_uint32();\n\t\treturn uint32 < 2 ** 31 ? uint32 : uint32 - 2 ** 32;\n\t}\n\n\tunpack_int64() {\n\t\tconst uint64 = this.unpack_uint64();\n\t\treturn uint64 < 2 ** 63 ? uint64 : uint64 - 2 ** 64;\n\t}\n\n\tunpack_raw(size: number) {\n\t\tif (this.length < this.index + size) {\n\t\t\tthrow new Error(\n\t\t\t\t`BinaryPackFailure: index is out of range ${this.index} ${size} ${this.length}`,\n\t\t\t);\n\t\t}\n\t\tconst buf = this.dataBuffer.slice(this.index, this.index + size);\n\t\tthis.index += size;\n\n\t\treturn buf;\n\t}\n\n\tunpack_string(size: number) {\n\t\tconst bytes = this.read(size);\n\t\tlet i = 0;\n\t\tlet str = \"\";\n\t\tlet c;\n\t\tlet code;\n\n\t\twhile (i < size) {\n\t\t\tc = bytes[i];\n\t\t\t// The length of a UTF-8 sequence is specified in the first byte:\n\t\t\t// 0xxxxxxx means length 1,\n\t\t\t// 110xxxxx means length 2,\n\t\t\t// 1110xxxx means length 3,\n\t\t\t// 11110xxx means length 4.\n\t\t\t// 10xxxxxx is for non-initial bytes.\n\t\t\tif (c < 0xa0) {\n\t\t\t\t// One-byte sequence: bits 0xxxxxxx\n\t\t\t\tcode = c;\n\t\t\t\ti++;\n\t\t\t} else if ((c ^ 0xc0) < 0x20) {\n\t\t\t\t// Two-byte sequence: bits 110xxxxx 10xxxxxx\n\t\t\t\tcode = ((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f);\n\t\t\t\ti += 2;\n\t\t\t} else if ((c ^ 0xe0) < 0x10) {\n\t\t\t\t// Three-byte sequence: bits 1110xxxx 10xxxxxx 10xxxxxx\n\t\t\t\tcode =\n\t\t\t\t\t((c & 0x0f) << 12) |\n\t\t\t\t\t((bytes[i + 1] & 0x3f) << 6) |\n\t\t\t\t\t(bytes[i + 2] & 0x3f);\n\t\t\t\ti += 3;\n\t\t\t} else {\n\t\t\t\t// Four-byte sequence: bits 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n\t\t\t\tcode =\n\t\t\t\t\t((c & 0x07) << 18) |\n\t\t\t\t\t((bytes[i + 1] & 0x3f) << 12) |\n\t\t\t\t\t((bytes[i + 2] & 0x3f) << 6) |\n\t\t\t\t\t(bytes[i + 3] & 0x3f);\n\t\t\t\ti += 4;\n\t\t\t}\n\t\t\tstr += String.fromCodePoint(code);\n\t\t}\n\n\t\tthis.index += size;\n\t\treturn str;\n\t}\n\n\tunpack_array(size: number) {\n\t\tconst objects = new Array<Unpackable>(size);\n\t\tfor (let i = 0; i < size; i++) {\n\t\t\tobjects[i] = this.unpack();\n\t\t}\n\t\treturn objects;\n\t}\n\n\tunpack_map(size: number) {\n\t\tconst map: { [key: string]: Unpackable } = {};\n\t\tfor (let i = 0; i < size; i++) {\n\t\t\tconst key = this.unpack() as string;\n\t\t\tmap[key] = this.unpack();\n\t\t}\n\t\treturn map;\n\t}\n\n\tunpack_float() {\n\t\tconst uint32 = this.unpack_uint32();\n\t\tconst sign = uint32 >> 31;\n\t\tconst exp = ((uint32 >> 23) & 0xff) - 127;\n\t\tconst fraction = (uint32 & 0x7fffff) | 0x800000;\n\t\treturn (sign === 0 ? 1 : -1) * fraction * 2 ** (exp - 23);\n\t}\n\n\tunpack_double() {\n\t\tconst h32 = this.unpack_uint32();\n\t\tconst l32 = this.unpack_uint32();\n\t\tconst sign = h32 >> 31;\n\t\tconst exp = ((h32 >> 20) & 0x7ff) - 1023;\n\t\tconst hfrac = (h32 & 0xfffff) | 0x100000;\n\t\tconst frac = hfrac * 2 ** (exp - 20) + l32 * 2 ** (exp - 52);\n\t\treturn (sign === 0 ? 1 : -1) * frac;\n\t}\n\n\tread(length: number) {\n\t\tconst j = this.index;\n\t\tif (j + length <= this.length) {\n\t\t\treturn this.dataView.subarray(j, j + length);\n\t\t} else {\n\t\t\tthrow new Error(\"BinaryPackFailure: read index out of range\");\n\t\t}\n\t}\n}\n\nexport class Packer {\n\tprivate _bufferBuilder = new BufferBuilder();\n\tprivate _textEncoder = new TextEncoder();\n\n\tgetBuffer() {\n\t\treturn this._bufferBuilder.toArrayBuffer();\n\t}\n\n\tpack(value: Packable) {\n\t\tif (typeof value === \"string\") {\n\t\t\tthis.pack_string(value);\n\t\t} else if (typeof value === \"number\") {\n\t\t\tif (Math.floor(value) === value) {\n\t\t\t\tthis.pack_integer(value);\n\t\t\t} else {\n\t\t\t\tthis.pack_double(value);\n\t\t\t}\n\t\t} else if (typeof value === \"boolean\") {\n\t\t\tif (value === true) {\n\t\t\t\tthis._bufferBuilder.append(0xc3);\n\t\t\t} else if (value === false) {\n\t\t\t\tthis._bufferBuilder.append(0xc2);\n\t\t\t}\n\t\t} else if (value === undefined) {\n\t\t\tthis._bufferBuilder.append(0xc0);\n\t\t} else if (typeof value === \"object\") {\n\t\t\tif (value === null) {\n\t\t\t\tthis._bufferBuilder.append(0xc0);\n\t\t\t} else {\n\t\t\t\tconst constructor = value.constructor;\n\t\t\t\tif (value instanceof Array) {\n\t\t\t\t\tconst res = this.pack_array(value);\n\t\t\t\t\tif (res instanceof Promise) {\n\t\t\t\t\t\treturn res.then(() => this._bufferBuilder.flush());\n\t\t\t\t\t}\n\t\t\t\t} else if (value instanceof ArrayBuffer) {\n\t\t\t\t\tthis.pack_bin(new Uint8Array(value));\n\t\t\t\t} else if (\"BYTES_PER_ELEMENT\" in value) {\n\t\t\t\t\tconst v = value as unknown as DataView;\n\t\t\t\t\tthis.pack_bin(new Uint8Array(v.buffer, v.byteOffset, v.byteLength));\n\t\t\t\t} else if (value instanceof Date) {\n\t\t\t\t\tthis.pack_string(value.toString());\n\t\t\t\t} else if (value instanceof Blob) {\n\t\t\t\t\treturn value.arrayBuffer().then((buffer) => {\n\t\t\t\t\t\tthis.pack_bin(new Uint8Array(buffer));\n\t\t\t\t\t\tthis._bufferBuilder.flush();\n\t\t\t\t\t});\n\t\t\t\t\t// this.pack_bin(new Uint8Array(await value.arrayBuffer()));\n\t\t\t\t} else if (\n\t\t\t\t\tconstructor == Object ||\n\t\t\t\t\tconstructor.toString().startsWith(\"class\")\n\t\t\t\t) {\n\t\t\t\t\tconst res = this.pack_object(value);\n\t\t\t\t\tif (res instanceof Promise) {\n\t\t\t\t\t\treturn res.then(() => this._bufferBuilder.flush());\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(`Type \"${constructor.toString()}\" not yet supported`);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(`Type \"${typeof value}\" not yet supported`);\n\t\t}\n\t\tthis._bufferBuilder.flush();\n\t}\n\n\tpack_bin(blob: Uint8Array) {\n\t\tconst length = blob.length;\n\n\t\tif (length <= 0x0f) {\n\t\t\tthis.pack_uint8(0xa0 + length);\n\t\t} else if (length <= 0xffff) {\n\t\t\tthis._bufferBuilder.append(0xda);\n\t\t\tthis.pack_uint16(length);\n\t\t} else if (length <= 0xffffffff) {\n\t\t\tthis._bufferBuilder.append(0xdb);\n\t\t\tthis.pack_uint32(length);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid length\");\n\t\t}\n\t\tthis._bufferBuilder.append_buffer(blob);\n\t}\n\n\tpack_string(str: string) {\n\t\tconst encoded = this._textEncoder.encode(str);\n\t\tconst length = encoded.length;\n\n\t\tif (length <= 0x0f) {\n\t\t\tthis.pack_uint8(0xb0 + length);\n\t\t} else if (length <= 0xffff) {\n\t\t\tthis._bufferBuilder.append(0xd8);\n\t\t\tthis.pack_uint16(length);\n\t\t} else if (length <= 0xffffffff) {\n\t\t\tthis._bufferBuilder.append(0xd9);\n\t\t\tthis.pack_uint32(length);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid length\");\n\t\t}\n\t\tthis._bufferBuilder.append_buffer(encoded);\n\t}\n\n\tpack_array(ary: Packable[]) {\n\t\tconst length = ary.length;\n\t\tif (length <= 0x0f) {\n\t\t\tthis.pack_uint8(0x90 + length);\n\t\t} else if (length <= 0xffff) {\n\t\t\tthis._bufferBuilder.append(0xdc);\n\t\t\tthis.pack_uint16(length);\n\t\t} else if (length <= 0xffffffff) {\n\t\t\tthis._bufferBuilder.append(0xdd);\n\t\t\tthis.pack_uint32(length);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid length\");\n\t\t}\n\n\t\tconst packNext = (index: number): Promise<void> | void => {\n\t\t\tif (index < length) {\n\t\t\t\tconst res = this.pack(ary[index]);\n\t\t\t\tif (res instanceof Promise) {\n\t\t\t\t\treturn res.then(() => packNext(index + 1));\n\t\t\t\t}\n\t\t\t\treturn packNext(index + 1);\n\t\t\t}\n\t\t};\n\n\t\treturn packNext(0);\n\t}\n\n\tpack_integer(num: number) {\n\t\tif (num >= -0x20 && num <= 0x7f) {\n\t\t\tthis._bufferBuilder.append(num & 0xff);\n\t\t} else if (num >= 0x00 && num <= 0xff) {\n\t\t\tthis._bufferBuilder.append(0xcc);\n\t\t\tthis.pack_uint8(num);\n\t\t} else if (num >= -0x80 && num <= 0x7f) {\n\t\t\tthis._bufferBuilder.append(0xd0);\n\t\t\tthis.pack_int8(num);\n\t\t} else if (num >= 0x0000 && num <= 0xffff) {\n\t\t\tthis._bufferBuilder.append(0xcd);\n\t\t\tthis.pack_uint16(num);\n\t\t} else if (num >= -0x8000 && num <= 0x7fff) {\n\t\t\tthis._bufferBuilder.append(0xd1);\n\t\t\tthis.pack_int16(num);\n\t\t} else if (num >= 0x00000000 && num <= 0xffffffff) {\n\t\t\tthis._bufferBuilder.append(0xce);\n\t\t\tthis.pack_uint32(num);\n\t\t} else if (num >= -0x80000000 && num <= 0x7fffffff) {\n\t\t\tthis._bufferBuilder.append(0xd2);\n\t\t\tthis.pack_int32(num);\n\t\t} else if (num >= -0x8000000000000000 && num <= 0x7fffffffffffffff) {\n\t\t\tthis._bufferBuilder.append(0xd3);\n\t\t\tthis.pack_int64(num);\n\t\t} else if (num >= 0x0000000000000000 && num <= 0xffffffffffffffff) {\n\t\t\tthis._bufferBuilder.append(0xcf);\n\t\t\tthis.pack_uint64(num);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid integer\");\n\t\t}\n\t}\n\n\tpack_double(num: number) {\n\t\tlet sign = 0;\n\t\tif (num < 0) {\n\t\t\tsign = 1;\n\t\t\tnum = -num;\n\t\t}\n\t\tconst exp = Math.floor(Math.log(num) / Math.LN2);\n\t\tconst frac0 = num / 2 ** exp - 1;\n\t\tconst frac1 = Math.floor(frac0 * 2 ** 52);\n\t\tconst b32 = 2 ** 32;\n\t\tconst h32 =\n\t\t\t(sign << 31) | ((exp + 1023) << 20) | ((frac1 / b32) & 0x0fffff);\n\t\tconst l32 = frac1 % b32;\n\t\tthis._bufferBuilder.append(0xcb);\n\t\tthis.pack_int32(h32);\n\t\tthis.pack_int32(l32);\n\t}\n\n\tpack_object(obj: { [key: string]: Packable }) {\n\t\tconst keys = Object.keys(obj);\n\t\tconst length = keys.length;\n\t\tif (length <= 0x0f) {\n\t\t\tthis.pack_uint8(0x80 + length);\n\t\t} else if (length <= 0xffff) {\n\t\t\tthis._bufferBuilder.append(0xde);\n\t\t\tthis.pack_uint16(length);\n\t\t} else if (length <= 0xffffffff) {\n\t\t\tthis._bufferBuilder.append(0xdf);\n\t\t\tthis.pack_uint32(length);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid length\");\n\t\t}\n\n\t\tconst packNext = (index: number): Promise<void> | void => {\n\t\t\tif (index < keys.length) {\n\t\t\t\tconst prop = keys[index];\n\t\t\t\t// eslint-disable-next-line no-prototype-builtins\n\t\t\t\tif (obj.hasOwnProperty(prop)) {\n\t\t\t\t\tthis.pack(prop);\n\t\t\t\t\tconst res = this.pack(obj[prop]);\n\t\t\t\t\tif (res instanceof Promise) {\n\t\t\t\t\t\treturn res.then(() => packNext(index + 1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn packNext(index + 1);\n\t\t\t}\n\t\t};\n\n\t\treturn packNext(0);\n\t}\n\n\tpack_uint8(num: number) {\n\t\tthis._bufferBuilder.append(num);\n\t}\n\n\tpack_uint16(num: number) {\n\t\tthis._bufferBuilder.append(num >> 8);\n\t\tthis._bufferBuilder.append(num & 0xff);\n\t}\n\n\tpack_uint32(num: number) {\n\t\tconst n = num & 0xffffffff;\n\t\tthis._bufferBuilder.append((n & 0xff000000) >>> 24);\n\t\tthis._bufferBuilder.append((n & 0x00ff0000) >>> 16);\n\t\tthis._bufferBuilder.append((n & 0x0000ff00) >>> 8);\n\t\tthis._bufferBuilder.append(n & 0x000000ff);\n\t}\n\n\tpack_uint64(num: number) {\n\t\tconst high = num / 2 ** 32;\n\t\tconst low = num % 2 ** 32;\n\t\tthis._bufferBuilder.append((high & 0xff000000) >>> 24);\n\t\tthis._bufferBuilder.append((high & 0x00ff0000) >>> 16);\n\t\tthis._bufferBuilder.append((high & 0x0000ff00) >>> 8);\n\t\tthis._bufferBuilder.append(high & 0x000000ff);\n\t\tthis._bufferBuilder.append((low & 0xff000000) >>> 24);\n\t\tthis._bufferBuilder.append((low & 0x00ff0000) >>> 16);\n\t\tthis._bufferBuilder.append((low & 0x0000ff00) >>> 8);\n\t\tthis._bufferBuilder.append(low & 0x000000ff);\n\t}\n\n\tpack_int8(num: number) {\n\t\tthis._bufferBuilder.append(num & 0xff);\n\t}\n\n\tpack_int16(num: number) {\n\t\tthis._bufferBuilder.append((num & 0xff00) >> 8);\n\t\tthis._bufferBuilder.append(num & 0xff);\n\t}\n\n\tpack_int32(num: number) {\n\t\tthis._bufferBuilder.append((num >>> 24) & 0xff);\n\t\tthis._bufferBuilder.append((num & 0x00ff0000) >>> 16);\n\t\tthis._bufferBuilder.append((num & 0x0000ff00) >>> 8);\n\t\tthis._bufferBuilder.append(num & 0x000000ff);\n\t}\n\n\tpack_int64(num: number) {\n\t\tconst high = Math.floor(num / 2 ** 32);\n\t\tconst low = num % 2 ** 32;\n\t\tthis._bufferBuilder.append((high & 0xff000000) >>> 24);\n\t\tthis._bufferBuilder.append((high & 0x00ff0000) >>> 16);\n\t\tthis._bufferBuilder.append((high & 0x0000ff00) >>> 8);\n\t\tthis._bufferBuilder.append(high & 0x000000ff);\n\t\tthis._bufferBuilder.append((low & 0xff000000) >>> 24);\n\t\tthis._bufferBuilder.append((low & 0x00ff0000) >>> 16);\n\t\tthis._bufferBuilder.append((low & 0x0000ff00) >>> 8);\n\t\tthis._bufferBuilder.append(low & 0x000000ff);\n\t}\n}\n","class BufferBuilder {\n\tprivate _pieces: number[];\n\tprivate readonly _parts: ArrayBufferView[];\n\n\tconstructor() {\n\t\tthis._pieces = [];\n\t\tthis._parts = [];\n\t}\n\n\tappend_buffer(data: ArrayBufferView) {\n\t\tthis.flush();\n\t\tthis._parts.push(data);\n\t}\n\n\tappend(data: number) {\n\t\tthis._pieces.push(data);\n\t}\n\n\tflush() {\n\t\tif (this._pieces.length > 0) {\n\t\t\tconst buf = new Uint8Array(this._pieces);\n\t\t\tthis._parts.push(buf);\n\t\t\tthis._pieces = [];\n\t\t}\n\t}\n\n\tprivate encoder = new TextEncoder();\n\n\tpublic toArrayBuffer() {\n\t\tconst buffer = [];\n\t\tfor (const part of this._parts) {\n\t\t\tbuffer.push(part);\n\t\t}\n\t\treturn concatArrayBuffers(buffer).buffer;\n\t}\n}\n\nexport { BufferBuilder };\n\nfunction concatArrayBuffers(bufs: ArrayBufferView[]) {\n\tlet size = 0;\n\tfor (const buf of bufs) {\n\t\tsize += buf.byteLength;\n\t}\n\tconst result = new Uint8Array(size);\n\tlet offset = 0;\n\tfor (const buf of bufs) {\n\t\tconst view = new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n\t\tresult.set(view, offset);\n\t\toffset += buf.byteLength;\n\t}\n\treturn result;\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\n'use strict';\n\nimport {adapterFactory} from './adapter_factory.js';\n\nconst adapter =\n  adapterFactory({window: typeof window === 'undefined' ? undefined : window});\nexport default adapter;\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils';\n\n// Browser shims.\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\nimport * as sdp from 'sdp';\n\n// Shimming starts here.\nexport function adapterFactory({window} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimSafari: true,\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings,\n    // Expose sdp as a convenience. For production apps include directly.\n    sdp,\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      if (browserDetails.version === null) {\n        logging('Chrome shim can not determine version, not shimming.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      chromeShim.shimGetUserMedia(window, browserDetails);\n      chromeShim.shimMediaStream(window, browserDetails);\n      chromeShim.shimPeerConnection(window, browserDetails);\n      chromeShim.shimOnTrack(window, browserDetails);\n      chromeShim.shimAddTrackRemoveTrack(window, browserDetails);\n      chromeShim.shimGetSendersWithDtmf(window, browserDetails);\n      chromeShim.shimGetStats(window, browserDetails);\n      chromeShim.shimSenderReceiverGetStats(window, browserDetails);\n      chromeShim.fixNegotiationNeeded(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimRTCIceCandidateRelayProtocol(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      firefoxShim.shimGetUserMedia(window, browserDetails);\n      firefoxShim.shimPeerConnection(window, browserDetails);\n      firefoxShim.shimOnTrack(window, browserDetails);\n      firefoxShim.shimRemoveStream(window, browserDetails);\n      firefoxShim.shimSenderGetStats(window, browserDetails);\n      firefoxShim.shimReceiverGetStats(window, browserDetails);\n      firefoxShim.shimRTCDataChannel(window, browserDetails);\n      firefoxShim.shimAddTransceiver(window, browserDetails);\n      firefoxShim.shimGetParameters(window, browserDetails);\n      firefoxShim.shimCreateOffer(window, browserDetails);\n      firefoxShim.shimCreateAnswer(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      // Must be called before shimCallbackAPI.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      safariShim.shimRTCIceServerUrls(window, browserDetails);\n      safariShim.shimCreateOfferLegacy(window, browserDetails);\n      safariShim.shimCallbacksAPI(window, browserDetails);\n      safariShim.shimLocalStreamsAPI(window, browserDetails);\n      safariShim.shimRemoteStreamsAPI(window, browserDetails);\n      safariShim.shimTrackEventTransceiver(window, browserDetails);\n      safariShim.shimGetUserMedia(window, browserDetails);\n      safariShim.shimAudioContext(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimRTCIceCandidateRelayProtocol(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nlet logDisabled_ = true;\nlet deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nexport function extractVersion(uastring, expr, pos) {\n  const match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nexport function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  const nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    const wrappedCallback = (e) => {\n      const modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        if (cb.handleEvent) {\n          cb.handleEvent(modifiedEvent);\n        } else {\n          cb(modifiedEvent);\n        }\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    if (!this._eventMap[eventNameToWrap]) {\n      this._eventMap[eventNameToWrap] = new Map();\n    }\n    this._eventMap[eventNameToWrap].set(cb, wrappedCallback);\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  const nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[eventNameToWrap]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    if (!this._eventMap[eventNameToWrap].has(cb)) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    const unwrappedCb = this._eventMap[eventNameToWrap].get(cb);\n    this._eventMap[eventNameToWrap].delete(cb);\n    if (this._eventMap[eventNameToWrap].size === 0) {\n      delete this._eventMap[eventNameToWrap];\n    }\n    if (Object.keys(this._eventMap).length === 0) {\n      delete this._eventMap;\n    }\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n          this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n          this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nexport function disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return (bool) ? 'adapter.js logging disabled' :\n    'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nexport function disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\n\nexport function log() {\n  if (typeof window === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nexport function deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n      ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nexport function detectBrowser(window) {\n  // Returned result object.\n  const result = {browser: null, version: null};\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator ||\n      !window.navigator.userAgent) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  const {navigator} = window;\n\n  if (navigator.mozGetUserMedia) { // Firefox.\n    result.browser = 'firefox';\n    result.version = extractVersion(navigator.userAgent,\n      /Firefox\\/(\\d+)\\./, 1);\n  } else if (navigator.webkitGetUserMedia ||\n      (window.isSecureContext === false && window.webkitRTCPeerConnection)) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n    // more complicated fallback to webkitRTCPeerConnection.\n    result.browser = 'chrome';\n    result.version = extractVersion(navigator.userAgent,\n      /Chrom(e|ium)\\/(\\d+)\\./, 2);\n  } else if (window.RTCPeerConnection &&\n      navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n    result.browser = 'safari';\n    result.version = extractVersion(navigator.userAgent,\n      /AppleWebKit\\/(\\d+)\\./, 1);\n    result.supportsUnifiedPlan = window.RTCRtpTransceiver &&\n        'currentDirection' in window.RTCRtpTransceiver.prototype;\n  } else { // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n\n/**\n * Checks if something is an object.\n *\n * @param {*} val The something you want to check.\n * @return true if val is an object, false otherwise.\n */\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\nexport function compactObject(data) {\n  if (!isObject(data)) {\n    return data;\n  }\n\n  return Object.keys(data).reduce(function(accumulator, key) {\n    const isObj = isObject(data[key]);\n    const value = isObj ? compactObject(data[key]) : data[key];\n    const isEmptyObject = isObj && !Object.keys(value).length;\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n    return Object.assign(accumulator, {[key]: value});\n  }, {});\n}\n\n/* iterates the stats graph recursively. */\nexport function walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(name => {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(id => {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nexport function filterStats(result, track, outbound) {\n  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  const filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  const trackStats = [];\n  result.forEach(value => {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(trackStat => {\n    result.forEach(stats => {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n      window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get() {\n        return this._ontrack;\n      },\n      set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    const origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        if (!this._ontrackpoly) {\n          this._ontrackpoly = (e) => {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', te => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === te.track.id);\n              } else {\n                receiver = {track: te.track};\n              }\n\n              const event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(track => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === track.id);\n              } else {\n                receiver = {track};\n              }\n              const event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n          };\n          this.addEventListener('addstream', this._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(this, arguments);\n      };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver',\n          {value: {receiver: e.receiver}});\n      }\n      return e;\n    });\n  }\n}\n\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      !('getSenders' in window.RTCPeerConnection.prototype) &&\n      'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    const shimSenderWithDtmf = function(pc, track) {\n      return {\n        track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack =\n        function addTrack(track, stream) {\n          let sender = origAddTrack.apply(this, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(this, track);\n            this._senders.push(sender);\n          }\n          return sender;\n        };\n\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack =\n        function removeTrack(sender) {\n          origRemoveTrack.apply(this, arguments);\n          const idx = this._senders.indexOf(sender);\n          if (idx !== -1) {\n            this._senders.splice(idx, 1);\n          }\n        };\n    }\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        this._senders.push(shimSenderWithDtmf(this, track));\n      });\n    };\n\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        this._senders = this._senders || [];\n        origRemoveStream.apply(this, [stream]);\n\n        stream.getTracks().forEach(track => {\n          const sender = this._senders.find(s => s.track === track);\n          if (sender) { // remove sender\n            this._senders.splice(this._senders.indexOf(sender), 1);\n          }\n        });\n      };\n  } else if (typeof window === 'object' && window.RTCPeerConnection &&\n             'getSenders' in window.RTCPeerConnection.prototype &&\n             'createDTMFSender' in window.RTCPeerConnection.prototype &&\n             window.RTCRtpSender &&\n             !('dtmf' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nexport function shimGetStats(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n\n    // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    }\n\n    // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n    if (origGetStats.length === 0 && (arguments.length === 0 ||\n        typeof selector !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n\n    const fixChromeStats_ = function(response) {\n      const standardReport = {};\n      const reports = response.result();\n      reports.forEach(report => {\n        const standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(name => {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n\n      return standardReport;\n    };\n\n    // shim getStats with maplike support\n    const makeMapStats = function(stats) {\n      return new Map(Object.keys(stats).map(key => [key, stats[key]]));\n    };\n\n    if (arguments.length >= 2) {\n      const successCallbackWrapper_ = function(response) {\n        onSucc(makeMapStats(fixChromeStats_(response)));\n      };\n\n      return origGetStats.apply(this, [successCallbackWrapper_,\n        selector]);\n    }\n\n    // promise-support\n    return new Promise((resolve, reject) => {\n      origGetStats.apply(this, [\n        function(response) {\n          resolve(makeMapStats(fixChromeStats_(response)));\n        }, reject]);\n    }).then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach(sender => sender._pc = this);\n        return senders;\n      };\n    }\n\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      const sender = this;\n      return this._pc.getStats().then(result =>\n        /* Note: this will include stats of all senders that\n         *   send a track with the same id as sender.track as\n         *   it is not possible to identify the RTCRtpSender.\n         */\n        utils.filterStats(result, sender.track, true));\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers =\n        function getReceivers() {\n          const receivers = origGetReceivers.apply(this, []);\n          receivers.forEach(receiver => receiver._pc = this);\n          return receivers;\n        };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      const receiver = this;\n      return this._pc.getStats().then(result =>\n        utils.filterStats(result, receiver.track, false));\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype &&\n      'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 &&\n        arguments[0] instanceof window.MediaStreamTrack) {\n      const track = arguments[0];\n      let sender;\n      let receiver;\n      let err;\n      this.getSenders().forEach(s => {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(r => {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || (sender && receiver)) {\n        return Promise.reject(new DOMException(\n          'There are more than one sender or receiver for the track.',\n          'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException(\n        'There is no sender or receiver for the track.',\n        'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      return Object.keys(this._shimmedLocalStreams)\n        .map(streamId => this._shimmedLocalStreams[streamId][0]);\n    };\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (!stream) {\n        return origAddTrack.apply(this, arguments);\n      }\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      const sender = origAddTrack.apply(this, arguments);\n      if (!this._shimmedLocalStreams[stream.id]) {\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n        this._shimmedLocalStreams[stream.id].push(sender);\n      }\n      return sender;\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n    });\n    const existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    const newSenders = this.getSenders()\n      .filter(newSender => existingSenders.indexOf(newSender) === -1);\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      delete this._shimmedLocalStreams[stream.id];\n      return origRemoveStream.apply(this, arguments);\n    };\n\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      if (sender) {\n        Object.keys(this._shimmedLocalStreams).forEach(streamId => {\n          const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n          if (idx !== -1) {\n            this._shimmedLocalStreams[streamId].splice(idx, 1);\n          }\n          if (this._shimmedLocalStreams[streamId].length === 1) {\n            delete this._shimmedLocalStreams[streamId];\n          }\n        });\n      }\n      return origRemoveTrack.apply(this, arguments);\n    };\n}\n\nexport function shimAddTrackRemoveTrack(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack &&\n      browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  const origGetLocalStreams = window.RTCPeerConnection.prototype\n    .getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      const nativeStreams = origGetLocalStreams.apply(this);\n      this._reverseStreams = this._reverseStreams || {};\n      return nativeStreams.map(stream => this._reverseStreams[stream.id]);\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      const newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n\n      origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);\n      delete this._reverseStreams[(this._streams[stream.id] ?\n        this._streams[stream.id].id : stream.id)];\n      delete this._streams[stream.id];\n    };\n\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      const streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(t => t === track)) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n      const oldStream = this._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(() => {\n          this.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        const newStream = new window.MediaStream([track]);\n        this._streams[stream.id] = newStream;\n        this._reverseStreams[newStream.id] = stream;\n        this.addStream(newStream);\n      }\n      return this.getSenders().find(s => s.track === track);\n    };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n        externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n        internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\n    const methodObj = {[method]() {\n      const args = arguments;\n      const isLegacyCall = arguments.length &&\n          typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [\n          (description) => {\n            const desc = replaceInternalStreamId(this, description);\n            args[0].apply(null, [desc]);\n          },\n          (err) => {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]\n        ]);\n      }\n      return nativeMethod.apply(this, arguments)\n        .then(description => replaceInternalStreamId(this, description));\n    }};\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n\n  const origSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(this, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(this, arguments[0]);\n      return origSetLocalDescription.apply(this, arguments);\n    };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  const origLocalDescription = Object.getOwnPropertyDescriptor(\n    window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype,\n    'localDescription', {\n      get() {\n        const description = origLocalDescription.get.apply(this);\n        if (description.type === '') {\n          return description;\n        }\n        return replaceInternalStreamId(this, description);\n      }\n    });\n\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      const isLocal = sender._pc === this;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n          'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      this._streams = this._streams || {};\n      let stream;\n      Object.keys(this._streams).forEach(streamid => {\n        const hasTrack = this._streams[streamid].getTracks()\n          .find(track => sender.track === track);\n        if (hasTrack) {\n          stream = this._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          this.removeStream(this._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        this.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        const methodObj = {[method]() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n            window.RTCIceCandidate :\n            window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        }};\n        window.RTCPeerConnection.prototype[method] = methodObj[method];\n      });\n  }\n}\n\n// Attempt to fix ONN in plan-b mode.\nexport function fixNegotiationNeeded(window, browserDetails) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\n    const pc = e.target;\n    if (browserDetails.version < 72 || (pc.getConfiguration &&\n        pc.getConfiguration().sdpSemantics === 'plan-b')) {\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n    }\n    return e;\n  });\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\nconst logging = utils.log;\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  const constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    const cc = {};\n    Object.keys(c).forEach(key => {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      const r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      const oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        let oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(mix => {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  const shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      const remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      let face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      const getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        let matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n            .then(devices => {\n              devices = devices.filter(d => d.kind === 'videoinput');\n              let dev = devices.find(d => matches.some(match =>\n                d.label.toLowerCase().includes(match)));\n              if (!dev && devices.length && matches.includes('back')) {\n                dev = devices[devices.length - 1]; // more likely the back cam\n              }\n              if (dev) {\n                constraints.video.deviceId = face.exact\n                  ? {exact: dev.deviceId}\n                  : {ideal: dev.deviceId};\n              }\n              constraints.video = constraintsToChrome_(constraints.video);\n              logging('chrome: ' + JSON.stringify(constraints));\n              return func(constraints);\n            });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  const shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  const getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, c => {\n      navigator.webkitGetUserMedia(c, onSuccess, e => {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  if (navigator.mediaDevices.getUserMedia) {\n    const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(track => {\n            track.stop();\n          });\n          throw new DOMException('', 'NotFoundError');\n        }\n        return stream;\n      }, e => Promise.reject(shimError_(e))));\n    };\n  }\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nexport function shimGetDisplayMedia(window, getSourceId) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  // getSourceId is a function that returns a promise resolving with\n  // the sourceId of the screen/window/tab to be shared.\n  if (typeof getSourceId !== 'function') {\n    console.error('shimGetDisplayMedia: getSourceId argument is not ' +\n        'a function');\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      return getSourceId(constraints)\n        .then(sourceId => {\n          const widthSpecified = constraints.video && constraints.video.width;\n          const heightSpecified = constraints.video &&\n            constraints.video.height;\n          const frameRateSpecified = constraints.video &&\n            constraints.video.frameRate;\n          constraints.video = {\n            mandatory: {\n              chromeMediaSource: 'desktop',\n              chromeMediaSourceId: sourceId,\n              maxFrameRate: frameRateSpecified || 3\n            }\n          };\n          if (widthSpecified) {\n            constraints.video.mandatory.maxWidth = widthSpecified;\n          }\n          if (heightSpecified) {\n            constraints.video.mandatory.maxHeight = heightSpecified;\n          }\n          return window.navigator.mediaDevices.getUserMedia(constraints);\n        });\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        const methodObj = {[method]() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n            window.RTCIceCandidate :\n            window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        }};\n        window.RTCPeerConnection.prototype[method] = methodObj[method];\n      });\n  }\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) :\n      Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(sender => {\n        if (sender.track && stream.getTracks().includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n\nexport function shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver =\n      function addTransceiver() {\n        this.setParametersPromises = [];\n        // WebIDL input coercion and validation\n        let sendEncodings = arguments[1] && arguments[1].sendEncodings;\n        if (sendEncodings === undefined) {\n          sendEncodings = [];\n        }\n        sendEncodings = [...sendEncodings];\n        const shouldPerformCheck = sendEncodings.length > 0;\n        if (shouldPerformCheck) {\n          // If sendEncodings params are provided, validate grammar\n          sendEncodings.forEach((encodingParam) => {\n            if ('rid' in encodingParam) {\n              const ridRegex = /^[a-z0-9]{0,16}$/i;\n              if (!ridRegex.test(encodingParam.rid)) {\n                throw new TypeError('Invalid RID value provided.');\n              }\n            }\n            if ('scaleResolutionDownBy' in encodingParam) {\n              if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n                throw new RangeError('scale_resolution_down_by must be >= 1.0');\n              }\n            }\n            if ('maxFramerate' in encodingParam) {\n              if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n                throw new RangeError('max_framerate must be >= 0.0');\n              }\n            }\n          });\n        }\n        const transceiver = origAddTransceiver.apply(this, arguments);\n        if (shouldPerformCheck) {\n          // Check if the init options were applied. If not we do this in an\n          // asynchronous way and save the promise reference in a global object.\n          // This is an ugly hack, but at the same time is way more robust than\n          // checking the sender parameters before and after the createOffer\n          // Also note that after the createoffer we are not 100% sure that\n          // the params were asynchronously applied so we might miss the\n          // opportunity to recreate offer.\n          const {sender} = transceiver;\n          const params = sender.getParameters();\n          if (!('encodings' in params) ||\n              // Avoid being fooled by patched getParameters() below.\n              (params.encodings.length === 1 &&\n               Object.keys(params.encodings[0]).length === 0)) {\n            params.encodings = sendEncodings;\n            sender.sendEncodings = sendEncodings;\n            this.setParametersPromises.push(sender.setParameters(params)\n              .then(() => {\n                delete sender.sendEncodings;\n              }).catch(() => {\n                delete sender.sendEncodings;\n              })\n            );\n          }\n        }\n        return transceiver;\n      };\n  }\n}\n\nexport function shimGetParameters(window) {\n  if (!(typeof window === 'object' && window.RTCRtpSender)) {\n    return;\n  }\n  const origGetParameters = window.RTCRtpSender.prototype.getParameters;\n  if (origGetParameters) {\n    window.RTCRtpSender.prototype.getParameters =\n      function getParameters() {\n        const params = origGetParameters.apply(this, arguments);\n        if (!('encodings' in params)) {\n          params.encodings = [].concat(this.sendEncodings || [{}]);\n        }\n        return params;\n      };\n  }\n}\n\nexport function shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n        .then(() => {\n          return origCreateOffer.apply(this, arguments);\n        })\n        .finally(() => {\n          this.setParametersPromises = [];\n        });\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n\nexport function shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n        .then(() => {\n          return origCreateAnswer.apply(this, arguments);\n        })\n        .finally(() => {\n          this.setParametersPromises = [];\n        });\n    }\n    return origCreateAnswer.apply(this, arguments);\n  };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n      'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints =\n        MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      if (!(constraints && constraints.video)) {\n        const err = new DOMException('getDisplayMedia without video ' +\n            'constraints is undefined');\n        err.name = 'NotFoundError';\n        // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n        err.code = 8;\n        return Promise.reject(err);\n      }\n      if (constraints.video === true) {\n        constraints.video = {mediaSource: preferredMediaSource};\n      } else {\n        constraints.video.mediaSource = preferredMediaSource;\n      }\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nimport * as utils from '../utils';\n\nexport function shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams =\n      function getLocalStreams() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      // Try to emulate Chrome's behaviour of adding in audio-video order.\n      // Safari orders by track id.\n      stream.getAudioTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n      stream.getVideoTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n    };\n\n    window.RTCPeerConnection.prototype.addTrack =\n      function addTrack(track, ...streams) {\n        if (streams) {\n          streams.forEach((stream) => {\n            if (!this._localStreams) {\n              this._localStreams = [stream];\n            } else if (!this._localStreams.includes(stream)) {\n              this._localStreams.push(stream);\n            }\n          });\n        }\n        return _addTrack.apply(this, arguments);\n      };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        const index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        const tracks = stream.getTracks();\n        this.getSenders().forEach(sender => {\n          if (tracks.includes(sender.track)) {\n            this.removeTrack(sender);\n          }\n        });\n      };\n  }\n}\n\nexport function shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams =\n      function getRemoteStreams() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get() {\n        return this._onaddstream;\n      },\n      set(f) {\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = (e) => {\n          e.streams.forEach(stream => {\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.includes(stream)) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            this.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        const pc = this;\n        if (!this._onaddstreampoly) {\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            e.streams.forEach(stream => {\n              if (!pc._remoteStreams) {\n                pc._remoteStreams = [];\n              }\n              if (pc._remoteStreams.indexOf(stream) >= 0) {\n                return;\n              }\n              pc._remoteStreams.push(stream);\n              const event = new Event('addstream');\n              event.stream = stream;\n              pc.dispatchEvent(event);\n            });\n          });\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n  }\n}\n\nexport function shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  const prototype = window.RTCPeerConnection.prototype;\n  const origCreateOffer = prototype.createOffer;\n  const origCreateAnswer = prototype.createAnswer;\n  const setLocalDescription = prototype.setLocalDescription;\n  const setRemoteDescription = prototype.setRemoteDescription;\n  const addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer =\n    function createOffer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  prototype.createAnswer =\n    function createAnswer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  let withCallback = function(description, successCallback, failureCallback) {\n    const promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function(description, successCallback, failureCallback) {\n    const promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function(candidate, successCallback, failureCallback) {\n    const promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    const mediaDevices = navigator.mediaDevices;\n    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = (constraints) => {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices &&\n    navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function getUserMedia(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints)\n        .then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nexport function shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({},\n      constraints,\n      {video: utils.compactObject(constraints.video)}\n    );\n  }\n\n  return constraints;\n}\n\nexport function shimRTCIceServerUrls(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  const OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection =\n    function RTCPeerConnection(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        const newIceServers = [];\n        for (let i = 0; i < pcConfig.iceServers.length; i++) {\n          let server = pcConfig.iceServers[i];\n          if (server.urls === undefined && server.url) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in OrigPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nexport function shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      'receiver' in window.RTCTrackEvent.prototype &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimCreateOfferLegacy(window) {\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer =\n    function createOffer(offerOptions) {\n      if (offerOptions) {\n        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveAudio =\n            !!offerOptions.offerToReceiveAudio;\n        }\n        const audioTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'audio');\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('sendonly');\n            } else {\n              audioTransceiver.direction = 'sendonly';\n            }\n          } else if (audioTransceiver.direction === 'recvonly') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('inactive');\n            } else {\n              audioTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          this.addTransceiver('audio', {direction: 'recvonly'});\n        }\n\n        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveVideo =\n            !!offerOptions.offerToReceiveVideo;\n        }\n        const videoTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'video');\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('sendonly');\n            } else {\n              videoTransceiver.direction = 'sendonly';\n            }\n          } else if (videoTransceiver.direction === 'recvonly') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('inactive');\n            } else {\n              videoTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          this.addTransceiver('video', {direction: 'recvonly'});\n        }\n      }\n      return origCreateOffer.apply(this, arguments);\n    };\n}\n\nexport function shimAudioContext(window) {\n  if (typeof window !== 'object' || window.AudioContext) {\n    return;\n  }\n  window.AudioContext = window.webkitAudioContext;\n}\n\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport SDPUtils from 'sdp';\nimport * as utils from './utils';\n\nexport function shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  const NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate &&\n        args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substring(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      const nativeCandidate = new NativeRTCIceCandidate(args);\n      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      for (const key in parsedCandidate) {\n        if (!(key in nativeCandidate)) {\n          Object.defineProperty(nativeCandidate, key,\n            {value: parsedCandidate[key]});\n        }\n      }\n\n      // Override serializer to not serialize the extra attributes.\n      nativeCandidate.toJSON = function toJSON() {\n        return {\n          candidate: nativeCandidate.candidate,\n          sdpMid: nativeCandidate.sdpMid,\n          sdpMLineIndex: nativeCandidate.sdpMLineIndex,\n          usernameFragment: nativeCandidate.usernameFragment,\n        };\n      };\n      return nativeCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nexport function shimRTCIceCandidateRelayProtocol(window) {\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'relayProtocol' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      const parsedCandidate = SDPUtils.parseCandidate(e.candidate.candidate);\n      if (parsedCandidate.type === 'relay') {\n        // This is a libwebrtc-specific mapping of local type preference\n        // to relayProtocol.\n        e.candidate.relayProtocol = {\n          0: 'tls',\n          1: 'tcp',\n          2: 'udp',\n        }[parsedCandidate.priority >> 24];\n      }\n    }\n    return e;\n  });\n}\n\nexport function shimMaxMessageSize(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  const sctpInDescription = function(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    const sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(mediaSection => {\n      const mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application'\n          && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  const getRemoteFirefoxVersion = function(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    const version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  const getCanSendMaxMessageSize = function(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    let canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize =\n          browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  const getMaxMessageSize = function(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    let maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox'\n         && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    const match = SDPUtils.matchPrefix(description.sdp,\n      'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substring(19), 10);\n    } else if (browserDetails.browser === 'firefox' &&\n                remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n    function setRemoteDescription() {\n      this._sctp = null;\n      // Chrome decided to not expose .sctp in plan-b mode.\n      // As usual, adapter.js has to do an 'ugly worakaround'\n      // to cover up the mess.\n      if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n        const {sdpSemantics} = this.getConfiguration();\n        if (sdpSemantics === 'plan-b') {\n          Object.defineProperty(this, 'sctp', {\n            get() {\n              return typeof this._sctp === 'undefined' ? null : this._sctp;\n            },\n            enumerable: true,\n            configurable: true,\n          });\n        }\n      }\n\n      if (sctpInDescription(arguments[0])) {\n        // Check if the remote is FF.\n        const isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n        // Get the maximum message size the local peer is capable of sending\n        const canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n        // Get the maximum message size of the remote peer.\n        const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n        // Determine final maximum message size\n        let maxMessageSize;\n        if (canSendMMS === 0 && remoteMMS === 0) {\n          maxMessageSize = Number.POSITIVE_INFINITY;\n        } else if (canSendMMS === 0 || remoteMMS === 0) {\n          maxMessageSize = Math.max(canSendMMS, remoteMMS);\n        } else {\n          maxMessageSize = Math.min(canSendMMS, remoteMMS);\n        }\n\n        // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n        // attribute.\n        const sctp = {};\n        Object.defineProperty(sctp, 'maxMessageSize', {\n          get() {\n            return maxMessageSize;\n          }\n        });\n        this._sctp = sctp;\n      }\n\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n}\n\nexport function shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection &&\n      'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    const origDataChannelSend = dc.send;\n    dc.send = function send() {\n      const data = arguments[0];\n      const length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' &&\n          pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' +\n          pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  const origCreateDataChannel =\n    window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel =\n    function createDataChannel() {\n      const dataChannel = origCreateDataChannel.apply(this, arguments);\n      wrapDcSend(dataChannel, this);\n      return dataChannel;\n    };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', e => {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nexport function shimConnectionState(window) {\n  if (!window.RTCPeerConnection ||\n      'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get() {\n      return this._onconnectionstatechange || null;\n    },\n    set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange',\n          this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange',\n          this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {\n    const origMethod = proto[method];\n    proto[method] = function() {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = e => {\n          const pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            const newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange',\n          this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n\nexport function removeExtmapAllowMixed(window, browserDetails) {\n  /* remove a=extmap-allow-mixed for webrtc.org < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  if (browserDetails.browser === 'safari' && browserDetails.version >= 605) {\n    return;\n  }\n  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n  function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      const sdp = desc.sdp.split('\\n').filter((line) => {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n      // Safari enforces read-only-ness of RTCSessionDescription fields.\n      if (window.RTCSessionDescription &&\n          desc instanceof window.RTCSessionDescription) {\n        arguments[0] = new window.RTCSessionDescription({\n          type: desc.type,\n          sdp,\n        });\n      } else {\n        desc.sdp = sdp;\n      }\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\n\nexport function shimAddIceCandidateNullOrEmpty(window, browserDetails) {\n  // Support for addIceCandidate(null or undefined)\n  // as well as addIceCandidate({candidate: \"\", ...})\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=978582\n  // Note: must be called before other polyfills which change the signature.\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  if (!nativeAddIceCandidate || nativeAddIceCandidate.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.addIceCandidate =\n    function addIceCandidate() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions.\n      // Native support for ignoring exists for Chrome M77+.\n      // Safari ignores as well, exact version unknown but works in the same\n      // version that also ignores addIceCandidate(null).\n      if (((browserDetails.browser === 'chrome' && browserDetails.version < 78)\n           || (browserDetails.browser === 'firefox'\n               && browserDetails.version < 68)\n           || (browserDetails.browser === 'safari'))\n          && arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n}\n\n// Note: Make sure to call this ahead of APIs that modify\n// setLocalDescription.length\nexport function shimParameterlessSetLocalDescription(window, browserDetails) {\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  if (!nativeSetLocalDescription || nativeSetLocalDescription.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      let desc = arguments[0] || {};\n      if (typeof desc !== 'object' || (desc.type && desc.sdp)) {\n        return nativeSetLocalDescription.apply(this, arguments);\n      }\n      // The remaining steps should technically happen when SLD comes off the\n      // RTCPeerConnection's operations chain (not ahead of going on it), but\n      // this is too difficult to shim. Instead, this shim only covers the\n      // common case where the operations chain is empty. This is imperfect, but\n      // should cover many cases. Rationale: Even if we can't reduce the glare\n      // window to zero on imperfect implementations, there's value in tapping\n      // into the perfect negotiation pattern that several browsers support.\n      desc = {type: desc.type, sdp: desc.sdp};\n      if (!desc.type) {\n        switch (this.signalingState) {\n          case 'stable':\n          case 'have-local-offer':\n          case 'have-remote-pranswer':\n            desc.type = 'offer';\n            break;\n          default:\n            desc.type = 'answer';\n            break;\n        }\n      }\n      if (desc.sdp || (desc.type !== 'offer' && desc.type !== 'answer')) {\n        return nativeSetLocalDescription.apply(this, [desc]);\n      }\n      const func = desc.type === 'offer' ? this.createOffer : this.createAnswer;\n      return func.apply(this)\n        .then(d => nativeSetLocalDescription.apply(this, [d]));\n    };\n}\n","/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nconst SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substring(2, 12);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(line => line.trim());\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  const parts = blob.split('\\nm=');\n  return parts.map((part, index) => (index > 0 ?\n    'm=' + part : part).trim() + '\\r\\n');\n};\n\n// Returns the session description.\nSDPUtils.getDescription = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// Returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(line => line.indexOf(prefix) === 0);\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\n// Input can be prefixed with a=.\nSDPUtils.parseCandidate = function(line) {\n  let parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  const candidate = {\n    foundation: parts[0],\n    component: {1: 'rtp', 2: 'rtcp'}[parts[1]] || parts[1],\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7],\n  };\n\n  for (let i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compatibility.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag. Don't overwrite.\n        if (candidate[parts[i]] === undefined) {\n          candidate[parts[i]] = parts[i + 1];\n        }\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\n// This does not include the a= prefix!\nSDPUtils.writeCandidate = function(candidate) {\n  const sdp = [];\n  sdp.push(candidate.foundation);\n\n  const component = candidate.component;\n  if (component === 'rtp') {\n    sdp.push(1);\n  } else if (component === 'rtcp') {\n    sdp.push(2);\n  } else {\n    sdp.push(component);\n  }\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  const type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// Sample input:\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substring(14).split(' ');\n};\n\n// Parses a rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  let parts = line.substring(9).split(' ');\n  const parsed = {\n    payloadType: parseInt(parts.shift(), 10), // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generates a rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  const channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses a extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1],\n    attributes: parts.slice(2).join(' '),\n  };\n};\n\n// Generates an extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri +\n      (headerExtension.attributes ? ' ' + headerExtension.attributes : '') +\n      '\\r\\n';\n};\n\n// Parses a fmtp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  const parsed = {};\n  let kv;\n  const parts = line.substring(line.indexOf(' ') + 1).split(';');\n  for (let j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates a fmtp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  let line = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    const params = [];\n    Object.keys(codec.parameters).forEach(param => {\n      if (codec.parameters[param] !== undefined) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses a rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  const parts = line.substring(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' '),\n  };\n};\n\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  let lines = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(fb => {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses a RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  const sp = line.indexOf(' ');\n  const parts = {\n    ssrc: parseInt(line.substring(7, sp), 10),\n  };\n  const colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substring(sp + 1, colon);\n    parts.value = line.substring(colon + 1);\n  } else {\n    parts.attribute = line.substring(sp + 1);\n  }\n  return parts;\n};\n\n// Parse a ssrc-group line (see RFC 5576). Sample input:\n// a=ssrc-group:semantics 12 34\nSDPUtils.parseSsrcGroup = function(line) {\n  const parts = line.substring(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(ssrc => parseInt(ssrc, 10)),\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// Returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  const mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substring(6);\n  }\n};\n\n// Parses a fingerprint line for DTLS-SRTP.\nSDPUtils.parseFingerprint = function(line) {\n  const parts = line.substring(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1].toUpperCase(), // the definition is upper-case in RFC 4572.\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint),\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  let sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(fp => {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  const parts = keyParams.substring(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES parameters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  const ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  const pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substring(12),\n    password: pwd.substring(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  let sdp = 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n  if (params.iceLite) {\n    sdp += 'a=ice-lite\\r\\n';\n  }\n  return sdp;\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  const description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: [],\n  };\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  description.profile = mline[2];\n  for (let i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    const pt = mline[i];\n    const rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      const codec = SDPUtils.parseRtpMap(rtpmapline);\n      const fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(line => {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  const wildcardRtcpFb = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-fb:* ')\n    .map(SDPUtils.parseRtcpFb);\n  description.codecs.forEach(codec => {\n    wildcardRtcpFb.forEach(fb=> {\n      const duplicate = codec.rtcpFeedback.find(existingFeedback => {\n        return existingFeedback.type === fb.type &&\n          existingFeedback.parameter === fb.parameter;\n      });\n      if (!duplicate) {\n        codec.rtcpFeedback.push(fb);\n      }\n    });\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  let sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' ' + (caps.profile || 'UDP/TLS/RTP/SAVPF') + ' ';\n  sdp += caps.codecs.map(codec => {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(codec => {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  let maxptime = 0;\n  caps.codecs.forEach(codec => {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(extension => {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  const encodingParameters = [];\n  const description = SDPUtils.parseRtpParameters(mediaSection);\n  const hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  const hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  const ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(parts => parts.attribute === 'cname');\n  const primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  let secondarySsrc;\n\n  const flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(line => {\n      const parts = line.substring(17).split(' ');\n      return parts.map(part => parseInt(part, 10));\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(codec => {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      let encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10),\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red',\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc,\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  let bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substring(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substring(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(params => {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  const rtcpParameters = {};\n\n  // Gets the first SSRC. Note that with RTX there might be multiple\n  // SSRCs.\n  const remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(obj => obj.attribute === 'cname')[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  const rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  const mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\nSDPUtils.writeRtcpParameters = function(rtcpParameters) {\n  let sdp = '';\n  if (rtcpParameters.reducedSize) {\n    sdp += 'a=rtcp-rsize\\r\\n';\n  }\n  if (rtcpParameters.mux) {\n    sdp += 'a=rtcp-mux\\r\\n';\n  }\n  if (rtcpParameters.ssrc !== undefined && rtcpParameters.cname) {\n    sdp += 'a=ssrc:' + rtcpParameters.ssrc +\n      ' cname:' + rtcpParameters.cname + '\\r\\n';\n  }\n  return sdp;\n};\n\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  let parts;\n  const spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substring(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  const planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(msidParts => msidParts.attribute === 'msid');\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  const mline = SDPUtils.parseMLine(mediaSection);\n  const maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  let maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substring(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  const sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substring(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize,\n    };\n  }\n  const sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    const parts = sctpMapLines[0]\n      .substring(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize,\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  let output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n',\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n',\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 22);\n};\n\n// Write boiler plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  let sessionId;\n  const version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  const user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  const lines = SDPUtils.splitLines(mediaSection);\n  for (let i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substring(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  return mline[0].substring(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const parts = lines[0].substring(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' '),\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  const line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  const parts = line.substring(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5],\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  const lines = SDPUtils.splitLines(blob);\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","export { Encoder, addExtension, encode, encodeAsIterable, encodeAsAsyncIterable, NEVER, ALWAYS, DECIMAL_ROUND, DECIMAL_FIT, REUSE_BUFFER_MODE } from './encode.js'\nexport { Tag, Decoder, decodeMultiple, decode, FLOAT32_OPTIONS, clearSource, roundFloat32, isNativeAccelerationEnabled } from './decode.js'\nexport { decodeIter, encodeIter } from './iterators.js'\n","import { Decoder, mult10, Tag, typedArrays, addExtension as decodeAddExtension } from './decode.js'\nlet textEncoder\ntry {\n\ttextEncoder = new TextEncoder()\n} catch (error) {}\nlet extensions, extensionClasses\nconst Buffer = typeof globalThis === 'object' && globalThis.Buffer;\nconst hasNodeBuffer = typeof Buffer !== 'undefined'\nconst ByteArrayAllocate = hasNodeBuffer ? Buffer.allocUnsafeSlow : Uint8Array\nconst ByteArray = hasNodeBuffer ? Buffer : Uint8Array\nconst MAX_STRUCTURES = 0x100\nconst MAX_BUFFER_SIZE = hasNodeBuffer ? 0x100000000 : 0x7fd00000\nlet serializationId = 1\nlet throwOnIterable\nlet target\nlet targetView\nlet position = 0\nlet safeEnd\nlet bundledStrings = null\nconst MAX_BUNDLE_SIZE = 0xf000\nconst hasNonLatin = /[\\u0080-\\uFFFF]/\nconst RECORD_SYMBOL = Symbol('record-id')\nexport class Encoder extends Decoder {\n\tconstructor(options) {\n\t\tsuper(options)\n\t\tthis.offset = 0\n\t\tlet typeBuffer\n\t\tlet start\n\t\tlet sharedStructures\n\t\tlet hasSharedUpdate\n\t\tlet structures\n\t\tlet referenceMap\n\t\toptions = options || {}\n\t\tlet encodeUtf8 = ByteArray.prototype.utf8Write ? function(string, position, maxBytes) {\n\t\t\treturn target.utf8Write(string, position, maxBytes)\n\t\t} : (textEncoder && textEncoder.encodeInto) ?\n\t\t\tfunction(string, position) {\n\t\t\t\treturn textEncoder.encodeInto(string, target.subarray(position)).written\n\t\t\t} : false\n\n\t\tlet encoder = this\n\t\tlet hasSharedStructures = options.structures || options.saveStructures\n\t\tlet maxSharedStructures = options.maxSharedStructures\n\t\tif (maxSharedStructures == null)\n\t\t\tmaxSharedStructures = hasSharedStructures ? 128 : 0\n\t\tif (maxSharedStructures > 8190)\n\t\t\tthrow new Error('Maximum maxSharedStructure is 8190')\n\t\tlet isSequential = options.sequential\n\t\tif (isSequential) {\n\t\t\tmaxSharedStructures = 0\n\t\t}\n\t\tif (!this.structures)\n\t\t\tthis.structures = []\n\t\tif (this.saveStructures)\n\t\t\tthis.saveShared = this.saveStructures\n\t\tlet samplingPackedValues, packedObjectMap, sharedValues = options.sharedValues\n\t\tlet sharedPackedObjectMap\n\t\tif (sharedValues) {\n\t\t\tsharedPackedObjectMap = Object.create(null)\n\t\t\tfor (let i = 0, l = sharedValues.length; i < l; i++) {\n\t\t\t\tsharedPackedObjectMap[sharedValues[i]] = i\n\t\t\t}\n\t\t}\n\t\tlet recordIdsToRemove = []\n\t\tlet transitionsCount = 0\n\t\tlet serializationsSinceTransitionRebuild = 0\n\t\t\n\t\tthis.mapEncode = function(value, encodeOptions) {\n\t\t\t// Experimental support for premapping keys using _keyMap instad of keyMap - not optiimised yet)\n\t\t\tif (this._keyMap && !this._mapped) {\n\t\t\t\t//console.log('encoding ', value)\n\t\t\t\tswitch (value.constructor.name) {\n\t\t\t\t\tcase 'Array': \n\t\t\t\t\t\tvalue = value.map(r => this.encodeKeys(r))\n\t\t\t\t\t\tbreak\n\t\t\t\t\t//case 'Map': \n\t\t\t\t\t//\tvalue = this.encodeKeys(value)\n\t\t\t\t\t//\tbreak\n\t\t\t\t}\n\t\t\t\t//this._mapped = true\n\t\t\t}\n\t\t\treturn this.encode(value, encodeOptions)\n\t\t}\n\t\t\n\t\tthis.encode = function(value, encodeOptions)\t{\n\t\t\tif (!target) {\n\t\t\t\ttarget = new ByteArrayAllocate(8192)\n\t\t\t\ttargetView = new DataView(target.buffer, 0, 8192)\n\t\t\t\tposition = 0\n\t\t\t}\n\t\t\tsafeEnd = target.length - 10\n\t\t\tif (safeEnd - position < 0x800) {\n\t\t\t\t// don't start too close to the end, \n\t\t\t\ttarget = new ByteArrayAllocate(target.length)\n\t\t\t\ttargetView = new DataView(target.buffer, 0, target.length)\n\t\t\t\tsafeEnd = target.length - 10\n\t\t\t\tposition = 0\n\t\t\t} else if (encodeOptions === REUSE_BUFFER_MODE)\n\t\t\t\tposition = (position + 7) & 0x7ffffff8 // Word align to make any future copying of this buffer faster\n\t\t\tstart = position\n\t\t\tif (encoder.useSelfDescribedHeader) {\n\t\t\t\ttargetView.setUint32(position, 0xd9d9f700) // tag two byte, then self-descriptive tag\n\t\t\t\tposition += 3\n\t\t\t}\n\t\t\treferenceMap = encoder.structuredClone ? new Map() : null\n\t\t\tif (encoder.bundleStrings && typeof value !== 'string') {\n\t\t\t\tbundledStrings = []\n\t\t\t\tbundledStrings.size = Infinity // force a new bundle start on first string\n\t\t\t} else\n\t\t\t\tbundledStrings = null\n\n\t\t\tsharedStructures = encoder.structures\n\t\t\tif (sharedStructures) {\n\t\t\t\tif (sharedStructures.uninitialized) {\n\t\t\t\t\tlet sharedData = encoder.getShared() || {}\n\t\t\t\t\tencoder.structures = sharedStructures = sharedData.structures || []\n\t\t\t\t\tencoder.sharedVersion = sharedData.version\n\t\t\t\t\tlet sharedValues = encoder.sharedValues = sharedData.packedValues\n\t\t\t\t\tif (sharedValues) {\n\t\t\t\t\t\tsharedPackedObjectMap = {}\n\t\t\t\t\t\tfor (let i = 0, l = sharedValues.length; i < l; i++)\n\t\t\t\t\t\t\tsharedPackedObjectMap[sharedValues[i]] = i\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet sharedStructuresLength = sharedStructures.length\n\t\t\t\tif (sharedStructuresLength > maxSharedStructures && !isSequential)\n\t\t\t\t\tsharedStructuresLength = maxSharedStructures\n\t\t\t\tif (!sharedStructures.transitions) {\n\t\t\t\t\t// rebuild our structure transitions\n\t\t\t\t\tsharedStructures.transitions = Object.create(null)\n\t\t\t\t\tfor (let i = 0; i < sharedStructuresLength; i++) {\n\t\t\t\t\t\tlet keys = sharedStructures[i]\n\t\t\t\t\t\t//console.log('shared struct keys:', keys)\n\t\t\t\t\t\tif (!keys)\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\tlet nextTransition, transition = sharedStructures.transitions\n\t\t\t\t\t\tfor (let j = 0, l = keys.length; j < l; j++) {\n\t\t\t\t\t\t\tif (transition[RECORD_SYMBOL] === undefined)\n\t\t\t\t\t\t\t\ttransition[RECORD_SYMBOL] = i\n\t\t\t\t\t\t\tlet key = keys[j]\n\t\t\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttransition = nextTransition\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttransition[RECORD_SYMBOL] = i | 0x100000\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!isSequential)\n\t\t\t\t\tsharedStructures.nextId = sharedStructuresLength\n\t\t\t}\n\t\t\tif (hasSharedUpdate)\n\t\t\t\thasSharedUpdate = false\n\t\t\tstructures = sharedStructures || []\n\t\t\tpackedObjectMap = sharedPackedObjectMap\n\t\t\tif (options.pack) {\n\t\t\t\tlet packedValues = new Map()\n\t\t\t\tpackedValues.values = []\n\t\t\t\tpackedValues.encoder = encoder\n\t\t\t\tpackedValues.maxValues = options.maxPrivatePackedValues || (sharedPackedObjectMap ? 16 : Infinity)\n\t\t\t\tpackedValues.objectMap = sharedPackedObjectMap || false\n\t\t\t\tpackedValues.samplingPackedValues = samplingPackedValues\n\t\t\t\tfindRepetitiveStrings(value, packedValues)\n\t\t\t\tif (packedValues.values.length > 0) {\n\t\t\t\t\ttarget[position++] = 0xd8 // one-byte tag\n\t\t\t\t\ttarget[position++] = 51 // tag 51 for packed shared structures https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\t\t\twriteArrayHeader(4)\n\t\t\t\t\tlet valuesArray = packedValues.values\n\t\t\t\t\tencode(valuesArray)\n\t\t\t\t\twriteArrayHeader(0) // prefixes\n\t\t\t\t\twriteArrayHeader(0) // suffixes\n\t\t\t\t\tpackedObjectMap = Object.create(sharedPackedObjectMap || null)\n\t\t\t\t\tfor (let i = 0, l = valuesArray.length; i < l; i++) {\n\t\t\t\t\t\tpackedObjectMap[valuesArray[i]] = i\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrowOnIterable = encodeOptions & THROW_ON_ITERABLE;\n\t\t\ttry {\n\t\t\t\tif (throwOnIterable)\n\t\t\t\t\treturn;\n\t\t\t\tencode(value)\n\t\t\t\tif (bundledStrings) {\n\t\t\t\t\twriteBundles(start, encode)\n\t\t\t\t}\n\t\t\t\tencoder.offset = position // update the offset so next serialization doesn't write over our buffer, but can continue writing to same buffer sequentially\n\t\t\t\tif (referenceMap && referenceMap.idsToInsert) {\n\t\t\t\t\tposition += referenceMap.idsToInsert.length * 2\n\t\t\t\t\tif (position > safeEnd)\n\t\t\t\t\t\tmakeRoom(position)\n\t\t\t\t\tencoder.offset = position\n\t\t\t\t\tlet serialized = insertIds(target.subarray(start, position), referenceMap.idsToInsert)\n\t\t\t\t\treferenceMap = null\n\t\t\t\t\treturn serialized\n\t\t\t\t}\n\t\t\t\tif (encodeOptions & REUSE_BUFFER_MODE) {\n\t\t\t\t\ttarget.start = start\n\t\t\t\t\ttarget.end = position\n\t\t\t\t\treturn target\n\t\t\t\t}\n\t\t\t\treturn target.subarray(start, position) // position can change if we call encode again in saveShared, so we get the buffer now\n\t\t\t} finally {\n\t\t\t\tif (sharedStructures) {\n\t\t\t\t\tif (serializationsSinceTransitionRebuild < 10)\n\t\t\t\t\t\tserializationsSinceTransitionRebuild++\n\t\t\t\t\tif (sharedStructures.length > maxSharedStructures)\n\t\t\t\t\t\tsharedStructures.length = maxSharedStructures\n\t\t\t\t\tif (transitionsCount > 10000) {\n\t\t\t\t\t\t// force a rebuild occasionally after a lot of transitions so it can get cleaned up\n\t\t\t\t\t\tsharedStructures.transitions = null\n\t\t\t\t\t\tserializationsSinceTransitionRebuild = 0\n\t\t\t\t\t\ttransitionsCount = 0\n\t\t\t\t\t\tif (recordIdsToRemove.length > 0)\n\t\t\t\t\t\t\trecordIdsToRemove = []\n\t\t\t\t\t} else if (recordIdsToRemove.length > 0 && !isSequential) {\n\t\t\t\t\t\tfor (let i = 0, l = recordIdsToRemove.length; i < l; i++) {\n\t\t\t\t\t\t\trecordIdsToRemove[i][RECORD_SYMBOL] = undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\trecordIdsToRemove = []\n\t\t\t\t\t\t//sharedStructures.nextId = maxSharedStructures\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (hasSharedUpdate && encoder.saveShared) {\n\t\t\t\t\tif (encoder.structures.length > maxSharedStructures) {\n\t\t\t\t\t\tencoder.structures = encoder.structures.slice(0, maxSharedStructures)\n\t\t\t\t\t}\n\t\t\t\t\t// we can't rely on start/end with REUSE_BUFFER_MODE since they will (probably) change when we save\n\t\t\t\t\tlet returnBuffer = target.subarray(start, position)\n\t\t\t\t\tif (encoder.updateSharedData() === false)\n\t\t\t\t\t\treturn encoder.encode(value) // re-encode if it fails\n\t\t\t\t\treturn returnBuffer\n\t\t\t\t}\n\t\t\t\tif (encodeOptions & RESET_BUFFER_MODE)\n\t\t\t\t\tposition = start\n\t\t\t}\n\t\t}\n\t\tthis.findCommonStringsToPack = () => {\n\t\t\tsamplingPackedValues = new Map()\n\t\t\tif (!sharedPackedObjectMap)\n\t\t\t\tsharedPackedObjectMap = Object.create(null)\n\t\t\treturn (options) => {\n\t\t\t\tlet threshold = options && options.threshold || 4\n\t\t\t\tlet position = this.pack ? options.maxPrivatePackedValues || 16 : 0\n\t\t\t\tif (!sharedValues)\n\t\t\t\t\tsharedValues = this.sharedValues = []\n\t\t\t\tfor (let [ key, status ] of samplingPackedValues) {\n\t\t\t\t\tif (status.count > threshold) {\n\t\t\t\t\t\tsharedPackedObjectMap[key] = position++\n\t\t\t\t\t\tsharedValues.push(key)\n\t\t\t\t\t\thasSharedUpdate = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twhile (this.saveShared && this.updateSharedData() === false) {}\n\t\t\t\tsamplingPackedValues = null\n\t\t\t}\n\t\t}\n\t\tconst encode = (value) => {\n\t\t\tif (position > safeEnd)\n\t\t\t\ttarget = makeRoom(position)\n\n\t\t\tvar type = typeof value\n\t\t\tvar length\n\t\t\tif (type === 'string') {\n\t\t\t\tif (packedObjectMap) {\n\t\t\t\t\tlet packedPosition = packedObjectMap[value]\n\t\t\t\t\tif (packedPosition >= 0) {\n\t\t\t\t\t\tif (packedPosition < 16)\n\t\t\t\t\t\t\ttarget[position++] = packedPosition + 0xe0 // simple values, defined in https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttarget[position++] = 0xc6 // tag 6 defined in https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\t\t\t\t\tif (packedPosition & 1)\n\t\t\t\t\t\t\t\tencode((15 - packedPosition) >> 1)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tencode((packedPosition - 16) >> 1)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn\n/*\t\t\t\t\t\t} else if (packedStatus.serializationId != serializationId) {\n\t\t\t\t\t\t\tpackedStatus.serializationId = serializationId\n\t\t\t\t\t\t\tpackedStatus.count = 1\n\t\t\t\t\t\t\tif (options.sharedPack) {\n\t\t\t\t\t\t\t\tlet sharedCount = packedStatus.sharedCount = (packedStatus.sharedCount || 0) + 1\n\t\t\t\t\t\t\t\tif (shareCount > (options.sharedPack.threshold || 5)) {\n\t\t\t\t\t\t\t\t\tlet sharedPosition = packedStatus.position = packedStatus.nextSharedPosition\n\t\t\t\t\t\t\t\t\thasSharedUpdate = true\n\t\t\t\t\t\t\t\t\tif (sharedPosition < 16)\n\t\t\t\t\t\t\t\t\t\ttarget[position++] = sharedPosition + 0xc0\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} // else any in-doc incrementation?*/\n\t\t\t\t\t} else if (samplingPackedValues && !options.pack) {\n\t\t\t\t\t\tlet status = samplingPackedValues.get(value)\n\t\t\t\t\t\tif (status)\n\t\t\t\t\t\t\tstatus.count++\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsamplingPackedValues.set(value, {\n\t\t\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet strLength = value.length\n\t\t\t\tif (bundledStrings && strLength >= 4 && strLength < 0x400) {\n\t\t\t\t\tif ((bundledStrings.size += strLength) > MAX_BUNDLE_SIZE) {\n\t\t\t\t\t\tlet extStart\n\t\t\t\t\t\tlet maxBytes = (bundledStrings[0] ? bundledStrings[0].length * 3 + bundledStrings[1].length : 0) + 10\n\t\t\t\t\t\tif (position + maxBytes > safeEnd)\n\t\t\t\t\t\t\ttarget = makeRoom(position + maxBytes)\n\t\t\t\t\t\ttarget[position++] = 0xd9 // tag 16-bit\n\t\t\t\t\t\ttarget[position++] = 0xdf // tag 0xdff9\n\t\t\t\t\t\ttarget[position++] = 0xf9\n\t\t\t\t\t\t// TODO: If we only have one bundle with any string data, only write one string bundle\n\t\t\t\t\t\ttarget[position++] = bundledStrings.position ? 0x84 : 0x82 // array of 4 or 2 elements depending on if we write bundles\n\t\t\t\t\t\ttarget[position++] = 0x1a // 32-bit unsigned int\n\t\t\t\t\t\textStart = position - start\n\t\t\t\t\t\tposition += 4 // reserve for writing bundle reference\n\t\t\t\t\t\tif (bundledStrings.position) {\n\t\t\t\t\t\t\twriteBundles(start, encode) // write the last bundles\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbundledStrings = ['', ''] // create new ones\n\t\t\t\t\t\tbundledStrings.size = 0\n\t\t\t\t\t\tbundledStrings.position = extStart\n\t\t\t\t\t}\n\t\t\t\t\tlet twoByte = hasNonLatin.test(value)\n\t\t\t\t\tbundledStrings[twoByte ? 0 : 1] += value\n\t\t\t\t\ttarget[position++] = twoByte ? 0xce : 0xcf\n\t\t\t\t\tencode(strLength);\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tlet headerSize\n\t\t\t\t// first we estimate the header size, so we can write to the correct location\n\t\t\t\tif (strLength < 0x20) {\n\t\t\t\t\theaderSize = 1\n\t\t\t\t} else if (strLength < 0x100) {\n\t\t\t\t\theaderSize = 2\n\t\t\t\t} else if (strLength < 0x10000) {\n\t\t\t\t\theaderSize = 3\n\t\t\t\t} else {\n\t\t\t\t\theaderSize = 5\n\t\t\t\t}\n\t\t\t\tlet maxBytes = strLength * 3\n\t\t\t\tif (position + maxBytes > safeEnd)\n\t\t\t\t\ttarget = makeRoom(position + maxBytes)\n\n\t\t\t\tif (strLength < 0x40 || !encodeUtf8) {\n\t\t\t\t\tlet i, c1, c2, strPosition = position + headerSize\n\t\t\t\t\tfor (i = 0; i < strLength; i++) {\n\t\t\t\t\t\tc1 = value.charCodeAt(i)\n\t\t\t\t\t\tif (c1 < 0x80) {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1\n\t\t\t\t\t\t} else if (c1 < 0x800) {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 | 0xc0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t(c1 & 0xfc00) === 0xd800 &&\n\t\t\t\t\t\t\t((c2 = value.charCodeAt(i + 1)) & 0xfc00) === 0xdc00\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tc1 = 0x10000 + ((c1 & 0x03ff) << 10) + (c2 & 0x03ff)\n\t\t\t\t\t\t\ti++\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 18 | 0xf0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 12 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 12 | 0xe0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlength = strPosition - position - headerSize\n\t\t\t\t} else {\n\t\t\t\t\tlength = encodeUtf8(value, position + headerSize, maxBytes)\n\t\t\t\t}\n\n\t\t\t\tif (length < 0x18) {\n\t\t\t\t\ttarget[position++] = 0x60 | length\n\t\t\t\t} else if (length < 0x100) {\n\t\t\t\t\tif (headerSize < 2) {\n\t\t\t\t\t\ttarget.copyWithin(position + 2, position + 1, position + 1 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0x78\n\t\t\t\t\ttarget[position++] = length\n\t\t\t\t} else if (length < 0x10000) {\n\t\t\t\t\tif (headerSize < 3) {\n\t\t\t\t\t\ttarget.copyWithin(position + 3, position + 2, position + 2 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0x79\n\t\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t\t} else {\n\t\t\t\t\tif (headerSize < 5) {\n\t\t\t\t\t\ttarget.copyWithin(position + 5, position + 3, position + 3 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0x7a\n\t\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\t\tposition += 4\n\t\t\t\t}\n\t\t\t\tposition += length\n\t\t\t} else if (type === 'number') {\n\t\t\t\tif (!this.alwaysUseFloat && value >>> 0 === value) {// positive integer, 32-bit or less\n\t\t\t\t\t// positive uint\n\t\t\t\t\tif (value < 0x18) {\n\t\t\t\t\t\ttarget[position++] = value\n\t\t\t\t\t} else if (value < 0x100) {\n\t\t\t\t\t\ttarget[position++] = 0x18\n\t\t\t\t\t\ttarget[position++] = value\n\t\t\t\t\t} else if (value < 0x10000) {\n\t\t\t\t\t\ttarget[position++] = 0x19\n\t\t\t\t\t\ttarget[position++] = value >> 8\n\t\t\t\t\t\ttarget[position++] = value & 0xff\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget[position++] = 0x1a\n\t\t\t\t\t\ttargetView.setUint32(position, value)\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t}\n\t\t\t\t} else if (!this.alwaysUseFloat && value >> 0 === value) { // negative integer\n\t\t\t\t\tif (value >= -0x18) {\n\t\t\t\t\t\ttarget[position++] = 0x1f - value\n\t\t\t\t\t} else if (value >= -0x100) {\n\t\t\t\t\t\ttarget[position++] = 0x38\n\t\t\t\t\t\ttarget[position++] = ~value\n\t\t\t\t\t} else if (value >= -0x10000) {\n\t\t\t\t\t\ttarget[position++] = 0x39\n\t\t\t\t\t\ttargetView.setUint16(position, ~value)\n\t\t\t\t\t\tposition += 2\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget[position++] = 0x3a\n\t\t\t\t\t\ttargetView.setUint32(position, ~value)\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet useFloat32\n\t\t\t\t\tif ((useFloat32 = this.useFloat32) > 0 && value < 0x100000000 && value >= -0x80000000) {\n\t\t\t\t\t\ttarget[position++] = 0xfa\n\t\t\t\t\t\ttargetView.setFloat32(position, value)\n\t\t\t\t\t\tlet xShifted\n\t\t\t\t\t\tif (useFloat32 < 4 ||\n\t\t\t\t\t\t\t\t// this checks for rounding of numbers that were encoded in 32-bit float to nearest significant decimal digit that could be preserved\n\t\t\t\t\t\t\t\t((xShifted = value * mult10[((target[position] & 0x7f) << 1) | (target[position + 1] >> 7)]) >> 0) === xShifted) {\n\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\tposition-- // move back into position for writing a double\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0xfb\n\t\t\t\t\ttargetView.setFloat64(position, value)\n\t\t\t\t\tposition += 8\n\t\t\t\t}\n\t\t\t} else if (type === 'object') {\n\t\t\t\tif (!value)\n\t\t\t\t\ttarget[position++] = 0xf6\n\t\t\t\telse {\n\t\t\t\t\tif (referenceMap) {\n\t\t\t\t\t\tlet referee = referenceMap.get(value)\n\t\t\t\t\t\tif (referee) {\n\t\t\t\t\t\t\ttarget[position++] = 0xd8\n\t\t\t\t\t\t\ttarget[position++] = 29 // http://cbor.schmorp.de/value-sharing\n\t\t\t\t\t\t\ttarget[position++] = 0x19 // 16-bit uint\n\t\t\t\t\t\t\tif (!referee.references) {\n\t\t\t\t\t\t\t\tlet idsToInsert = referenceMap.idsToInsert || (referenceMap.idsToInsert = [])\n\t\t\t\t\t\t\t\treferee.references = []\n\t\t\t\t\t\t\t\tidsToInsert.push(referee)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treferee.references.push(position - start)\n\t\t\t\t\t\t\tposition += 2 // TODO: also support 32-bit\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else \n\t\t\t\t\t\t\treferenceMap.set(value, { offset: position - start })\n\t\t\t\t\t}\n\t\t\t\t\tlet constructor = value.constructor\n\t\t\t\t\tif (constructor === Object) {\n\t\t\t\t\t\twriteObject(value, true)\n\t\t\t\t\t} else if (constructor === Array) {\n\t\t\t\t\t\tlength = value.length\n\t\t\t\t\t\tif (length < 0x18) {\n\t\t\t\t\t\t\ttarget[position++] = 0x80 | length\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twriteArrayHeader(length)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\t\t\tencode(value[i])\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (constructor === Map) {\n\t\t\t\t\t\tif (this.mapsAsObjects ? this.useTag259ForMaps !== false : this.useTag259ForMaps) {\n\t\t\t\t\t\t\t// use Tag 259 (https://github.com/shanewholloway/js-cbor-codec/blob/master/docs/CBOR-259-spec--explicit-maps.md) for maps if the user wants it that way\n\t\t\t\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\t\t\t\ttarget[position++] = 1\n\t\t\t\t\t\t\ttarget[position++] = 3\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlength = value.size\n\t\t\t\t\t\tif (length < 0x18) {\n\t\t\t\t\t\t\ttarget[position++] = 0xa0 | length\n\t\t\t\t\t\t} else if (length < 0x100) {\n\t\t\t\t\t\t\ttarget[position++] = 0xb8\n\t\t\t\t\t\t\ttarget[position++] = length\n\t\t\t\t\t\t} else if (length < 0x10000) {\n\t\t\t\t\t\t\ttarget[position++] = 0xb9\n\t\t\t\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget[position++] = 0xba\n\t\t\t\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (encoder.keyMap) { \n\t\t\t\t\t\t\tfor (let [ key, entryValue ] of value) {\n\t\t\t\t\t\t\t\tencode(encoder.encodeKey(key))\n\t\t\t\t\t\t\t\tencode(entryValue)\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t} else { \n\t\t\t\t\t\t\tfor (let [ key, entryValue ] of value) {\n\t\t\t\t\t\t\t\tencode(key) \n\t\t\t\t\t\t\t\tencode(entryValue)\n\t\t\t\t\t\t\t} \t\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (let i = 0, l = extensions.length; i < l; i++) {\n\t\t\t\t\t\t\tlet extensionClass = extensionClasses[i]\n\t\t\t\t\t\t\tif (value instanceof extensionClass) {\n\t\t\t\t\t\t\t\tlet extension = extensions[i]\n\t\t\t\t\t\t\t\tlet tag = extension.tag\n\t\t\t\t\t\t\t\tif (tag == undefined)\n\t\t\t\t\t\t\t\t\ttag = extension.getTag && extension.getTag.call(this, value)\n\t\t\t\t\t\t\t\tif (tag < 0x18) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xc0 | tag\n\t\t\t\t\t\t\t\t} else if (tag < 0x100) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xd8\n\t\t\t\t\t\t\t\t\ttarget[position++] = tag\n\t\t\t\t\t\t\t\t} else if (tag < 0x10000) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\t\t\t\t\t\ttarget[position++] = tag >> 8\n\t\t\t\t\t\t\t\t\ttarget[position++] = tag & 0xff\n\t\t\t\t\t\t\t\t} else if (tag > -1) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xda\n\t\t\t\t\t\t\t\t\ttargetView.setUint32(position, tag)\n\t\t\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t\t\t} // else undefined, don't write tag\n\t\t\t\t\t\t\t\textension.encode.call(this, value, encode, makeRoom)\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (value[Symbol.iterator]) {\n\t\t\t\t\t\t\tif (throwOnIterable) {\n\t\t\t\t\t\t\t\tlet error = new Error('Iterable should be serialized as iterator')\n\t\t\t\t\t\t\t\terror.iteratorNotHandled = true;\n\t\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttarget[position++] = 0x9f // indefinite length array\n\t\t\t\t\t\t\tfor (let entry of value) {\n\t\t\t\t\t\t\t\tencode(entry)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttarget[position++] = 0xff // stop-code\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (value[Symbol.asyncIterator] || isBlob(value)) {\n\t\t\t\t\t\t\tlet error = new Error('Iterable/blob should be serialized as iterator')\n\t\t\t\t\t\t\terror.iteratorNotHandled = true;\n\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.useToJSON && value.toJSON) {\n\t\t\t\t\t\t\tconst json = value.toJSON()\n\t\t\t\t\t\t\t// if for some reason value.toJSON returns itself it'll loop forever\n\t\t\t\t\t\t\tif (json !== value)\n\t\t\t\t\t\t\t\treturn encode(json)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// no extension found, write as object\n\t\t\t\t\t\twriteObject(value, !value.hasOwnProperty) // if it doesn't have hasOwnProperty, don't do hasOwnProperty checks\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'boolean') {\n\t\t\t\ttarget[position++] = value ? 0xf5 : 0xf4\n\t\t\t} else if (type === 'bigint') {\n\t\t\t\tif (value < (BigInt(1)<<BigInt(64)) && value >= 0) {\n\t\t\t\t\t// use an unsigned int as long as it fits\n\t\t\t\t\ttarget[position++] = 0x1b\n\t\t\t\t\ttargetView.setBigUint64(position, value)\n\t\t\t\t} else if (value > -(BigInt(1)<<BigInt(64)) && value < 0) {\n\t\t\t\t\t// if we can fit an unsigned int, use that\n\t\t\t\t\ttarget[position++] = 0x3b\n\t\t\t\t\ttargetView.setBigUint64(position, -value - BigInt(1))\n\t\t\t\t} else {\n\t\t\t\t\t// overflow\n\t\t\t\t\tif (this.largeBigIntToFloat) {\n\t\t\t\t\t\ttarget[position++] = 0xfb\n\t\t\t\t\t\ttargetView.setFloat64(position, Number(value))\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new RangeError(value + ' was too large to fit in CBOR 64-bit integer format, set largeBigIntToFloat to convert to float-64')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tposition += 8\n\t\t\t} else if (type === 'undefined') {\n\t\t\t\ttarget[position++] = 0xf7\n\t\t\t} else {\n\t\t\t\tthrow new Error('Unknown type: ' + type)\n\t\t\t}\n\t\t}\n\n\t\tconst writeObject = this.useRecords === false ? this.variableMapSize ? (object) => {\n\t\t\t// this method is slightly slower, but generates \"preferred serialization\" (optimally small for smaller objects)\n\t\t\tlet keys = Object.keys(object)\n\t\t\tlet vals = Object.values(object)\n\t\t\tlet length = keys.length\n\t\t\tif (length < 0x18) {\n\t\t\t\ttarget[position++] = 0xa0 | length\n\t\t\t} else if (length < 0x100) {\n\t\t\t\ttarget[position++] = 0xb8\n\t\t\t\ttarget[position++] = length\n\t\t\t} else if (length < 0x10000) {\n\t\t\t\ttarget[position++] = 0xb9\n\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t} else {\n\t\t\t\ttarget[position++] = 0xba\n\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\tposition += 4\n\t\t\t}\n\t\t\tlet key\n\t\t\tif (encoder.keyMap) { \n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tencode(encoder.encodeKey(keys[i]))\n\t\t\t\t\tencode(vals[i])\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tencode(keys[i])\n\t\t\t\t\tencode(vals[i])\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\t\t(object, safePrototype) => {\n\t\t\ttarget[position++] = 0xb9 // always use map 16, so we can preallocate and set the length afterwards\n\t\t\tlet objectOffset = position - start\n\t\t\tposition += 2\n\t\t\tlet size = 0\n\t\t\tif (encoder.keyMap) { \n\t\t\t\tfor (let key in object) if (safePrototype || object.hasOwnProperty(key)) {\n\t\t\t\t\tencode(encoder.encodeKey(key))\n\t\t\t\t\tencode(object[key])\n\t\t\t\t\tsize++\n\t\t\t\t}\n\t\t\t} else { \n\t\t\t\tfor (let key in object) if (safePrototype || object.hasOwnProperty(key)) {\n\t\t\t\t\t\tencode(key)\n\t\t\t\t\t\tencode(object[key])\n\t\t\t\t\tsize++\n\t\t\t\t}\n\t\t\t}\n\t\t\ttarget[objectOffset++ + start] = size >> 8\n\t\t\ttarget[objectOffset + start] = size & 0xff\n\t\t} :\n\t\t(object, safePrototype) => {\n\t\t\tlet nextTransition, transition = structures.transitions || (structures.transitions = Object.create(null))\n\t\t\tlet newTransitions = 0\n\t\t\tlet length = 0\n\t\t\tlet parentRecordId\n\t\t\tlet keys\n\t\t\tif (this.keyMap) {\n\t\t\t\tkeys = Object.keys(object).map(k => this.encodeKey(k))\n\t\t\t\tlength = keys.length\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tlet key = keys[i]\n\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\tnewTransitions++\n\t\t\t\t\t}\n\t\t\t\t\ttransition = nextTransition\n\t\t\t\t}\t\t\t\t\n\t\t\t} else {\n\t\t\t\tfor (let key in object) if (safePrototype || object.hasOwnProperty(key)) {\n\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\tif (transition[RECORD_SYMBOL] & 0x100000) {// this indicates it is a brancheable/extendable terminal node, so we will use this record id and extend it\n\t\t\t\t\t\t\tparentRecordId = transition[RECORD_SYMBOL] & 0xffff\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\tnewTransitions++\n\t\t\t\t\t}\n\t\t\t\t\ttransition = nextTransition\n\t\t\t\t\tlength++\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet recordId = transition[RECORD_SYMBOL]\n\t\t\tif (recordId !== undefined) {\n\t\t\t\trecordId &= 0xffff\n\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\ttarget[position++] = (recordId >> 8) | 0xe0\n\t\t\t\ttarget[position++] = recordId & 0xff\n\t\t\t} else {\n\t\t\t\tif (!keys)\n\t\t\t\t\tkeys = transition.__keys__ || (transition.__keys__ = Object.keys(object))\n\t\t\t\tif (parentRecordId === undefined) {\n\t\t\t\t\trecordId = structures.nextId++\n\t\t\t\t\tif (!recordId) {\n\t\t\t\t\t\trecordId = 0\n\t\t\t\t\t\tstructures.nextId = 1\n\t\t\t\t\t}\n\t\t\t\t\tif (recordId >= MAX_STRUCTURES) {// cycle back around\n\t\t\t\t\t\tstructures.nextId = (recordId = maxSharedStructures) + 1\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trecordId = parentRecordId\n\t\t\t\t}\n\t\t\t\tstructures[recordId] = keys\n\t\t\t\tif (recordId < maxSharedStructures) {\n\t\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\t\ttarget[position++] = (recordId >> 8) | 0xe0\n\t\t\t\t\ttarget[position++] = recordId & 0xff\n\t\t\t\t\ttransition = structures.transitions\n\t\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\t\tif (transition[RECORD_SYMBOL] === undefined || (transition[RECORD_SYMBOL] & 0x100000))\n\t\t\t\t\t\t\ttransition[RECORD_SYMBOL] = recordId\n\t\t\t\t\t\ttransition = transition[keys[i]]\n\t\t\t\t\t}\n\t\t\t\t\ttransition[RECORD_SYMBOL] = recordId | 0x100000 // indicates it is a extendable terminal\n\t\t\t\t\thasSharedUpdate = true\n\t\t\t\t} else {\n\t\t\t\t\ttransition[RECORD_SYMBOL] = recordId\n\t\t\t\t\ttargetView.setUint32(position, 0xd9dfff00) // tag two byte, then record definition id\n\t\t\t\t\tposition += 3\n\t\t\t\t\tif (newTransitions)\n\t\t\t\t\t\ttransitionsCount += serializationsSinceTransitionRebuild * newTransitions\n\t\t\t\t\t// record the removal of the id, we can maintain our shared structure\n\t\t\t\t\tif (recordIdsToRemove.length >= MAX_STRUCTURES - maxSharedStructures)\n\t\t\t\t\t\trecordIdsToRemove.shift()[RECORD_SYMBOL] = undefined // we are cycling back through, and have to remove old ones\n\t\t\t\t\trecordIdsToRemove.push(transition)\n\t\t\t\t\twriteArrayHeader(length + 2)\n\t\t\t\t\tencode(0xe000 + recordId)\n\t\t\t\t\tencode(keys)\n\t\t\t\t\tif (safePrototype === null) return; // special exit for iterator\n\t\t\t\t\tfor (let key in object)\n\t\t\t\t\t\tif (safePrototype || object.hasOwnProperty(key))\n\t\t\t\t\t\t\tencode(object[key])\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (length < 0x18) { // write the array header\n\t\t\t\ttarget[position++] = 0x80 | length\n\t\t\t} else {\n\t\t\t\twriteArrayHeader(length)\n\t\t\t}\n\t\t\tif (safePrototype === null) return; // special exit for iterator\n\t\t\tfor (let key in object)\n\t\t\t\tif (safePrototype || object.hasOwnProperty(key))\n\t\t\t\t\tencode(object[key])\n\t\t}\n\t\tconst makeRoom = (end) => {\n\t\t\tlet newSize\n\t\t\tif (end > 0x1000000) {\n\t\t\t\t// special handling for really large buffers\n\t\t\t\tif ((end - start) > MAX_BUFFER_SIZE)\n\t\t\t\t\tthrow new Error('Encoded buffer would be larger than maximum buffer size')\n\t\t\t\tnewSize = Math.min(MAX_BUFFER_SIZE,\n\t\t\t\t\tMath.round(Math.max((end - start) * (end > 0x4000000 ? 1.25 : 2), 0x400000) / 0x1000) * 0x1000)\n\t\t\t} else // faster handling for smaller buffers\n\t\t\t\tnewSize = ((Math.max((end - start) << 2, target.length - 1) >> 12) + 1) << 12\n\t\t\tlet newBuffer = new ByteArrayAllocate(newSize)\n\t\t\ttargetView = new DataView(newBuffer.buffer, 0, newSize)\n\t\t\tif (target.copy)\n\t\t\t\ttarget.copy(newBuffer, 0, start, end)\n\t\t\telse\n\t\t\t\tnewBuffer.set(target.slice(start, end))\n\t\t\tposition -= start\n\t\t\tstart = 0\n\t\t\tsafeEnd = newBuffer.length - 10\n\t\t\treturn target = newBuffer\n\t\t}\n\t\tlet chunkThreshold = 100;\n\t\tlet continuedChunkThreshold = 1000;\n\t\tthis.encodeAsIterable = function(value, options) {\n\t\t\treturn startEncoding(value, options, encodeObjectAsIterable);\n\t\t}\n\t\tthis.encodeAsAsyncIterable = function(value, options) {\n\t\t\treturn startEncoding(value, options, encodeObjectAsAsyncIterable);\n\t\t}\n\n\t\tfunction* encodeObjectAsIterable(object, iterateProperties, finalIterable) {\n\t\t\tlet constructor = object.constructor;\n\t\t\tif (constructor === Object) {\n\t\t\t\tlet useRecords = encoder.useRecords !== false;\n\t\t\t\tif (useRecords)\n\t\t\t\t\twriteObject(object, null); // write the record identifier\n\t\t\t\telse\n\t\t\t\t\twriteEntityLength(Object.keys(object).length, 0xa0);\n\t\t\t\tfor (let key in object) {\n\t\t\t\t\tlet value = object[key];\n\t\t\t\t\tif (!useRecords) encode(key);\n\t\t\t\t\tif (value && typeof value === 'object') {\n\t\t\t\t\t\tif (iterateProperties[key])\n\t\t\t\t\t\t\tyield* encodeObjectAsIterable(value, iterateProperties[key]);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tyield* tryEncode(value, iterateProperties, key);\n\t\t\t\t\t} else encode(value);\n\t\t\t\t}\n\t\t\t} else if (constructor === Array) {\n\t\t\t\tlet length = object.length;\n\t\t\t\twriteArrayHeader(length);\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tlet value = object[i];\n\t\t\t\t\tif (value && (typeof value === 'object' || position - start > chunkThreshold)) {\n\t\t\t\t\t\tif (iterateProperties.element)\n\t\t\t\t\t\t\tyield* encodeObjectAsIterable(value, iterateProperties.element);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tyield* tryEncode(value, iterateProperties, 'element');\n\t\t\t\t\t} else encode(value);\n\t\t\t\t}\n\t\t\t} else if (object[Symbol.iterator]) {\n\t\t\t\ttarget[position++] = 0x9f; // start indefinite array\n\t\t\t\tfor (let value of object) {\n\t\t\t\t\tif (value && (typeof value === 'object' || position - start > chunkThreshold)) {\n\t\t\t\t\t\tif (iterateProperties.element)\n\t\t\t\t\t\t\tyield* encodeObjectAsIterable(value, iterateProperties.element);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tyield* tryEncode(value, iterateProperties, 'element');\n\t\t\t\t\t} else encode(value);\n\t\t\t\t}\n\t\t\t\ttarget[position++] = 0xff; // stop byte\n\t\t\t} else if (isBlob(object)){\n\t\t\t\twriteEntityLength(object.size, 0x40); // encode as binary data\n\t\t\t\tyield target.subarray(start, position);\n\t\t\t\tyield object; // directly return blobs, they have to be encoded asynchronously\n\t\t\t\trestartEncoding();\n\t\t\t} else if (object[Symbol.asyncIterator]) {\n\t\t\t\ttarget[position++] = 0x9f; // start indefinite array\n\t\t\t\tyield target.subarray(start, position);\n\t\t\t\tyield object; // directly return async iterators, they have to be encoded asynchronously\n\t\t\t\trestartEncoding();\n\t\t\t\ttarget[position++] = 0xff; // stop byte\n\t\t\t} else {\n\t\t\t\tencode(object);\n\t\t\t}\n\t\t\tif (finalIterable && position > start) yield target.subarray(start, position);\n\t\t\telse if (position - start > chunkThreshold) {\n\t\t\t\tyield target.subarray(start, position);\n\t\t\t\trestartEncoding();\n\t\t\t}\n\t\t}\n\t\tfunction* tryEncode(value, iterateProperties, key) {\n\t\t\tlet restart = position - start;\n\t\t\ttry {\n\t\t\t\tencode(value);\n\t\t\t\tif (position - start > chunkThreshold) {\n\t\t\t\t\tyield target.subarray(start, position);\n\t\t\t\t\trestartEncoding();\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (error.iteratorNotHandled) {\n\t\t\t\t\titerateProperties[key] = {};\n\t\t\t\t\tposition = start + restart; // restart our position so we don't have partial data from last encode\n\t\t\t\t\tyield* encodeObjectAsIterable.call(this, value, iterateProperties[key]);\n\t\t\t\t} else throw error;\n\t\t\t}\n\t\t}\n\t\tfunction restartEncoding() {\n\t\t\tchunkThreshold = continuedChunkThreshold;\n\t\t\tencoder.encode(null, THROW_ON_ITERABLE); // restart encoding\n\t\t}\n\t\tfunction startEncoding(value, options, encodeIterable) {\n\t\t\tif (options && options.chunkThreshold) // explicitly specified chunk sizes\n\t\t\t\tchunkThreshold = continuedChunkThreshold = options.chunkThreshold;\n\t\t\telse // we start with a smaller threshold to get initial bytes sent quickly\n\t\t\t\tchunkThreshold = 100;\n\t\t\tif (value && typeof value === 'object') {\n\t\t\t\tencoder.encode(null, THROW_ON_ITERABLE); // start encoding\n\t\t\t\treturn encodeIterable(value, encoder.iterateProperties || (encoder.iterateProperties = {}), true);\n\t\t\t}\n\t\t\treturn [encoder.encode(value)];\n\t\t}\n\n\t\tasync function* encodeObjectAsAsyncIterable(value, iterateProperties) {\n\t\t\tfor (let encodedValue of encodeObjectAsIterable(value, iterateProperties, true)) {\n\t\t\t\tlet constructor = encodedValue.constructor;\n\t\t\t\tif (constructor === ByteArray || constructor === Uint8Array)\n\t\t\t\t\tyield encodedValue;\n\t\t\t\telse if (isBlob(encodedValue)) {\n\t\t\t\t\tlet reader = encodedValue.stream().getReader();\n\t\t\t\t\tlet next;\n\t\t\t\t\twhile (!(next = await reader.read()).done) {\n\t\t\t\t\t\tyield next.value;\n\t\t\t\t\t}\n\t\t\t\t} else if (encodedValue[Symbol.asyncIterator]) {\n\t\t\t\t\tfor await (let asyncValue of encodedValue) {\n\t\t\t\t\t\trestartEncoding();\n\t\t\t\t\t\tif (asyncValue)\n\t\t\t\t\t\t\tyield* encodeObjectAsAsyncIterable(asyncValue, iterateProperties.async || (iterateProperties.async = {}));\n\t\t\t\t\t\telse yield encoder.encode(asyncValue);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tyield encodedValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tuseBuffer(buffer) {\n\t\t// this means we are finished using our own buffer and we can write over it safely\n\t\ttarget = buffer\n\t\ttargetView = new DataView(target.buffer, target.byteOffset, target.byteLength)\n\t\tposition = 0\n\t}\n\tclearSharedData() {\n\t\tif (this.structures)\n\t\t\tthis.structures = []\n\t\tif (this.sharedValues)\n\t\t\tthis.sharedValues = undefined\n\t}\n\tupdateSharedData() {\n\t\tlet lastVersion = this.sharedVersion || 0\n\t\tthis.sharedVersion = lastVersion + 1\n\t\tlet structuresCopy = this.structures.slice(0)\n\t\tlet sharedData = new SharedData(structuresCopy, this.sharedValues, this.sharedVersion)\n\t\tlet saveResults = this.saveShared(sharedData,\n\t\t\t\texistingShared => (existingShared && existingShared.version || 0) == lastVersion)\n\t\tif (saveResults === false) {\n\t\t\t// get updated structures and try again if the update failed\n\t\t\tsharedData = this.getShared() || {}\n\t\t\tthis.structures = sharedData.structures || []\n\t\t\tthis.sharedValues = sharedData.packedValues\n\t\t\tthis.sharedVersion = sharedData.version\n\t\t\tthis.structures.nextId = this.structures.length\n\t\t} else {\n\t\t\t// restore structures\n\t\t\tstructuresCopy.forEach((structure, i) => this.structures[i] = structure)\n\t\t}\n\t\t// saveShared may fail to write and reload, or may have reloaded to check compatibility and overwrite saved data, either way load the correct shared data\n\t\treturn saveResults\n\t}\n}\nfunction writeEntityLength(length, majorValue) {\n\tif (length < 0x18)\n\t\ttarget[position++] = majorValue | length\n\telse if (length < 0x100) {\n\t\ttarget[position++] = majorValue | 0x18\n\t\ttarget[position++] = length\n\t} else if (length < 0x10000) {\n\t\ttarget[position++] = majorValue | 0x19\n\t\ttarget[position++] = length >> 8\n\t\ttarget[position++] = length & 0xff\n\t} else {\n\t\ttarget[position++] = majorValue | 0x1a\n\t\ttargetView.setUint32(position, length)\n\t\tposition += 4\n\t}\n\n}\nclass SharedData {\n\tconstructor(structures, values, version) {\n\t\tthis.structures = structures\n\t\tthis.packedValues = values\n\t\tthis.version = version\n\t}\n}\n\nfunction writeArrayHeader(length) {\n\tif (length < 0x18)\n\t\ttarget[position++] = 0x80 | length\n\telse if (length < 0x100) {\n\t\ttarget[position++] = 0x98\n\t\ttarget[position++] = length\n\t} else if (length < 0x10000) {\n\t\ttarget[position++] = 0x99\n\t\ttarget[position++] = length >> 8\n\t\ttarget[position++] = length & 0xff\n\t} else {\n\t\ttarget[position++] = 0x9a\n\t\ttargetView.setUint32(position, length)\n\t\tposition += 4\n\t}\n}\n\nconst BlobConstructor = typeof Blob === 'undefined' ? function(){} : Blob;\nfunction isBlob(object) {\n\tif (object instanceof BlobConstructor)\n\t\treturn true;\n\tlet tag = object[Symbol.toStringTag];\n\treturn tag === 'Blob' || tag === 'File';\n}\nfunction findRepetitiveStrings(value, packedValues) {\n\tswitch(typeof value) {\n\t\tcase 'string':\n\t\t\tif (value.length > 3) {\n\t\t\t\tif (packedValues.objectMap[value] > -1 || packedValues.values.length >= packedValues.maxValues)\n\t\t\t\t\treturn\n\t\t\t\tlet packedStatus = packedValues.get(value)\n\t\t\t\tif (packedStatus) {\n\t\t\t\t\tif (++packedStatus.count == 2) {\n\t\t\t\t\t\tpackedValues.values.push(value)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tpackedValues.set(value, {\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t})\n\t\t\t\t\tif (packedValues.samplingPackedValues) {\n\t\t\t\t\t\tlet status = packedValues.samplingPackedValues.get(value)\n\t\t\t\t\t\tif (status)\n\t\t\t\t\t\t\tstatus.count++\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tpackedValues.samplingPackedValues.set(value, {\n\t\t\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'object':\n\t\t\tif (value) {\n\t\t\t\tif (value instanceof Array) {\n\t\t\t\t\tfor (let i = 0, l = value.length; i < l; i++) {\n\t\t\t\t\t\tfindRepetitiveStrings(value[i], packedValues)\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tlet includeKeys = !packedValues.encoder.useRecords\n\t\t\t\t\tfor (var key in value) {\n\t\t\t\t\t\tif (value.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tif (includeKeys)\n\t\t\t\t\t\t\t\tfindRepetitiveStrings(key, packedValues)\n\t\t\t\t\t\t\tfindRepetitiveStrings(value[key], packedValues)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'function': console.log(value)\n\t}\n}\nconst isLittleEndianMachine = new Uint8Array(new Uint16Array([1]).buffer)[0] == 1\nextensionClasses = [ Date, Set, Error, RegExp, Tag, ArrayBuffer,\n\tUint8Array, Uint8ClampedArray, Uint16Array, Uint32Array,\n\ttypeof BigUint64Array == 'undefined' ? function() {} : BigUint64Array, Int8Array, Int16Array, Int32Array,\n\ttypeof BigInt64Array == 'undefined' ? function() {} : BigInt64Array,\n\tFloat32Array, Float64Array, SharedData ]\n\n//Object.getPrototypeOf(Uint8Array.prototype).constructor /*TypedArray*/\nextensions = [{ // Date\n\ttag: 1,\n\tencode(date, encode) {\n\t\tlet seconds = date.getTime() / 1000\n\t\tif ((this.useTimestamp32 || date.getMilliseconds() === 0) && seconds >= 0 && seconds < 0x100000000) {\n\t\t\t// Timestamp 32\n\t\t\ttarget[position++] = 0x1a\n\t\t\ttargetView.setUint32(position, seconds)\n\t\t\tposition += 4\n\t\t} else {\n\t\t\t// Timestamp float64\n\t\t\ttarget[position++] = 0xfb\n\t\t\ttargetView.setFloat64(position, seconds)\n\t\t\tposition += 8\n\t\t}\n\t}\n}, { // Set\n\ttag: 258, // https://github.com/input-output-hk/cbor-sets-spec/blob/master/CBOR_SETS.md\n\tencode(set, encode) {\n\t\tlet array = Array.from(set)\n\t\tencode(array)\n\t}\n}, { // Error\n\ttag: 27, // http://cbor.schmorp.de/generic-object\n\tencode(error, encode) {\n\t\tencode([ error.name, error.message ])\n\t}\n}, { // RegExp\n\ttag: 27, // http://cbor.schmorp.de/generic-object\n\tencode(regex, encode) {\n\t\tencode([ 'RegExp', regex.source, regex.flags ])\n\t}\n}, { // Tag\n\tgetTag(tag) {\n\t\treturn tag.tag\n\t},\n\tencode(tag, encode) {\n\t\tencode(tag.value)\n\t}\n}, { // ArrayBuffer\n\tencode(arrayBuffer, encode, makeRoom) {\n\t\twriteBuffer(arrayBuffer, makeRoom)\n\t}\n}, { // Uint8Array\n\tgetTag(typedArray) {\n\t\tif (typedArray.constructor === Uint8Array) {\n\t\t\tif (this.tagUint8Array || hasNodeBuffer && this.tagUint8Array !== false)\n\t\t\t\treturn 64;\n\t\t} // else no tag\n\t},\n\tencode(typedArray, encode, makeRoom) {\n\t\twriteBuffer(typedArray, makeRoom)\n\t}\n},\n\ttypedArrayEncoder(68, 1),\n\ttypedArrayEncoder(69, 2),\n\ttypedArrayEncoder(70, 4),\n\ttypedArrayEncoder(71, 8),\n\ttypedArrayEncoder(72, 1),\n\ttypedArrayEncoder(77, 2),\n\ttypedArrayEncoder(78, 4),\n\ttypedArrayEncoder(79, 8),\n\ttypedArrayEncoder(85, 4),\n\ttypedArrayEncoder(86, 8),\n{\n\tencode(sharedData, encode) { // write SharedData\n\t\tlet packedValues = sharedData.packedValues || []\n\t\tlet sharedStructures = sharedData.structures || []\n\t\tif (packedValues.values.length > 0) {\n\t\t\ttarget[position++] = 0xd8 // one-byte tag\n\t\t\ttarget[position++] = 51 // tag 51 for packed shared structures https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\twriteArrayHeader(4)\n\t\t\tlet valuesArray = packedValues.values\n\t\t\tencode(valuesArray)\n\t\t\twriteArrayHeader(0) // prefixes\n\t\t\twriteArrayHeader(0) // suffixes\n\t\t\tpackedObjectMap = Object.create(sharedPackedObjectMap || null)\n\t\t\tfor (let i = 0, l = valuesArray.length; i < l; i++) {\n\t\t\t\tpackedObjectMap[valuesArray[i]] = i\n\t\t\t}\n\t\t}\n\t\tif (sharedStructures) {\n\t\t\ttargetView.setUint32(position, 0xd9dffe00)\n\t\t\tposition += 3\n\t\t\tlet definitions = sharedStructures.slice(0)\n\t\t\tdefinitions.unshift(0xe000)\n\t\t\tdefinitions.push(new Tag(sharedData.version, 0x53687264))\n\t\t\tencode(definitions)\n\t\t} else\n\t\t\tencode(new Tag(sharedData.version, 0x53687264))\n\t\t}\n\t}]\nfunction typedArrayEncoder(tag, size) {\n\tif (!isLittleEndianMachine && size > 1)\n\t\ttag -= 4 // the big endian equivalents are 4 less\n\treturn {\n\t\ttag: tag,\n\t\tencode: function writeExtBuffer(typedArray, encode) {\n\t\t\tlet length = typedArray.byteLength\n\t\t\tlet offset = typedArray.byteOffset || 0\n\t\t\tlet buffer = typedArray.buffer || typedArray\n\t\t\tencode(hasNodeBuffer ? Buffer.from(buffer, offset, length) :\n\t\t\t\tnew Uint8Array(buffer, offset, length))\n\t\t}\n\t}\n}\nfunction writeBuffer(buffer, makeRoom) {\n\tlet length = buffer.byteLength\n\tif (length < 0x18) {\n\t\ttarget[position++] = 0x40 + length\n\t} else if (length < 0x100) {\n\t\ttarget[position++] = 0x58\n\t\ttarget[position++] = length\n\t} else if (length < 0x10000) {\n\t\ttarget[position++] = 0x59\n\t\ttarget[position++] = length >> 8\n\t\ttarget[position++] = length & 0xff\n\t} else {\n\t\ttarget[position++] = 0x5a\n\t\ttargetView.setUint32(position, length)\n\t\tposition += 4\n\t}\n\tif (position + length >= target.length) {\n\t\tmakeRoom(position + length)\n\t}\n\t// if it is already a typed array (has an ArrayBuffer), use that, but if it is an ArrayBuffer itself,\n\t// must wrap it to set it.\n\ttarget.set(buffer.buffer ? buffer : new Uint8Array(buffer), position)\n\tposition += length\n}\n\nfunction insertIds(serialized, idsToInsert) {\n\t// insert the ids that need to be referenced for structured clones\n\tlet nextId\n\tlet distanceToMove = idsToInsert.length * 2\n\tlet lastEnd = serialized.length - distanceToMove\n\tidsToInsert.sort((a, b) => a.offset > b.offset ? 1 : -1)\n\tfor (let id = 0; id < idsToInsert.length; id++) {\n\t\tlet referee = idsToInsert[id]\n\t\treferee.id = id\n\t\tfor (let position of referee.references) {\n\t\t\tserialized[position++] = id >> 8\n\t\t\tserialized[position] = id & 0xff\n\t\t}\n\t}\n\twhile (nextId = idsToInsert.pop()) {\n\t\tlet offset = nextId.offset\n\t\tserialized.copyWithin(offset + distanceToMove, offset, lastEnd)\n\t\tdistanceToMove -= 2\n\t\tlet position = offset + distanceToMove\n\t\tserialized[position++] = 0xd8\n\t\tserialized[position++] = 28 // http://cbor.schmorp.de/value-sharing\n\t\tlastEnd = offset\n\t}\n\treturn serialized\n}\nfunction writeBundles(start, encode) {\n\ttargetView.setUint32(bundledStrings.position + start, position - bundledStrings.position - start + 1) // the offset to bundle\n\tlet writeStrings = bundledStrings\n\tbundledStrings = null\n\tencode(writeStrings[0])\n\tencode(writeStrings[1])\n}\n\nexport function addExtension(extension) {\n\tif (extension.Class) {\n\t\tif (!extension.encode)\n\t\t\tthrow new Error('Extension has no encode function')\n\t\textensionClasses.unshift(extension.Class)\n\t\textensions.unshift(extension)\n\t}\n\tdecodeAddExtension(extension)\n}\nlet defaultEncoder = new Encoder({ useRecords: false })\nexport const encode = defaultEncoder.encode\nexport const encodeAsIterable = defaultEncoder.encodeAsIterable\nexport const encodeAsAsyncIterable = defaultEncoder.encodeAsAsyncIterable\nexport { FLOAT32_OPTIONS } from './decode.js'\nimport { FLOAT32_OPTIONS } from './decode.js'\nexport const { NEVER, ALWAYS, DECIMAL_ROUND, DECIMAL_FIT } = FLOAT32_OPTIONS\nexport const REUSE_BUFFER_MODE = 512\nexport const RESET_BUFFER_MODE = 1024\nexport const THROW_ON_ITERABLE = 2048\n\n\n","let decoder\ntry {\n\tdecoder = new TextDecoder()\n} catch(error) {}\nlet src\nlet srcEnd\nlet position = 0\nlet alreadySet\nconst EMPTY_ARRAY = []\nconst LEGACY_RECORD_INLINE_ID = 105\nconst RECORD_DEFINITIONS_ID = 0xdffe\nconst RECORD_INLINE_ID = 0xdfff // temporary first-come first-serve tag // proposed tag: 0x7265 // 're'\nconst BUNDLED_STRINGS_ID = 0xdff9\nconst PACKED_TABLE_TAG_ID = 51\nconst PACKED_REFERENCE_TAG_ID = 6\nconst STOP_CODE = {}\nlet strings = EMPTY_ARRAY\nlet stringPosition = 0\nlet currentDecoder = {}\nlet currentStructures\nlet srcString\nlet srcStringStart = 0\nlet srcStringEnd = 0\nlet bundledStrings\nlet referenceMap\nlet currentExtensions = []\nlet currentExtensionRanges = []\nlet packedValues\nlet dataView\nlet restoreMapsAsObject\nlet defaultOptions = {\n\tuseRecords: false,\n\tmapsAsObjects: true\n}\nlet sequentialMode = false\nlet inlineObjectReadThreshold = 2;\nvar BlockedFunction // we use search and replace to change the next call to BlockedFunction to avoid CSP issues for\n// no-eval build\ntry {\n\tnew Function('')\n} catch(error) {\n\t// if eval variants are not supported, do not create inline object readers ever\n\tinlineObjectReadThreshold = Infinity\n}\n\n\n\nexport class Decoder {\n\tconstructor(options) {\n\t\tif (options) {\n\t\t\tif ((options.keyMap || options._keyMap) && !options.useRecords) {\n\t\t\t\toptions.useRecords = false\n\t\t\t\toptions.mapsAsObjects = true\n\t\t\t}\n\t\t\tif (options.useRecords === false && options.mapsAsObjects === undefined)\n\t\t\t\toptions.mapsAsObjects = true\n\t\t\tif (options.getStructures)\n\t\t\t\toptions.getShared = options.getStructures\n\t\t\tif (options.getShared && !options.structures)\n\t\t\t\t(options.structures = []).uninitialized = true // this is what we use to denote an uninitialized structures\n\t\t\tif (options.keyMap) {\n\t\t\t\tthis.mapKey = new Map()\n\t\t\t\tfor (let [k,v] of Object.entries(options.keyMap)) this.mapKey.set(v,k)\n\t\t\t}\n\t\t}\n\t\tObject.assign(this, options)\n\t}\n\t/*\n\tdecodeKey(key) {\n\t\treturn this.keyMap\n\t\t\t? Object.keys(this.keyMap)[Object.values(this.keyMap).indexOf(key)] || key\n\t\t\t: key\n\t}\n\t*/\n\tdecodeKey(key) {\n\t\treturn this.keyMap ? this.mapKey.get(key) || key : key\n\t}\n\t\n\tencodeKey(key) {\n\t\treturn this.keyMap && this.keyMap.hasOwnProperty(key) ? this.keyMap[key] : key\n\t}\n\n\tencodeKeys(rec) {\n\t\tif (!this._keyMap) return rec\n\t\tlet map = new Map()\n\t\tfor (let [k,v] of Object.entries(rec)) map.set((this._keyMap.hasOwnProperty(k) ? this._keyMap[k] : k), v)\n\t\treturn map\n\t}\n\n\tdecodeKeys(map) {\n\t\tif (!this._keyMap || map.constructor.name != 'Map') return map\n\t\tif (!this._mapKey) {\n\t\t\tthis._mapKey = new Map()\n\t\t\tfor (let [k,v] of Object.entries(this._keyMap)) this._mapKey.set(v,k)\n\t\t}\n\t\tlet res = {}\n\t\t//map.forEach((v,k) => res[Object.keys(this._keyMap)[Object.values(this._keyMap).indexOf(k)] || k] = v)\n\t\tmap.forEach((v,k) => res[safeKey(this._mapKey.has(k) ? this._mapKey.get(k) : k)] =  v)\n\t\treturn res\n\t}\n\t\n\tmapDecode(source, end) {\n\t\n\t\tlet res = this.decode(source)\n\t\tif (this._keyMap) { \n\t\t\t//Experiemntal support for Optimised KeyMap  decoding \n\t\t\tswitch (res.constructor.name) {\n\t\t\t\tcase 'Array': return res.map(r => this.decodeKeys(r))\n\t\t\t\t//case 'Map': return this.decodeKeys(res)\n\t\t\t}\n\t\t}\n\t\treturn res\n\t}\n\n\tdecode(source, end) {\n\t\tif (src) {\n\t\t\t// re-entrant execution, save the state and restore it after we do this decode\n\t\t\treturn saveState(() => {\n\t\t\t\tclearSource()\n\t\t\t\treturn this ? this.decode(source, end) : Decoder.prototype.decode.call(defaultOptions, source, end)\n\t\t\t})\n\t\t}\n\t\tsrcEnd = end > -1 ? end : source.length\n\t\tposition = 0\n\t\tstringPosition = 0\n\t\tsrcStringEnd = 0\n\t\tsrcString = null\n\t\tstrings = EMPTY_ARRAY\n\t\tbundledStrings = null\n\t\tsrc = source\n\t\t// this provides cached access to the data view for a buffer if it is getting reused, which is a recommend\n\t\t// technique for getting data from a database where it can be copied into an existing buffer instead of creating\n\t\t// new ones\n\t\ttry {\n\t\t\tdataView = source.dataView || (source.dataView = new DataView(source.buffer, source.byteOffset, source.byteLength))\n\t\t} catch(error) {\n\t\t\t// if it doesn't have a buffer, maybe it is the wrong type of object\n\t\t\tsrc = null\n\t\t\tif (source instanceof Uint8Array)\n\t\t\t\tthrow error\n\t\t\tthrow new Error('Source must be a Uint8Array or Buffer but was a ' + ((source && typeof source == 'object') ? source.constructor.name : typeof source))\n\t\t}\n\t\tif (this instanceof Decoder) {\n\t\t\tcurrentDecoder = this\n\t\t\tpackedValues = this.sharedValues &&\n\t\t\t\t(this.pack ? new Array(this.maxPrivatePackedValues || 16).concat(this.sharedValues) :\n\t\t\t\tthis.sharedValues)\n\t\t\tif (this.structures) {\n\t\t\t\tcurrentStructures = this.structures\n\t\t\t\treturn checkedRead()\n\t\t\t} else if (!currentStructures || currentStructures.length > 0) {\n\t\t\t\tcurrentStructures = []\n\t\t\t}\n\t\t} else {\n\t\t\tcurrentDecoder = defaultOptions\n\t\t\tif (!currentStructures || currentStructures.length > 0)\n\t\t\t\tcurrentStructures = []\n\t\t\tpackedValues = null\n\t\t}\n\t\treturn checkedRead()\n\t}\n\tdecodeMultiple(source, forEach) {\n\t\tlet values, lastPosition = 0\n\t\ttry {\n\t\t\tlet size = source.length\n\t\t\tsequentialMode = true\n\t\t\tlet value = this ? this.decode(source, size) : defaultDecoder.decode(source, size)\n\t\t\tif (forEach) {\n\t\t\t\tif (forEach(value) === false) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\twhile(position < size) {\n\t\t\t\t\tlastPosition = position\n\t\t\t\t\tif (forEach(checkedRead()) === false) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalues = [ value ]\n\t\t\t\twhile(position < size) {\n\t\t\t\t\tlastPosition = position\n\t\t\t\t\tvalues.push(checkedRead())\n\t\t\t\t}\n\t\t\t\treturn values\n\t\t\t}\n\t\t} catch(error) {\n\t\t\terror.lastPosition = lastPosition\n\t\t\terror.values = values\n\t\t\tthrow error\n\t\t} finally {\n\t\t\tsequentialMode = false\n\t\t\tclearSource()\n\t\t}\n\t}\n}\nexport function getPosition() {\n\treturn position\n}\nexport function checkedRead() {\n\ttry {\n\t\tlet result = read()\n\t\tif (bundledStrings) {\n\t\t\tif (position >= bundledStrings.postBundlePosition) {\n\t\t\t\tlet error = new Error('Unexpected bundle position');\n\t\t\t\terror.incomplete = true;\n\t\t\t\tthrow error\n\t\t\t}\n\t\t\t// bundled strings to skip past\n\t\t\tposition = bundledStrings.postBundlePosition;\n\t\t\tbundledStrings = null;\n\t\t}\n\n\t\tif (position == srcEnd) {\n\t\t\t// finished reading this source, cleanup references\n\t\t\tcurrentStructures = null\n\t\t\tsrc = null\n\t\t\tif (referenceMap)\n\t\t\t\treferenceMap = null\n\t\t} else if (position > srcEnd) {\n\t\t\t// over read\n\t\t\tlet error = new Error('Unexpected end of CBOR data')\n\t\t\terror.incomplete = true\n\t\t\tthrow error\n\t\t} else if (!sequentialMode) {\n\t\t\tthrow new Error('Data read, but end of buffer not reached')\n\t\t}\n\t\t// else more to read, but we are reading sequentially, so don't clear source yet\n\t\treturn result\n\t} catch(error) {\n\t\tclearSource()\n\t\tif (error instanceof RangeError || error.message.startsWith('Unexpected end of buffer')) {\n\t\t\terror.incomplete = true\n\t\t}\n\t\tthrow error\n\t}\n}\n\nexport function read() {\n\tlet token = src[position++]\n\tlet majorType = token >> 5\n\ttoken = token & 0x1f\n\tif (token > 0x17) {\n\t\tswitch (token) {\n\t\t\tcase 0x18:\n\t\t\t\ttoken = src[position++]\n\t\t\t\tbreak\n\t\t\tcase 0x19:\n\t\t\t\tif (majorType == 7) {\n\t\t\t\t\treturn getFloat16()\n\t\t\t\t}\n\t\t\t\ttoken = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\tbreak\n\t\t\tcase 0x1a:\n\t\t\t\tif (majorType == 7) {\n\t\t\t\t\tlet value = dataView.getFloat32(position)\n\t\t\t\t\tif (currentDecoder.useFloat32 > 2) {\n\t\t\t\t\t\t// this does rounding of numbers that were encoded in 32-bit float to nearest significant decimal digit that could be preserved\n\t\t\t\t\t\tlet multiplier = mult10[((src[position] & 0x7f) << 1) | (src[position + 1] >> 7)]\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\treturn ((multiplier * value + (value > 0 ? 0.5 : -0.5)) >> 0) / multiplier\n\t\t\t\t\t}\n\t\t\t\t\tposition += 4\n\t\t\t\t\treturn value\n\t\t\t\t}\n\t\t\t\ttoken = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\tbreak\n\t\t\tcase 0x1b:\n\t\t\t\tif (majorType == 7) {\n\t\t\t\t\tlet value = dataView.getFloat64(position)\n\t\t\t\t\tposition += 8\n\t\t\t\t\treturn value\n\t\t\t\t}\n\t\t\t\tif (majorType > 1) {\n\t\t\t\t\tif (dataView.getUint32(position) > 0)\n\t\t\t\t\t\tthrow new Error('JavaScript does not support arrays, maps, or strings with length over 4294967295')\n\t\t\t\t\ttoken = dataView.getUint32(position + 4)\n\t\t\t\t} else if (currentDecoder.int64AsNumber) {\n\t\t\t\t\ttoken = dataView.getUint32(position) * 0x100000000\n\t\t\t\t\ttoken += dataView.getUint32(position + 4)\n\t\t\t\t} else\n\t\t\t\t\ttoken = dataView.getBigUint64(position)\n\t\t\t\tposition += 8\n\t\t\t\tbreak\n\t\t\tcase 0x1f: \n\t\t\t\t// indefinite length\n\t\t\t\tswitch(majorType) {\n\t\t\t\t\tcase 2: // byte string\n\t\t\t\t\tcase 3: // text string\n\t\t\t\t\t\tthrow new Error('Indefinite length not supported for byte or text strings')\n\t\t\t\t\tcase 4: // array\n\t\t\t\t\t\tlet array = []\n\t\t\t\t\t\tlet value, i = 0\n\t\t\t\t\t\twhile ((value = read()) != STOP_CODE) {\n\t\t\t\t\t\t\tarray[i++] = value\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn majorType == 4 ? array : majorType == 3 ? array.join('') : Buffer.concat(array)\n\t\t\t\t\tcase 5: // map\n\t\t\t\t\t\tlet key\n\t\t\t\t\t\tif (currentDecoder.mapsAsObjects) {\n\t\t\t\t\t\t\tlet object = {}\n\t\t\t\t\t\t\tif (currentDecoder.keyMap) while((key = read()) != STOP_CODE) object[safeKey(currentDecoder.decodeKey(key))] = read()\n\t\t\t\t\t\t\telse while ((key = read()) != STOP_CODE) object[safeKey(key)] = read()\n\t\t\t\t\t\t\treturn object\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (restoreMapsAsObject) {\n\t\t\t\t\t\t\t\tcurrentDecoder.mapsAsObjects = true\n\t\t\t\t\t\t\t\trestoreMapsAsObject = false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet map = new Map()\n\t\t\t\t\t\t\tif (currentDecoder.keyMap) while((key = read()) != STOP_CODE) map.set(currentDecoder.decodeKey(key), read())\n\t\t\t\t\t\t\telse while ((key = read()) != STOP_CODE) map.set(key, read())\n\t\t\t\t\t\t\treturn map\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 7:\n\t\t\t\t\t\treturn STOP_CODE\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error('Invalid major type for indefinite length ' + majorType)\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unknown token ' + token)\n\t\t}\n\t}\n\tswitch (majorType) {\n\t\tcase 0: // positive int\n\t\t\treturn token\n\t\tcase 1: // negative int\n\t\t\treturn ~token\n\t\tcase 2: // buffer\n\t\t\treturn readBin(token)\n\t\tcase 3: // string\n\t\t\tif (srcStringEnd >= position) {\n\t\t\t\treturn srcString.slice(position - srcStringStart, (position += token) - srcStringStart)\n\t\t\t}\n\t\t\tif (srcStringEnd == 0 && srcEnd < 140 && token < 32) {\n\t\t\t\t// for small blocks, avoiding the overhead of the extract call is helpful\n\t\t\t\tlet string = token < 16 ? shortStringInJS(token) : longStringInJS(token)\n\t\t\t\tif (string != null)\n\t\t\t\t\treturn string\n\t\t\t}\n\t\t\treturn readFixedString(token)\n\t\tcase 4: // array\n\t\t\tlet array = new Array(token)\n\t\t  //if (currentDecoder.keyMap) for (let i = 0; i < token; i++) array[i] = currentDecoder.decodeKey(read())\t\n\t\t\t//else \n\t\t\tfor (let i = 0; i < token; i++) array[i] = read()\n\t\t\treturn array\n\t\tcase 5: // map\n\t\t\tif (currentDecoder.mapsAsObjects) {\n\t\t\t\tlet object = {}\n\t\t\t\tif (currentDecoder.keyMap) for (let i = 0; i < token; i++) object[safeKey(currentDecoder.decodeKey(read()))] = read()\n\t\t\t\telse for (let i = 0; i < token; i++) object[safeKey(read())] = read()\n\t\t\t\treturn object\n\t\t\t} else {\n\t\t\t\tif (restoreMapsAsObject) {\n\t\t\t\t\tcurrentDecoder.mapsAsObjects = true\n\t\t\t\t\trestoreMapsAsObject = false\n\t\t\t\t}\n\t\t\t\tlet map = new Map()\n\t\t\t\tif (currentDecoder.keyMap) for (let i = 0; i < token; i++) map.set(currentDecoder.decodeKey(read()),read())\n\t\t\t\telse for (let i = 0; i < token; i++) map.set(read(), read())\n\t\t\t\treturn map\n\t\t\t}\n\t\tcase 6: // extension\n\t\t\tif (token >= BUNDLED_STRINGS_ID) {\n\t\t\t\tlet structure = currentStructures[token & 0x1fff] // check record structures first\n\t\t\t\t// At some point we may provide an option for dynamic tag assignment with a range like token >= 8 && (token < 16 || (token > 0x80 && token < 0xc0) || (token > 0x130 && token < 0x4000))\n\t\t\t\tif (structure) {\n\t\t\t\t\tif (!structure.read) structure.read = createStructureReader(structure)\n\t\t\t\t\treturn structure.read()\n\t\t\t\t}\n\t\t\t\tif (token < 0x10000) {\n\t\t\t\t\tif (token == RECORD_INLINE_ID) { // we do a special check for this so that we can keep the\n\t\t\t\t\t\t// currentExtensions as densely stored array (v8 stores arrays densely under about 3000 elements)\n\t\t\t\t\t\tlet length = readJustLength()\n\t\t\t\t\t\tlet id = read()\n\t\t\t\t\t\tlet structure = read()\n\t\t\t\t\t\trecordDefinition(id, structure)\n\t\t\t\t\t\tlet object = {}\n\t\t\t\t\t\tif (currentDecoder.keyMap) for (let i = 2; i < length; i++) {\n\t\t\t\t\t\t\tlet key = currentDecoder.decodeKey(structure[i - 2])\n\t\t\t\t\t\t\tobject[safeKey(key)] = read()\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse for (let i = 2; i < length; i++) {\n\t\t\t\t\t\t\tlet key = structure[i - 2]\n\t\t\t\t\t\t\tobject[safeKey(key)] = read()\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn object\n\t\t\t\t\t}\n\t\t\t\t\telse if (token == RECORD_DEFINITIONS_ID) {\n\t\t\t\t\t\tlet length = readJustLength()\n\t\t\t\t\t\tlet id = read()\n\t\t\t\t\t\tfor (let i = 2; i < length; i++) {\n\t\t\t\t\t\t\trecordDefinition(id++, read())\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn read()\n\t\t\t\t\t} else if (token == BUNDLED_STRINGS_ID) {\n\t\t\t\t\t\treturn readBundleExt()\n\t\t\t\t\t}\n\t\t\t\t\tif (currentDecoder.getShared) {\n\t\t\t\t\t\tloadShared()\n\t\t\t\t\t\tstructure = currentStructures[token & 0x1fff]\n\t\t\t\t\t\tif (structure) {\n\t\t\t\t\t\t\tif (!structure.read)\n\t\t\t\t\t\t\t\tstructure.read = createStructureReader(structure)\n\t\t\t\t\t\t\treturn structure.read()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet extension = currentExtensions[token]\n\t\t\tif (extension) {\n\t\t\t\tif (extension.handlesRead)\n\t\t\t\t\treturn extension(read)\n\t\t\t\telse\n\t\t\t\t\treturn extension(read())\n\t\t\t} else {\n\t\t\t\tlet input = read()\n\t\t\t\tfor (let i = 0; i < currentExtensionRanges.length; i++) {\n\t\t\t\t\tlet value = currentExtensionRanges[i](token, input)\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\treturn value\n\t\t\t\t}\n\t\t\t\treturn new Tag(input, token)\n\t\t\t}\n\t\tcase 7: // fixed value\n\t\t\tswitch (token) {\n\t\t\t\tcase 0x14: return false\n\t\t\t\tcase 0x15: return true\n\t\t\t\tcase 0x16: return null\n\t\t\t\tcase 0x17: return; // undefined\n\t\t\t\tcase 0x1f:\n\t\t\t\tdefault:\n\t\t\t\t\tlet packedValue = (packedValues || getPackedValues())[token]\n\t\t\t\t\tif (packedValue !== undefined)\n\t\t\t\t\t\treturn packedValue\n\t\t\t\t\tthrow new Error('Unknown token ' + token)\n\t\t\t}\n\t\tdefault: // negative int\n\t\t\tif (isNaN(token)) {\n\t\t\t\tlet error = new Error('Unexpected end of CBOR data')\n\t\t\t\terror.incomplete = true\n\t\t\t\tthrow error\n\t\t\t}\n\t\t\tthrow new Error('Unknown CBOR token ' + token)\n\t}\n}\nconst validName = /^[a-zA-Z_$][a-zA-Z\\d_$]*$/\nfunction createStructureReader(structure) {\n\tfunction readObject() {\n\t\t// get the array size from the header\n\t\tlet length = src[position++]\n\t\t//let majorType = token >> 5\n\t\tlength = length & 0x1f\n\t\tif (length > 0x17) {\n\t\t\tswitch (length) {\n\t\t\t\tcase 0x18:\n\t\t\t\t\tlength = src[position++]\n\t\t\t\t\tbreak\n\t\t\t\tcase 0x19:\n\t\t\t\t\tlength = dataView.getUint16(position)\n\t\t\t\t\tposition += 2\n\t\t\t\t\tbreak\n\t\t\t\tcase 0x1a:\n\t\t\t\t\tlength = dataView.getUint32(position)\n\t\t\t\t\tposition += 4\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Expected array header, but got ' + src[position - 1])\n\t\t\t}\n\t\t}\n\t\t// This initial function is quick to instantiate, but runs slower. After several iterations pay the cost to build the faster function\n\t\tlet compiledReader = this.compiledReader // first look to see if we have the fast compiled function\n\t\twhile(compiledReader) {\n\t\t\t// we have a fast compiled object literal reader\n\t\t\tif (compiledReader.propertyCount === length)\n\t\t\t\treturn compiledReader(read) // with the right length, so we use it\n\t\t\tcompiledReader = compiledReader.next // see if there is another reader with the right length\n\t\t}\n\t\tif (this.slowReads++ >= inlineObjectReadThreshold) { // create a fast compiled reader\n\t\t\tlet array = this.length == length ? this : this.slice(0, length)\n\t\t\tcompiledReader = currentDecoder.keyMap \n\t\t\t? new Function('r', 'return {' + array.map(k => currentDecoder.decodeKey(k)).map(k => validName.test(k) ? safeKey(k) + ':r()' : ('[' + JSON.stringify(k) + ']:r()')).join(',') + '}')\n\t\t\t: new Function('r', 'return {' + array.map(key => validName.test(key) ? safeKey(key) + ':r()' : ('[' + JSON.stringify(key) + ']:r()')).join(',') + '}')\n\t\t\tif (this.compiledReader)\n\t\t\t\tcompiledReader.next = this.compiledReader // if there is an existing one, we store multiple readers as a linked list because it is usually pretty rare to have multiple readers (of different length) for the same structure\n\t\t\tcompiledReader.propertyCount = length\n\t\t\tthis.compiledReader = compiledReader\n\t\t\treturn compiledReader(read)\n\t\t}\n\t\tlet object = {}\n\t\tif (currentDecoder.keyMap) for (let i = 0; i < length; i++) object[safeKey(currentDecoder.decodeKey(this[i]))] = read()\n\t\telse for (let i = 0; i < length; i++) {\n\t\t\tobject[safeKey(this[i])] = read();\n\t\t}\n\t\treturn object\n\t}\n\tstructure.slowReads = 0\n\treturn readObject\n}\n\nfunction safeKey(key) {\n\treturn key === '__proto__' ? '__proto_' : key\n}\n\nlet readFixedString = readStringJS\nlet readString8 = readStringJS\nlet readString16 = readStringJS\nlet readString32 = readStringJS\n\nexport let isNativeAccelerationEnabled = false\nexport function setExtractor(extractStrings) {\n\tisNativeAccelerationEnabled = true\n\treadFixedString = readString(1)\n\treadString8 = readString(2)\n\treadString16 = readString(3)\n\treadString32 = readString(5)\n\tfunction readString(headerLength) {\n\t\treturn function readString(length) {\n\t\t\tlet string = strings[stringPosition++]\n\t\t\tif (string == null) {\n\t\t\t\tif (bundledStrings)\n\t\t\t\t\treturn readStringJS(length)\n\t\t\t\tlet extraction = extractStrings(position, srcEnd, length, src)\n\t\t\t\tif (typeof extraction == 'string') {\n\t\t\t\t\tstring = extraction\n\t\t\t\t\tstrings = EMPTY_ARRAY\n\t\t\t\t} else {\n\t\t\t\t\tstrings = extraction\n\t\t\t\t\tstringPosition = 1\n\t\t\t\t\tsrcStringEnd = 1 // even if a utf-8 string was decoded, must indicate we are in the midst of extracted strings and can't skip strings\n\t\t\t\t\tstring = strings[0]\n\t\t\t\t\tif (string === undefined)\n\t\t\t\t\t\tthrow new Error('Unexpected end of buffer')\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet srcStringLength = string.length\n\t\t\tif (srcStringLength <= length) {\n\t\t\t\tposition += length\n\t\t\t\treturn string\n\t\t\t}\n\t\t\tsrcString = string\n\t\t\tsrcStringStart = position\n\t\t\tsrcStringEnd = position + srcStringLength\n\t\t\tposition += length\n\t\t\treturn string.slice(0, length) // we know we just want the beginning\n\t\t}\n\t}\n}\nfunction readStringJS(length) {\n\tlet result\n\tif (length < 16) {\n\t\tif (result = shortStringInJS(length))\n\t\t\treturn result\n\t}\n\tif (length > 64 && decoder)\n\t\treturn decoder.decode(src.subarray(position, position += length))\n\tconst end = position + length\n\tconst units = []\n\tresult = ''\n\twhile (position < end) {\n\t\tconst byte1 = src[position++]\n\t\tif ((byte1 & 0x80) === 0) {\n\t\t\t// 1 byte\n\t\t\tunits.push(byte1)\n\t\t} else if ((byte1 & 0xe0) === 0xc0) {\n\t\t\t// 2 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tunits.push(((byte1 & 0x1f) << 6) | byte2)\n\t\t} else if ((byte1 & 0xf0) === 0xe0) {\n\t\t\t// 3 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tconst byte3 = src[position++] & 0x3f\n\t\t\tunits.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3)\n\t\t} else if ((byte1 & 0xf8) === 0xf0) {\n\t\t\t// 4 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tconst byte3 = src[position++] & 0x3f\n\t\t\tconst byte4 = src[position++] & 0x3f\n\t\t\tlet unit = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4\n\t\t\tif (unit > 0xffff) {\n\t\t\t\tunit -= 0x10000\n\t\t\t\tunits.push(((unit >>> 10) & 0x3ff) | 0xd800)\n\t\t\t\tunit = 0xdc00 | (unit & 0x3ff)\n\t\t\t}\n\t\t\tunits.push(unit)\n\t\t} else {\n\t\t\tunits.push(byte1)\n\t\t}\n\n\t\tif (units.length >= 0x1000) {\n\t\t\tresult += fromCharCode.apply(String, units)\n\t\t\tunits.length = 0\n\t\t}\n\t}\n\n\tif (units.length > 0) {\n\t\tresult += fromCharCode.apply(String, units)\n\t}\n\n\treturn result\n}\nlet fromCharCode = String.fromCharCode\nfunction longStringInJS(length) {\n\tlet start = position\n\tlet bytes = new Array(length)\n\tfor (let i = 0; i < length; i++) {\n\t\tconst byte = src[position++];\n\t\tif ((byte & 0x80) > 0) {\n\t\t\tposition = start\n    \t\t\treturn\n    \t\t}\n    \t\tbytes[i] = byte\n    \t}\n    \treturn fromCharCode.apply(String, bytes)\n}\nfunction shortStringInJS(length) {\n\tif (length < 4) {\n\t\tif (length < 2) {\n\t\t\tif (length === 0)\n\t\t\t\treturn ''\n\t\t\telse {\n\t\t\t\tlet a = src[position++]\n\t\t\t\tif ((a & 0x80) > 1) {\n\t\t\t\t\tposition -= 1\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a)\n\t\t\t}\n\t\t} else {\n\t\t\tlet a = src[position++]\n\t\t\tlet b = src[position++]\n\t\t\tif ((a & 0x80) > 0 || (b & 0x80) > 0) {\n\t\t\t\tposition -= 2\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 3)\n\t\t\t\treturn fromCharCode(a, b)\n\t\t\tlet c = src[position++]\n\t\t\tif ((c & 0x80) > 0) {\n\t\t\t\tposition -= 3\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn fromCharCode(a, b, c)\n\t\t}\n\t} else {\n\t\tlet a = src[position++]\n\t\tlet b = src[position++]\n\t\tlet c = src[position++]\n\t\tlet d = src[position++]\n\t\tif ((a & 0x80) > 0 || (b & 0x80) > 0 || (c & 0x80) > 0 || (d & 0x80) > 0) {\n\t\t\tposition -= 4\n\t\t\treturn\n\t\t}\n\t\tif (length < 6) {\n\t\t\tif (length === 4)\n\t\t\t\treturn fromCharCode(a, b, c, d)\n\t\t\telse {\n\t\t\t\tlet e = src[position++]\n\t\t\t\tif ((e & 0x80) > 0) {\n\t\t\t\t\tposition -= 5\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a, b, c, d, e)\n\t\t\t}\n\t\t} else if (length < 8) {\n\t\t\tlet e = src[position++]\n\t\t\tlet f = src[position++]\n\t\t\tif ((e & 0x80) > 0 || (f & 0x80) > 0) {\n\t\t\t\tposition -= 6\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 7)\n\t\t\t\treturn fromCharCode(a, b, c, d, e, f)\n\t\t\tlet g = src[position++]\n\t\t\tif ((g & 0x80) > 0) {\n\t\t\t\tposition -= 7\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn fromCharCode(a, b, c, d, e, f, g)\n\t\t} else {\n\t\t\tlet e = src[position++]\n\t\t\tlet f = src[position++]\n\t\t\tlet g = src[position++]\n\t\t\tlet h = src[position++]\n\t\t\tif ((e & 0x80) > 0 || (f & 0x80) > 0 || (g & 0x80) > 0 || (h & 0x80) > 0) {\n\t\t\t\tposition -= 8\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 10) {\n\t\t\t\tif (length === 8)\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h)\n\t\t\t\telse {\n\t\t\t\t\tlet i = src[position++]\n\t\t\t\t\tif ((i & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 9\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i)\n\t\t\t\t}\n\t\t\t} else if (length < 12) {\n\t\t\t\tlet i = src[position++]\n\t\t\t\tlet j = src[position++]\n\t\t\t\tif ((i & 0x80) > 0 || (j & 0x80) > 0) {\n\t\t\t\t\tposition -= 10\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (length < 11)\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j)\n\t\t\t\tlet k = src[position++]\n\t\t\t\tif ((k & 0x80) > 0) {\n\t\t\t\t\tposition -= 11\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k)\n\t\t\t} else {\n\t\t\t\tlet i = src[position++]\n\t\t\t\tlet j = src[position++]\n\t\t\t\tlet k = src[position++]\n\t\t\t\tlet l = src[position++]\n\t\t\t\tif ((i & 0x80) > 0 || (j & 0x80) > 0 || (k & 0x80) > 0 || (l & 0x80) > 0) {\n\t\t\t\t\tposition -= 12\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (length < 14) {\n\t\t\t\t\tif (length === 12)\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l)\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet m = src[position++]\n\t\t\t\t\t\tif ((m & 0x80) > 0) {\n\t\t\t\t\t\t\tposition -= 13\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet m = src[position++]\n\t\t\t\t\tlet n = src[position++]\n\t\t\t\t\tif ((m & 0x80) > 0 || (n & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 14\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif (length < 15)\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n)\n\t\t\t\t\tlet o = src[position++]\n\t\t\t\t\tif ((o & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 15\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction readBin(length) {\n\treturn currentDecoder.copyBuffers ?\n\t\t// specifically use the copying slice (not the node one)\n\t\tUint8Array.prototype.slice.call(src, position, position += length) :\n\t\tsrc.subarray(position, position += length)\n}\nfunction readExt(length) {\n\tlet type = src[position++]\n\tif (currentExtensions[type]) {\n\t\treturn currentExtensions[type](src.subarray(position, position += length))\n\t}\n\telse\n\t\tthrow new Error('Unknown extension type ' + type)\n}\nlet f32Array = new Float32Array(1)\nlet u8Array = new Uint8Array(f32Array.buffer, 0, 4)\nfunction getFloat16() {\n\tlet byte0 = src[position++]\n\tlet byte1 = src[position++]\n\tlet exponent = (byte0 & 0x7f) >> 2;\n\tif (exponent === 0x1f) { // specials\n\t\tif (byte1 || (byte0 & 3))\n\t\t\treturn NaN;\n\t\treturn (byte0 & 0x80) ? -Infinity : Infinity;\n\t}\n\tif (exponent === 0) { // sub-normals\n\t\t// significand with 10 fractional bits and divided by 2^14\n\t\tlet abs = (((byte0 & 3) << 8) | byte1) / (1 << 24)\n\t\treturn (byte0 & 0x80) ? -abs : abs\n\t}\n\n\tu8Array[3] = (byte0 & 0x80) | // sign bit\n\t\t((exponent >> 1) + 56) // 4 of 5 of the exponent bits, re-offset-ed\n\tu8Array[2] = ((byte0 & 7) << 5) | // last exponent bit and first two mantissa bits\n\t\t(byte1 >> 3) // next 5 bits of mantissa\n\tu8Array[1] = byte1 << 5; // last three bits of mantissa\n\tu8Array[0] = 0;\n\treturn f32Array[0];\n}\n\nlet keyCache = new Array(4096)\nfunction readKey() {\n\tlet length = src[position++]\n\tif (length >= 0x60 && length < 0x78) {\n\t\t// fixstr, potentially use key cache\n\t\tlength = length - 0x60\n\t\tif (srcStringEnd >= position) // if it has been extracted, must use it (and faster anyway)\n\t\t\treturn srcString.slice(position - srcStringStart, (position += length) - srcStringStart)\n\t\telse if (!(srcStringEnd == 0 && srcEnd < 180))\n\t\t\treturn readFixedString(length)\n\t} else { // not cacheable, go back and do a standard read\n\t\tposition--\n\t\treturn read()\n\t}\n\tlet key = ((length << 5) ^ (length > 1 ? dataView.getUint16(position) : length > 0 ? src[position] : 0)) & 0xfff\n\tlet entry = keyCache[key]\n\tlet checkPosition = position\n\tlet end = position + length - 3\n\tlet chunk\n\tlet i = 0\n\tif (entry && entry.bytes == length) {\n\t\twhile (checkPosition < end) {\n\t\t\tchunk = dataView.getUint32(checkPosition)\n\t\t\tif (chunk != entry[i++]) {\n\t\t\t\tcheckPosition = 0x70000000\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcheckPosition += 4\n\t\t}\n\t\tend += 3\n\t\twhile (checkPosition < end) {\n\t\t\tchunk = src[checkPosition++]\n\t\t\tif (chunk != entry[i++]) {\n\t\t\t\tcheckPosition = 0x70000000\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif (checkPosition === end) {\n\t\t\tposition = checkPosition\n\t\t\treturn entry.string\n\t\t}\n\t\tend -= 3\n\t\tcheckPosition = position\n\t}\n\tentry = []\n\tkeyCache[key] = entry\n\tentry.bytes = length\n\twhile (checkPosition < end) {\n\t\tchunk = dataView.getUint32(checkPosition)\n\t\tentry.push(chunk)\n\t\tcheckPosition += 4\n\t}\n\tend += 3\n\twhile (checkPosition < end) {\n\t\tchunk = src[checkPosition++]\n\t\tentry.push(chunk)\n\t}\n\t// for small blocks, avoiding the overhead of the extract call is helpful\n\tlet string = length < 16 ? shortStringInJS(length) : longStringInJS(length)\n\tif (string != null)\n\t\treturn entry.string = string\n\treturn entry.string = readFixedString(length)\n}\n\nexport class Tag {\n\tconstructor(value, tag) {\n\t\tthis.value = value\n\t\tthis.tag = tag\n\t}\n}\n\ncurrentExtensions[0] = (dateString) => {\n\t// string date extension\n\treturn new Date(dateString)\n}\n\ncurrentExtensions[1] = (epochSec) => {\n\t// numeric date extension\n\treturn new Date(Math.round(epochSec * 1000))\n}\n\ncurrentExtensions[2] = (buffer) => {\n\t// bigint extension\n\tlet value = BigInt(0)\n\tfor (let i = 0, l = buffer.byteLength; i < l; i++) {\n\t\tvalue = BigInt(buffer[i]) + value << BigInt(8)\n\t}\n\treturn value\n}\n\ncurrentExtensions[3] = (buffer) => {\n\t// negative bigint extension\n\treturn BigInt(-1) - currentExtensions[2](buffer)\n}\ncurrentExtensions[4] = (fraction) => {\n\t// best to reparse to maintain accuracy\n\treturn +(fraction[1] + 'e' + fraction[0])\n}\n\ncurrentExtensions[5] = (fraction) => {\n\t// probably not sufficiently accurate\n\treturn fraction[1] * Math.exp(fraction[0] * Math.log(2))\n}\n\n// the registration of the record definition extension\nconst recordDefinition = (id, structure) => {\n\tid = id - 0xe000\n\tlet existingStructure = currentStructures[id]\n\tif (existingStructure && existingStructure.isShared) {\n\t\t(currentStructures.restoreStructures || (currentStructures.restoreStructures = []))[id] = existingStructure\n\t}\n\tcurrentStructures[id] = structure\n\n\tstructure.read = createStructureReader(structure)\n}\ncurrentExtensions[LEGACY_RECORD_INLINE_ID] = (data) => {\n\tlet length = data.length\n\tlet structure = data[1]\n\trecordDefinition(data[0], structure)\n\tlet object = {}\n\tfor (let i = 2; i < length; i++) {\n\t\tlet key = structure[i - 2]\n\t\tobject[safeKey(key)] = data[i]\n\t}\n\treturn object\n}\ncurrentExtensions[14] = (value) => {\n\tif (bundledStrings)\n\t\treturn bundledStrings[0].slice(bundledStrings.position0, bundledStrings.position0 += value)\n\treturn new Tag(value, 14)\n}\ncurrentExtensions[15] = (value) => {\n\tif (bundledStrings)\n\t\treturn bundledStrings[1].slice(bundledStrings.position1, bundledStrings.position1 += value)\n\treturn new Tag(value, 15)\n}\nlet glbl = { Error, RegExp }\ncurrentExtensions[27] = (data) => { // http://cbor.schmorp.de/generic-object\n\treturn (glbl[data[0]] || Error)(data[1], data[2])\n}\nconst packedTable = (read) => {\n\tif (src[position++] != 0x84)\n\t\tthrow new Error('Packed values structure must be followed by a 4 element array')\n\tlet newPackedValues = read() // packed values\n\tpackedValues = packedValues ? newPackedValues.concat(packedValues.slice(newPackedValues.length)) : newPackedValues\n\tpackedValues.prefixes = read()\n\tpackedValues.suffixes = read()\n\treturn read() // read the rump\n}\npackedTable.handlesRead = true\ncurrentExtensions[51] = packedTable\n\ncurrentExtensions[PACKED_REFERENCE_TAG_ID] = (data) => { // packed reference\n\tif (!packedValues) {\n\t\tif (currentDecoder.getShared)\n\t\t\tloadShared()\n\t\telse\n\t\t\treturn new Tag(data, PACKED_REFERENCE_TAG_ID)\n\t}\n\tif (typeof data == 'number')\n\t\treturn packedValues[16 + (data >= 0 ? 2 * data : (-2 * data - 1))]\n\tthrow new Error('No support for non-integer packed references yet')\n}\n\n// The following code is an incomplete implementation of http://cbor.schmorp.de/stringref\n// the real thing would need to implemennt more logic to populate the stringRefs table and\n// maintain a stack of stringRef \"namespaces\".\n//\n// currentExtensions[25] = (id) => {\n// \treturn stringRefs[id]\n// }\n// currentExtensions[256] = (read) => {\n// \tstringRefs = []\n// \ttry {\n// \t\treturn read()\n// \t} finally {\n// \t\tstringRefs = null\n// \t}\n// }\n// currentExtensions[256].handlesRead = true\n\ncurrentExtensions[28] = (read) => { \n\t// shareable http://cbor.schmorp.de/value-sharing (for structured clones)\n\tif (!referenceMap) {\n\t\treferenceMap = new Map()\n\t\treferenceMap.id = 0\n\t}\n\tlet id = referenceMap.id++\n\tlet token = src[position]\n\tlet target\n\t// TODO: handle Maps, Sets, and other types that can cycle; this is complicated, because you potentially need to read\n\t// ahead past references to record structure definitions\n\tif ((token >> 5) == 4)\n\t\ttarget = []\n\telse\n\t\ttarget = {}\n\n\tlet refEntry = { target } // a placeholder object\n\treferenceMap.set(id, refEntry)\n\tlet targetProperties = read() // read the next value as the target object to id\n\tif (refEntry.used) // there is a cycle, so we have to assign properties to original target\n\t\treturn Object.assign(target, targetProperties)\n\trefEntry.target = targetProperties // the placeholder wasn't used, replace with the deserialized one\n\treturn targetProperties // no cycle, can just use the returned read object\n}\ncurrentExtensions[28].handlesRead = true\n\ncurrentExtensions[29] = (id) => {\n\t// sharedref http://cbor.schmorp.de/value-sharing (for structured clones)\n\tlet refEntry = referenceMap.get(id)\n\trefEntry.used = true\n\treturn refEntry.target\n}\n\ncurrentExtensions[258] = (array) => new Set(array); // https://github.com/input-output-hk/cbor-sets-spec/blob/master/CBOR_SETS.md\n(currentExtensions[259] = (read) => {\n\t// https://github.com/shanewholloway/js-cbor-codec/blob/master/docs/CBOR-259-spec\n\t// for decoding as a standard Map\n\tif (currentDecoder.mapsAsObjects) {\n\t\tcurrentDecoder.mapsAsObjects = false\n\t\trestoreMapsAsObject = true\n\t}\n\treturn read()\n}).handlesRead = true\nfunction combine(a, b) {\n\tif (typeof a === 'string')\n\t\treturn a + b\n\tif (a instanceof Array)\n\t\treturn a.concat(b)\n\treturn Object.assign({}, a, b)\n}\nfunction getPackedValues() {\n\tif (!packedValues) {\n\t\tif (currentDecoder.getShared)\n\t\t\tloadShared()\n\t\telse\n\t\t\tthrow new Error('No packed values available')\n\t}\n\treturn packedValues\n}\nconst SHARED_DATA_TAG_ID = 0x53687264 // ascii 'Shrd'\ncurrentExtensionRanges.push((tag, input) => {\n\tif (tag >= 225 && tag <= 255)\n\t\treturn combine(getPackedValues().prefixes[tag - 224], input)\n\tif (tag >= 28704 && tag <= 32767)\n\t\treturn combine(getPackedValues().prefixes[tag - 28672], input)\n\tif (tag >= 1879052288 && tag <= 2147483647)\n\t\treturn combine(getPackedValues().prefixes[tag - 1879048192], input)\n\tif (tag >= 216 && tag <= 223)\n\t\treturn combine(input, getPackedValues().suffixes[tag - 216])\n\tif (tag >= 27647 && tag <= 28671)\n\t\treturn combine(input, getPackedValues().suffixes[tag - 27639])\n\tif (tag >= 1811940352 && tag <= 1879048191)\n\t\treturn combine(input, getPackedValues().suffixes[tag - 1811939328])\n\tif (tag == SHARED_DATA_TAG_ID) {// we do a special check for this so that we can keep the currentExtensions as densely stored array (v8 stores arrays densely under about 3000 elements)\n\t\treturn {\n\t\t\tpackedValues: packedValues,\n\t\t\tstructures: currentStructures.slice(0),\n\t\t\tversion: input,\n\t\t}\n\t}\n\tif (tag == 55799) // self-descriptive CBOR tag, just return input value\n\t\treturn input\n})\n\nconst isLittleEndianMachine = new Uint8Array(new Uint16Array([1]).buffer)[0] == 1\nexport const typedArrays = [Uint8Array, Uint8ClampedArray, Uint16Array, Uint32Array,\n\ttypeof BigUint64Array == 'undefined' ? { name:'BigUint64Array' } : BigUint64Array, Int8Array, Int16Array, Int32Array,\n\ttypeof BigInt64Array == 'undefined' ? { name:'BigInt64Array' } : BigInt64Array, Float32Array, Float64Array]\nconst typedArrayTags = [64, 68, 69, 70, 71, 72, 77, 78, 79, 85, 86]\nfor (let i = 0; i < typedArrays.length; i++) {\n\tregisterTypedArray(typedArrays[i], typedArrayTags[i])\n}\nfunction registerTypedArray(TypedArray, tag) {\n\tlet dvMethod = 'get' + TypedArray.name.slice(0, -5)\n\tlet bytesPerElement;\n\tif (typeof TypedArray === 'function')\n\t\tbytesPerElement = TypedArray.BYTES_PER_ELEMENT;\n\telse\n\t\tTypedArray = null;\n\tfor (let littleEndian = 0; littleEndian < 2; littleEndian++) {\n\t\tif (!littleEndian && bytesPerElement == 1)\n\t\t\tcontinue\n\t\tlet sizeShift = bytesPerElement == 2 ? 1 : bytesPerElement == 4 ? 2 : 3\n\t\tcurrentExtensions[littleEndian ? tag : (tag - 4)] = (bytesPerElement == 1 || littleEndian == isLittleEndianMachine) ? (buffer) => {\n\t\t\tif (!TypedArray)\n\t\t\t\tthrow new Error('Could not find typed array for code ' + tag)\n\t\t\t// we have to always slice/copy here to get a new ArrayBuffer that is word/byte aligned\n\t\t\treturn new TypedArray(Uint8Array.prototype.slice.call(buffer, 0).buffer)\n\t\t} : buffer => {\n\t\t\tif (!TypedArray)\n\t\t\t\tthrow new Error('Could not find typed array for code ' + tag)\n\t\t\tlet dv = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n\t\t\tlet elements = buffer.length >> sizeShift\n\t\t\tlet ta = new TypedArray(elements)\n\t\t\tlet method = dv[dvMethod]\n\t\t\tfor (let i = 0; i < elements; i++) {\n\t\t\t\tta[i] = method.call(dv, i << sizeShift, littleEndian)\n\t\t\t}\n\t\t\treturn ta\n\t\t}\n\t}\n}\n\nfunction readBundleExt() {\n\tlet length = readJustLength()\n\tlet bundlePosition = position + read()\n\tfor (let i = 2; i < length; i++) {\n\t\t// skip past bundles that were already read\n\t\tlet bundleLength = readJustLength() // this will increment position, so must add to position afterwards\n\t\tposition += bundleLength\n\t}\n\tlet dataPosition = position\n\tposition = bundlePosition\n\tbundledStrings = [readStringJS(readJustLength()), readStringJS(readJustLength())]\n\tbundledStrings.position0 = 0\n\tbundledStrings.position1 = 0\n\tbundledStrings.postBundlePosition = position\n\tposition = dataPosition\n\treturn read()\n}\n\nfunction readJustLength() {\n\tlet token = src[position++] & 0x1f\n\tif (token > 0x17) {\n\t\tswitch (token) {\n\t\t\tcase 0x18:\n\t\t\t\ttoken = src[position++]\n\t\t\t\tbreak\n\t\t\tcase 0x19:\n\t\t\t\ttoken = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\tbreak\n\t\t\tcase 0x1a:\n\t\t\t\ttoken = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\tbreak\n\t\t}\n\t}\n\treturn token\n}\n\nfunction loadShared() {\n\tif (currentDecoder.getShared) {\n\t\tlet sharedData = saveState(() => {\n\t\t\t// save the state in case getShared modifies our buffer\n\t\t\tsrc = null\n\t\t\treturn currentDecoder.getShared()\n\t\t}) || {}\n\t\tlet updatedStructures = sharedData.structures || []\n\t\tcurrentDecoder.sharedVersion = sharedData.version\n\t\tpackedValues = currentDecoder.sharedValues = sharedData.packedValues\n\t\tif (currentStructures === true)\n\t\t\tcurrentDecoder.structures = currentStructures = updatedStructures\n\t\telse\n\t\t\tcurrentStructures.splice.apply(currentStructures, [0, updatedStructures.length].concat(updatedStructures))\n\t}\n}\n\nfunction saveState(callback) {\n\tlet savedSrcEnd = srcEnd\n\tlet savedPosition = position\n\tlet savedStringPosition = stringPosition\n\tlet savedSrcStringStart = srcStringStart\n\tlet savedSrcStringEnd = srcStringEnd\n\tlet savedSrcString = srcString\n\tlet savedStrings = strings\n\tlet savedReferenceMap = referenceMap\n\tlet savedBundledStrings = bundledStrings\n\n\t// TODO: We may need to revisit this if we do more external calls to user code (since it could be slow)\n\tlet savedSrc = new Uint8Array(src.slice(0, srcEnd)) // we copy the data in case it changes while external data is processed\n\tlet savedStructures = currentStructures\n\tlet savedDecoder = currentDecoder\n\tlet savedSequentialMode = sequentialMode\n\tlet value = callback()\n\tsrcEnd = savedSrcEnd\n\tposition = savedPosition\n\tstringPosition = savedStringPosition\n\tsrcStringStart = savedSrcStringStart\n\tsrcStringEnd = savedSrcStringEnd\n\tsrcString = savedSrcString\n\tstrings = savedStrings\n\treferenceMap = savedReferenceMap\n\tbundledStrings = savedBundledStrings\n\tsrc = savedSrc\n\tsequentialMode = savedSequentialMode\n\tcurrentStructures = savedStructures\n\tcurrentDecoder = savedDecoder\n\tdataView = new DataView(src.buffer, src.byteOffset, src.byteLength)\n\treturn value\n}\nexport function clearSource() {\n\tsrc = null\n\treferenceMap = null\n\tcurrentStructures = null\n}\n\nexport function addExtension(extension) {\n\tcurrentExtensions[extension.tag] = extension.decode\n}\n\nexport const mult10 = new Array(147) // this is a table matching binary exponents to the multiplier to determine significant digit rounding\nfor (let i = 0; i < 256; i++) {\n\tmult10[i] = +('1e' + Math.floor(45.15 - i * 0.30103))\n}\nlet defaultDecoder = new Decoder({ useRecords: false })\nexport const decode = defaultDecoder.decode\nexport const decodeMultiple = defaultDecoder.decodeMultiple\nexport const FLOAT32_OPTIONS = {\n\tNEVER: 0,\n\tALWAYS: 1,\n\tDECIMAL_ROUND: 3,\n\tDECIMAL_FIT: 4\n}\nexport function roundFloat32(float32Number) {\n\tf32Array[0] = float32Number\n\tlet multiplier = mult10[((u8Array[3] & 0x7f) << 1) | (u8Array[2] >> 7)]\n\treturn ((multiplier * float32Number + (float32Number > 0 ? 0.5 : -0.5)) >> 0) / multiplier\n}\n","\"use strict\";","import { Encoder } from './encode.js'\nimport { Decoder } from './decode.js'\n\n/**\n * Given an Iterable first argument, returns an Iterable where each value is encoded as a Buffer\n * If the argument is only Async Iterable, the return value will be an Async Iterable.\n * @param {Iterable|Iterator|AsyncIterable|AsyncIterator} objectIterator - iterable source, like a Readable object stream, an array, Set, or custom object\n * @param {options} [options] - cbor-x Encoder options\n * @returns {IterableIterator|Promise.<AsyncIterableIterator>}\n */\nexport function encodeIter (objectIterator, options = {}) {\n  if (!objectIterator || typeof objectIterator !== 'object') {\n    throw new Error('first argument must be an Iterable, Async Iterable, or a Promise for an Async Iterable')\n  } else if (typeof objectIterator[Symbol.iterator] === 'function') {\n    return encodeIterSync(objectIterator, options)\n  } else if (typeof objectIterator.then === 'function' || typeof objectIterator[Symbol.asyncIterator] === 'function') {\n    return encodeIterAsync(objectIterator, options)\n  } else {\n    throw new Error('first argument must be an Iterable, Async Iterable, Iterator, Async Iterator, or a Promise')\n  }\n}\n\nfunction * encodeIterSync (objectIterator, options) {\n  const encoder = new Encoder(options)\n  for (const value of objectIterator) {\n    yield encoder.encode(value)\n  }\n}\n\nasync function * encodeIterAsync (objectIterator, options) {\n  const encoder = new Encoder(options)\n  for await (const value of objectIterator) {\n    yield encoder.encode(value)\n  }\n}\n\n/**\n * Given an Iterable/Iterator input which yields buffers, returns an IterableIterator which yields sync decoded objects\n * Or, given an Async Iterable/Iterator which yields promises resolving in buffers, returns an AsyncIterableIterator.\n * @param {Iterable|Iterator|AsyncIterable|AsyncIterableIterator} bufferIterator\n * @param {object} [options] - Decoder options\n * @returns {IterableIterator|Promise.<AsyncIterableIterator}\n */\nexport function decodeIter (bufferIterator, options = {}) {\n  if (!bufferIterator || typeof bufferIterator !== 'object') {\n    throw new Error('first argument must be an Iterable, Async Iterable, Iterator, Async Iterator, or a promise')\n  }\n\n  const decoder = new Decoder(options)\n  let incomplete\n  const parser = (chunk) => {\n    let yields\n    // if there's incomplete data from previous chunk, concatinate and try again\n    if (incomplete) {\n      chunk = Buffer.concat([incomplete, chunk])\n      incomplete = undefined\n    }\n\n    try {\n      yields = decoder.decodeMultiple(chunk)\n    } catch (err) {\n      if (err.incomplete) {\n        incomplete = chunk.slice(err.lastPosition)\n        yields = err.values\n      } else {\n        throw err\n      }\n    }\n    return yields\n  }\n\n  if (typeof bufferIterator[Symbol.iterator] === 'function') {\n    return (function * iter () {\n      for (const value of bufferIterator) {\n        yield * parser(value)\n      }\n    })()\n  } else if (typeof bufferIterator[Symbol.asyncIterator] === 'function') {\n    return (async function * iter () {\n      for await (const value of bufferIterator) {\n        yield * parser(value)\n      }\n    })()\n  }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Decoder } from \"./Decoder.mjs\";\nimport { ensureAsyncIterable } from \"./utils/stream.mjs\";\nimport { defaultDecodeOptions } from \"./decode.mjs\";\n/**\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decodeAsync(streamLike, options) {\n    if (options === void 0) { options = defaultDecodeOptions; }\n    return __awaiter(this, void 0, void 0, function () {\n        var stream, decoder;\n        return __generator(this, function (_a) {\n            stream = ensureAsyncIterable(streamLike);\n            decoder = new Decoder(options.extensionCodec, options.context, options.maxStrLength, options.maxBinLength, options.maxArrayLength, options.maxMapLength, options.maxExtLength);\n            return [2 /*return*/, decoder.decodeAsync(stream)];\n        });\n    });\n}\n/**\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decodeArrayStream(streamLike, options) {\n    if (options === void 0) { options = defaultDecodeOptions; }\n    var stream = ensureAsyncIterable(streamLike);\n    var decoder = new Decoder(options.extensionCodec, options.context, options.maxStrLength, options.maxBinLength, options.maxArrayLength, options.maxMapLength, options.maxExtLength);\n    return decoder.decodeArrayStream(stream);\n}\n/**\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decodeMultiStream(streamLike, options) {\n    if (options === void 0) { options = defaultDecodeOptions; }\n    var stream = ensureAsyncIterable(streamLike);\n    var decoder = new Decoder(options.extensionCodec, options.context, options.maxStrLength, options.maxBinLength, options.maxArrayLength, options.maxMapLength, options.maxExtLength);\n    return decoder.decodeStream(stream);\n}\n/**\n * @deprecated Use {@link decodeMultiStream()} instead.\n */\nexport function decodeStream(streamLike, options) {\n    if (options === void 0) { options = defaultDecodeOptions; }\n    return decodeMultiStream(streamLike, options);\n}\n//# sourceMappingURL=decodeAsync.mjs.map","import { Decoder } from \"./Decoder\";\nimport { ensureAsyncIterable } from \"./utils/stream\";\nimport { defaultDecodeOptions } from \"./decode\";\nimport type { ReadableStreamLike } from \"./utils/stream\";\nimport type { DecodeOptions } from \"./decode\";\nimport type { SplitUndefined } from \"./context\";\n\n/**\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\n export async function decodeAsync<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number> | BufferSource>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): Promise<unknown> {\n  const stream = ensureAsyncIterable(streamLike);\n\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n  return decoder.decodeAsync(stream);\n}\n\n/**\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\n export function decodeArrayStream<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number> | BufferSource>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): AsyncGenerator<unknown, void, unknown> {\n  const stream = ensureAsyncIterable(streamLike);\n\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n\n  return decoder.decodeArrayStream(stream);\n}\n\n/**\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decodeMultiStream<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number> | BufferSource>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): AsyncGenerator<unknown, void, unknown> {\n  const stream = ensureAsyncIterable(streamLike);\n\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n\n  return decoder.decodeStream(stream);\n}\n\n/**\n * @deprecated Use {@link decodeMultiStream()} instead.\n */\nexport function decodeStream<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number> | BufferSource>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): AsyncGenerator<unknown, void, unknown> {\n  return decodeMultiStream(streamLike, options);\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nimport { prettyByte } from \"./utils/prettyByte.mjs\";\nimport { ExtensionCodec } from \"./ExtensionCodec.mjs\";\nimport { getInt64, getUint64, UINT32_MAX } from \"./utils/int.mjs\";\nimport { utf8DecodeJs, TEXT_DECODER_THRESHOLD, utf8DecodeTD } from \"./utils/utf8.mjs\";\nimport { createDataView, ensureUint8Array } from \"./utils/typedArrays.mjs\";\nimport { CachedKeyDecoder } from \"./CachedKeyDecoder.mjs\";\nimport { DecodeError } from \"./DecodeError.mjs\";\nvar isValidMapKeyType = function (key) {\n    var keyType = typeof key;\n    return keyType === \"string\" || keyType === \"number\";\n};\nvar HEAD_BYTE_REQUIRED = -1;\nvar EMPTY_VIEW = new DataView(new ArrayBuffer(0));\nvar EMPTY_BYTES = new Uint8Array(EMPTY_VIEW.buffer);\n// IE11: Hack to support IE11.\n// IE11: Drop this hack and just use RangeError when IE11 is obsolete.\nexport var DataViewIndexOutOfBoundsError = (function () {\n    try {\n        // IE11: The spec says it should throw RangeError,\n        // IE11: but in IE11 it throws TypeError.\n        EMPTY_VIEW.getInt8(0);\n    }\n    catch (e) {\n        return e.constructor;\n    }\n    throw new Error(\"never reached\");\n})();\nvar MORE_DATA = new DataViewIndexOutOfBoundsError(\"Insufficient data\");\nvar sharedCachedKeyDecoder = new CachedKeyDecoder();\nvar Decoder = /** @class */ (function () {\n    function Decoder(extensionCodec, context, maxStrLength, maxBinLength, maxArrayLength, maxMapLength, maxExtLength, keyDecoder) {\n        if (extensionCodec === void 0) { extensionCodec = ExtensionCodec.defaultCodec; }\n        if (context === void 0) { context = undefined; }\n        if (maxStrLength === void 0) { maxStrLength = UINT32_MAX; }\n        if (maxBinLength === void 0) { maxBinLength = UINT32_MAX; }\n        if (maxArrayLength === void 0) { maxArrayLength = UINT32_MAX; }\n        if (maxMapLength === void 0) { maxMapLength = UINT32_MAX; }\n        if (maxExtLength === void 0) { maxExtLength = UINT32_MAX; }\n        if (keyDecoder === void 0) { keyDecoder = sharedCachedKeyDecoder; }\n        this.extensionCodec = extensionCodec;\n        this.context = context;\n        this.maxStrLength = maxStrLength;\n        this.maxBinLength = maxBinLength;\n        this.maxArrayLength = maxArrayLength;\n        this.maxMapLength = maxMapLength;\n        this.maxExtLength = maxExtLength;\n        this.keyDecoder = keyDecoder;\n        this.totalPos = 0;\n        this.pos = 0;\n        this.view = EMPTY_VIEW;\n        this.bytes = EMPTY_BYTES;\n        this.headByte = HEAD_BYTE_REQUIRED;\n        this.stack = [];\n    }\n    Decoder.prototype.reinitializeState = function () {\n        this.totalPos = 0;\n        this.headByte = HEAD_BYTE_REQUIRED;\n        this.stack.length = 0;\n        // view, bytes, and pos will be re-initialized in setBuffer()\n    };\n    Decoder.prototype.setBuffer = function (buffer) {\n        this.bytes = ensureUint8Array(buffer);\n        this.view = createDataView(this.bytes);\n        this.pos = 0;\n    };\n    Decoder.prototype.appendBuffer = function (buffer) {\n        if (this.headByte === HEAD_BYTE_REQUIRED && !this.hasRemaining(1)) {\n            this.setBuffer(buffer);\n        }\n        else {\n            var remainingData = this.bytes.subarray(this.pos);\n            var newData = ensureUint8Array(buffer);\n            // concat remainingData + newData\n            var newBuffer = new Uint8Array(remainingData.length + newData.length);\n            newBuffer.set(remainingData);\n            newBuffer.set(newData, remainingData.length);\n            this.setBuffer(newBuffer);\n        }\n    };\n    Decoder.prototype.hasRemaining = function (size) {\n        return this.view.byteLength - this.pos >= size;\n    };\n    Decoder.prototype.createExtraByteError = function (posToShow) {\n        var _a = this, view = _a.view, pos = _a.pos;\n        return new RangeError(\"Extra \".concat(view.byteLength - pos, \" of \").concat(view.byteLength, \" byte(s) found at buffer[\").concat(posToShow, \"]\"));\n    };\n    /**\n     * @throws {@link DecodeError}\n     * @throws {@link RangeError}\n     */\n    Decoder.prototype.decode = function (buffer) {\n        this.reinitializeState();\n        this.setBuffer(buffer);\n        var object = this.doDecodeSync();\n        if (this.hasRemaining(1)) {\n            throw this.createExtraByteError(this.pos);\n        }\n        return object;\n    };\n    Decoder.prototype.decodeMulti = function (buffer) {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    this.reinitializeState();\n                    this.setBuffer(buffer);\n                    _a.label = 1;\n                case 1:\n                    if (!this.hasRemaining(1)) return [3 /*break*/, 3];\n                    return [4 /*yield*/, this.doDecodeSync()];\n                case 2:\n                    _a.sent();\n                    return [3 /*break*/, 1];\n                case 3: return [2 /*return*/];\n            }\n        });\n    };\n    Decoder.prototype.decodeAsync = function (stream) {\n        var stream_1, stream_1_1;\n        var e_1, _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var decoded, object, buffer, e_1_1, _b, headByte, pos, totalPos;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        decoded = false;\n                        _c.label = 1;\n                    case 1:\n                        _c.trys.push([1, 6, 7, 12]);\n                        stream_1 = __asyncValues(stream);\n                        _c.label = 2;\n                    case 2: return [4 /*yield*/, stream_1.next()];\n                    case 3:\n                        if (!(stream_1_1 = _c.sent(), !stream_1_1.done)) return [3 /*break*/, 5];\n                        buffer = stream_1_1.value;\n                        if (decoded) {\n                            throw this.createExtraByteError(this.totalPos);\n                        }\n                        this.appendBuffer(buffer);\n                        try {\n                            object = this.doDecodeSync();\n                            decoded = true;\n                        }\n                        catch (e) {\n                            if (!(e instanceof DataViewIndexOutOfBoundsError)) {\n                                throw e; // rethrow\n                            }\n                            // fallthrough\n                        }\n                        this.totalPos += this.pos;\n                        _c.label = 4;\n                    case 4: return [3 /*break*/, 2];\n                    case 5: return [3 /*break*/, 12];\n                    case 6:\n                        e_1_1 = _c.sent();\n                        e_1 = { error: e_1_1 };\n                        return [3 /*break*/, 12];\n                    case 7:\n                        _c.trys.push([7, , 10, 11]);\n                        if (!(stream_1_1 && !stream_1_1.done && (_a = stream_1.return))) return [3 /*break*/, 9];\n                        return [4 /*yield*/, _a.call(stream_1)];\n                    case 8:\n                        _c.sent();\n                        _c.label = 9;\n                    case 9: return [3 /*break*/, 11];\n                    case 10:\n                        if (e_1) throw e_1.error;\n                        return [7 /*endfinally*/];\n                    case 11: return [7 /*endfinally*/];\n                    case 12:\n                        if (decoded) {\n                            if (this.hasRemaining(1)) {\n                                throw this.createExtraByteError(this.totalPos);\n                            }\n                            return [2 /*return*/, object];\n                        }\n                        _b = this, headByte = _b.headByte, pos = _b.pos, totalPos = _b.totalPos;\n                        throw new RangeError(\"Insufficient data in parsing \".concat(prettyByte(headByte), \" at \").concat(totalPos, \" (\").concat(pos, \" in the current buffer)\"));\n                }\n            });\n        });\n    };\n    Decoder.prototype.decodeArrayStream = function (stream) {\n        return this.decodeMultiAsync(stream, true);\n    };\n    Decoder.prototype.decodeStream = function (stream) {\n        return this.decodeMultiAsync(stream, false);\n    };\n    Decoder.prototype.decodeMultiAsync = function (stream, isArray) {\n        return __asyncGenerator(this, arguments, function decodeMultiAsync_1() {\n            var isArrayHeaderRequired, arrayItemsLeft, stream_2, stream_2_1, buffer, e_2, e_3_1;\n            var e_3, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        isArrayHeaderRequired = isArray;\n                        arrayItemsLeft = -1;\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 13, 14, 19]);\n                        stream_2 = __asyncValues(stream);\n                        _b.label = 2;\n                    case 2: return [4 /*yield*/, __await(stream_2.next())];\n                    case 3:\n                        if (!(stream_2_1 = _b.sent(), !stream_2_1.done)) return [3 /*break*/, 12];\n                        buffer = stream_2_1.value;\n                        if (isArray && arrayItemsLeft === 0) {\n                            throw this.createExtraByteError(this.totalPos);\n                        }\n                        this.appendBuffer(buffer);\n                        if (isArrayHeaderRequired) {\n                            arrayItemsLeft = this.readArraySize();\n                            isArrayHeaderRequired = false;\n                            this.complete();\n                        }\n                        _b.label = 4;\n                    case 4:\n                        _b.trys.push([4, 9, , 10]);\n                        _b.label = 5;\n                    case 5:\n                        if (!true) return [3 /*break*/, 8];\n                        return [4 /*yield*/, __await(this.doDecodeSync())];\n                    case 6: return [4 /*yield*/, _b.sent()];\n                    case 7:\n                        _b.sent();\n                        if (--arrayItemsLeft === 0) {\n                            return [3 /*break*/, 8];\n                        }\n                        return [3 /*break*/, 5];\n                    case 8: return [3 /*break*/, 10];\n                    case 9:\n                        e_2 = _b.sent();\n                        if (!(e_2 instanceof DataViewIndexOutOfBoundsError)) {\n                            throw e_2; // rethrow\n                        }\n                        return [3 /*break*/, 10];\n                    case 10:\n                        this.totalPos += this.pos;\n                        _b.label = 11;\n                    case 11: return [3 /*break*/, 2];\n                    case 12: return [3 /*break*/, 19];\n                    case 13:\n                        e_3_1 = _b.sent();\n                        e_3 = { error: e_3_1 };\n                        return [3 /*break*/, 19];\n                    case 14:\n                        _b.trys.push([14, , 17, 18]);\n                        if (!(stream_2_1 && !stream_2_1.done && (_a = stream_2.return))) return [3 /*break*/, 16];\n                        return [4 /*yield*/, __await(_a.call(stream_2))];\n                    case 15:\n                        _b.sent();\n                        _b.label = 16;\n                    case 16: return [3 /*break*/, 18];\n                    case 17:\n                        if (e_3) throw e_3.error;\n                        return [7 /*endfinally*/];\n                    case 18: return [7 /*endfinally*/];\n                    case 19: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Decoder.prototype.doDecodeSync = function () {\n        DECODE: while (true) {\n            var headByte = this.readHeadByte();\n            var object = void 0;\n            if (headByte >= 0xe0) {\n                // negative fixint (111x xxxx) 0xe0 - 0xff\n                object = headByte - 0x100;\n            }\n            else if (headByte < 0xc0) {\n                if (headByte < 0x80) {\n                    // positive fixint (0xxx xxxx) 0x00 - 0x7f\n                    object = headByte;\n                }\n                else if (headByte < 0x90) {\n                    // fixmap (1000 xxxx) 0x80 - 0x8f\n                    var size = headByte - 0x80;\n                    if (size !== 0) {\n                        this.pushMapState(size);\n                        this.complete();\n                        continue DECODE;\n                    }\n                    else {\n                        object = {};\n                    }\n                }\n                else if (headByte < 0xa0) {\n                    // fixarray (1001 xxxx) 0x90 - 0x9f\n                    var size = headByte - 0x90;\n                    if (size !== 0) {\n                        this.pushArrayState(size);\n                        this.complete();\n                        continue DECODE;\n                    }\n                    else {\n                        object = [];\n                    }\n                }\n                else {\n                    // fixstr (101x xxxx) 0xa0 - 0xbf\n                    var byteLength = headByte - 0xa0;\n                    object = this.decodeUtf8String(byteLength, 0);\n                }\n            }\n            else if (headByte === 0xc0) {\n                // nil\n                object = null;\n            }\n            else if (headByte === 0xc2) {\n                // false\n                object = false;\n            }\n            else if (headByte === 0xc3) {\n                // true\n                object = true;\n            }\n            else if (headByte === 0xca) {\n                // float 32\n                object = this.readF32();\n            }\n            else if (headByte === 0xcb) {\n                // float 64\n                object = this.readF64();\n            }\n            else if (headByte === 0xcc) {\n                // uint 8\n                object = this.readU8();\n            }\n            else if (headByte === 0xcd) {\n                // uint 16\n                object = this.readU16();\n            }\n            else if (headByte === 0xce) {\n                // uint 32\n                object = this.readU32();\n            }\n            else if (headByte === 0xcf) {\n                // uint 64\n                object = this.readU64();\n            }\n            else if (headByte === 0xd0) {\n                // int 8\n                object = this.readI8();\n            }\n            else if (headByte === 0xd1) {\n                // int 16\n                object = this.readI16();\n            }\n            else if (headByte === 0xd2) {\n                // int 32\n                object = this.readI32();\n            }\n            else if (headByte === 0xd3) {\n                // int 64\n                object = this.readI64();\n            }\n            else if (headByte === 0xd9) {\n                // str 8\n                var byteLength = this.lookU8();\n                object = this.decodeUtf8String(byteLength, 1);\n            }\n            else if (headByte === 0xda) {\n                // str 16\n                var byteLength = this.lookU16();\n                object = this.decodeUtf8String(byteLength, 2);\n            }\n            else if (headByte === 0xdb) {\n                // str 32\n                var byteLength = this.lookU32();\n                object = this.decodeUtf8String(byteLength, 4);\n            }\n            else if (headByte === 0xdc) {\n                // array 16\n                var size = this.readU16();\n                if (size !== 0) {\n                    this.pushArrayState(size);\n                    this.complete();\n                    continue DECODE;\n                }\n                else {\n                    object = [];\n                }\n            }\n            else if (headByte === 0xdd) {\n                // array 32\n                var size = this.readU32();\n                if (size !== 0) {\n                    this.pushArrayState(size);\n                    this.complete();\n                    continue DECODE;\n                }\n                else {\n                    object = [];\n                }\n            }\n            else if (headByte === 0xde) {\n                // map 16\n                var size = this.readU16();\n                if (size !== 0) {\n                    this.pushMapState(size);\n                    this.complete();\n                    continue DECODE;\n                }\n                else {\n                    object = {};\n                }\n            }\n            else if (headByte === 0xdf) {\n                // map 32\n                var size = this.readU32();\n                if (size !== 0) {\n                    this.pushMapState(size);\n                    this.complete();\n                    continue DECODE;\n                }\n                else {\n                    object = {};\n                }\n            }\n            else if (headByte === 0xc4) {\n                // bin 8\n                var size = this.lookU8();\n                object = this.decodeBinary(size, 1);\n            }\n            else if (headByte === 0xc5) {\n                // bin 16\n                var size = this.lookU16();\n                object = this.decodeBinary(size, 2);\n            }\n            else if (headByte === 0xc6) {\n                // bin 32\n                var size = this.lookU32();\n                object = this.decodeBinary(size, 4);\n            }\n            else if (headByte === 0xd4) {\n                // fixext 1\n                object = this.decodeExtension(1, 0);\n            }\n            else if (headByte === 0xd5) {\n                // fixext 2\n                object = this.decodeExtension(2, 0);\n            }\n            else if (headByte === 0xd6) {\n                // fixext 4\n                object = this.decodeExtension(4, 0);\n            }\n            else if (headByte === 0xd7) {\n                // fixext 8\n                object = this.decodeExtension(8, 0);\n            }\n            else if (headByte === 0xd8) {\n                // fixext 16\n                object = this.decodeExtension(16, 0);\n            }\n            else if (headByte === 0xc7) {\n                // ext 8\n                var size = this.lookU8();\n                object = this.decodeExtension(size, 1);\n            }\n            else if (headByte === 0xc8) {\n                // ext 16\n                var size = this.lookU16();\n                object = this.decodeExtension(size, 2);\n            }\n            else if (headByte === 0xc9) {\n                // ext 32\n                var size = this.lookU32();\n                object = this.decodeExtension(size, 4);\n            }\n            else {\n                throw new DecodeError(\"Unrecognized type byte: \".concat(prettyByte(headByte)));\n            }\n            this.complete();\n            var stack = this.stack;\n            while (stack.length > 0) {\n                // arrays and maps\n                var state = stack[stack.length - 1];\n                if (state.type === 0 /* State.ARRAY */) {\n                    state.array[state.position] = object;\n                    state.position++;\n                    if (state.position === state.size) {\n                        stack.pop();\n                        object = state.array;\n                    }\n                    else {\n                        continue DECODE;\n                    }\n                }\n                else if (state.type === 1 /* State.MAP_KEY */) {\n                    if (!isValidMapKeyType(object)) {\n                        throw new DecodeError(\"The type of key must be string or number but \" + typeof object);\n                    }\n                    if (object === \"__proto__\") {\n                        throw new DecodeError(\"The key __proto__ is not allowed\");\n                    }\n                    state.key = object;\n                    state.type = 2 /* State.MAP_VALUE */;\n                    continue DECODE;\n                }\n                else {\n                    // it must be `state.type === State.MAP_VALUE` here\n                    state.map[state.key] = object;\n                    state.readCount++;\n                    if (state.readCount === state.size) {\n                        stack.pop();\n                        object = state.map;\n                    }\n                    else {\n                        state.key = null;\n                        state.type = 1 /* State.MAP_KEY */;\n                        continue DECODE;\n                    }\n                }\n            }\n            return object;\n        }\n    };\n    Decoder.prototype.readHeadByte = function () {\n        if (this.headByte === HEAD_BYTE_REQUIRED) {\n            this.headByte = this.readU8();\n            // console.log(\"headByte\", prettyByte(this.headByte));\n        }\n        return this.headByte;\n    };\n    Decoder.prototype.complete = function () {\n        this.headByte = HEAD_BYTE_REQUIRED;\n    };\n    Decoder.prototype.readArraySize = function () {\n        var headByte = this.readHeadByte();\n        switch (headByte) {\n            case 0xdc:\n                return this.readU16();\n            case 0xdd:\n                return this.readU32();\n            default: {\n                if (headByte < 0xa0) {\n                    return headByte - 0x90;\n                }\n                else {\n                    throw new DecodeError(\"Unrecognized array type byte: \".concat(prettyByte(headByte)));\n                }\n            }\n        }\n    };\n    Decoder.prototype.pushMapState = function (size) {\n        if (size > this.maxMapLength) {\n            throw new DecodeError(\"Max length exceeded: map length (\".concat(size, \") > maxMapLengthLength (\").concat(this.maxMapLength, \")\"));\n        }\n        this.stack.push({\n            type: 1 /* State.MAP_KEY */,\n            size: size,\n            key: null,\n            readCount: 0,\n            map: {},\n        });\n    };\n    Decoder.prototype.pushArrayState = function (size) {\n        if (size > this.maxArrayLength) {\n            throw new DecodeError(\"Max length exceeded: array length (\".concat(size, \") > maxArrayLength (\").concat(this.maxArrayLength, \")\"));\n        }\n        this.stack.push({\n            type: 0 /* State.ARRAY */,\n            size: size,\n            array: new Array(size),\n            position: 0,\n        });\n    };\n    Decoder.prototype.decodeUtf8String = function (byteLength, headerOffset) {\n        var _a;\n        if (byteLength > this.maxStrLength) {\n            throw new DecodeError(\"Max length exceeded: UTF-8 byte length (\".concat(byteLength, \") > maxStrLength (\").concat(this.maxStrLength, \")\"));\n        }\n        if (this.bytes.byteLength < this.pos + headerOffset + byteLength) {\n            throw MORE_DATA;\n        }\n        var offset = this.pos + headerOffset;\n        var object;\n        if (this.stateIsMapKey() && ((_a = this.keyDecoder) === null || _a === void 0 ? void 0 : _a.canBeCached(byteLength))) {\n            object = this.keyDecoder.decode(this.bytes, offset, byteLength);\n        }\n        else if (byteLength > TEXT_DECODER_THRESHOLD) {\n            object = utf8DecodeTD(this.bytes, offset, byteLength);\n        }\n        else {\n            object = utf8DecodeJs(this.bytes, offset, byteLength);\n        }\n        this.pos += headerOffset + byteLength;\n        return object;\n    };\n    Decoder.prototype.stateIsMapKey = function () {\n        if (this.stack.length > 0) {\n            var state = this.stack[this.stack.length - 1];\n            return state.type === 1 /* State.MAP_KEY */;\n        }\n        return false;\n    };\n    Decoder.prototype.decodeBinary = function (byteLength, headOffset) {\n        if (byteLength > this.maxBinLength) {\n            throw new DecodeError(\"Max length exceeded: bin length (\".concat(byteLength, \") > maxBinLength (\").concat(this.maxBinLength, \")\"));\n        }\n        if (!this.hasRemaining(byteLength + headOffset)) {\n            throw MORE_DATA;\n        }\n        var offset = this.pos + headOffset;\n        var object = this.bytes.subarray(offset, offset + byteLength);\n        this.pos += headOffset + byteLength;\n        return object;\n    };\n    Decoder.prototype.decodeExtension = function (size, headOffset) {\n        if (size > this.maxExtLength) {\n            throw new DecodeError(\"Max length exceeded: ext length (\".concat(size, \") > maxExtLength (\").concat(this.maxExtLength, \")\"));\n        }\n        var extType = this.view.getInt8(this.pos + headOffset);\n        var data = this.decodeBinary(size, headOffset + 1 /* extType */);\n        return this.extensionCodec.decode(data, extType, this.context);\n    };\n    Decoder.prototype.lookU8 = function () {\n        return this.view.getUint8(this.pos);\n    };\n    Decoder.prototype.lookU16 = function () {\n        return this.view.getUint16(this.pos);\n    };\n    Decoder.prototype.lookU32 = function () {\n        return this.view.getUint32(this.pos);\n    };\n    Decoder.prototype.readU8 = function () {\n        var value = this.view.getUint8(this.pos);\n        this.pos++;\n        return value;\n    };\n    Decoder.prototype.readI8 = function () {\n        var value = this.view.getInt8(this.pos);\n        this.pos++;\n        return value;\n    };\n    Decoder.prototype.readU16 = function () {\n        var value = this.view.getUint16(this.pos);\n        this.pos += 2;\n        return value;\n    };\n    Decoder.prototype.readI16 = function () {\n        var value = this.view.getInt16(this.pos);\n        this.pos += 2;\n        return value;\n    };\n    Decoder.prototype.readU32 = function () {\n        var value = this.view.getUint32(this.pos);\n        this.pos += 4;\n        return value;\n    };\n    Decoder.prototype.readI32 = function () {\n        var value = this.view.getInt32(this.pos);\n        this.pos += 4;\n        return value;\n    };\n    Decoder.prototype.readU64 = function () {\n        var value = getUint64(this.view, this.pos);\n        this.pos += 8;\n        return value;\n    };\n    Decoder.prototype.readI64 = function () {\n        var value = getInt64(this.view, this.pos);\n        this.pos += 8;\n        return value;\n    };\n    Decoder.prototype.readF32 = function () {\n        var value = this.view.getFloat32(this.pos);\n        this.pos += 4;\n        return value;\n    };\n    Decoder.prototype.readF64 = function () {\n        var value = this.view.getFloat64(this.pos);\n        this.pos += 8;\n        return value;\n    };\n    return Decoder;\n}());\nexport { Decoder };\n//# sourceMappingURL=Decoder.mjs.map","import { prettyByte } from \"./utils/prettyByte\";\nimport { ExtensionCodec, ExtensionCodecType } from \"./ExtensionCodec\";\nimport { getInt64, getUint64, UINT32_MAX } from \"./utils/int\";\nimport { utf8DecodeJs, TEXT_DECODER_THRESHOLD, utf8DecodeTD } from \"./utils/utf8\";\nimport { createDataView, ensureUint8Array } from \"./utils/typedArrays\";\nimport { CachedKeyDecoder, KeyDecoder } from \"./CachedKeyDecoder\";\nimport { DecodeError } from \"./DecodeError\";\n\nconst enum State {\n  ARRAY,\n  MAP_KEY,\n  MAP_VALUE,\n}\n\ntype MapKeyType = string | number;\n\nconst isValidMapKeyType = (key: unknown): key is MapKeyType => {\n  const keyType = typeof key;\n\n  return keyType === \"string\" || keyType === \"number\";\n};\n\ntype StackMapState = {\n  type: State.MAP_KEY | State.MAP_VALUE;\n  size: number;\n  key: MapKeyType | null;\n  readCount: number;\n  map: Record<string, unknown>;\n};\n\ntype StackArrayState = {\n  type: State.ARRAY;\n  size: number;\n  array: Array<unknown>;\n  position: number;\n};\n\ntype StackState = StackArrayState | StackMapState;\n\nconst HEAD_BYTE_REQUIRED = -1;\n\nconst EMPTY_VIEW = new DataView(new ArrayBuffer(0));\nconst EMPTY_BYTES = new Uint8Array(EMPTY_VIEW.buffer);\n\n// IE11: Hack to support IE11.\n// IE11: Drop this hack and just use RangeError when IE11 is obsolete.\nexport const DataViewIndexOutOfBoundsError: typeof Error = (() => {\n  try {\n    // IE11: The spec says it should throw RangeError,\n    // IE11: but in IE11 it throws TypeError.\n    EMPTY_VIEW.getInt8(0);\n  } catch (e: any) {\n    return e.constructor;\n  }\n  throw new Error(\"never reached\");\n})();\n\nconst MORE_DATA = new DataViewIndexOutOfBoundsError(\"Insufficient data\");\n\nconst sharedCachedKeyDecoder = new CachedKeyDecoder();\n\nexport class Decoder<ContextType = undefined> {\n  private totalPos = 0;\n  private pos = 0;\n\n  private view = EMPTY_VIEW;\n  private bytes = EMPTY_BYTES;\n  private headByte = HEAD_BYTE_REQUIRED;\n  private readonly stack: Array<StackState> = [];\n\n  public constructor(\n    private readonly extensionCodec: ExtensionCodecType<ContextType> = ExtensionCodec.defaultCodec as any,\n    private readonly context: ContextType = undefined as any,\n    private readonly maxStrLength = UINT32_MAX,\n    private readonly maxBinLength = UINT32_MAX,\n    private readonly maxArrayLength = UINT32_MAX,\n    private readonly maxMapLength = UINT32_MAX,\n    private readonly maxExtLength = UINT32_MAX,\n    private readonly keyDecoder: KeyDecoder | null = sharedCachedKeyDecoder,\n  ) {}\n\n  private reinitializeState() {\n    this.totalPos = 0;\n    this.headByte = HEAD_BYTE_REQUIRED;\n    this.stack.length = 0;\n\n    // view, bytes, and pos will be re-initialized in setBuffer()\n  }\n\n  private setBuffer(buffer: ArrayLike<number> | BufferSource): void {\n    this.bytes = ensureUint8Array(buffer);\n    this.view = createDataView(this.bytes);\n    this.pos = 0;\n  }\n\n  private appendBuffer(buffer: ArrayLike<number> | BufferSource) {\n    if (this.headByte === HEAD_BYTE_REQUIRED && !this.hasRemaining(1)) {\n      this.setBuffer(buffer);\n    } else {\n      const remainingData = this.bytes.subarray(this.pos);\n      const newData = ensureUint8Array(buffer);\n\n      // concat remainingData + newData\n      const newBuffer = new Uint8Array(remainingData.length + newData.length);\n      newBuffer.set(remainingData);\n      newBuffer.set(newData, remainingData.length);\n      this.setBuffer(newBuffer);\n    }\n  }\n\n  private hasRemaining(size: number) {\n    return this.view.byteLength - this.pos >= size;\n  }\n\n  private createExtraByteError(posToShow: number): Error {\n    const { view, pos } = this;\n    return new RangeError(`Extra ${view.byteLength - pos} of ${view.byteLength} byte(s) found at buffer[${posToShow}]`);\n  }\n\n  /**\n   * @throws {@link DecodeError}\n   * @throws {@link RangeError}\n   */\n  public decode(buffer: ArrayLike<number> | BufferSource): unknown {\n    this.reinitializeState();\n    this.setBuffer(buffer);\n\n    const object = this.doDecodeSync();\n    if (this.hasRemaining(1)) {\n      throw this.createExtraByteError(this.pos);\n    }\n    return object;\n  }\n\n  public *decodeMulti(buffer: ArrayLike<number> | BufferSource): Generator<unknown, void, unknown> {\n    this.reinitializeState();\n    this.setBuffer(buffer);\n\n    while (this.hasRemaining(1)) {\n      yield this.doDecodeSync();\n    }\n  }\n\n  public async decodeAsync(stream: AsyncIterable<ArrayLike<number> | BufferSource>): Promise<unknown> {\n    let decoded = false;\n    let object: unknown;\n    for await (const buffer of stream) {\n      if (decoded) {\n        throw this.createExtraByteError(this.totalPos);\n      }\n\n      this.appendBuffer(buffer);\n\n      try {\n        object = this.doDecodeSync();\n        decoded = true;\n      } catch (e) {\n        if (!(e instanceof DataViewIndexOutOfBoundsError)) {\n          throw e; // rethrow\n        }\n        // fallthrough\n      }\n      this.totalPos += this.pos;\n    }\n\n    if (decoded) {\n      if (this.hasRemaining(1)) {\n        throw this.createExtraByteError(this.totalPos);\n      }\n      return object;\n    }\n\n    const { headByte, pos, totalPos } = this;\n    throw new RangeError(\n      `Insufficient data in parsing ${prettyByte(headByte)} at ${totalPos} (${pos} in the current buffer)`,\n    );\n  }\n\n  public decodeArrayStream(\n    stream: AsyncIterable<ArrayLike<number> | BufferSource>,\n  ): AsyncGenerator<unknown, void, unknown> {\n    return this.decodeMultiAsync(stream, true);\n  }\n\n  public decodeStream(stream: AsyncIterable<ArrayLike<number> | BufferSource>): AsyncGenerator<unknown, void, unknown> {\n    return this.decodeMultiAsync(stream, false);\n  }\n\n  private async *decodeMultiAsync(stream: AsyncIterable<ArrayLike<number> | BufferSource>, isArray: boolean) {\n    let isArrayHeaderRequired = isArray;\n    let arrayItemsLeft = -1;\n\n    for await (const buffer of stream) {\n      if (isArray && arrayItemsLeft === 0) {\n        throw this.createExtraByteError(this.totalPos);\n      }\n\n      this.appendBuffer(buffer);\n\n      if (isArrayHeaderRequired) {\n        arrayItemsLeft = this.readArraySize();\n        isArrayHeaderRequired = false;\n        this.complete();\n      }\n\n      try {\n        while (true) {\n          yield this.doDecodeSync();\n          if (--arrayItemsLeft === 0) {\n            break;\n          }\n        }\n      } catch (e) {\n        if (!(e instanceof DataViewIndexOutOfBoundsError)) {\n          throw e; // rethrow\n        }\n        // fallthrough\n      }\n      this.totalPos += this.pos;\n    }\n  }\n\n  private doDecodeSync(): unknown {\n    DECODE: while (true) {\n      const headByte = this.readHeadByte();\n      let object: unknown;\n\n      if (headByte >= 0xe0) {\n        // negative fixint (111x xxxx) 0xe0 - 0xff\n        object = headByte - 0x100;\n      } else if (headByte < 0xc0) {\n        if (headByte < 0x80) {\n          // positive fixint (0xxx xxxx) 0x00 - 0x7f\n          object = headByte;\n        } else if (headByte < 0x90) {\n          // fixmap (1000 xxxx) 0x80 - 0x8f\n          const size = headByte - 0x80;\n          if (size !== 0) {\n            this.pushMapState(size);\n            this.complete();\n            continue DECODE;\n          } else {\n            object = {};\n          }\n        } else if (headByte < 0xa0) {\n          // fixarray (1001 xxxx) 0x90 - 0x9f\n          const size = headByte - 0x90;\n          if (size !== 0) {\n            this.pushArrayState(size);\n            this.complete();\n            continue DECODE;\n          } else {\n            object = [];\n          }\n        } else {\n          // fixstr (101x xxxx) 0xa0 - 0xbf\n          const byteLength = headByte - 0xa0;\n          object = this.decodeUtf8String(byteLength, 0);\n        }\n      } else if (headByte === 0xc0) {\n        // nil\n        object = null;\n      } else if (headByte === 0xc2) {\n        // false\n        object = false;\n      } else if (headByte === 0xc3) {\n        // true\n        object = true;\n      } else if (headByte === 0xca) {\n        // float 32\n        object = this.readF32();\n      } else if (headByte === 0xcb) {\n        // float 64\n        object = this.readF64();\n      } else if (headByte === 0xcc) {\n        // uint 8\n        object = this.readU8();\n      } else if (headByte === 0xcd) {\n        // uint 16\n        object = this.readU16();\n      } else if (headByte === 0xce) {\n        // uint 32\n        object = this.readU32();\n      } else if (headByte === 0xcf) {\n        // uint 64\n        object = this.readU64();\n      } else if (headByte === 0xd0) {\n        // int 8\n        object = this.readI8();\n      } else if (headByte === 0xd1) {\n        // int 16\n        object = this.readI16();\n      } else if (headByte === 0xd2) {\n        // int 32\n        object = this.readI32();\n      } else if (headByte === 0xd3) {\n        // int 64\n        object = this.readI64();\n      } else if (headByte === 0xd9) {\n        // str 8\n        const byteLength = this.lookU8();\n        object = this.decodeUtf8String(byteLength, 1);\n      } else if (headByte === 0xda) {\n        // str 16\n        const byteLength = this.lookU16();\n        object = this.decodeUtf8String(byteLength, 2);\n      } else if (headByte === 0xdb) {\n        // str 32\n        const byteLength = this.lookU32();\n        object = this.decodeUtf8String(byteLength, 4);\n      } else if (headByte === 0xdc) {\n        // array 16\n        const size = this.readU16();\n        if (size !== 0) {\n          this.pushArrayState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = [];\n        }\n      } else if (headByte === 0xdd) {\n        // array 32\n        const size = this.readU32();\n        if (size !== 0) {\n          this.pushArrayState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = [];\n        }\n      } else if (headByte === 0xde) {\n        // map 16\n        const size = this.readU16();\n        if (size !== 0) {\n          this.pushMapState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = {};\n        }\n      } else if (headByte === 0xdf) {\n        // map 32\n        const size = this.readU32();\n        if (size !== 0) {\n          this.pushMapState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = {};\n        }\n      } else if (headByte === 0xc4) {\n        // bin 8\n        const size = this.lookU8();\n        object = this.decodeBinary(size, 1);\n      } else if (headByte === 0xc5) {\n        // bin 16\n        const size = this.lookU16();\n        object = this.decodeBinary(size, 2);\n      } else if (headByte === 0xc6) {\n        // bin 32\n        const size = this.lookU32();\n        object = this.decodeBinary(size, 4);\n      } else if (headByte === 0xd4) {\n        // fixext 1\n        object = this.decodeExtension(1, 0);\n      } else if (headByte === 0xd5) {\n        // fixext 2\n        object = this.decodeExtension(2, 0);\n      } else if (headByte === 0xd6) {\n        // fixext 4\n        object = this.decodeExtension(4, 0);\n      } else if (headByte === 0xd7) {\n        // fixext 8\n        object = this.decodeExtension(8, 0);\n      } else if (headByte === 0xd8) {\n        // fixext 16\n        object = this.decodeExtension(16, 0);\n      } else if (headByte === 0xc7) {\n        // ext 8\n        const size = this.lookU8();\n        object = this.decodeExtension(size, 1);\n      } else if (headByte === 0xc8) {\n        // ext 16\n        const size = this.lookU16();\n        object = this.decodeExtension(size, 2);\n      } else if (headByte === 0xc9) {\n        // ext 32\n        const size = this.lookU32();\n        object = this.decodeExtension(size, 4);\n      } else {\n        throw new DecodeError(`Unrecognized type byte: ${prettyByte(headByte)}`);\n      }\n\n      this.complete();\n\n      const stack = this.stack;\n      while (stack.length > 0) {\n        // arrays and maps\n        const state = stack[stack.length - 1]!;\n        if (state.type === State.ARRAY) {\n          state.array[state.position] = object;\n          state.position++;\n          if (state.position === state.size) {\n            stack.pop();\n            object = state.array;\n          } else {\n            continue DECODE;\n          }\n        } else if (state.type === State.MAP_KEY) {\n          if (!isValidMapKeyType(object)) {\n            throw new DecodeError(\"The type of key must be string or number but \" + typeof object);\n          }\n          if (object === \"__proto__\") {\n            throw new DecodeError(\"The key __proto__ is not allowed\");\n          }\n\n          state.key = object;\n          state.type = State.MAP_VALUE;\n          continue DECODE;\n        } else {\n          // it must be `state.type === State.MAP_VALUE` here\n\n          state.map[state.key!] = object;\n          state.readCount++;\n\n          if (state.readCount === state.size) {\n            stack.pop();\n            object = state.map;\n          } else {\n            state.key = null;\n            state.type = State.MAP_KEY;\n            continue DECODE;\n          }\n        }\n      }\n\n      return object;\n    }\n  }\n\n  private readHeadByte(): number {\n    if (this.headByte === HEAD_BYTE_REQUIRED) {\n      this.headByte = this.readU8();\n      // console.log(\"headByte\", prettyByte(this.headByte));\n    }\n\n    return this.headByte;\n  }\n\n  private complete(): void {\n    this.headByte = HEAD_BYTE_REQUIRED;\n  }\n\n  private readArraySize(): number {\n    const headByte = this.readHeadByte();\n\n    switch (headByte) {\n      case 0xdc:\n        return this.readU16();\n      case 0xdd:\n        return this.readU32();\n      default: {\n        if (headByte < 0xa0) {\n          return headByte - 0x90;\n        } else {\n          throw new DecodeError(`Unrecognized array type byte: ${prettyByte(headByte)}`);\n        }\n      }\n    }\n  }\n\n  private pushMapState(size: number) {\n    if (size > this.maxMapLength) {\n      throw new DecodeError(`Max length exceeded: map length (${size}) > maxMapLengthLength (${this.maxMapLength})`);\n    }\n\n    this.stack.push({\n      type: State.MAP_KEY,\n      size,\n      key: null,\n      readCount: 0,\n      map: {},\n    });\n  }\n\n  private pushArrayState(size: number) {\n    if (size > this.maxArrayLength) {\n      throw new DecodeError(`Max length exceeded: array length (${size}) > maxArrayLength (${this.maxArrayLength})`);\n    }\n\n    this.stack.push({\n      type: State.ARRAY,\n      size,\n      array: new Array<unknown>(size),\n      position: 0,\n    });\n  }\n\n  private decodeUtf8String(byteLength: number, headerOffset: number): string {\n    if (byteLength > this.maxStrLength) {\n      throw new DecodeError(\n        `Max length exceeded: UTF-8 byte length (${byteLength}) > maxStrLength (${this.maxStrLength})`,\n      );\n    }\n\n    if (this.bytes.byteLength < this.pos + headerOffset + byteLength) {\n      throw MORE_DATA;\n    }\n\n    const offset = this.pos + headerOffset;\n    let object: string;\n    if (this.stateIsMapKey() && this.keyDecoder?.canBeCached(byteLength)) {\n      object = this.keyDecoder.decode(this.bytes, offset, byteLength);\n    } else if (byteLength > TEXT_DECODER_THRESHOLD) {\n      object = utf8DecodeTD(this.bytes, offset, byteLength);\n    } else {\n      object = utf8DecodeJs(this.bytes, offset, byteLength);\n    }\n    this.pos += headerOffset + byteLength;\n    return object;\n  }\n\n  private stateIsMapKey(): boolean {\n    if (this.stack.length > 0) {\n      const state = this.stack[this.stack.length - 1]!;\n      return state.type === State.MAP_KEY;\n    }\n    return false;\n  }\n\n  private decodeBinary(byteLength: number, headOffset: number): Uint8Array {\n    if (byteLength > this.maxBinLength) {\n      throw new DecodeError(`Max length exceeded: bin length (${byteLength}) > maxBinLength (${this.maxBinLength})`);\n    }\n\n    if (!this.hasRemaining(byteLength + headOffset)) {\n      throw MORE_DATA;\n    }\n\n    const offset = this.pos + headOffset;\n    const object = this.bytes.subarray(offset, offset + byteLength);\n    this.pos += headOffset + byteLength;\n    return object;\n  }\n\n  private decodeExtension(size: number, headOffset: number): unknown {\n    if (size > this.maxExtLength) {\n      throw new DecodeError(`Max length exceeded: ext length (${size}) > maxExtLength (${this.maxExtLength})`);\n    }\n\n    const extType = this.view.getInt8(this.pos + headOffset);\n    const data = this.decodeBinary(size, headOffset + 1 /* extType */);\n    return this.extensionCodec.decode(data, extType, this.context);\n  }\n\n  private lookU8() {\n    return this.view.getUint8(this.pos);\n  }\n\n  private lookU16() {\n    return this.view.getUint16(this.pos);\n  }\n\n  private lookU32() {\n    return this.view.getUint32(this.pos);\n  }\n\n  private readU8(): number {\n    const value = this.view.getUint8(this.pos);\n    this.pos++;\n    return value;\n  }\n\n  private readI8(): number {\n    const value = this.view.getInt8(this.pos);\n    this.pos++;\n    return value;\n  }\n\n  private readU16(): number {\n    const value = this.view.getUint16(this.pos);\n    this.pos += 2;\n    return value;\n  }\n\n  private readI16(): number {\n    const value = this.view.getInt16(this.pos);\n    this.pos += 2;\n    return value;\n  }\n\n  private readU32(): number {\n    const value = this.view.getUint32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readI32(): number {\n    const value = this.view.getInt32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readU64(): number {\n    const value = getUint64(this.view, this.pos);\n    this.pos += 8;\n    return value;\n  }\n\n  private readI64(): number {\n    const value = getInt64(this.view, this.pos);\n    this.pos += 8;\n    return value;\n  }\n\n  private readF32() {\n    const value = this.view.getFloat32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readF64() {\n    const value = this.view.getFloat64(this.pos);\n    this.pos += 8;\n    return value;\n  }\n}\n","export function prettyByte(byte) {\n    return \"\".concat(byte < 0 ? \"-\" : \"\", \"0x\").concat(Math.abs(byte).toString(16).padStart(2, \"0\"));\n}\n//# sourceMappingURL=prettyByte.mjs.map","export function prettyByte(byte: number): string {\n  return `${byte < 0 ? \"-\" : \"\"}0x${Math.abs(byte).toString(16).padStart(2, \"0\")}`;\n}\n","// ExtensionCodec to handle MessagePack extensions\nimport { ExtData } from \"./ExtData.mjs\";\nimport { timestampExtension } from \"./timestamp.mjs\";\nvar ExtensionCodec = /** @class */ (function () {\n    function ExtensionCodec() {\n        // built-in extensions\n        this.builtInEncoders = [];\n        this.builtInDecoders = [];\n        // custom extensions\n        this.encoders = [];\n        this.decoders = [];\n        this.register(timestampExtension);\n    }\n    ExtensionCodec.prototype.register = function (_a) {\n        var type = _a.type, encode = _a.encode, decode = _a.decode;\n        if (type >= 0) {\n            // custom extensions\n            this.encoders[type] = encode;\n            this.decoders[type] = decode;\n        }\n        else {\n            // built-in extensions\n            var index = 1 + type;\n            this.builtInEncoders[index] = encode;\n            this.builtInDecoders[index] = decode;\n        }\n    };\n    ExtensionCodec.prototype.tryToEncode = function (object, context) {\n        // built-in extensions\n        for (var i = 0; i < this.builtInEncoders.length; i++) {\n            var encodeExt = this.builtInEncoders[i];\n            if (encodeExt != null) {\n                var data = encodeExt(object, context);\n                if (data != null) {\n                    var type = -1 - i;\n                    return new ExtData(type, data);\n                }\n            }\n        }\n        // custom extensions\n        for (var i = 0; i < this.encoders.length; i++) {\n            var encodeExt = this.encoders[i];\n            if (encodeExt != null) {\n                var data = encodeExt(object, context);\n                if (data != null) {\n                    var type = i;\n                    return new ExtData(type, data);\n                }\n            }\n        }\n        if (object instanceof ExtData) {\n            // to keep ExtData as is\n            return object;\n        }\n        return null;\n    };\n    ExtensionCodec.prototype.decode = function (data, type, context) {\n        var decodeExt = type < 0 ? this.builtInDecoders[-1 - type] : this.decoders[type];\n        if (decodeExt) {\n            return decodeExt(data, type, context);\n        }\n        else {\n            // decode() does not fail, returns ExtData instead.\n            return new ExtData(type, data);\n        }\n    };\n    ExtensionCodec.defaultCodec = new ExtensionCodec();\n    return ExtensionCodec;\n}());\nexport { ExtensionCodec };\n//# sourceMappingURL=ExtensionCodec.mjs.map","// ExtensionCodec to handle MessagePack extensions\n\nimport { ExtData } from \"./ExtData\";\nimport { timestampExtension } from \"./timestamp\";\n\nexport type ExtensionDecoderType<ContextType> = (\n  data: Uint8Array,\n  extensionType: number,\n  context: ContextType,\n) => unknown;\n\nexport type ExtensionEncoderType<ContextType> = (input: unknown, context: ContextType) => Uint8Array | null;\n\n// immutable interface to ExtensionCodec\nexport type ExtensionCodecType<ContextType> = {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  __brand?: ContextType;\n  tryToEncode(object: unknown, context: ContextType): ExtData | null;\n  decode(data: Uint8Array, extType: number, context: ContextType): unknown;\n};\n\nexport class ExtensionCodec<ContextType = undefined> implements ExtensionCodecType<ContextType> {\n  public static readonly defaultCodec: ExtensionCodecType<undefined> = new ExtensionCodec();\n\n  // ensures ExtensionCodecType<X> matches ExtensionCodec<X>\n  // this will make type errors a lot more clear\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  __brand?: ContextType;\n\n  // built-in extensions\n  private readonly builtInEncoders: Array<ExtensionEncoderType<ContextType> | undefined | null> = [];\n  private readonly builtInDecoders: Array<ExtensionDecoderType<ContextType> | undefined | null> = [];\n\n  // custom extensions\n  private readonly encoders: Array<ExtensionEncoderType<ContextType> | undefined | null> = [];\n  private readonly decoders: Array<ExtensionDecoderType<ContextType> | undefined | null> = [];\n\n  public constructor() {\n    this.register(timestampExtension);\n  }\n\n  public register({\n    type,\n    encode,\n    decode,\n  }: {\n    type: number;\n    encode: ExtensionEncoderType<ContextType>;\n    decode: ExtensionDecoderType<ContextType>;\n  }): void {\n    if (type >= 0) {\n      // custom extensions\n      this.encoders[type] = encode;\n      this.decoders[type] = decode;\n    } else {\n      // built-in extensions\n      const index = 1 + type;\n      this.builtInEncoders[index] = encode;\n      this.builtInDecoders[index] = decode;\n    }\n  }\n\n  public tryToEncode(object: unknown, context: ContextType): ExtData | null {\n    // built-in extensions\n    for (let i = 0; i < this.builtInEncoders.length; i++) {\n      const encodeExt = this.builtInEncoders[i];\n      if (encodeExt != null) {\n        const data = encodeExt(object, context);\n        if (data != null) {\n          const type = -1 - i;\n          return new ExtData(type, data);\n        }\n      }\n    }\n\n    // custom extensions\n    for (let i = 0; i < this.encoders.length; i++) {\n      const encodeExt = this.encoders[i];\n      if (encodeExt != null) {\n        const data = encodeExt(object, context);\n        if (data != null) {\n          const type = i;\n          return new ExtData(type, data);\n        }\n      }\n    }\n\n    if (object instanceof ExtData) {\n      // to keep ExtData as is\n      return object;\n    }\n    return null;\n  }\n\n  public decode(data: Uint8Array, type: number, context: ContextType): unknown {\n    const decodeExt = type < 0 ? this.builtInDecoders[-1 - type] : this.decoders[type];\n    if (decodeExt) {\n      return decodeExt(data, type, context);\n    } else {\n      // decode() does not fail, returns ExtData instead.\n      return new ExtData(type, data);\n    }\n  }\n}\n","/**\n * ExtData is used to handle Extension Types that are not registered to ExtensionCodec.\n */\nvar ExtData = /** @class */ (function () {\n    function ExtData(type, data) {\n        this.type = type;\n        this.data = data;\n    }\n    return ExtData;\n}());\nexport { ExtData };\n//# sourceMappingURL=ExtData.mjs.map","/**\n * ExtData is used to handle Extension Types that are not registered to ExtensionCodec.\n */\nexport class ExtData {\n  constructor(readonly type: number, readonly data: Uint8Array) {}\n}\n","// https://github.com/msgpack/msgpack/blob/master/spec.md#timestamp-extension-type\nimport { DecodeError } from \"./DecodeError.mjs\";\nimport { getInt64, setInt64 } from \"./utils/int.mjs\";\nexport var EXT_TIMESTAMP = -1;\nvar TIMESTAMP32_MAX_SEC = 0x100000000 - 1; // 32-bit unsigned int\nvar TIMESTAMP64_MAX_SEC = 0x400000000 - 1; // 34-bit unsigned int\nexport function encodeTimeSpecToTimestamp(_a) {\n    var sec = _a.sec, nsec = _a.nsec;\n    if (sec >= 0 && nsec >= 0 && sec <= TIMESTAMP64_MAX_SEC) {\n        // Here sec >= 0 && nsec >= 0\n        if (nsec === 0 && sec <= TIMESTAMP32_MAX_SEC) {\n            // timestamp 32 = { sec32 (unsigned) }\n            var rv = new Uint8Array(4);\n            var view = new DataView(rv.buffer);\n            view.setUint32(0, sec);\n            return rv;\n        }\n        else {\n            // timestamp 64 = { nsec30 (unsigned), sec34 (unsigned) }\n            var secHigh = sec / 0x100000000;\n            var secLow = sec & 0xffffffff;\n            var rv = new Uint8Array(8);\n            var view = new DataView(rv.buffer);\n            // nsec30 | secHigh2\n            view.setUint32(0, (nsec << 2) | (secHigh & 0x3));\n            // secLow32\n            view.setUint32(4, secLow);\n            return rv;\n        }\n    }\n    else {\n        // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n        var rv = new Uint8Array(12);\n        var view = new DataView(rv.buffer);\n        view.setUint32(0, nsec);\n        setInt64(view, 4, sec);\n        return rv;\n    }\n}\nexport function encodeDateToTimeSpec(date) {\n    var msec = date.getTime();\n    var sec = Math.floor(msec / 1e3);\n    var nsec = (msec - sec * 1e3) * 1e6;\n    // Normalizes { sec, nsec } to ensure nsec is unsigned.\n    var nsecInSec = Math.floor(nsec / 1e9);\n    return {\n        sec: sec + nsecInSec,\n        nsec: nsec - nsecInSec * 1e9,\n    };\n}\nexport function encodeTimestampExtension(object) {\n    if (object instanceof Date) {\n        var timeSpec = encodeDateToTimeSpec(object);\n        return encodeTimeSpecToTimestamp(timeSpec);\n    }\n    else {\n        return null;\n    }\n}\nexport function decodeTimestampToTimeSpec(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    // data may be 32, 64, or 96 bits\n    switch (data.byteLength) {\n        case 4: {\n            // timestamp 32 = { sec32 }\n            var sec = view.getUint32(0);\n            var nsec = 0;\n            return { sec: sec, nsec: nsec };\n        }\n        case 8: {\n            // timestamp 64 = { nsec30, sec34 }\n            var nsec30AndSecHigh2 = view.getUint32(0);\n            var secLow32 = view.getUint32(4);\n            var sec = (nsec30AndSecHigh2 & 0x3) * 0x100000000 + secLow32;\n            var nsec = nsec30AndSecHigh2 >>> 2;\n            return { sec: sec, nsec: nsec };\n        }\n        case 12: {\n            // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n            var sec = getInt64(view, 4);\n            var nsec = view.getUint32(0);\n            return { sec: sec, nsec: nsec };\n        }\n        default:\n            throw new DecodeError(\"Unrecognized data size for timestamp (expected 4, 8, or 12): \".concat(data.length));\n    }\n}\nexport function decodeTimestampExtension(data) {\n    var timeSpec = decodeTimestampToTimeSpec(data);\n    return new Date(timeSpec.sec * 1e3 + timeSpec.nsec / 1e6);\n}\nexport var timestampExtension = {\n    type: EXT_TIMESTAMP,\n    encode: encodeTimestampExtension,\n    decode: decodeTimestampExtension,\n};\n//# sourceMappingURL=timestamp.mjs.map","// https://github.com/msgpack/msgpack/blob/master/spec.md#timestamp-extension-type\nimport { DecodeError } from \"./DecodeError\";\nimport { getInt64, setInt64 } from \"./utils/int\";\n\nexport const EXT_TIMESTAMP = -1;\n\nexport type TimeSpec = {\n  sec: number;\n  nsec: number;\n};\n\nconst TIMESTAMP32_MAX_SEC = 0x100000000 - 1; // 32-bit unsigned int\nconst TIMESTAMP64_MAX_SEC = 0x400000000 - 1; // 34-bit unsigned int\n\nexport function encodeTimeSpecToTimestamp({ sec, nsec }: TimeSpec): Uint8Array {\n  if (sec >= 0 && nsec >= 0 && sec <= TIMESTAMP64_MAX_SEC) {\n    // Here sec >= 0 && nsec >= 0\n    if (nsec === 0 && sec <= TIMESTAMP32_MAX_SEC) {\n      // timestamp 32 = { sec32 (unsigned) }\n      const rv = new Uint8Array(4);\n      const view = new DataView(rv.buffer);\n      view.setUint32(0, sec);\n      return rv;\n    } else {\n      // timestamp 64 = { nsec30 (unsigned), sec34 (unsigned) }\n      const secHigh = sec / 0x100000000;\n      const secLow = sec & 0xffffffff;\n      const rv = new Uint8Array(8);\n      const view = new DataView(rv.buffer);\n      // nsec30 | secHigh2\n      view.setUint32(0, (nsec << 2) | (secHigh & 0x3));\n      // secLow32\n      view.setUint32(4, secLow);\n      return rv;\n    }\n  } else {\n    // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n    const rv = new Uint8Array(12);\n    const view = new DataView(rv.buffer);\n    view.setUint32(0, nsec);\n    setInt64(view, 4, sec);\n    return rv;\n  }\n}\n\nexport function encodeDateToTimeSpec(date: Date): TimeSpec {\n  const msec = date.getTime();\n  const sec = Math.floor(msec / 1e3);\n  const nsec = (msec - sec * 1e3) * 1e6;\n\n  // Normalizes { sec, nsec } to ensure nsec is unsigned.\n  const nsecInSec = Math.floor(nsec / 1e9);\n  return {\n    sec: sec + nsecInSec,\n    nsec: nsec - nsecInSec * 1e9,\n  };\n}\n\nexport function encodeTimestampExtension(object: unknown): Uint8Array | null {\n  if (object instanceof Date) {\n    const timeSpec = encodeDateToTimeSpec(object);\n    return encodeTimeSpecToTimestamp(timeSpec);\n  } else {\n    return null;\n  }\n}\n\nexport function decodeTimestampToTimeSpec(data: Uint8Array): TimeSpec {\n  const view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n\n  // data may be 32, 64, or 96 bits\n  switch (data.byteLength) {\n    case 4: {\n      // timestamp 32 = { sec32 }\n      const sec = view.getUint32(0);\n      const nsec = 0;\n      return { sec, nsec };\n    }\n    case 8: {\n      // timestamp 64 = { nsec30, sec34 }\n      const nsec30AndSecHigh2 = view.getUint32(0);\n      const secLow32 = view.getUint32(4);\n      const sec = (nsec30AndSecHigh2 & 0x3) * 0x100000000 + secLow32;\n      const nsec = nsec30AndSecHigh2 >>> 2;\n      return { sec, nsec };\n    }\n    case 12: {\n      // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n\n      const sec = getInt64(view, 4);\n      const nsec = view.getUint32(0);\n      return { sec, nsec };\n    }\n    default:\n      throw new DecodeError(`Unrecognized data size for timestamp (expected 4, 8, or 12): ${data.length}`);\n  }\n}\n\nexport function decodeTimestampExtension(data: Uint8Array): Date {\n  const timeSpec = decodeTimestampToTimeSpec(data);\n  return new Date(timeSpec.sec * 1e3 + timeSpec.nsec / 1e6);\n}\n\nexport const timestampExtension = {\n  type: EXT_TIMESTAMP,\n  encode: encodeTimestampExtension,\n  decode: decodeTimestampExtension,\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar DecodeError = /** @class */ (function (_super) {\n    __extends(DecodeError, _super);\n    function DecodeError(message) {\n        var _this = _super.call(this, message) || this;\n        // fix the prototype chain in a cross-platform way\n        var proto = Object.create(DecodeError.prototype);\n        Object.setPrototypeOf(_this, proto);\n        Object.defineProperty(_this, \"name\", {\n            configurable: true,\n            enumerable: false,\n            value: DecodeError.name,\n        });\n        return _this;\n    }\n    return DecodeError;\n}(Error));\nexport { DecodeError };\n//# sourceMappingURL=DecodeError.mjs.map","export class DecodeError extends Error {\n  constructor(message: string) {\n    super(message);\n\n    // fix the prototype chain in a cross-platform way\n    const proto: typeof DecodeError.prototype = Object.create(DecodeError.prototype);\n    Object.setPrototypeOf(this, proto);\n\n    Object.defineProperty(this, \"name\", {\n      configurable: true,\n      enumerable: false,\n      value: DecodeError.name,\n    });\n  }\n}\n","// Integer Utility\nexport var UINT32_MAX = 4294967295;\n// DataView extension to handle int64 / uint64,\n// where the actual range is 53-bits integer (a.k.a. safe integer)\nexport function setUint64(view, offset, value) {\n    var high = value / 4294967296;\n    var low = value; // high bits are truncated by DataView\n    view.setUint32(offset, high);\n    view.setUint32(offset + 4, low);\n}\nexport function setInt64(view, offset, value) {\n    var high = Math.floor(value / 4294967296);\n    var low = value; // high bits are truncated by DataView\n    view.setUint32(offset, high);\n    view.setUint32(offset + 4, low);\n}\nexport function getInt64(view, offset) {\n    var high = view.getInt32(offset);\n    var low = view.getUint32(offset + 4);\n    return high * 4294967296 + low;\n}\nexport function getUint64(view, offset) {\n    var high = view.getUint32(offset);\n    var low = view.getUint32(offset + 4);\n    return high * 4294967296 + low;\n}\n//# sourceMappingURL=int.mjs.map","// Integer Utility\n\nexport const UINT32_MAX = 0xffff_ffff;\n\n// DataView extension to handle int64 / uint64,\n// where the actual range is 53-bits integer (a.k.a. safe integer)\n\nexport function setUint64(view: DataView, offset: number, value: number): void {\n  const high = value / 0x1_0000_0000;\n  const low = value; // high bits are truncated by DataView\n  view.setUint32(offset, high);\n  view.setUint32(offset + 4, low);\n}\n\nexport function setInt64(view: DataView, offset: number, value: number): void {\n  const high = Math.floor(value / 0x1_0000_0000);\n  const low = value; // high bits are truncated by DataView\n  view.setUint32(offset, high);\n  view.setUint32(offset + 4, low);\n}\n\nexport function getInt64(view: DataView, offset: number): number {\n  const high = view.getInt32(offset);\n  const low = view.getUint32(offset + 4);\n  return high * 0x1_0000_0000 + low;\n}\n\nexport function getUint64(view: DataView, offset: number): number {\n  const high = view.getUint32(offset);\n  const low = view.getUint32(offset + 4);\n  return high * 0x1_0000_0000 + low;\n}\n","var _a, _b, _c;\n/* eslint-disable @typescript-eslint/no-unnecessary-condition */\nimport { UINT32_MAX } from \"./int.mjs\";\nvar TEXT_ENCODING_AVAILABLE = (typeof process === \"undefined\" || ((_a = process === null || process === void 0 ? void 0 : process.env) === null || _a === void 0 ? void 0 : _a[\"TEXT_ENCODING\"]) !== \"never\") &&\n    typeof TextEncoder !== \"undefined\" &&\n    typeof TextDecoder !== \"undefined\";\nexport function utf8Count(str) {\n    var strLength = str.length;\n    var byteLength = 0;\n    var pos = 0;\n    while (pos < strLength) {\n        var value = str.charCodeAt(pos++);\n        if ((value & 0xffffff80) === 0) {\n            // 1-byte\n            byteLength++;\n            continue;\n        }\n        else if ((value & 0xfffff800) === 0) {\n            // 2-bytes\n            byteLength += 2;\n        }\n        else {\n            // handle surrogate pair\n            if (value >= 0xd800 && value <= 0xdbff) {\n                // high surrogate\n                if (pos < strLength) {\n                    var extra = str.charCodeAt(pos);\n                    if ((extra & 0xfc00) === 0xdc00) {\n                        ++pos;\n                        value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n                    }\n                }\n            }\n            if ((value & 0xffff0000) === 0) {\n                // 3-byte\n                byteLength += 3;\n            }\n            else {\n                // 4-byte\n                byteLength += 4;\n            }\n        }\n    }\n    return byteLength;\n}\nexport function utf8EncodeJs(str, output, outputOffset) {\n    var strLength = str.length;\n    var offset = outputOffset;\n    var pos = 0;\n    while (pos < strLength) {\n        var value = str.charCodeAt(pos++);\n        if ((value & 0xffffff80) === 0) {\n            // 1-byte\n            output[offset++] = value;\n            continue;\n        }\n        else if ((value & 0xfffff800) === 0) {\n            // 2-bytes\n            output[offset++] = ((value >> 6) & 0x1f) | 0xc0;\n        }\n        else {\n            // handle surrogate pair\n            if (value >= 0xd800 && value <= 0xdbff) {\n                // high surrogate\n                if (pos < strLength) {\n                    var extra = str.charCodeAt(pos);\n                    if ((extra & 0xfc00) === 0xdc00) {\n                        ++pos;\n                        value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n                    }\n                }\n            }\n            if ((value & 0xffff0000) === 0) {\n                // 3-byte\n                output[offset++] = ((value >> 12) & 0x0f) | 0xe0;\n                output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n            }\n            else {\n                // 4-byte\n                output[offset++] = ((value >> 18) & 0x07) | 0xf0;\n                output[offset++] = ((value >> 12) & 0x3f) | 0x80;\n                output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n            }\n        }\n        output[offset++] = (value & 0x3f) | 0x80;\n    }\n}\nvar sharedTextEncoder = TEXT_ENCODING_AVAILABLE ? new TextEncoder() : undefined;\nexport var TEXT_ENCODER_THRESHOLD = !TEXT_ENCODING_AVAILABLE\n    ? UINT32_MAX\n    : typeof process !== \"undefined\" && ((_b = process === null || process === void 0 ? void 0 : process.env) === null || _b === void 0 ? void 0 : _b[\"TEXT_ENCODING\"]) !== \"force\"\n        ? 200\n        : 0;\nfunction utf8EncodeTEencode(str, output, outputOffset) {\n    output.set(sharedTextEncoder.encode(str), outputOffset);\n}\nfunction utf8EncodeTEencodeInto(str, output, outputOffset) {\n    sharedTextEncoder.encodeInto(str, output.subarray(outputOffset));\n}\nexport var utf8EncodeTE = (sharedTextEncoder === null || sharedTextEncoder === void 0 ? void 0 : sharedTextEncoder.encodeInto) ? utf8EncodeTEencodeInto : utf8EncodeTEencode;\nvar CHUNK_SIZE = 4096;\nexport function utf8DecodeJs(bytes, inputOffset, byteLength) {\n    var offset = inputOffset;\n    var end = offset + byteLength;\n    var units = [];\n    var result = \"\";\n    while (offset < end) {\n        var byte1 = bytes[offset++];\n        if ((byte1 & 0x80) === 0) {\n            // 1 byte\n            units.push(byte1);\n        }\n        else if ((byte1 & 0xe0) === 0xc0) {\n            // 2 bytes\n            var byte2 = bytes[offset++] & 0x3f;\n            units.push(((byte1 & 0x1f) << 6) | byte2);\n        }\n        else if ((byte1 & 0xf0) === 0xe0) {\n            // 3 bytes\n            var byte2 = bytes[offset++] & 0x3f;\n            var byte3 = bytes[offset++] & 0x3f;\n            units.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3);\n        }\n        else if ((byte1 & 0xf8) === 0xf0) {\n            // 4 bytes\n            var byte2 = bytes[offset++] & 0x3f;\n            var byte3 = bytes[offset++] & 0x3f;\n            var byte4 = bytes[offset++] & 0x3f;\n            var unit = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;\n            if (unit > 0xffff) {\n                unit -= 0x10000;\n                units.push(((unit >>> 10) & 0x3ff) | 0xd800);\n                unit = 0xdc00 | (unit & 0x3ff);\n            }\n            units.push(unit);\n        }\n        else {\n            units.push(byte1);\n        }\n        if (units.length >= CHUNK_SIZE) {\n            result += String.fromCharCode.apply(String, units);\n            units.length = 0;\n        }\n    }\n    if (units.length > 0) {\n        result += String.fromCharCode.apply(String, units);\n    }\n    return result;\n}\nvar sharedTextDecoder = TEXT_ENCODING_AVAILABLE ? new TextDecoder() : null;\nexport var TEXT_DECODER_THRESHOLD = !TEXT_ENCODING_AVAILABLE\n    ? UINT32_MAX\n    : typeof process !== \"undefined\" && ((_c = process === null || process === void 0 ? void 0 : process.env) === null || _c === void 0 ? void 0 : _c[\"TEXT_DECODER\"]) !== \"force\"\n        ? 200\n        : 0;\nexport function utf8DecodeTD(bytes, inputOffset, byteLength) {\n    var stringBytes = bytes.subarray(inputOffset, inputOffset + byteLength);\n    return sharedTextDecoder.decode(stringBytes);\n}\n//# sourceMappingURL=utf8.mjs.map","/* eslint-disable @typescript-eslint/no-unnecessary-condition */\nimport { UINT32_MAX } from \"./int\";\n\nconst TEXT_ENCODING_AVAILABLE =\n  (typeof process === \"undefined\" || process?.env?.[\"TEXT_ENCODING\"] !== \"never\") &&\n  typeof TextEncoder !== \"undefined\" &&\n  typeof TextDecoder !== \"undefined\";\n\nexport function utf8Count(str: string): number {\n  const strLength = str.length;\n\n  let byteLength = 0;\n  let pos = 0;\n  while (pos < strLength) {\n    let value = str.charCodeAt(pos++);\n\n    if ((value & 0xffffff80) === 0) {\n      // 1-byte\n      byteLength++;\n      continue;\n    } else if ((value & 0xfffff800) === 0) {\n      // 2-bytes\n      byteLength += 2;\n    } else {\n      // handle surrogate pair\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < strLength) {\n          const extra = str.charCodeAt(pos);\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n      }\n\n      if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        byteLength += 3;\n      } else {\n        // 4-byte\n        byteLength += 4;\n      }\n    }\n  }\n  return byteLength;\n}\n\nexport function utf8EncodeJs(str: string, output: Uint8Array, outputOffset: number): void {\n  const strLength = str.length;\n  let offset = outputOffset;\n  let pos = 0;\n  while (pos < strLength) {\n    let value = str.charCodeAt(pos++);\n\n    if ((value & 0xffffff80) === 0) {\n      // 1-byte\n      output[offset++] = value;\n      continue;\n    } else if ((value & 0xfffff800) === 0) {\n      // 2-bytes\n      output[offset++] = ((value >> 6) & 0x1f) | 0xc0;\n    } else {\n      // handle surrogate pair\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < strLength) {\n          const extra = str.charCodeAt(pos);\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n      }\n\n      if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        output[offset++] = ((value >> 12) & 0x0f) | 0xe0;\n        output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n      } else {\n        // 4-byte\n        output[offset++] = ((value >> 18) & 0x07) | 0xf0;\n        output[offset++] = ((value >> 12) & 0x3f) | 0x80;\n        output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n      }\n    }\n\n    output[offset++] = (value & 0x3f) | 0x80;\n  }\n}\n\nconst sharedTextEncoder = TEXT_ENCODING_AVAILABLE ? new TextEncoder() : undefined;\nexport const TEXT_ENCODER_THRESHOLD = !TEXT_ENCODING_AVAILABLE\n  ? UINT32_MAX\n  : typeof process !== \"undefined\" && process?.env?.[\"TEXT_ENCODING\"] !== \"force\"\n  ? 200\n  : 0;\n\nfunction utf8EncodeTEencode(str: string, output: Uint8Array, outputOffset: number): void {\n  output.set(sharedTextEncoder!.encode(str), outputOffset);\n}\n\nfunction utf8EncodeTEencodeInto(str: string, output: Uint8Array, outputOffset: number): void {\n  sharedTextEncoder!.encodeInto(str, output.subarray(outputOffset));\n}\n\nexport const utf8EncodeTE = sharedTextEncoder?.encodeInto ? utf8EncodeTEencodeInto : utf8EncodeTEencode;\n\nconst CHUNK_SIZE = 0x1_000;\n\nexport function utf8DecodeJs(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n  let offset = inputOffset;\n  const end = offset + byteLength;\n\n  const units: Array<number> = [];\n  let result = \"\";\n  while (offset < end) {\n    const byte1 = bytes[offset++]!;\n    if ((byte1 & 0x80) === 0) {\n      // 1 byte\n      units.push(byte1);\n    } else if ((byte1 & 0xe0) === 0xc0) {\n      // 2 bytes\n      const byte2 = bytes[offset++]! & 0x3f;\n      units.push(((byte1 & 0x1f) << 6) | byte2);\n    } else if ((byte1 & 0xf0) === 0xe0) {\n      // 3 bytes\n      const byte2 = bytes[offset++]! & 0x3f;\n      const byte3 = bytes[offset++]! & 0x3f;\n      units.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3);\n    } else if ((byte1 & 0xf8) === 0xf0) {\n      // 4 bytes\n      const byte2 = bytes[offset++]! & 0x3f;\n      const byte3 = bytes[offset++]! & 0x3f;\n      const byte4 = bytes[offset++]! & 0x3f;\n      let unit = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;\n      if (unit > 0xffff) {\n        unit -= 0x10000;\n        units.push(((unit >>> 10) & 0x3ff) | 0xd800);\n        unit = 0xdc00 | (unit & 0x3ff);\n      }\n      units.push(unit);\n    } else {\n      units.push(byte1);\n    }\n\n    if (units.length >= CHUNK_SIZE) {\n      result += String.fromCharCode(...units);\n      units.length = 0;\n    }\n  }\n\n  if (units.length > 0) {\n    result += String.fromCharCode(...units);\n  }\n\n  return result;\n}\n\nconst sharedTextDecoder = TEXT_ENCODING_AVAILABLE ? new TextDecoder() : null;\nexport const TEXT_DECODER_THRESHOLD = !TEXT_ENCODING_AVAILABLE\n  ? UINT32_MAX\n  : typeof process !== \"undefined\" && process?.env?.[\"TEXT_DECODER\"] !== \"force\"\n  ? 200\n  : 0;\n\nexport function utf8DecodeTD(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n  const stringBytes = bytes.subarray(inputOffset, inputOffset + byteLength);\n  return sharedTextDecoder!.decode(stringBytes);\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","export function ensureUint8Array(buffer) {\n    if (buffer instanceof Uint8Array) {\n        return buffer;\n    }\n    else if (ArrayBuffer.isView(buffer)) {\n        return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n    }\n    else if (buffer instanceof ArrayBuffer) {\n        return new Uint8Array(buffer);\n    }\n    else {\n        // ArrayLike<number>\n        return Uint8Array.from(buffer);\n    }\n}\nexport function createDataView(buffer) {\n    if (buffer instanceof ArrayBuffer) {\n        return new DataView(buffer);\n    }\n    var bufferView = ensureUint8Array(buffer);\n    return new DataView(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\n}\n//# sourceMappingURL=typedArrays.mjs.map","export function ensureUint8Array(buffer: ArrayLike<number> | Uint8Array | ArrayBufferView | ArrayBuffer): Uint8Array {\n  if (buffer instanceof Uint8Array) {\n    return buffer;\n  } else if (ArrayBuffer.isView(buffer)) {\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n  } else if (buffer instanceof ArrayBuffer) {\n    return new Uint8Array(buffer);\n  } else {\n    // ArrayLike<number>\n    return Uint8Array.from(buffer);\n  }\n}\n\nexport function createDataView(buffer: ArrayLike<number> | ArrayBufferView | ArrayBuffer): DataView {\n  if (buffer instanceof ArrayBuffer) {\n    return new DataView(buffer);\n  }\n\n  const bufferView = ensureUint8Array(buffer);\n  return new DataView(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\n}\n","import { utf8DecodeJs } from \"./utils/utf8.mjs\";\nvar DEFAULT_MAX_KEY_LENGTH = 16;\nvar DEFAULT_MAX_LENGTH_PER_KEY = 16;\nvar CachedKeyDecoder = /** @class */ (function () {\n    function CachedKeyDecoder(maxKeyLength, maxLengthPerKey) {\n        if (maxKeyLength === void 0) { maxKeyLength = DEFAULT_MAX_KEY_LENGTH; }\n        if (maxLengthPerKey === void 0) { maxLengthPerKey = DEFAULT_MAX_LENGTH_PER_KEY; }\n        this.maxKeyLength = maxKeyLength;\n        this.maxLengthPerKey = maxLengthPerKey;\n        this.hit = 0;\n        this.miss = 0;\n        // avoid `new Array(N)`, which makes a sparse array,\n        // because a sparse array is typically slower than a non-sparse array.\n        this.caches = [];\n        for (var i = 0; i < this.maxKeyLength; i++) {\n            this.caches.push([]);\n        }\n    }\n    CachedKeyDecoder.prototype.canBeCached = function (byteLength) {\n        return byteLength > 0 && byteLength <= this.maxKeyLength;\n    };\n    CachedKeyDecoder.prototype.find = function (bytes, inputOffset, byteLength) {\n        var records = this.caches[byteLength - 1];\n        FIND_CHUNK: for (var _i = 0, records_1 = records; _i < records_1.length; _i++) {\n            var record = records_1[_i];\n            var recordBytes = record.bytes;\n            for (var j = 0; j < byteLength; j++) {\n                if (recordBytes[j] !== bytes[inputOffset + j]) {\n                    continue FIND_CHUNK;\n                }\n            }\n            return record.str;\n        }\n        return null;\n    };\n    CachedKeyDecoder.prototype.store = function (bytes, value) {\n        var records = this.caches[bytes.length - 1];\n        var record = { bytes: bytes, str: value };\n        if (records.length >= this.maxLengthPerKey) {\n            // `records` are full!\n            // Set `record` to an arbitrary position.\n            records[(Math.random() * records.length) | 0] = record;\n        }\n        else {\n            records.push(record);\n        }\n    };\n    CachedKeyDecoder.prototype.decode = function (bytes, inputOffset, byteLength) {\n        var cachedValue = this.find(bytes, inputOffset, byteLength);\n        if (cachedValue != null) {\n            this.hit++;\n            return cachedValue;\n        }\n        this.miss++;\n        var str = utf8DecodeJs(bytes, inputOffset, byteLength);\n        // Ensure to copy a slice of bytes because the byte may be NodeJS Buffer and Buffer#slice() returns a reference to its internal ArrayBuffer.\n        var slicedCopyOfBytes = Uint8Array.prototype.slice.call(bytes, inputOffset, inputOffset + byteLength);\n        this.store(slicedCopyOfBytes, str);\n        return str;\n    };\n    return CachedKeyDecoder;\n}());\nexport { CachedKeyDecoder };\n//# sourceMappingURL=CachedKeyDecoder.mjs.map","import { utf8DecodeJs } from \"./utils/utf8\";\n\nconst DEFAULT_MAX_KEY_LENGTH = 16;\nconst DEFAULT_MAX_LENGTH_PER_KEY = 16;\n\nexport interface KeyDecoder {\n  canBeCached(byteLength: number): boolean;\n  decode(bytes: Uint8Array, inputOffset: number, byteLength: number): string;\n}\ninterface KeyCacheRecord {\n  readonly bytes: Uint8Array;\n  readonly str: string;\n}\n\nexport class CachedKeyDecoder implements KeyDecoder {\n  hit = 0;\n  miss = 0;\n  private readonly caches: Array<Array<KeyCacheRecord>>;\n\n  constructor(readonly maxKeyLength = DEFAULT_MAX_KEY_LENGTH, readonly maxLengthPerKey = DEFAULT_MAX_LENGTH_PER_KEY) {\n    // avoid `new Array(N)`, which makes a sparse array,\n    // because a sparse array is typically slower than a non-sparse array.\n    this.caches = [];\n    for (let i = 0; i < this.maxKeyLength; i++) {\n      this.caches.push([]);\n    }\n  }\n\n  public canBeCached(byteLength: number): boolean {\n    return byteLength > 0 && byteLength <= this.maxKeyLength;\n  }\n\n  private find(bytes: Uint8Array, inputOffset: number, byteLength: number): string | null {\n    const records = this.caches[byteLength - 1]!;\n\n    FIND_CHUNK: for (const record of records) {\n      const recordBytes = record.bytes;\n\n      for (let j = 0; j < byteLength; j++) {\n        if (recordBytes[j] !== bytes[inputOffset + j]) {\n          continue FIND_CHUNK;\n        }\n      }\n      return record.str;\n    }\n    return null;\n  }\n\n  private store(bytes: Uint8Array, value: string) {\n    const records = this.caches[bytes.length - 1]!;\n    const record: KeyCacheRecord = { bytes, str: value };\n\n    if (records.length >= this.maxLengthPerKey) {\n      // `records` are full!\n      // Set `record` to an arbitrary position.\n      records[(Math.random() * records.length) | 0] = record;\n    } else {\n      records.push(record);\n    }\n  }\n\n  public decode(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n    const cachedValue = this.find(bytes, inputOffset, byteLength);\n    if (cachedValue != null) {\n      this.hit++;\n      return cachedValue;\n    }\n    this.miss++;\n\n    const str = utf8DecodeJs(bytes, inputOffset, byteLength);\n    // Ensure to copy a slice of bytes because the byte may be NodeJS Buffer and Buffer#slice() returns a reference to its internal ArrayBuffer.\n    const slicedCopyOfBytes = Uint8Array.prototype.slice.call(bytes, inputOffset, inputOffset + byteLength);\n    this.store(slicedCopyOfBytes, str);\n    return str;\n  }\n}\n","// utility for whatwg streams\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nexport function isAsyncIterable(object) {\n    return object[Symbol.asyncIterator] != null;\n}\nfunction assertNonNull(value) {\n    if (value == null) {\n        throw new Error(\"Assertion Failure: value must not be null nor undefined\");\n    }\n}\nexport function asyncIterableFromStream(stream) {\n    return __asyncGenerator(this, arguments, function asyncIterableFromStream_1() {\n        var reader, _a, done, value;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    reader = stream.getReader();\n                    _b.label = 1;\n                case 1:\n                    _b.trys.push([1, , 9, 10]);\n                    _b.label = 2;\n                case 2:\n                    if (!true) return [3 /*break*/, 8];\n                    return [4 /*yield*/, __await(reader.read())];\n                case 3:\n                    _a = _b.sent(), done = _a.done, value = _a.value;\n                    if (!done) return [3 /*break*/, 5];\n                    return [4 /*yield*/, __await(void 0)];\n                case 4: return [2 /*return*/, _b.sent()];\n                case 5:\n                    assertNonNull(value);\n                    return [4 /*yield*/, __await(value)];\n                case 6: return [4 /*yield*/, _b.sent()];\n                case 7:\n                    _b.sent();\n                    return [3 /*break*/, 2];\n                case 8: return [3 /*break*/, 10];\n                case 9:\n                    reader.releaseLock();\n                    return [7 /*endfinally*/];\n                case 10: return [2 /*return*/];\n            }\n        });\n    });\n}\nexport function ensureAsyncIterable(streamLike) {\n    if (isAsyncIterable(streamLike)) {\n        return streamLike;\n    }\n    else {\n        return asyncIterableFromStream(streamLike);\n    }\n}\n//# sourceMappingURL=stream.mjs.map","// utility for whatwg streams\n\n// The living standard of whatwg streams says\n// ReadableStream is also AsyncIterable, but\n// as of June 2019, no browser implements it.\n// See https://streams.spec.whatwg.org/ for details\nexport type ReadableStreamLike<T> = AsyncIterable<T> | ReadableStream<T>;\n\nexport function isAsyncIterable<T>(object: ReadableStreamLike<T>): object is AsyncIterable<T> {\n  return (object as any)[Symbol.asyncIterator] != null;\n}\n\nfunction assertNonNull<T>(value: T | null | undefined): asserts value is T {\n  if (value == null) {\n    throw new Error(\"Assertion Failure: value must not be null nor undefined\");\n  }\n}\n\nexport async function* asyncIterableFromStream<T>(stream: ReadableStream<T>): AsyncIterable<T> {\n  const reader = stream.getReader();\n\n  try {\n    while (true) {\n      const { done, value } = await reader.read();\n      if (done) {\n        return;\n      }\n      assertNonNull(value);\n      yield value;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function ensureAsyncIterable<T>(streamLike: ReadableStreamLike<T>): AsyncIterable<T> {\n  if (isAsyncIterable(streamLike)) {\n    return streamLike;\n  } else {\n    return asyncIterableFromStream(streamLike);\n  }\n}\n","import { Decoder } from \"./Decoder.mjs\";\nexport var defaultDecodeOptions = {};\n/**\n * It decodes a single MessagePack object in a buffer.\n *\n * This is a synchronous decoding function.\n * See other variants for asynchronous decoding: {@link decodeAsync()}, {@link decodeStream()}, or {@link decodeArrayStream()}.\n *\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decode(buffer, options) {\n    if (options === void 0) { options = defaultDecodeOptions; }\n    var decoder = new Decoder(options.extensionCodec, options.context, options.maxStrLength, options.maxBinLength, options.maxArrayLength, options.maxMapLength, options.maxExtLength);\n    return decoder.decode(buffer);\n}\n/**\n * It decodes multiple MessagePack objects in a buffer.\n * This is corresponding to {@link decodeMultiStream()}.\n *\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decodeMulti(buffer, options) {\n    if (options === void 0) { options = defaultDecodeOptions; }\n    var decoder = new Decoder(options.extensionCodec, options.context, options.maxStrLength, options.maxBinLength, options.maxArrayLength, options.maxMapLength, options.maxExtLength);\n    return decoder.decodeMulti(buffer);\n}\n//# sourceMappingURL=decode.mjs.map","import { Decoder } from \"./Decoder\";\nimport type { ExtensionCodecType } from \"./ExtensionCodec\";\nimport type { ContextOf, SplitUndefined } from \"./context\";\n\nexport type DecodeOptions<ContextType = undefined> = Readonly<\n  Partial<{\n    extensionCodec: ExtensionCodecType<ContextType>;\n\n    /**\n     * Maximum string length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxStrLength: number;\n    /**\n     * Maximum binary length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxBinLength: number;\n    /**\n     * Maximum array length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxArrayLength: number;\n    /**\n     * Maximum map length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxMapLength: number;\n    /**\n     * Maximum extension length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxExtLength: number;\n  }>\n> &\n  ContextOf<ContextType>;\n\nexport const defaultDecodeOptions: DecodeOptions = {};\n\n/**\n * It decodes a single MessagePack object in a buffer.\n *\n * This is a synchronous decoding function.\n * See other variants for asynchronous decoding: {@link decodeAsync()}, {@link decodeStream()}, or {@link decodeArrayStream()}.\n *\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decode<ContextType = undefined>(\n  buffer: ArrayLike<number> | BufferSource,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): unknown {\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n  return decoder.decode(buffer);\n}\n\n/**\n * It decodes multiple MessagePack objects in a buffer.\n * This is corresponding to {@link decodeMultiStream()}.\n *\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decodeMulti<ContextType = undefined>(\n  buffer: ArrayLike<number> | BufferSource,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): Generator<unknown, void, unknown> {\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n  return decoder.decodeMulti(buffer);\n}\n","import { utf8EncodeJs, utf8Count, TEXT_ENCODER_THRESHOLD, utf8EncodeTE } from \"./utils/utf8.mjs\";\nimport { ExtensionCodec } from \"./ExtensionCodec.mjs\";\nimport { setInt64, setUint64 } from \"./utils/int.mjs\";\nimport { ensureUint8Array } from \"./utils/typedArrays.mjs\";\nexport var DEFAULT_MAX_DEPTH = 100;\nexport var DEFAULT_INITIAL_BUFFER_SIZE = 2048;\nvar Encoder = /** @class */ (function () {\n    function Encoder(extensionCodec, context, maxDepth, initialBufferSize, sortKeys, forceFloat32, ignoreUndefined, forceIntegerToFloat) {\n        if (extensionCodec === void 0) { extensionCodec = ExtensionCodec.defaultCodec; }\n        if (context === void 0) { context = undefined; }\n        if (maxDepth === void 0) { maxDepth = DEFAULT_MAX_DEPTH; }\n        if (initialBufferSize === void 0) { initialBufferSize = DEFAULT_INITIAL_BUFFER_SIZE; }\n        if (sortKeys === void 0) { sortKeys = false; }\n        if (forceFloat32 === void 0) { forceFloat32 = false; }\n        if (ignoreUndefined === void 0) { ignoreUndefined = false; }\n        if (forceIntegerToFloat === void 0) { forceIntegerToFloat = false; }\n        this.extensionCodec = extensionCodec;\n        this.context = context;\n        this.maxDepth = maxDepth;\n        this.initialBufferSize = initialBufferSize;\n        this.sortKeys = sortKeys;\n        this.forceFloat32 = forceFloat32;\n        this.ignoreUndefined = ignoreUndefined;\n        this.forceIntegerToFloat = forceIntegerToFloat;\n        this.pos = 0;\n        this.view = new DataView(new ArrayBuffer(this.initialBufferSize));\n        this.bytes = new Uint8Array(this.view.buffer);\n    }\n    Encoder.prototype.reinitializeState = function () {\n        this.pos = 0;\n    };\n    /**\n     * This is almost equivalent to {@link Encoder#encode}, but it returns an reference of the encoder's internal buffer and thus much faster than {@link Encoder#encode}.\n     *\n     * @returns Encodes the object and returns a shared reference the encoder's internal buffer.\n     */\n    Encoder.prototype.encodeSharedRef = function (object) {\n        this.reinitializeState();\n        this.doEncode(object, 1);\n        return this.bytes.subarray(0, this.pos);\n    };\n    /**\n     * @returns Encodes the object and returns a copy of the encoder's internal buffer.\n     */\n    Encoder.prototype.encode = function (object) {\n        this.reinitializeState();\n        this.doEncode(object, 1);\n        return this.bytes.slice(0, this.pos);\n    };\n    Encoder.prototype.doEncode = function (object, depth) {\n        if (depth > this.maxDepth) {\n            throw new Error(\"Too deep objects in depth \".concat(depth));\n        }\n        if (object == null) {\n            this.encodeNil();\n        }\n        else if (typeof object === \"boolean\") {\n            this.encodeBoolean(object);\n        }\n        else if (typeof object === \"number\") {\n            this.encodeNumber(object);\n        }\n        else if (typeof object === \"string\") {\n            this.encodeString(object);\n        }\n        else {\n            this.encodeObject(object, depth);\n        }\n    };\n    Encoder.prototype.ensureBufferSizeToWrite = function (sizeToWrite) {\n        var requiredSize = this.pos + sizeToWrite;\n        if (this.view.byteLength < requiredSize) {\n            this.resizeBuffer(requiredSize * 2);\n        }\n    };\n    Encoder.prototype.resizeBuffer = function (newSize) {\n        var newBuffer = new ArrayBuffer(newSize);\n        var newBytes = new Uint8Array(newBuffer);\n        var newView = new DataView(newBuffer);\n        newBytes.set(this.bytes);\n        this.view = newView;\n        this.bytes = newBytes;\n    };\n    Encoder.prototype.encodeNil = function () {\n        this.writeU8(0xc0);\n    };\n    Encoder.prototype.encodeBoolean = function (object) {\n        if (object === false) {\n            this.writeU8(0xc2);\n        }\n        else {\n            this.writeU8(0xc3);\n        }\n    };\n    Encoder.prototype.encodeNumber = function (object) {\n        if (Number.isSafeInteger(object) && !this.forceIntegerToFloat) {\n            if (object >= 0) {\n                if (object < 0x80) {\n                    // positive fixint\n                    this.writeU8(object);\n                }\n                else if (object < 0x100) {\n                    // uint 8\n                    this.writeU8(0xcc);\n                    this.writeU8(object);\n                }\n                else if (object < 0x10000) {\n                    // uint 16\n                    this.writeU8(0xcd);\n                    this.writeU16(object);\n                }\n                else if (object < 0x100000000) {\n                    // uint 32\n                    this.writeU8(0xce);\n                    this.writeU32(object);\n                }\n                else {\n                    // uint 64\n                    this.writeU8(0xcf);\n                    this.writeU64(object);\n                }\n            }\n            else {\n                if (object >= -0x20) {\n                    // negative fixint\n                    this.writeU8(0xe0 | (object + 0x20));\n                }\n                else if (object >= -0x80) {\n                    // int 8\n                    this.writeU8(0xd0);\n                    this.writeI8(object);\n                }\n                else if (object >= -0x8000) {\n                    // int 16\n                    this.writeU8(0xd1);\n                    this.writeI16(object);\n                }\n                else if (object >= -0x80000000) {\n                    // int 32\n                    this.writeU8(0xd2);\n                    this.writeI32(object);\n                }\n                else {\n                    // int 64\n                    this.writeU8(0xd3);\n                    this.writeI64(object);\n                }\n            }\n        }\n        else {\n            // non-integer numbers\n            if (this.forceFloat32) {\n                // float 32\n                this.writeU8(0xca);\n                this.writeF32(object);\n            }\n            else {\n                // float 64\n                this.writeU8(0xcb);\n                this.writeF64(object);\n            }\n        }\n    };\n    Encoder.prototype.writeStringHeader = function (byteLength) {\n        if (byteLength < 32) {\n            // fixstr\n            this.writeU8(0xa0 + byteLength);\n        }\n        else if (byteLength < 0x100) {\n            // str 8\n            this.writeU8(0xd9);\n            this.writeU8(byteLength);\n        }\n        else if (byteLength < 0x10000) {\n            // str 16\n            this.writeU8(0xda);\n            this.writeU16(byteLength);\n        }\n        else if (byteLength < 0x100000000) {\n            // str 32\n            this.writeU8(0xdb);\n            this.writeU32(byteLength);\n        }\n        else {\n            throw new Error(\"Too long string: \".concat(byteLength, \" bytes in UTF-8\"));\n        }\n    };\n    Encoder.prototype.encodeString = function (object) {\n        var maxHeaderSize = 1 + 4;\n        var strLength = object.length;\n        if (strLength > TEXT_ENCODER_THRESHOLD) {\n            var byteLength = utf8Count(object);\n            this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\n            this.writeStringHeader(byteLength);\n            utf8EncodeTE(object, this.bytes, this.pos);\n            this.pos += byteLength;\n        }\n        else {\n            var byteLength = utf8Count(object);\n            this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\n            this.writeStringHeader(byteLength);\n            utf8EncodeJs(object, this.bytes, this.pos);\n            this.pos += byteLength;\n        }\n    };\n    Encoder.prototype.encodeObject = function (object, depth) {\n        // try to encode objects with custom codec first of non-primitives\n        var ext = this.extensionCodec.tryToEncode(object, this.context);\n        if (ext != null) {\n            this.encodeExtension(ext);\n        }\n        else if (Array.isArray(object)) {\n            this.encodeArray(object, depth);\n        }\n        else if (ArrayBuffer.isView(object)) {\n            this.encodeBinary(object);\n        }\n        else if (typeof object === \"object\") {\n            this.encodeMap(object, depth);\n        }\n        else {\n            // symbol, function and other special object come here unless extensionCodec handles them.\n            throw new Error(\"Unrecognized object: \".concat(Object.prototype.toString.apply(object)));\n        }\n    };\n    Encoder.prototype.encodeBinary = function (object) {\n        var size = object.byteLength;\n        if (size < 0x100) {\n            // bin 8\n            this.writeU8(0xc4);\n            this.writeU8(size);\n        }\n        else if (size < 0x10000) {\n            // bin 16\n            this.writeU8(0xc5);\n            this.writeU16(size);\n        }\n        else if (size < 0x100000000) {\n            // bin 32\n            this.writeU8(0xc6);\n            this.writeU32(size);\n        }\n        else {\n            throw new Error(\"Too large binary: \".concat(size));\n        }\n        var bytes = ensureUint8Array(object);\n        this.writeU8a(bytes);\n    };\n    Encoder.prototype.encodeArray = function (object, depth) {\n        var size = object.length;\n        if (size < 16) {\n            // fixarray\n            this.writeU8(0x90 + size);\n        }\n        else if (size < 0x10000) {\n            // array 16\n            this.writeU8(0xdc);\n            this.writeU16(size);\n        }\n        else if (size < 0x100000000) {\n            // array 32\n            this.writeU8(0xdd);\n            this.writeU32(size);\n        }\n        else {\n            throw new Error(\"Too large array: \".concat(size));\n        }\n        for (var _i = 0, object_1 = object; _i < object_1.length; _i++) {\n            var item = object_1[_i];\n            this.doEncode(item, depth + 1);\n        }\n    };\n    Encoder.prototype.countWithoutUndefined = function (object, keys) {\n        var count = 0;\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            if (object[key] !== undefined) {\n                count++;\n            }\n        }\n        return count;\n    };\n    Encoder.prototype.encodeMap = function (object, depth) {\n        var keys = Object.keys(object);\n        if (this.sortKeys) {\n            keys.sort();\n        }\n        var size = this.ignoreUndefined ? this.countWithoutUndefined(object, keys) : keys.length;\n        if (size < 16) {\n            // fixmap\n            this.writeU8(0x80 + size);\n        }\n        else if (size < 0x10000) {\n            // map 16\n            this.writeU8(0xde);\n            this.writeU16(size);\n        }\n        else if (size < 0x100000000) {\n            // map 32\n            this.writeU8(0xdf);\n            this.writeU32(size);\n        }\n        else {\n            throw new Error(\"Too large map object: \".concat(size));\n        }\n        for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n            var key = keys_2[_i];\n            var value = object[key];\n            if (!(this.ignoreUndefined && value === undefined)) {\n                this.encodeString(key);\n                this.doEncode(value, depth + 1);\n            }\n        }\n    };\n    Encoder.prototype.encodeExtension = function (ext) {\n        var size = ext.data.length;\n        if (size === 1) {\n            // fixext 1\n            this.writeU8(0xd4);\n        }\n        else if (size === 2) {\n            // fixext 2\n            this.writeU8(0xd5);\n        }\n        else if (size === 4) {\n            // fixext 4\n            this.writeU8(0xd6);\n        }\n        else if (size === 8) {\n            // fixext 8\n            this.writeU8(0xd7);\n        }\n        else if (size === 16) {\n            // fixext 16\n            this.writeU8(0xd8);\n        }\n        else if (size < 0x100) {\n            // ext 8\n            this.writeU8(0xc7);\n            this.writeU8(size);\n        }\n        else if (size < 0x10000) {\n            // ext 16\n            this.writeU8(0xc8);\n            this.writeU16(size);\n        }\n        else if (size < 0x100000000) {\n            // ext 32\n            this.writeU8(0xc9);\n            this.writeU32(size);\n        }\n        else {\n            throw new Error(\"Too large extension object: \".concat(size));\n        }\n        this.writeI8(ext.type);\n        this.writeU8a(ext.data);\n    };\n    Encoder.prototype.writeU8 = function (value) {\n        this.ensureBufferSizeToWrite(1);\n        this.view.setUint8(this.pos, value);\n        this.pos++;\n    };\n    Encoder.prototype.writeU8a = function (values) {\n        var size = values.length;\n        this.ensureBufferSizeToWrite(size);\n        this.bytes.set(values, this.pos);\n        this.pos += size;\n    };\n    Encoder.prototype.writeI8 = function (value) {\n        this.ensureBufferSizeToWrite(1);\n        this.view.setInt8(this.pos, value);\n        this.pos++;\n    };\n    Encoder.prototype.writeU16 = function (value) {\n        this.ensureBufferSizeToWrite(2);\n        this.view.setUint16(this.pos, value);\n        this.pos += 2;\n    };\n    Encoder.prototype.writeI16 = function (value) {\n        this.ensureBufferSizeToWrite(2);\n        this.view.setInt16(this.pos, value);\n        this.pos += 2;\n    };\n    Encoder.prototype.writeU32 = function (value) {\n        this.ensureBufferSizeToWrite(4);\n        this.view.setUint32(this.pos, value);\n        this.pos += 4;\n    };\n    Encoder.prototype.writeI32 = function (value) {\n        this.ensureBufferSizeToWrite(4);\n        this.view.setInt32(this.pos, value);\n        this.pos += 4;\n    };\n    Encoder.prototype.writeF32 = function (value) {\n        this.ensureBufferSizeToWrite(4);\n        this.view.setFloat32(this.pos, value);\n        this.pos += 4;\n    };\n    Encoder.prototype.writeF64 = function (value) {\n        this.ensureBufferSizeToWrite(8);\n        this.view.setFloat64(this.pos, value);\n        this.pos += 8;\n    };\n    Encoder.prototype.writeU64 = function (value) {\n        this.ensureBufferSizeToWrite(8);\n        setUint64(this.view, this.pos, value);\n        this.pos += 8;\n    };\n    Encoder.prototype.writeI64 = function (value) {\n        this.ensureBufferSizeToWrite(8);\n        setInt64(this.view, this.pos, value);\n        this.pos += 8;\n    };\n    return Encoder;\n}());\nexport { Encoder };\n//# sourceMappingURL=Encoder.mjs.map","import { utf8EncodeJs, utf8Count, TEXT_ENCODER_THRESHOLD, utf8EncodeTE } from \"./utils/utf8\";\nimport { ExtensionCodec, ExtensionCodecType } from \"./ExtensionCodec\";\nimport { setInt64, setUint64 } from \"./utils/int\";\nimport { ensureUint8Array } from \"./utils/typedArrays\";\nimport type { ExtData } from \"./ExtData\";\n\nexport const DEFAULT_MAX_DEPTH = 100;\nexport const DEFAULT_INITIAL_BUFFER_SIZE = 2048;\n\nexport class Encoder<ContextType = undefined> {\n  private pos = 0;\n  private view = new DataView(new ArrayBuffer(this.initialBufferSize));\n  private bytes = new Uint8Array(this.view.buffer);\n\n  public constructor(\n    private readonly extensionCodec: ExtensionCodecType<ContextType> = ExtensionCodec.defaultCodec as any,\n    private readonly context: ContextType = undefined as any,\n    private readonly maxDepth = DEFAULT_MAX_DEPTH,\n    private readonly initialBufferSize = DEFAULT_INITIAL_BUFFER_SIZE,\n    private readonly sortKeys = false,\n    private readonly forceFloat32 = false,\n    private readonly ignoreUndefined = false,\n    private readonly forceIntegerToFloat = false,\n  ) {}\n\n  private reinitializeState() {\n    this.pos = 0;\n  }\n\n  /**\n   * This is almost equivalent to {@link Encoder#encode}, but it returns an reference of the encoder's internal buffer and thus much faster than {@link Encoder#encode}.\n   *\n   * @returns Encodes the object and returns a shared reference the encoder's internal buffer.\n   */\n  public encodeSharedRef(object: unknown): Uint8Array {\n    this.reinitializeState();\n    this.doEncode(object, 1);\n    return this.bytes.subarray(0, this.pos);\n  }\n\n  /**\n   * @returns Encodes the object and returns a copy of the encoder's internal buffer.\n   */\n  public encode(object: unknown): Uint8Array {\n    this.reinitializeState();\n    this.doEncode(object, 1);\n    return this.bytes.slice(0, this.pos);\n  }\n\n  private doEncode(object: unknown, depth: number): void {\n    if (depth > this.maxDepth) {\n      throw new Error(`Too deep objects in depth ${depth}`);\n    }\n\n    if (object == null) {\n      this.encodeNil();\n    } else if (typeof object === \"boolean\") {\n      this.encodeBoolean(object);\n    } else if (typeof object === \"number\") {\n      this.encodeNumber(object);\n    } else if (typeof object === \"string\") {\n      this.encodeString(object);\n    } else {\n      this.encodeObject(object, depth);\n    }\n  }\n\n  private ensureBufferSizeToWrite(sizeToWrite: number) {\n    const requiredSize = this.pos + sizeToWrite;\n\n    if (this.view.byteLength < requiredSize) {\n      this.resizeBuffer(requiredSize * 2);\n    }\n  }\n\n  private resizeBuffer(newSize: number) {\n    const newBuffer = new ArrayBuffer(newSize);\n    const newBytes = new Uint8Array(newBuffer);\n    const newView = new DataView(newBuffer);\n\n    newBytes.set(this.bytes);\n\n    this.view = newView;\n    this.bytes = newBytes;\n  }\n\n  private encodeNil() {\n    this.writeU8(0xc0);\n  }\n\n  private encodeBoolean(object: boolean) {\n    if (object === false) {\n      this.writeU8(0xc2);\n    } else {\n      this.writeU8(0xc3);\n    }\n  }\n  private encodeNumber(object: number) {\n    if (Number.isSafeInteger(object) && !this.forceIntegerToFloat) {\n      if (object >= 0) {\n        if (object < 0x80) {\n          // positive fixint\n          this.writeU8(object);\n        } else if (object < 0x100) {\n          // uint 8\n          this.writeU8(0xcc);\n          this.writeU8(object);\n        } else if (object < 0x10000) {\n          // uint 16\n          this.writeU8(0xcd);\n          this.writeU16(object);\n        } else if (object < 0x100000000) {\n          // uint 32\n          this.writeU8(0xce);\n          this.writeU32(object);\n        } else {\n          // uint 64\n          this.writeU8(0xcf);\n          this.writeU64(object);\n        }\n      } else {\n        if (object >= -0x20) {\n          // negative fixint\n          this.writeU8(0xe0 | (object + 0x20));\n        } else if (object >= -0x80) {\n          // int 8\n          this.writeU8(0xd0);\n          this.writeI8(object);\n        } else if (object >= -0x8000) {\n          // int 16\n          this.writeU8(0xd1);\n          this.writeI16(object);\n        } else if (object >= -0x80000000) {\n          // int 32\n          this.writeU8(0xd2);\n          this.writeI32(object);\n        } else {\n          // int 64\n          this.writeU8(0xd3);\n          this.writeI64(object);\n        }\n      }\n    } else {\n      // non-integer numbers\n      if (this.forceFloat32) {\n        // float 32\n        this.writeU8(0xca);\n        this.writeF32(object);\n      } else {\n        // float 64\n        this.writeU8(0xcb);\n        this.writeF64(object);\n      }\n    }\n  }\n\n  private writeStringHeader(byteLength: number) {\n    if (byteLength < 32) {\n      // fixstr\n      this.writeU8(0xa0 + byteLength);\n    } else if (byteLength < 0x100) {\n      // str 8\n      this.writeU8(0xd9);\n      this.writeU8(byteLength);\n    } else if (byteLength < 0x10000) {\n      // str 16\n      this.writeU8(0xda);\n      this.writeU16(byteLength);\n    } else if (byteLength < 0x100000000) {\n      // str 32\n      this.writeU8(0xdb);\n      this.writeU32(byteLength);\n    } else {\n      throw new Error(`Too long string: ${byteLength} bytes in UTF-8`);\n    }\n  }\n\n  private encodeString(object: string) {\n    const maxHeaderSize = 1 + 4;\n    const strLength = object.length;\n\n    if (strLength > TEXT_ENCODER_THRESHOLD) {\n      const byteLength = utf8Count(object);\n      this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\n      this.writeStringHeader(byteLength);\n      utf8EncodeTE(object, this.bytes, this.pos);\n      this.pos += byteLength;\n    } else {\n      const byteLength = utf8Count(object);\n      this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\n      this.writeStringHeader(byteLength);\n      utf8EncodeJs(object, this.bytes, this.pos);\n      this.pos += byteLength;\n    }\n  }\n\n  private encodeObject(object: unknown, depth: number) {\n    // try to encode objects with custom codec first of non-primitives\n    const ext = this.extensionCodec.tryToEncode(object, this.context);\n    if (ext != null) {\n      this.encodeExtension(ext);\n    } else if (Array.isArray(object)) {\n      this.encodeArray(object, depth);\n    } else if (ArrayBuffer.isView(object)) {\n      this.encodeBinary(object);\n    } else if (typeof object === \"object\") {\n      this.encodeMap(object as Record<string, unknown>, depth);\n    } else {\n      // symbol, function and other special object come here unless extensionCodec handles them.\n      throw new Error(`Unrecognized object: ${Object.prototype.toString.apply(object)}`);\n    }\n  }\n\n  private encodeBinary(object: ArrayBufferView) {\n    const size = object.byteLength;\n    if (size < 0x100) {\n      // bin 8\n      this.writeU8(0xc4);\n      this.writeU8(size);\n    } else if (size < 0x10000) {\n      // bin 16\n      this.writeU8(0xc5);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // bin 32\n      this.writeU8(0xc6);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large binary: ${size}`);\n    }\n    const bytes = ensureUint8Array(object);\n    this.writeU8a(bytes);\n  }\n\n  private encodeArray(object: Array<unknown>, depth: number) {\n    const size = object.length;\n    if (size < 16) {\n      // fixarray\n      this.writeU8(0x90 + size);\n    } else if (size < 0x10000) {\n      // array 16\n      this.writeU8(0xdc);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // array 32\n      this.writeU8(0xdd);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large array: ${size}`);\n    }\n    for (const item of object) {\n      this.doEncode(item, depth + 1);\n    }\n  }\n\n  private countWithoutUndefined(object: Record<string, unknown>, keys: ReadonlyArray<string>): number {\n    let count = 0;\n\n    for (const key of keys) {\n      if (object[key] !== undefined) {\n        count++;\n      }\n    }\n\n    return count;\n  }\n\n  private encodeMap(object: Record<string, unknown>, depth: number) {\n    const keys = Object.keys(object);\n    if (this.sortKeys) {\n      keys.sort();\n    }\n\n    const size = this.ignoreUndefined ? this.countWithoutUndefined(object, keys) : keys.length;\n\n    if (size < 16) {\n      // fixmap\n      this.writeU8(0x80 + size);\n    } else if (size < 0x10000) {\n      // map 16\n      this.writeU8(0xde);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // map 32\n      this.writeU8(0xdf);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large map object: ${size}`);\n    }\n\n    for (const key of keys) {\n      const value = object[key];\n\n      if (!(this.ignoreUndefined && value === undefined)) {\n        this.encodeString(key);\n        this.doEncode(value, depth + 1);\n      }\n    }\n  }\n\n  private encodeExtension(ext: ExtData) {\n    const size = ext.data.length;\n    if (size === 1) {\n      // fixext 1\n      this.writeU8(0xd4);\n    } else if (size === 2) {\n      // fixext 2\n      this.writeU8(0xd5);\n    } else if (size === 4) {\n      // fixext 4\n      this.writeU8(0xd6);\n    } else if (size === 8) {\n      // fixext 8\n      this.writeU8(0xd7);\n    } else if (size === 16) {\n      // fixext 16\n      this.writeU8(0xd8);\n    } else if (size < 0x100) {\n      // ext 8\n      this.writeU8(0xc7);\n      this.writeU8(size);\n    } else if (size < 0x10000) {\n      // ext 16\n      this.writeU8(0xc8);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // ext 32\n      this.writeU8(0xc9);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large extension object: ${size}`);\n    }\n    this.writeI8(ext.type);\n    this.writeU8a(ext.data);\n  }\n\n  private writeU8(value: number) {\n    this.ensureBufferSizeToWrite(1);\n\n    this.view.setUint8(this.pos, value);\n    this.pos++;\n  }\n\n  private writeU8a(values: ArrayLike<number>) {\n    const size = values.length;\n    this.ensureBufferSizeToWrite(size);\n\n    this.bytes.set(values, this.pos);\n    this.pos += size;\n  }\n\n  private writeI8(value: number) {\n    this.ensureBufferSizeToWrite(1);\n\n    this.view.setInt8(this.pos, value);\n    this.pos++;\n  }\n\n  private writeU16(value: number) {\n    this.ensureBufferSizeToWrite(2);\n\n    this.view.setUint16(this.pos, value);\n    this.pos += 2;\n  }\n\n  private writeI16(value: number) {\n    this.ensureBufferSizeToWrite(2);\n\n    this.view.setInt16(this.pos, value);\n    this.pos += 2;\n  }\n\n  private writeU32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n\n    this.view.setUint32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeI32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n\n    this.view.setInt32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeF32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n    this.view.setFloat32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeF64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n    this.view.setFloat64(this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeU64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n\n    setUint64(this.view, this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeI64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n\n    setInt64(this.view, this.pos, value);\n    this.pos += 8;\n  }\n}\n","import { NgrokValidationError, NgrokErrorCodes } from './errors.js';\r\n\r\n/**\r\n * Validates a ngrok URL format\r\n * @param {string} url - The URL to validate\r\n * @throws {NgrokValidationError} If URL is invalid\r\n */\r\nfunction validateNgrokUrl(url) {\r\n  if (!url.includes('ngrok-free.app')) {\r\n    throw new NgrokValidationError(\r\n      NgrokErrorCodes.INVALID_URL.message,\r\n      {\r\n        code: NgrokErrorCodes.INVALID_URL.code,\r\n        url,\r\n        reason: 'URL must include ngrok-free.app domain',\r\n      },\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {Object} PeerNetworkConfig\r\n * @property {string} host - The host address for the peer server\r\n * @property {number|string} port - The port number for the peer server\r\n * @property {string} path - The path for the peer server\r\n * @property {boolean} [secure] - Whether to use secure connection\r\n * @property {string} [role] - Role identifier for the connection (e.g., 'modern-test', 'legacy-test')\r\n */\r\n\r\n/**\r\n * Default peer network configuration\r\n * @type {PeerNetworkConfig}\r\n */\r\nexport const DEFAULT_PEER_CONFIG = {\r\n  host: '127.0.0.1',\r\n  port: 9001,\r\n  path: '/',\r\n  secure: false,\r\n  debug: 3, // Enable detailed logging\r\n  role: 'default', // Default role identifier\r\n  // For local connections, we don't need STUN/TURN servers\r\n  // This matches the original kinectron implementation\r\n  config: {\r\n    iceServers: [],\r\n    sdpSemantics: 'unified-plan',\r\n  },\r\n};\r\n\r\n/**\r\n * Default peer ID for the Kinectron server\r\n * @type {string}\r\n */\r\nexport const DEFAULT_PEER_ID = 'kinectron';\r\n\r\n/**\r\n * Validates and processes peer network configuration\r\n * @param {Object} config - User provided network configuration\r\n * @returns {PeerNetworkConfig} Processed network configuration\r\n */\r\nexport function processPeerConfig(config) {\r\n  if (!config) return DEFAULT_PEER_CONFIG;\r\n\r\n  // Handle ngrok addresses\r\n  if (typeof config === 'string' && config.includes('ngrok')) {\r\n    try {\r\n      validateNgrokUrl(config);\r\n      return {\r\n        host: config,\r\n        port: '443',\r\n        path: '/',\r\n        secure: true,\r\n        debug: 3,\r\n        config: {\r\n          iceServers: [],\r\n          sdpSemantics: 'unified-plan',\r\n        },\r\n      };\r\n    } catch (error) {\r\n      // Add connection context to validation errors\r\n      if (error instanceof NgrokValidationError) {\r\n        error.details.context = 'peer_config_validation';\r\n        error.details.timestamp = new Date().toISOString();\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Handle IP addresses or custom configs\r\n  if (typeof config === 'string') {\r\n    return {\r\n      ...DEFAULT_PEER_CONFIG,\r\n      host: config,\r\n    };\r\n  }\r\n\r\n  // Handle full custom config objects\r\n  return {\r\n    ...DEFAULT_PEER_CONFIG,\r\n    ...config,\r\n  };\r\n}\r\n","/**\r\n * Base class for ngrok-related errors\r\n */\r\nexport class NgrokError extends Error {\r\n  /**\r\n   * @param {string} message - Error message\r\n   * @param {Object} details - Additional error details\r\n   */\r\n  constructor(message, details = {}) {\r\n    super(message);\r\n    this.name = 'NgrokError';\r\n    this.details = details;\r\n    this.timestamp = new Date().toISOString();\r\n    this.troubleshooting = [\r\n      'Verify the ngrok tunnel is running',\r\n      'Check if the ngrok URL is correct',\r\n      'Ensure the Kinectron application is running',\r\n    ];\r\n  }\r\n}\r\n\r\n/**\r\n * Error for ngrok connection failures\r\n */\r\nexport class NgrokConnectionError extends NgrokError {\r\n  constructor(message, details = {}) {\r\n    super(message, {\r\n      ...details,\r\n      type: 'connection_error',\r\n    });\r\n    this.name = 'NgrokConnectionError';\r\n    this.troubleshooting = [\r\n      'Check if the ngrok tunnel is still active',\r\n      'Verify your internet connection',\r\n      'Try restarting the ngrok tunnel',\r\n      'Ensure no firewall is blocking the connection',\r\n    ];\r\n  }\r\n}\r\n\r\n/**\r\n * Error for ngrok connection timeouts\r\n */\r\nexport class NgrokTimeoutError extends NgrokError {\r\n  constructor(message, details = {}) {\r\n    super(message, {\r\n      ...details,\r\n      type: 'timeout_error',\r\n    });\r\n    this.name = 'NgrokTimeoutError';\r\n    this.troubleshooting = [\r\n      'The connection attempt timed out',\r\n      'Check your internet connection speed',\r\n      'Verify the Kinectron server is running',\r\n      'Try increasing the connection timeout',\r\n    ];\r\n  }\r\n}\r\n\r\n/**\r\n * Error for invalid ngrok configuration or URLs\r\n */\r\nexport class NgrokValidationError extends NgrokError {\r\n  constructor(message, details = {}) {\r\n    super(message, {\r\n      ...details,\r\n      type: 'validation_error',\r\n    });\r\n    this.name = 'NgrokValidationError';\r\n    this.troubleshooting = [\r\n      'Ensure the URL includes \"ngrok-free.app\"',\r\n      'Copy the URL directly from the Kinectron application',\r\n      'Make sure to include the full domain name',\r\n    ];\r\n  }\r\n}\r\n\r\n/**\r\n * Error codes and their descriptions\r\n */\r\nexport const NgrokErrorCodes = {\r\n  INVALID_URL: {\r\n    code: 'NGROK_001',\r\n    message: 'Invalid ngrok URL format',\r\n  },\r\n  CONNECTION_FAILED: {\r\n    code: 'NGROK_002',\r\n    message: 'Failed to establish ngrok connection',\r\n  },\r\n  CONNECTION_TIMEOUT: {\r\n    code: 'NGROK_003',\r\n    message: 'Connection attempt timed out',\r\n  },\r\n  TUNNEL_CLOSED: {\r\n    code: 'NGROK_004',\r\n    message: 'Ngrok tunnel was closed',\r\n  },\r\n  SERVER_UNREACHABLE: {\r\n    code: 'NGROK_005',\r\n    message: 'Unable to reach Kinectron server',\r\n  },\r\n};\r\n","/**\r\n * Represents a client-side ngrok connection state error\r\n */\r\nexport class NgrokClientError extends Error {\r\n  constructor(message, details = {}) {\r\n    super(message);\r\n    this.name = 'NgrokClientError';\r\n    this.details = details;\r\n    this.timestamp = new Date().toISOString();\r\n    this.troubleshooting = [\r\n      'Check if the ngrok tunnel is running',\r\n      'Verify the URL is correct',\r\n      'Ensure the Kinectron application is running',\r\n    ];\r\n  }\r\n}\r\n\r\n/**\r\n * Manages client-side ngrok connection state and metrics\r\n */\r\nexport class NgrokClientState {\r\n  /**\r\n   * Available connection states\r\n   */\r\n  static STATES = {\r\n    DISCONNECTED: 'disconnected',\r\n    VALIDATING: 'validating',\r\n    CONNECTING: 'connecting',\r\n    CONNECTED: 'connected',\r\n    RECONNECTING: 'reconnecting',\r\n    ERROR: 'error',\r\n  };\r\n\r\n  /**\r\n   * Valid state transitions\r\n   */\r\n  static VALID_TRANSITIONS = {\r\n    [NgrokClientState.STATES.DISCONNECTED]: [\r\n      NgrokClientState.STATES.VALIDATING,\r\n      NgrokClientState.STATES.CONNECTING,\r\n    ],\r\n    [NgrokClientState.STATES.VALIDATING]: [\r\n      NgrokClientState.STATES.CONNECTING,\r\n      NgrokClientState.STATES.ERROR,\r\n    ],\r\n    [NgrokClientState.STATES.CONNECTING]: [\r\n      NgrokClientState.STATES.CONNECTED,\r\n      NgrokClientState.STATES.RECONNECTING,\r\n      NgrokClientState.STATES.ERROR,\r\n      NgrokClientState.STATES.CONNECTING, // Allow re-entering connecting state\r\n    ],\r\n    [NgrokClientState.STATES.CONNECTED]: [\r\n      NgrokClientState.STATES.DISCONNECTED,\r\n      NgrokClientState.STATES.RECONNECTING,\r\n      NgrokClientState.STATES.ERROR,\r\n      NgrokClientState.STATES.CONNECTED, // Allow self-transition to refresh state\r\n    ],\r\n    [NgrokClientState.STATES.RECONNECTING]: [\r\n      NgrokClientState.STATES.CONNECTED,\r\n      NgrokClientState.STATES.CONNECTING,\r\n      NgrokClientState.STATES.ERROR,\r\n    ],\r\n    [NgrokClientState.STATES.ERROR]: [\r\n      NgrokClientState.STATES.DISCONNECTED,\r\n      NgrokClientState.STATES.CONNECTING,\r\n    ],\r\n  };\r\n\r\n  constructor() {\r\n    this.currentState = null; // Start with no state\r\n    this.metadata = {\r\n      url: null,\r\n      startTime: null,\r\n      lastStateChange: new Date(),\r\n      errorHistory: [],\r\n      metrics: {\r\n        latency: {\r\n          current: 0,\r\n          average: 0,\r\n          samples: [],\r\n        },\r\n        connectionQuality: 'unknown',\r\n        reconnects: {\r\n          count: 0,\r\n          lastAttempt: null,\r\n        },\r\n        errors: {\r\n          total: 0,\r\n          byType: {},\r\n        },\r\n      },\r\n    };\r\n\r\n    // Event handlers\r\n    this.handlers = {\r\n      stateChange: new Set(),\r\n      error: new Set(),\r\n      metrics: new Set(),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Add event listener\r\n   * @param {string} event - Event type\r\n   * @param {Function} handler - Event handler\r\n   */\r\n  on(event, handler) {\r\n    if (this.handlers[event]) {\r\n      this.handlers[event].add(handler);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove event listener\r\n   * @param {string} event - Event type\r\n   * @param {Function} handler - Event handler\r\n   */\r\n  off(event, handler) {\r\n    if (this.handlers[event]) {\r\n      this.handlers[event].delete(handler);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emit event to handlers\r\n   * @private\r\n   * @param {string} event - Event type\r\n   * @param {*} data - Event data\r\n   */\r\n  _emit(event, data) {\r\n    if (this.handlers[event]) {\r\n      this.handlers[event].forEach((handler) => handler(data));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get current state\r\n   * @returns {string} Current state\r\n   */\r\n  getState() {\r\n    return this.currentState;\r\n  }\r\n\r\n  /**\r\n   * Get state metadata\r\n   * @returns {Object} State metadata\r\n   */\r\n  getMetadata() {\r\n    return {\r\n      ...this.metadata,\r\n      currentState: this.currentState,\r\n      uptime: this._calculateUptime(),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Update connection metrics\r\n   * @param {Object} metrics - New metrics\r\n   */\r\n  updateMetrics(metrics) {\r\n    // Update latency\r\n    if (metrics.latency !== undefined) {\r\n      this.metadata.metrics.latency.current = metrics.latency;\r\n      this.metadata.metrics.latency.samples.push({\r\n        value: metrics.latency,\r\n        timestamp: new Date(),\r\n      });\r\n\r\n      // Keep last 10 samples\r\n      if (this.metadata.metrics.latency.samples.length > 10) {\r\n        this.metadata.metrics.latency.samples.shift();\r\n      }\r\n\r\n      // Calculate average\r\n      this.metadata.metrics.latency.average =\r\n        this.metadata.metrics.latency.samples.reduce(\r\n          (sum, sample) => sum + sample.value,\r\n          0,\r\n        ) / this.metadata.metrics.latency.samples.length;\r\n    }\r\n\r\n    // Update connection quality based on metrics\r\n    this._updateConnectionQuality();\r\n\r\n    // Emit metrics update\r\n    this._emit('metrics', this.metadata.metrics);\r\n  }\r\n\r\n  /**\r\n   * Set connection state\r\n   * @param {string} newState - New state\r\n   * @param {Object} details - Transition details\r\n   * @throws {NgrokClientError} If transition is invalid\r\n   */\r\n  setState(newState, details = {}) {\r\n    if (!this._isValidTransition(newState)) {\r\n      throw new NgrokClientError(\r\n        `Invalid state transition from ${this.currentState} to ${newState}`,\r\n        {\r\n          from: this.currentState,\r\n          to: newState,\r\n          details,\r\n        },\r\n      );\r\n    }\r\n\r\n    const oldState = this.currentState;\r\n    this.currentState = newState;\r\n    this.metadata.lastStateChange = new Date();\r\n\r\n    // Update metadata based on state\r\n    if (newState === NgrokClientState.STATES.CONNECTED) {\r\n      if (!this.metadata.startTime) {\r\n        this.metadata.startTime = new Date();\r\n      }\r\n    } else if (newState === NgrokClientState.STATES.RECONNECTING) {\r\n      this.metadata.metrics.reconnects.count++;\r\n      this.metadata.metrics.reconnects.lastAttempt = new Date();\r\n    }\r\n\r\n    // Emit state change event\r\n    this._emit('stateChange', {\r\n      from: oldState,\r\n      to: newState,\r\n      timestamp: this.metadata.lastStateChange,\r\n      details,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Record an error\r\n   * @param {Error} error - Error to record\r\n   * @param {Object} context - Error context\r\n   */\r\n  recordError(error, context = {}) {\r\n    const errorRecord = {\r\n      name: error.name,\r\n      message: error.message,\r\n      timestamp: new Date(),\r\n      context,\r\n      state: this.currentState,\r\n    };\r\n\r\n    // Add to error history (keep last 10)\r\n    this.metadata.errorHistory.unshift(errorRecord);\r\n    if (this.metadata.errorHistory.length > 10) {\r\n      this.metadata.errorHistory.pop();\r\n    }\r\n\r\n    // Update error metrics\r\n    this.metadata.metrics.errors.total++;\r\n    this.metadata.metrics.errors.byType[error.name] =\r\n      (this.metadata.metrics.errors.byType[error.name] || 0) + 1;\r\n\r\n    // Emit error event\r\n    this._emit('error', errorRecord);\r\n  }\r\n\r\n  /**\r\n   * Reset state to initial values\r\n   */\r\n  reset() {\r\n    this.currentState = null;\r\n    this.metadata = {\r\n      url: null,\r\n      startTime: null,\r\n      lastStateChange: new Date(),\r\n      errorHistory: [],\r\n      metrics: {\r\n        latency: {\r\n          current: 0,\r\n          average: 0,\r\n          samples: [],\r\n        },\r\n        connectionQuality: 'unknown',\r\n        reconnects: {\r\n          count: 0,\r\n          lastAttempt: null,\r\n        },\r\n        errors: {\r\n          total: 0,\r\n          byType: {},\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate connection uptime\r\n   * @private\r\n   * @returns {number} Uptime in milliseconds\r\n   */\r\n  _calculateUptime() {\r\n    if (\r\n      !this.metadata.startTime ||\r\n      this.currentState !== NgrokClientState.STATES.CONNECTED\r\n    ) {\r\n      return 0;\r\n    }\r\n    return Date.now() - this.metadata.startTime.getTime();\r\n  }\r\n\r\n  /**\r\n   * Update connection quality based on metrics\r\n   * @private\r\n   */\r\n  _updateConnectionQuality() {\r\n    const avgLatency = this.metadata.metrics.latency.average;\r\n    const recentErrors = this.metadata.errorHistory.filter(\r\n      (e) => Date.now() - new Date(e.timestamp).getTime() < 60000, // Last minute\r\n    ).length;\r\n\r\n    if (recentErrors > 2) {\r\n      this.metadata.metrics.connectionQuality = 'poor';\r\n    } else if (avgLatency > 1000) {\r\n      // 1 second\r\n      this.metadata.metrics.connectionQuality = 'unstable';\r\n    } else if (avgLatency > 500) {\r\n      // 500ms\r\n      this.metadata.metrics.connectionQuality = 'fair';\r\n    } else {\r\n      this.metadata.metrics.connectionQuality = 'good';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if state transition is valid\r\n   * @private\r\n   * @param {string} newState - State to transition to\r\n   * @returns {boolean} Whether transition is valid\r\n   */\r\n  _isValidTransition(newState) {\r\n    // Allow any initial state transition\r\n    if (this.currentState === null) {\r\n      return true;\r\n    }\r\n    const validNextStates =\r\n      NgrokClientState.VALID_TRANSITIONS[this.currentState];\r\n    return validNextStates && validNextStates.includes(newState);\r\n  }\r\n}\r\n","/**\r\n * Debug configuration for Kinectron client\r\n * Controls logging output for different components\r\n */\r\n\r\nexport const DEBUG = {\r\n  // Master switches for components\r\n  FRAMES: false, // Master switch for frame-related logging\r\n  HANDLERS: false, // Master switch for handler-related logging\r\n  PEER: false, // Master switch for peer connection logs\r\n\r\n  // Specific logging categories\r\n  PERFORMANCE: false, // For performance-related logs\r\n  DATA: false, // For data integrity logs\r\n  NETWORK: false, // For network-related logs\r\n\r\n  // Helper method to enable all logs\r\n  enableAll: function () {\r\n    Object.keys(this).forEach((key) => {\r\n      if (typeof this[key] === 'boolean') this[key] = true;\r\n    });\r\n  },\r\n\r\n  // Helper method to disable all logs\r\n  disableAll: function () {\r\n    Object.keys(this).forEach((key) => {\r\n      if (typeof this[key] === 'boolean') this[key] = false;\r\n    });\r\n  },\r\n};\r\n\r\n/**\r\n * Logging utility functions that check debug flags\r\n */\r\nexport const log = {\r\n  // Always log errors regardless of debug flags\r\n  error: function (message, ...args) {\r\n    console.error(message, ...args);\r\n  },\r\n\r\n  // Always log warnings regardless of debug flags\r\n  warn: function (message, ...args) {\r\n    console.warn(message, ...args);\r\n  },\r\n\r\n  // Always log info messages regardless of debug flags\r\n  info: function (message, ...args) {\r\n    console.log(message, ...args);\r\n  },\r\n\r\n  // Only log if the specified debug flag is enabled\r\n  debug: function (flag, message, ...args) {\r\n    if (DEBUG[flag]) {\r\n      console.debug(`[${flag}] ${message}`, ...args);\r\n    }\r\n  },\r\n\r\n  // Only log frame-related messages if FRAMES flag is enabled\r\n  frame: function (message, ...args) {\r\n    if (DEBUG.FRAMES) {\r\n      console.debug(`[FRAMES] ${message}`, ...args);\r\n    }\r\n  },\r\n\r\n  // Only log handler-related messages if HANDLERS flag is enabled\r\n  handler: function (message, ...args) {\r\n    if (DEBUG.HANDLERS) {\r\n      console.debug(`[HANDLERS] ${message}`, ...args);\r\n    }\r\n  },\r\n\r\n  // Only log peer-related messages if PEER flag is enabled\r\n  peer: function (message, ...args) {\r\n    if (DEBUG.PEER) {\r\n      console.debug(`[PEER] ${message}`, ...args);\r\n    }\r\n  },\r\n\r\n  // Only log performance-related messages if PERFORMANCE flag is enabled\r\n  performance: function (message, ...args) {\r\n    if (DEBUG.PERFORMANCE) {\r\n      console.debug(`[PERFORMANCE] ${message}`, ...args);\r\n    }\r\n  },\r\n\r\n  // Only log data-related messages if DATA flag is enabled\r\n  data: function (message, ...args) {\r\n    if (DEBUG.DATA) {\r\n      console.debug(`[DATA] ${message}`, ...args);\r\n    }\r\n  },\r\n\r\n  // Only log network-related messages if NETWORK flag is enabled\r\n  network: function (message, ...args) {\r\n    if (DEBUG.NETWORK) {\r\n      console.debug(`[NETWORK] ${message}`, ...args);\r\n    }\r\n  },\r\n};\r\n","import { PeerConnection } from './peer/peerConnection.js';\r\nimport { NgrokClientState } from './peer/ngrokState.js';\r\nimport { DEBUG, log } from './utils/debug.js';\r\nimport {\r\n  createFrameHandler,\r\n  createRawDepthHandler,\r\n  createBodyHandler,\r\n  createMultiFrameHandler,\r\n} from './streams/streamHandlers.js';\r\n\r\nexport class Kinectron {\r\n  constructor(networkConfig) {\r\n    this.peer = new PeerConnection(networkConfig);\r\n    this.messageHandlers = new Map();\r\n    this.state = null;\r\n\r\n    // Set up event handlers\r\n    this.peer.on('ready', (data) => {\r\n      this.state = data.state;\r\n      const handler = this.messageHandlers.get('ready');\r\n      if (handler) handler(data);\r\n    });\r\n\r\n    this.peer.on('error', (error) => {\r\n      const handler = this.messageHandlers.get('error');\r\n      if (handler) handler(error);\r\n    });\r\n\r\n    // Handle state changes\r\n    this.peer.on('stateChange', (data) => {\r\n      this.state = data.to;\r\n      const handler = this.messageHandlers.get('stateChange');\r\n      if (handler) handler(data);\r\n    });\r\n\r\n    // Handle metrics updates\r\n    this.peer.on('metrics', (data) => {\r\n      const handler = this.messageHandlers.get('metrics');\r\n      if (handler) handler(data);\r\n    });\r\n\r\n    // Handle incoming data\r\n    this.peer.on('data', (data) => {\r\n      const { event, data: eventData } = data;\r\n      const handler = this.messageHandlers.get(event);\r\n\r\n      if (handler) {\r\n        // if (event === 'bodyFrame') debugger;\r\n\r\n        handler(eventData);\r\n      } else {\r\n        log.warn('Kinectron: No handler found for event:', event);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Event registration\r\n  on(event, callback) {\r\n    this.messageHandlers.set(event, callback);\r\n  }\r\n\r\n  // Get current state\r\n  getState() {\r\n    return this.peer.getState();\r\n  }\r\n\r\n  // Check if connected\r\n  isConnected() {\r\n    return this.state === NgrokClientState.STATES.CONNECTED;\r\n  }\r\n\r\n  // Set Kinect type (azure or windows)\r\n  setKinectType(kinectType) {\r\n    if (!this.isConnected()) {\r\n      log.warn('Cannot set Kinect type: not connected');\r\n      return;\r\n    }\r\n    this.send('setkinect', kinectType);\r\n  }\r\n\r\n  // Initialize Kinect\r\n  initKinect(callback) {\r\n    if (!this.isConnected()) {\r\n      log.warn('Cannot initialize Kinect: not connected');\r\n      return Promise.reject(\r\n        new Error('Cannot initialize Kinect: not connected'),\r\n      );\r\n    }\r\n\r\n    // Create a promise that resolves when we get the kinectInitialized event\r\n    const initPromise = new Promise((resolve, reject) => {\r\n      // Set up a one-time handler for the initialization response\r\n      const handler = (data) => {\r\n        // Normalize the success value to handle nested structure\r\n        let isSuccess = false;\r\n        if (\r\n          data.success &&\r\n          typeof data.success === 'object' &&\r\n          data.success.success === true\r\n        ) {\r\n          isSuccess = true;\r\n        } else if (\r\n          typeof data.success === 'boolean' &&\r\n          data.success === true\r\n        ) {\r\n          isSuccess = true;\r\n        }\r\n\r\n        // Create a normalized result object\r\n        const normalizedResult = {\r\n          success: isSuccess,\r\n          alreadyInitialized: !!data.alreadyInitialized,\r\n          error: data.error || null,\r\n          rawData: data, // Include the original data for debugging\r\n        };\r\n\r\n        if (isSuccess || data.alreadyInitialized) {\r\n          resolve(normalizedResult);\r\n        } else {\r\n          reject(\r\n            new Error(data.error || 'Failed to initialize Kinect'),\r\n          );\r\n        }\r\n\r\n        // Remove the handler after it's been called\r\n        this.messageHandlers.delete('kinectInitialized');\r\n      };\r\n\r\n      this.messageHandlers.set('kinectInitialized', handler);\r\n\r\n      // Send initialization request to server\r\n      this.send('initkinect', {});\r\n    });\r\n\r\n    // For backward compatibility, if a callback is provided, use it\r\n    if (callback) {\r\n      initPromise\r\n        .then((data) => callback(data))\r\n        .catch((error) =>\r\n          callback({ success: false, error: error.message }),\r\n        );\r\n    }\r\n\r\n    // Return the promise for modern Promise-based usage\r\n    return initPromise;\r\n  }\r\n\r\n  // Send data to peer\r\n  send(event, data) {\r\n    if (!this.isConnected()) {\r\n      log.warn('Cannot send data: not connected');\r\n      return;\r\n    }\r\n    this.peer.send(event, data);\r\n  }\r\n\r\n  // Start feed methods\r\n  startColor(callback) {\r\n    if (callback) {\r\n      // Set up frame handler to process color frames\r\n      this.messageHandlers.set(\r\n        'frame',\r\n        createFrameHandler('color', callback),\r\n      );\r\n    }\r\n    this.send('feed', { feed: 'color' });\r\n  }\r\n\r\n  startDepth(callback) {\r\n    if (callback) {\r\n      // Set up frame handler to process depth frames\r\n      this.messageHandlers.set(\r\n        'frame',\r\n        createFrameHandler('depth', callback),\r\n      );\r\n    }\r\n    this.send('feed', { feed: 'depth' });\r\n  }\r\n\r\n  /**\r\n   * Unpacks raw depth data from a WebP image\r\n   * @private\r\n   * @param {string} dataUrl - The data URL containing the depth data\r\n   * @param {number} width - The width of the image\r\n   * @param {number} height - The height of the image\r\n   * @param {number} originalWidth - The original width of the depth data (not used in new implementation)\r\n   * @param {Object} testValues - Test values to verify unpacking accuracy\r\n   * @returns {Promise<Uint16Array>} - Promise resolving to the unpacked depth values\r\n   */\r\n  _unpackRawDepthData(\r\n    dataUrl,\r\n    width,\r\n    height,\r\n    originalWidth,\r\n    testValues,\r\n  ) {\r\n    // Log using the imported debug module\r\n    if (DEBUG.DATA) {\r\n      log.data(\r\n        'Unpacking raw depth data with dimensions:',\r\n        width,\r\n        'x',\r\n        height,\r\n      );\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      // Create image to load the data URL\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        // Use OffscreenCanvas for efficient processing\r\n        const canvas = new OffscreenCanvas(width, height);\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        // Draw the image to the canvas\r\n        ctx.drawImage(img, 0, 0);\r\n\r\n        // Get the pixel data\r\n        const imageData = ctx.getImageData(0, 0, width, height).data;\r\n\r\n        // Create array for unpacked depth values\r\n        const depthValues = new Uint16Array(width * height);\r\n\r\n        // Process the raw depth data exactly like the app.js client code\r\n        let j = 0;\r\n        for (let i = 0; i < imageData.length; i += 4) {\r\n          // Extract depth value from R and G channels\r\n          const depth = (imageData[i + 1] << 8) | imageData[i]; // Get uint16 data from buffer\r\n          depthValues[j++] = depth;\r\n        }\r\n\r\n        // Verify test values if provided\r\n        if (testValues && DEBUG.DATA) {\r\n          const unpackedValue1000 = depthValues[1000];\r\n          const unpackedValue2000 = depthValues[2000];\r\n          const unpackedValue3000 = depthValues[3000];\r\n\r\n          log.data('Test values comparison:', {\r\n            'Index 1000': {\r\n              Original: testValues.index1000,\r\n              Unpacked: unpackedValue1000,\r\n              Difference: testValues.index1000 - unpackedValue1000,\r\n            },\r\n            'Index 2000': {\r\n              Original: testValues.index2000,\r\n              Unpacked: unpackedValue2000,\r\n              Difference: testValues.index2000 - unpackedValue2000,\r\n            },\r\n            'Index 3000': {\r\n              Original: testValues.index3000,\r\n              Unpacked: unpackedValue3000,\r\n              Difference: testValues.index3000 - unpackedValue3000,\r\n            },\r\n          });\r\n        }\r\n\r\n        resolve(depthValues);\r\n      };\r\n\r\n      img.onerror = (err) => {\r\n        reject(new Error('Failed to load depth image: ' + err));\r\n      };\r\n\r\n      img.src = dataUrl;\r\n    });\r\n  }\r\n\r\n  startRawDepth(callback) {\r\n    if (callback) {\r\n      // Set up handler to process raw depth frames\r\n      this.messageHandlers.set(\r\n        'rawDepth',\r\n        createRawDepthHandler(\r\n          callback,\r\n          this._unpackRawDepthData.bind(this),\r\n        ),\r\n      );\r\n    }\r\n    this.send('feed', { feed: 'raw-depth' });\r\n  }\r\n\r\n  startBodies(callback) {\r\n    if (callback) {\r\n      // Set up handler to process body tracking frames\r\n      this.messageHandlers.set(\r\n        'bodyFrame',\r\n        createBodyHandler(callback),\r\n      );\r\n    }\r\n    this.send('feed', { feed: 'body' });\r\n  }\r\n\r\n  startKey(callback) {\r\n    if (callback) {\r\n      // Set up frame handler to process key frames\r\n      this.messageHandlers.set(\r\n        'frame',\r\n        createFrameHandler('key', callback),\r\n      );\r\n    }\r\n    this.send('feed', { feed: 'key' });\r\n  }\r\n\r\n  startDepthKey(callback) {\r\n    if (callback) {\r\n      // Set up handler to process depth key frames\r\n      this.messageHandlers.set(\r\n        'depth-key', // Changed from 'depthKey' to match server's broadcast event name\r\n        createFrameHandler('depth-key', callback),\r\n      );\r\n    }\r\n    this.send('feed', { feed: 'depth-key' });\r\n  }\r\n\r\n  startRGBD(callback) {\r\n    if (callback) {\r\n      // Set up frame handler to process RGBD frames\r\n      this.messageHandlers.set(\r\n        'frame',\r\n        createFrameHandler('rgbd', callback),\r\n      );\r\n    }\r\n    this.send('feed', { feed: 'rgbd' });\r\n  }\r\n\r\n  startMultiFrame(frames, callback) {\r\n    if (callback) {\r\n      // Set up handler to process multi-frame data\r\n      this.messageHandlers.set(\r\n        'multiFrame',\r\n        createMultiFrameHandler(callback),\r\n      );\r\n    }\r\n    this.send('multi', frames);\r\n  }\r\n\r\n  // Stop all feeds\r\n  stopAll() {\r\n    this.send('feed', { feed: 'stop-all' });\r\n  }\r\n\r\n  // Clean up\r\n  close() {\r\n    this.peer.close();\r\n    this.messageHandlers.clear();\r\n    this.state = null;\r\n  }\r\n}\r\n","/**\r\n * Stream handler factory functions\r\n */\r\n\r\nimport * as imageUtils from '../utils/imageProcessing.js';\r\nimport { DEBUG, log } from '../utils/debug.js';\r\n\r\n/**\r\n * Create a frame handler for image-based streams\r\n * @param {string} streamType - The type of stream ('color', 'depth', 'key', etc.)\r\n * @param {Function} callback - The callback to receive processed frames\r\n * @returns {Function} - The frame handler function\r\n */\r\nexport function createFrameHandler(streamType, callback) {\r\n  return (data) => {\r\n    // Extract the actual frame data\r\n    const frameData = data.data || data;\r\n\r\n    log.handler(\r\n      `Frame handler for ${streamType} received:`,\r\n      frameData,\r\n    );\r\n\r\n    // Check for both imagedata and imageData formats\r\n    const hasImageData = frameData.imagedata || frameData.imageData;\r\n\r\n    // Only process frames with matching name\r\n    if (frameData.name === streamType && hasImageData) {\r\n      // Normalize the data structure to ensure imagedata exists\r\n      if (frameData.imageData && !frameData.imagedata) {\r\n        frameData.imagedata = frameData.imageData;\r\n      }\r\n\r\n      // Process the image data\r\n      imageUtils.processImageData(frameData, callback);\r\n    } else {\r\n      log.warn(\r\n        `Received frame event but it's not a valid ${streamType} frame:`,\r\n        'name=',\r\n        frameData.name,\r\n        'has imagedata=',\r\n        !!(frameData.imagedata || frameData.imageData),\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Create a handler for raw depth data\r\n * @param {Function} callback - The callback to receive processed frames\r\n * @param {Function} unpackFunction - Function to unpack raw depth data\r\n * @returns {Function} - The raw depth handler function\r\n */\r\nexport function createRawDepthHandler(callback, unpackFunction) {\r\n  return (data) => {\r\n    if (data && data.imagedata) {\r\n      // Process the data regardless of isPacked flag\r\n      // The new implementation always unpacks the data\r\n      unpackFunction(\r\n        data.imagedata,\r\n        data.width,\r\n        data.height,\r\n        data.width, // originalWidth is the same as width in new implementation\r\n        data.testValues, // Pass test values to unpacking function\r\n      )\r\n        .then((depthValues) => {\r\n          // Call the callback with the unpacked data\r\n          callback({\r\n            ...data,\r\n            depthValues: depthValues,\r\n            timestamp: data.timestamp || Date.now(),\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          log.error('Error unpacking raw depth data:', error);\r\n          // Still call the callback with the original data\r\n          callback({\r\n            ...data,\r\n            error: 'Failed to unpack depth data: ' + error.message,\r\n            timestamp: data.timestamp || Date.now(),\r\n          });\r\n        });\r\n    } else if (data && data.rawDepthData) {\r\n      // Legacy format - raw depth data is already in a usable format\r\n      callback({\r\n        ...data,\r\n        timestamp: data.timestamp || Date.now(),\r\n      });\r\n    } else {\r\n      log.warn(\r\n        'Received raw depth frame with invalid data format:',\r\n        data,\r\n      );\r\n      callback({\r\n        ...data,\r\n        error: 'Invalid data format',\r\n        timestamp: data.timestamp || Date.now(),\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Create a handler for body tracking data\r\n * @param {Function} callback - The callback to receive processed frames\r\n * @returns {Function} - The body handler function\r\n */\r\nexport function createBodyHandler(callback) {\r\n  log.handler('Creating body handler with callback:', callback);\r\n\r\n  return (eventData) => {\r\n    const bodyData = eventData.data;\r\n    if (bodyData && bodyData.bodies) {\r\n      // Body data is already in a usable format (array of body objects)\r\n      // Just add timestamp and pass it through\r\n      callback({\r\n        bodies: bodyData.bodies,\r\n        timestamp: bodyData.timestamp || Date.now(),\r\n        floorClipPlane: bodyData.floorClipPlane,\r\n        trackingId: bodyData.trackingId,\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Create a handler for multi-frame data\r\n * @param {Function} callback - The callback to receive processed frames\r\n * @returns {Function} - The multi-frame handler function\r\n */\r\nexport function createMultiFrameHandler(callback) {\r\n  return (data) => {\r\n    if (data && data.frames) {\r\n      // Process each frame based on its type\r\n      const processedFrames = {};\r\n\r\n      // Process each frame in the multiframe data\r\n      Object.entries(data.frames).forEach(([type, frameData]) => {\r\n        if (frameData.imagedata) {\r\n          // For image-based frames, convert to data URL\r\n          const canvas = document.createElement('canvas');\r\n          const ctx = canvas.getContext('2d');\r\n          const { width, height } = frameData.imagedata;\r\n\r\n          canvas.width = width;\r\n          canvas.height = height;\r\n\r\n          // Create ImageData object from the raw data\r\n          const imgData = new ImageData(\r\n            imageUtils.convertToUint8ClampedArray(\r\n              frameData.imagedata.data,\r\n            ),\r\n            width,\r\n            height,\r\n          );\r\n\r\n          // Put the image data on the canvas\r\n          ctx.putImageData(imgData, 0, 0);\r\n\r\n          // Convert to data URL\r\n          processedFrames[type] = {\r\n            src: canvas.toDataURL('image/jpeg'),\r\n            width,\r\n            height,\r\n            raw: frameData.imagedata,\r\n          };\r\n        } else {\r\n          // For non-image data (like body tracking), pass through\r\n          processedFrames[type] = frameData;\r\n        }\r\n      });\r\n\r\n      // Call the user callback with processed frames\r\n      callback({\r\n        frames: processedFrames,\r\n        timestamp: data.timestamp || Date.now(),\r\n      });\r\n    }\r\n  };\r\n}\r\n","/**\r\n * Utility functions for processing image data from different streams\r\n */\r\n\r\nimport { DEBUG, log } from './debug.js';\r\n\r\n/**\r\n * Process image data from a frame\r\n * @param {Object} frameData - The frame data containing image information\r\n * @param {number} width - The width of the image\r\n * @param {number} height - The height of the image\r\n * @param {Function} callback - Callback to receive the processed image\r\n */\r\nexport function processImageData(frameData, callback) {\r\n  // Check for both imagedata and imageData formats\r\n  const imagedata = frameData.imagedata || frameData.imageData;\r\n\r\n  if (!frameData || !imagedata) {\r\n    log.warn('Invalid frame data received:', frameData);\r\n    return;\r\n  }\r\n\r\n  const { width, height } = imagedata;\r\n\r\n  // Create a canvas to convert image data to a data URL\r\n  const canvas = document.createElement('canvas');\r\n  const ctx = canvas.getContext('2d');\r\n\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n\r\n  try {\r\n    // Check if data is a string (data URL)\r\n    if (typeof imagedata.data === 'string') {\r\n      log.data('Processing image data from data URL');\r\n      createImageFromDataUrl(\r\n        imagedata.data,\r\n        width,\r\n        height,\r\n        (src) => {\r\n          // Call the user callback with processed frame\r\n          callback({\r\n            src,\r\n            width,\r\n            height,\r\n            raw: imagedata,\r\n            timestamp: frameData.timestamp || Date.now(),\r\n          });\r\n        },\r\n        (err) => {\r\n          log.error('Error loading image from data URL:', err);\r\n          // Try to call callback anyway with the raw data\r\n          callback({\r\n            src: imagedata.data,\r\n            width,\r\n            height,\r\n            raw: imagedata,\r\n            timestamp: frameData.timestamp || Date.now(),\r\n          });\r\n        },\r\n      );\r\n    } else {\r\n      log.data('Processing image data from raw pixel data');\r\n      // Handle raw pixel data\r\n      const pixelData = convertToUint8ClampedArray(imagedata.data);\r\n      const imgData = new ImageData(pixelData, width, height);\r\n\r\n      // Put the image data on the canvas\r\n      ctx.putImageData(imgData, 0, 0);\r\n\r\n      // Convert to data URL for easy display\r\n      const src = canvas.toDataURL('image/jpeg');\r\n\r\n      // Call the user callback with processed frame\r\n      callback({\r\n        src,\r\n        width,\r\n        height,\r\n        raw: imagedata,\r\n        timestamp: frameData.timestamp || Date.now(),\r\n      });\r\n    }\r\n  } catch (error) {\r\n    log.error('Error processing frame:', error);\r\n    log.error('Frame data:', imagedata);\r\n  }\r\n}\r\n\r\n/**\r\n * Create an image from a data URL\r\n * @param {string} dataUrl - The data URL\r\n * @param {number} width - The width of the image\r\n * @param {number} height - The height of the image\r\n * @param {Function} onSuccess - Success callback with the data URL\r\n * @param {Function} onError - Error callback\r\n */\r\nexport function createImageFromDataUrl(\r\n  dataUrl,\r\n  width,\r\n  height,\r\n  onSuccess,\r\n  onError,\r\n) {\r\n  const canvas = document.createElement('canvas');\r\n  const ctx = canvas.getContext('2d');\r\n\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n\r\n  // Create an image from the data URL\r\n  const img = new Image();\r\n\r\n  img.onload = () => {\r\n    // Draw the image to the canvas\r\n    ctx.drawImage(img, 0, 0, width, height);\r\n\r\n    // Use the original data URL\r\n    onSuccess(dataUrl);\r\n  };\r\n\r\n  // Set error handler\r\n  img.onerror = (err) => {\r\n    if (onError) {\r\n      onError(err);\r\n    }\r\n  };\r\n\r\n  // Start loading the image\r\n  img.src = dataUrl;\r\n}\r\n\r\n/**\r\n * Convert various data formats to Uint8ClampedArray\r\n * @param {*} data - The data to convert\r\n * @returns {Uint8ClampedArray} - The converted data\r\n */\r\nexport function convertToUint8ClampedArray(data) {\r\n  if (data instanceof Uint8ClampedArray) {\r\n    return data;\r\n  } else if (data instanceof Uint8Array) {\r\n    return new Uint8ClampedArray(data);\r\n  } else if (Array.isArray(data)) {\r\n    return new Uint8ClampedArray(data);\r\n  } else {\r\n    // Handle case where data is an object (e.g., from JSON)\r\n    return new Uint8ClampedArray(Object.values(data));\r\n  }\r\n}\r\n"],"names":["$fdd18942f3b79c14$var$decoder","$fdd18942f3b79c14$var$src","$fdd18942f3b79c14$var$srcEnd","$fdd18942f3b79c14$var$currentStructures","$fdd18942f3b79c14$var$srcString","$fdd18942f3b79c14$var$bundledStrings","$fdd18942f3b79c14$var$referenceMap","$fdd18942f3b79c14$var$packedValues","$fdd18942f3b79c14$var$dataView","$fdd18942f3b79c14$var$restoreMapsAsObject","$07e009346b695b03$var$textEncoder","$07e009346b695b03$var$extensions","$07e009346b695b03$var$extensionClasses","$07e009346b695b03$var$throwOnIterable","$07e009346b695b03$var$target","$07e009346b695b03$var$targetView","$07e009346b695b03$var$safeEnd","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$interopDefault","a","__esModule","default","$00e82ca0068ee86a$var$$e8379818650e2442$export$93654d4f2d6cd524","constructor","encoder","TextEncoder","_pieces","_parts","append_buffer","data","flush","push","append","length","buf","Uint8Array","toArrayBuffer","buffer","part","$00e82ca0068ee86a$var$$e8379818650e2442$var$concatArrayBuffers","bufs","size","byteLength","result","offset","view","byteOffset","$00e82ca0068ee86a$export$417857010dc9287f","unpacker","$00e82ca0068ee86a$var$$0cfd7828ad59115f$var$Unpacker","unpack","$00e82ca0068ee86a$export$2a703dbb0cb35339","packer","$00e82ca0068ee86a$export$b9ec4b114aa40074","res","pack","Promise","then","getBuffer","index","dataBuffer","dataView","type","unpack_uint8","unpack_raw","unpack_string","unpack_array","unpack_map","unpack_float","unpack_double","unpack_uint16","unpack_uint32","unpack_uint64","unpack_int8","unpack_int16","unpack_int32","unpack_int64","byte","bytes","read","uint16","uint32","uint64","uint8","Error","slice","c","code","i","str","String","fromCodePoint","objects","Array","map","sign","exp","h32","l32","hfrac","j","subarray","_bufferBuilder","value","pack_string","Math","floor","pack_integer","pack_double","undefined","pack_array","ArrayBuffer","pack_bin","Date","toString","Blob","arrayBuffer","startsWith","pack_object","blob","pack_uint8","pack_uint16","pack_uint32","encoded","_textEncoder","encode","ary","packNext","num","pack_int8","pack_int16","pack_int32","pack_int64","pack_uint64","log","LN2","frac1","frac0","obj","keys","prop","hasOwnProperty","high","low","$1974f6191091ae7b$var$logDisabled_","$1974f6191091ae7b$var$deprecationWarnings_","$1974f6191091ae7b$export$e3c02be309be1f23","uastring","expr","pos","match","parseInt","$1974f6191091ae7b$export$1f48841962b828b1","window1","eventNameToWrap","wrapper","RTCPeerConnection","proto","prototype","nativeAddEventListener","addEventListener","nativeEventName","cb","apply","arguments","wrappedCallback","modifiedEvent","handleEvent","_eventMap","Map","nativeRemoveEventListener","removeEventListener","has","unwrappedCb","delete","$1974f6191091ae7b$export$afbfee8cc06fd3e4","bool","$1974f6191091ae7b$export$51516be4b019e41e","$1974f6191091ae7b$export$bef1f36f5486a6a3","window","console","$1974f6191091ae7b$export$cdd73fc4100a6ef4","oldMethod","newMethod","warn","$1974f6191091ae7b$var$isObject","val","call","$1974f6191091ae7b$export$93439ffc3f787d51","track","outbound","streamStatsType","filteredResult","trackStats","forEach","trackIdentifier","id","trackStat","stats","trackId","$1974f6191091ae7b$export$571b373e75babb58","base","resultSet","name","endsWith","extendStatics","LogLevel","ConnectionType","PeerErrorType","BaseConnectionErrorType","DataConnectionErrorType","SerializationType","SocketEventType","ServerMessageType","$d3c1734dacb01657$var$cachedSetTimeout","$d3c1734dacb01657$var$cachedClearTimeout","$d3c1734dacb01657$var$currentQueue","$08c34a1f60f3bee6$var$_a","$08c34a1f60f3bee6$var$_b","$08c34a1f60f3bee6$var$_c","$d915e63f26169767$var$$257947e92926277a$export$243e62d78d3b544d","$d915e63f26169767$export$3157d57b4135e3bc","$d915e63f26169767$export$9547aaa2e39030ff","$d915e63f26169767$export$7974935686149686","$d915e63f26169767$export$49ae800c114df41d","$d915e63f26169767$export$89f507cf986a947","$d915e63f26169767$export$3b5c4a4b6354f023","$d915e63f26169767$export$adb4a1754da6f10d","$c5cc2dfcf2e6688a$exports","$06b34d2f08bd2516$export$1ed4910f4d37dc5e","browserDetails","navigator","mediaDevices","constraintsToChrome_","mandatory","optional","cc","key","r","ideal","exact","min","max","oldname_","prefix","charAt","toUpperCase","oc","mix","advanced","concat","shimConstraints_","constraints","func","version","JSON","parse","stringify","audio","remap","b","video","face","facingMode","getSupportedFacingModeLies","getSupportedConstraints","matches","enumerateDevices","devices","dev","filter","d","kind","find","some","label","toLowerCase","includes","deviceId","$06b34d2f08bd2516$var$logging","shimError_","PermissionDeniedError","PermissionDismissedError","InvalidStateError","DevicesNotFoundError","ConstraintNotSatisfiedError","TrackStartError","MediaDeviceFailedDueToShutdown","MediaDeviceKillSwitchOn","TabCaptureError","ScreenCaptureError","DeviceCaptureError","message","constraint","constraintName","getUserMedia","getUserMedia_","onSuccess","onError","webkitGetUserMedia","bind","origGetUserMedia","cs","stream","getAudioTracks","getVideoTracks","getTracks","stop","DOMException","reject","$2001d2562bc50f3a$export$97270b87351d9c04","getSourceId","error","getDisplayMedia","sourceId","widthSpecified","width","heightSpecified","height","frameRateSpecified","frameRate","chromeMediaSource","chromeMediaSourceId","maxFrameRate","maxWidth","maxHeight","$c5cc2dfcf2e6688a$export$33ee24e7a300bcd1","MediaStream","webkitMediaStream","$c5cc2dfcf2e6688a$export$f358708f68ab068","transceiver","receiver","_ontrack","f","origSetRemoteDescription","setRemoteDescription","_ontrackpoly","te","getReceivers","event","Event","streams","dispatchEvent","$c5cc2dfcf2e6688a$export$a41a030a2842f5d6","shimSenderWithDtmf","pc","dtmf","_dtmf","createDTMFSender","_pc","getSenders","_senders","origAddTrack","addTrack","sender","origRemoveTrack","removeTrack","idx","indexOf","splice","origAddStream","addStream","origRemoveStream","removeStream","RTCRtpSender","origGetSenders","senders","$c5cc2dfcf2e6688a$export$90608323826f0b17","origGetStats","getStats","selector","onSucc","onErr","fixChromeStats_","response","standardReport","reports","report","standardStats","timestamp","localcandidate","remotecandidate","names","stat","makeMapStats","resolve","$c5cc2dfcf2e6688a$export$f2f0f2338114eb4b","RTCRtpReceiver","origGetReceivers","receivers","srcElement","MediaStreamTrack","err","$c5cc2dfcf2e6688a$export$30e3cdd46f8d5100","getLocalStreams","_shimmedLocalStreams","streamId","existingSenders","newSenders","newSender","$c5cc2dfcf2e6688a$export$9588259fcf4ebc91","origGetLocalStreams","nativeStreams","_reverseStreams","_streams","newStream","replaceInternalStreamId","description","sdp","internalId","externalStream","internalStream","replace","RegExp","RTCSessionDescription","signalingState","t","oldStream","method","nativeMethod","methodObj","args","isLegacyCall","desc","origSetLocalDescription","setLocalDescription","origLocalDescription","getOwnPropertyDescriptor","streamid","$c5cc2dfcf2e6688a$export$852a08dda9a55ea7","webkitRTCPeerConnection","RTCIceCandidate","$c5cc2dfcf2e6688a$export$341293bbeaae37cb","target","getConfiguration","sdpSemantics","$dedea9f1dba18edb$exports","$24c9a4e56470d1f6$export$1ed4910f4d37dc5e","nativeGetUserMedia","getSettings","nativeGetSettings","applyConstraints","nativeApplyConstraints","$a0073f4dea2c38df$export$97270b87351d9c04","preferredMediaSource","mediaSource","$dedea9f1dba18edb$export$f358708f68ab068","RTCTrackEvent","$dedea9f1dba18edb$export$852a08dda9a55ea7","mozRTCPeerConnection","modernStatsTypes","inboundrtp","outboundrtp","candidatepair","nativeGetStats","assign","$dedea9f1dba18edb$export$f0525502095c04ef","$dedea9f1dba18edb$export$83d69126527b1171","$dedea9f1dba18edb$export$825e523ef749bd8c","$dedea9f1dba18edb$export$ff9cb3bc8990e8f7","DataChannel","RTCDataChannel","$dedea9f1dba18edb$export$70c77533b6e9908d","origAddTransceiver","addTransceiver","setParametersPromises","sendEncodings","shouldPerformCheck","encodingParam","ridRegex","test","rid","TypeError","parseFloat","scaleResolutionDownBy","RangeError","maxFramerate","params","getParameters","encodings","setParameters","catch","$dedea9f1dba18edb$export$66238223c298fbaa","origGetParameters","$dedea9f1dba18edb$export$51beccf0e777b843","origCreateOffer","createOffer","all","finally","$dedea9f1dba18edb$export$df0b46e7cef08150","origCreateAnswer","createAnswer","$ef77da9e8f828c50$exports","$ef77da9e8f828c50$export$8df41282f4fdcea2","_localStreams","_addTrack","tracks","$ef77da9e8f828c50$export$762aa4cbb4f2f857","getRemoteStreams","_remoteStreams","_onaddstream","_onaddstreampoly","$ef77da9e8f828c50$export$da31df245debdd3","addIceCandidate","successCallback","failureCallback","options","promise","withCallback","candidate","$ef77da9e8f828c50$export$1ed4910f4d37dc5e","_getUserMedia","$ef77da9e8f828c50$export$494a01ac68ba81ac","errcb","$1974f6191091ae7b$export$15384eac40dc88c8","reduce","accumulator","isObj","isEmptyObject","$ef77da9e8f828c50$export$671a8b47b41b6f41","OrigPeerConnection","pcConfig","pcConstraints","iceServers","newIceServers","server","urls","url","generateCertificate","$ef77da9e8f828c50$export$85d53da088cb1b14","$ef77da9e8f828c50$export$d444266503fdd2d4","offerOptions","offerToReceiveAudio","audioTransceiver","getTransceivers","direction","setDirection","offerToReceiveVideo","videoTransceiver","$ef77da9e8f828c50$export$857cd739a7b795d2","AudioContext","webkitAudioContext","$09ac04e9099fa679$exports","$09ac04e9099fa679$export$cf133661e444ccfe","$09ac04e9099fa679$export$fdafb8d8280e29b5","$09ac04e9099fa679$export$a99147c78a56edc4","$09ac04e9099fa679$export$d461c8d5c5db5da7","$09ac04e9099fa679$export$63bb816cc75460","$09ac04e9099fa679$export$a57d114344295149","$09ac04e9099fa679$export$51d5e40b48c771c7","$09ac04e9099fa679$export$7170d04e59f9d553","$44a3bc4c37981ae1$exports","$44a3bc4c37981ae1$var$SDPUtils","NativeRTCIceCandidate","substring","nativeCandidate","parsedCandidate","parseCandidate","toJSON","sdpMid","sdpMLineIndex","usernameFragment","writable","relayProtocol","priority","_sctp","sctpInDescription","sections","splitSections","shift","mediaSection","mLine","parseMLine","protocol","getRemoteFirefoxVersion","getCanSendMaxMessageSize","remoteIsFirefox","canSendMaxMessageSize","browser","getMaxMessageSize","maxMessageSize","matchPrefix","isFirefox","canSendMMS","remoteMMS","Number","POSITIVE_INFINITY","sctp","wrapDcSend","dc","origDataChannelSend","send","readyState","origCreateDataChannel","createDataChannel","dataChannel","channel","completed","checking","iceConnectionState","_onconnectionstatechange","origMethod","_connectionstatechangepoly","_lastConnectionState","connectionState","newEvent","nativeSRD","split","line","trim","join","nativeAddIceCandidate","nativeSetLocalDescription","generateIdentifier","random","localCName","splitLines","parts","getDescription","getMediaSections","foundation","component","ip","address","port","relatedAddress","relatedPort","tcpType","ufrag","writeCandidate","parseIceOptions","parseRtpMap","parsed","payloadType","clockRate","channels","numChannels","writeRtpMap","codec","pt","preferredPayloadType","parseExtmap","uri","attributes","writeExtmap","headerExtension","preferredId","parseFmtp","kv","writeFmtp","parameters","param","parseRtcpFb","parameter","writeRtcpFb","lines","rtcpFeedback","fb","parseSsrcMedia","sp","ssrc","colon","attribute","parseSsrcGroup","semantics","ssrcs","getMid","mid","parseFingerprint","algorithm","getDtlsParameters","sessionpart","role","fingerprints","writeDtlsParameters","setupType","fp","parseCryptoLine","tag","cryptoSuite","keyParams","sessionParams","writeCryptoLine","writeCryptoKeyParams","parseCryptoKeyParams","keyMethod","keySalt","lifeTime","mkiValue","mkiLength","getCryptoParameters","getIceParameters","pwd","password","writeIceParameters","iceLite","parseRtpParameters","codecs","headerExtensions","fecMechanisms","rtcp","mline","profile","rtpmapline","fmtps","wildcardRtcpFb","existingFeedback","writeRtpDescription","caps","maxptime","extension","parseRtpEncodingParameters","secondarySsrc","encodingParameters","hasRed","hasUlpfec","primarySsrc","flows","apt","encParam","codecPayloadType","rtx","fec","mechanism","bandwidth","maxBitrate","parseRtcpParameters","rtcpParameters","remoteSsrc","cname","rsize","reducedSize","compound","mux","writeRtcpParameters","parseMsid","spec","planB","msidParts","parseSctpDescription","maxSizeLine","isNaN","sctpPort","fmt","sctpMapLines","writeSctpDescription","media","output","generateSessionId","substr","writeSessionBoilerplate","sessId","sessVer","sessUser","getDirection","getKind","isRejected","parseOLine","username","sessionId","sessionVersion","netType","addressType","isValidSDP","$6b88aef9b263becf$var$adapter","shimChrome","shimFirefox","shimSafari","$1974f6191091ae7b$export$2d31490a0c05f094","userAgent","mozGetUserMedia","isSecureContext","supportsUnifiedPlan","RTCRtpTransceiver","adapter","commonShim","extractVersion","disableLog","disableWarnings","shimPeerConnection","logging","browserShim","shimGetUserMedia","shimMediaStream","shimOnTrack","shimAddTrackRemoveTrack","shimGetSendersWithDtmf","shimGetStats","shimSenderReceiverGetStats","fixNegotiationNeeded","shimRemoveStream","shimSenderGetStats","shimReceiverGetStats","shimRTCDataChannel","shimAddTransceiver","shimGetParameters","shimCreateOffer","shimCreateAnswer","shimRTCIceServerUrls","shimCreateOfferLegacy","shimCallbacksAPI","shimLocalStreamsAPI","shimRemoteStreamsAPI","shimTrackEventTransceiver","shimAudioContext","$b364f2cd2faf3e98$exports","$fdd18942f3b79c14$require$Buffer","Buffer","TextDecoder","$fdd18942f3b79c14$var$position","$fdd18942f3b79c14$var$EMPTY_ARRAY","$fdd18942f3b79c14$var$STOP_CODE","$fdd18942f3b79c14$var$strings","$fdd18942f3b79c14$var$stringPosition","$fdd18942f3b79c14$var$currentDecoder","$fdd18942f3b79c14$var$srcStringStart","$fdd18942f3b79c14$var$srcStringEnd","$fdd18942f3b79c14$var$currentExtensions","$fdd18942f3b79c14$var$currentExtensionRanges","$fdd18942f3b79c14$var$defaultOptions","useRecords","mapsAsObjects","$fdd18942f3b79c14$var$sequentialMode","$fdd18942f3b79c14$var$inlineObjectReadThreshold","Function","Infinity","$fdd18942f3b79c14$export$f9de6ca0bc043724","keyMap","_keyMap","getStructures","getShared","structures","uninitialized","k","mapKey","entries","decodeKey","encodeKey","encodeKeys","rec","decodeKeys","_mapKey","$fdd18942f3b79c14$var$safeKey","mapDecode","source","end","decode","$fdd18942f3b79c14$var$saveState","$fdd18942f3b79c14$export$e6f020404d5b6c15","DataView","sharedValues","maxPrivatePackedValues","$fdd18942f3b79c14$export$8cb90b5f58dd32e2","decodeMultiple","values","lastPosition","$fdd18942f3b79c14$var$defaultDecoder","$fdd18942f3b79c14$export$aafa59e2e03f2942","postBundlePosition","incomplete","token","majorType","$fdd18942f3b79c14$var$getFloat16","byte0","byte1","exponent","NaN","abs","$fdd18942f3b79c14$var$u8Array","$fdd18942f3b79c14$var$f32Array","getUint16","getFloat32","useFloat32","multiplier","$fdd18942f3b79c14$export$c652a5bbb6be7a36","getUint32","getFloat64","int64AsNumber","getBigUint64","array","object","copyBuffers","string","$fdd18942f3b79c14$var$shortStringInJS","$fdd18942f3b79c14$var$longStringInJS","start","$fdd18942f3b79c14$var$fromCharCode","$fdd18942f3b79c14$var$readFixedString","array1","structure","$fdd18942f3b79c14$var$createStructureReader","$fdd18942f3b79c14$var$readJustLength","$fdd18942f3b79c14$var$recordDefinition","$fdd18942f3b79c14$var$readBundleExt","bundlePosition","bundleLength","dataPosition","$fdd18942f3b79c14$var$readStringJS","position0","position1","$fdd18942f3b79c14$var$loadShared","handlesRead","input","$fdd18942f3b79c14$export$3288d34c523a1192","packedValue","$fdd18942f3b79c14$var$getPackedValues","$fdd18942f3b79c14$var$validName","slowReads","compiledReader","propertyCount","next","units","byte2","byte3","unit","fromCharCode","g","h","l","m","o","Float32Array","dateString","epochSec","round","BigInt","fraction","existingStructure","isShared","restoreStructures","$fdd18942f3b79c14$var$glbl","$fdd18942f3b79c14$var$packedTable","newPackedValues","prefixes","suffixes","$fdd18942f3b79c14$var$combine","refEntry","targetProperties","used","Set","packedValues","$fdd18942f3b79c14$var$isLittleEndianMachine","Uint16Array","$fdd18942f3b79c14$export$aae3eaec024a56b7","Uint8ClampedArray","Uint32Array","BigUint64Array","Int8Array","Int16Array","Int32Array","BigInt64Array","Float64Array","$fdd18942f3b79c14$var$typedArrayTags","$fdd18942f3b79c14$var$registerTypedArray","TypedArray","bytesPerElement","dvMethod","BYTES_PER_ELEMENT","littleEndian","sizeShift","dv","elements","ta","sharedData","updatedStructures","sharedVersion","callback","savedSrcEnd","savedPosition","savedStringPosition","savedSrcStringStart","savedSrcStringEnd","savedSrcString","savedStrings","savedReferenceMap","savedBundledStrings","savedSrc","savedStructures","savedDecoder","savedSequentialMode","$07e009346b695b03$var$Buffer","globalThis","$07e009346b695b03$var$hasNodeBuffer","$07e009346b695b03$var$ByteArrayAllocate","allocUnsafeSlow","$07e009346b695b03$var$ByteArray","$07e009346b695b03$var$MAX_BUFFER_SIZE","$07e009346b695b03$var$position","$07e009346b695b03$var$bundledStrings","$07e009346b695b03$var$hasNonLatin","$07e009346b695b03$var$RECORD_SYMBOL","Symbol","$07e009346b695b03$var$writeEntityLength","majorValue","setUint32","$07e009346b695b03$var$SharedData","$07e009346b695b03$var$writeArrayHeader","$07e009346b695b03$var$BlobConstructor","$07e009346b695b03$var$isBlob","toStringTag","$07e009346b695b03$var$isLittleEndianMachine","$07e009346b695b03$var$typedArrayEncoder","typedArray","from","$07e009346b695b03$var$writeBuffer","makeRoom","$07e009346b695b03$var$writeBundles","position","writeStrings","date","seconds","getTime","useTimestamp32","getMilliseconds","setFloat64","regex","flags","getTag","tagUint8Array","sharedStructures","valuesArray","packedObjectMap","create","sharedPackedObjectMap","definitions","unshift","$07e009346b695b03$var$defaultEncoder","hasSharedUpdate","referenceMap","sharedPackedObjectMap1","encodeUtf8","utf8Write","maxBytes","encodeInto","written","hasSharedStructures","saveStructures","maxSharedStructures","isSequential","sequential","saveShared","samplingPackedValues","packedObjectMap1","recordIdsToRemove","transitionsCount","serializationsSinceTransitionRebuild","mapEncode","encodeOptions","_mapped","$07e009346b695b03$export$d41ac1453288b342","useSelfDescribedHeader","structuredClone","bundleStrings","sharedStructuresLength","transitions","nextTransition","transition","nextId","maxValues","objectMap","$07e009346b695b03$var$findRepetitiveStrings","packedStatus","count","status","includeKeys","$07e009346b695b03$export$e724ae76933ea297","idsToInsert","serialized","$07e009346b695b03$var$insertIds","distanceToMove","lastEnd","sort","referee","references","pop","copyWithin","returnBuffer","updateSharedData","$07e009346b695b03$export$5687accb6effa257","findCommonStringsToPack","threshold","headerSize","packedPosition","strLength","extStart","twoByte","c1","c2","strPosition","charCodeAt","alwaysUseFloat","xShifted","setFloat32","setUint16","writeObject","useTag259ForMaps","entryValue","iterator","iteratorNotHandled","entry","asyncIterator","useToJSON","json","setBigUint64","largeBigIntToFloat","variableMapSize","vals","safePrototype","objectOffset","parentRecordId","newTransitions","recordId","__keys__","$07e009346b695b03$var$MAX_STRUCTURES","newSize","newBuffer","copy","chunkThreshold","continuedChunkThreshold","encodeObjectAsIterable","iterateProperties","finalIterable","tryEncode","element","restartEncoding","restart","startEncoding","encodeIterable","encodeObjectAsAsyncIterable","encodedValue","reader","getReader","done","asyncValue","async","encodeAsIterable","encodeAsAsyncIterable","useBuffer","clearSharedData","lastVersion","structuresCopy","saveResults","existingShared","NEVER","$07e009346b695b03$export$96c94437c95d7862","ALWAYS","$07e009346b695b03$export$9252627518dcde93","DECIMAL_ROUND","$07e009346b695b03$export$50de32e2440ab0bf","DECIMAL_FIT","$07e009346b695b03$export$fa7c7714126eb380","$b73d2ef085c4bd11$export$78406e843f5312da","padStart","$05fe768a05a9fb37$export$bcbeb236456bc779","$0ccff85db5b697d5$var$__extends","setPrototypeOf","__proto__","p","__","$0ccff85db5b697d5$export$ef3eed12d06c0285","_super","DecodeError","_this","$15ec20cc002c5b3c$export$8532a5209571c04a","$15ec20cc002c5b3c$export$69825c7adcc820c6","getInt32","$bd38d4e90483b6c3$export$8654479533463da1","msec","sec","nsec","nsecInSec","$bd38d4e90483b6c3$export$2fd05b828dd81159","_a","rv","secHigh","timeSpec","$bd38d4e90483b6c3$export$abfc8800a5159711","nsec30AndSecHigh2","$812ea64cee3b19c7$export$12677a794dbd89d7","ExtensionCodec","builtInEncoders","builtInDecoders","encoders","decoders","register","tryToEncode","context","encodeExt","decodeExt","defaultCodec","$d3c1734dacb01657$exports","$d3c1734dacb01657$var$process","$d3c1734dacb01657$var$defaultSetTimout","$d3c1734dacb01657$var$defaultClearTimeout","$d3c1734dacb01657$var$runTimeout","fun","setTimeout","clearTimeout","$d3c1734dacb01657$var$queue","$d3c1734dacb01657$var$draining","$d3c1734dacb01657$var$queueIndex","$d3c1734dacb01657$var$cleanUpNextTick","$d3c1734dacb01657$var$drainQueue","timeout","len","run","$d3c1734dacb01657$var$runClearTimeout","marker","$d3c1734dacb01657$var$Item","$d3c1734dacb01657$var$noop","nextTick","title","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","$08c34a1f60f3bee6$var$TEXT_ENCODING_AVAILABLE","$08c34a1f60f3bee6$export$b61de95301265227","extra","$08c34a1f60f3bee6$var$sharedTextEncoder","$08c34a1f60f3bee6$export$ed34c0622b397238","$08c34a1f60f3bee6$export$34cfdc82d430524","outputOffset","$08c34a1f60f3bee6$export$551117984c2adf4f","inputOffset","$08c34a1f60f3bee6$var$sharedTextDecoder","$08c34a1f60f3bee6$export$d866281c5a66d1ef","$87ae84cf50fe3e64$export$f8d669c2a17882f2","isView","$dd3d49c2cea86ad8$export$529b830450faf29c","CachedKeyDecoder","maxKeyLength","maxLengthPerKey","hit","miss","caches","canBeCached","records","FIND_CHUNK","_i","records_1","record","recordBytes","store","cachedValue","slicedCopyOfBytes","$4e6bbfbe891e73f3$var$__generator","thisArg","body","y","_","sent","trys","ops","verb","step","op","$4e6bbfbe891e73f3$var$__asyncValues","__values","$4e6bbfbe891e73f3$var$__await","$4e6bbfbe891e73f3$var$__asyncGenerator","_arguments","generator","q","resume","fulfill","settle","$4e6bbfbe891e73f3$var$isValidMapKeyType","keyType","$4e6bbfbe891e73f3$var$EMPTY_VIEW","$4e6bbfbe891e73f3$var$EMPTY_BYTES","$4e6bbfbe891e73f3$export$449c37eaf7093493","getInt8","$4e6bbfbe891e73f3$var$MORE_DATA","$4e6bbfbe891e73f3$var$sharedCachedKeyDecoder","$d915e63f26169767$var$$parcel$export","Decoder","extensionCodec","maxStrLength","maxBinLength","maxArrayLength","maxMapLength","maxExtLength","keyDecoder","totalPos","headByte","stack","reinitializeState","setBuffer","bufferView","appendBuffer","hasRemaining","remainingData","newData","createExtraByteError","posToShow","doDecodeSync","decodeMulti","decodeAsync","stream_1","stream_1_1","e_1","P","decoded","_b","_c","return","fulfilled","rejected","adopt","decodeArrayStream","decodeMultiAsync","decodeStream","isArray","isArrayHeaderRequired","arrayItemsLeft","stream_2","stream_2_1","e_2","e_3","readArraySize","complete","DECODE","readHeadByte","pushMapState","pushArrayState","decodeUtf8String","readF32","readF64","readU8","readU16","readU32","readU64","readI8","readI16","readI32","readI64","lookU8","lookU16","lookU32","decodeBinary","decodeExtension","state","readCount","headerOffset","stringBytes","stateIsMapKey","headOffset","extType","getUint8","getInt16","Encoder","maxDepth","initialBufferSize","sortKeys","forceFloat32","ignoreUndefined","forceIntegerToFloat","encodeSharedRef","doEncode","depth","encodeNil","encodeBoolean","encodeNumber","encodeString","encodeObject","ensureBufferSizeToWrite","sizeToWrite","requiredSize","resizeBuffer","newBytes","newView","writeU8","isSafeInteger","writeU16","writeU32","writeU64","writeI8","writeI16","writeI32","writeI64","writeF32","writeF64","writeStringHeader","maxHeaderSize","ext","encodeExtension","encodeArray","encodeBinary","encodeMap","writeU8a","object_1","item","countWithoutUndefined","keys_1","keys_2","setUint8","setInt8","setInt16","setInt32","$d915e63f26169767$var$$fcbcc7538a6776d5$export$f1c5f4c9cb95390b","chunkedMTU","_dataCount","chunk","chunks","total","ceil","__peerData","$d915e63f26169767$var$$fb63e766cfafaab9$var$webRTCAdapter","$d915e63f26169767$var$$fb63e766cfafaab9$export$25be9502477c137d","isWebRTCSupported","isBrowserSupported","getBrowser","getVersion","supportedBrowsers","minChromeVersion","minFirefoxVersion","isIOS","minSafariVersion","isUnifiedPlanSupported","tempPc","supported","close","platform","$d915e63f26169767$var$$9a84a32bf0bf36bb$export$f35f128fd59ea256","$d915e63f26169767$var$$0e5fd1585784c252$export$4e61f672936bec77","$d915e63f26169767$var$$4f4134156c446392$var$DEFAULT_CONFIG","credential","$d915e63f26169767$export$7debb50ef11d5e0b","noop","blobToArrayBuffer","fr","FileReader","onload","evt","readAsArrayBuffer","binaryStringToArrayBuffer","binary","byteArray","isSecure","location","CLOUD_HOST","CLOUD_PORT","chunkedBrowsers","Chrome","chrome","defaultConfig","browserVersion","supports","webRTC","audioVideo","binaryBlob","reliable","ordered","binaryType","validateId","randomToken","$d915e63f26169767$var$$257947e92926277a$export$2e2bcd8739ae039","logLevel","_logLevel","_print","setLogFunction","fn","rest","$d915e63f26169767$var$$c4dcfd1d1ea86647$exports","$d915e63f26169767$var$$c4dcfd1d1ea86647$var$has","$d915e63f26169767$var$$c4dcfd1d1ea86647$var$prefix","$d915e63f26169767$var$$c4dcfd1d1ea86647$var$Events","$d915e63f26169767$var$$c4dcfd1d1ea86647$var$EE","$d915e63f26169767$var$$c4dcfd1d1ea86647$var$addListener","emitter","listener","_events","_eventsCount","$d915e63f26169767$var$$c4dcfd1d1ea86647$var$clearEvent","$d915e63f26169767$var$$c4dcfd1d1ea86647$var$EventEmitter","eventNames","events","getOwnPropertySymbols","handlers","ee","listenerCount","a1","a2","a3","a4","a5","prefixed","EventEmitter","$d915e63f26169767$var$$78455e22dea96b8c$exports","$d915e63f26169767$var$$f5f881ec4575f1fc$exports","$d915e63f26169767$var$$8f5bfa60836d261d$export$4798917dbf149b79","secure","host","path","pingInterval","_disconnected","_messagesQueue","_baseUrl","wsProtocol","_id","wsUrl","_socket","WebSocket","onmessage","Message","onclose","_cleanup","Disconnected","onopen","_sendQueuedMessages","_scheduleHeartbeat","_wsPingTimer","_sendHeartbeat","_wsOpen","Heartbeat","copiedQueue","$d915e63f26169767$var$$b82fb8fc0514bfc1$export$89e6bb5ad64bf4a","connection","startConnection","peerConnection","_startPeerConnection","Media","_stream","_addTracksToConnection","originator","dataConnection","config","_initializeDataChannel","_makeOffer","handleSDP","provider","_setupListeners","peerId","peer","connectionId","connectionType","onicecandidate","socket","Candidate","payload","dst","oniceconnectionstatechange","emitError","NegotiationFailed","ConnectionClosed","ondatachannel","getConnection","ontrack","_addStreamToMediaConnection","cleanup","peerConnectionNotClosed","dataChannelNotClosed","offer","sdpTransform","metadata","Data","serialization","Offer","WebRTC","err_1","_makeAnswer","answer","Answer","self","handleCandidate","ice","mediaConnection","$d915e63f26169767$var$$23779d1881157a18$export$6a678e589c8a4542","$d915e63f26169767$export$98871882f492de82","$d915e63f26169767$var$$5045192fc6d387ba$export$23a2a68283c24d80","open","_open","$d915e63f26169767$var$$5c1d08c7c57da9a3$export$4a84e95a2324ac29","ID_PREFIX","localStream","_localStream","remoteStream","_remoteStream","_negotiator","handleMessage","_payload","_getMessages","_removeConnection","$d915e63f26169767$var$$abf266641927cd89$export$2c4e825dc9120f87","_options","_buildRequest","URL","searchParams","now","fetch","href","referrerPolicy","retrieveId","text","pathError","listAllPeers","helpfulError","$d915e63f26169767$var$$6366c4ca161bc297$export$d365f7ad9d7df9c9","MAX_BUFFERED_AMOUNT","chunked","NotOpenYet","_send","$d915e63f26169767$export$ff7c9d4c11d94e8b","bufferSize","_bufferSize","_handleDataMessage","_bufferedSend","msg","_buffering","_trySend","_buffer","bufferedAmount","_tryBuffer","$d915e63f26169767$var$$9fcfddb3ae148f88$export$f0a5a64d5bb37108","_chunkedData","chunker","Binary","deserializedData","peerData","_handleChunk","chunkInfo","$d915e63f26169767$var$$fcbcc7538a6776d5$export$52c89ebcdc4f53f2","_send_blob","_sendChunks","blobPromise","blobs","$d915e63f26169767$var$$bbaee3f15f714663$export$6f88fe47d32c9c94","_chunked","None","$d915e63f26169767$var$$817f931e3f9096cf$export$48880ac635f47186","decoder","encodedData","MessageToBig","$d915e63f26169767$export$ecd1fc136c422448","DEFAULT_KEY","connections","plainConnections","_connections","destroyed","_destroyed","disconnected","userId","_serializers","raw","_lastServerId","_lostMessages","debug","serializers","hostname","logFunction","_api","_createServerConnection","_delayedAbort","BrowserIncompatible","InvalidID","_initialize","_abort","ServerError","_handleMessage","SocketError","Network","disconnect","Close","SocketClosed","src","Open","IdTaken","UnavailableID","InvalidKey","Leave","_cleanupPeer","Expire","PeerUnavailable","_addConnection","_storeMessage","messages","connect","destroy","currentId","reconnect","peers","for","$529a838b10c0f70a$export$37c12b0d5395ed1f","details","toISOString","troubleshooting","$529a838b10c0f70a$export$575c13c422fb6041","STATES","DISCONNECTED","VALIDATING","CONNECTING","CONNECTED","RECONNECTING","ERROR","VALID_TRANSITIONS","currentState","startTime","lastStateChange","errorHistory","metrics","latency","current","average","samples","connectionQuality","reconnects","lastAttempt","errors","byType","stateChange","handler","add","_emit","getState","getMetadata","uptime","_calculateUptime","updateMetrics","sum","sample","_updateConnectionQuality","setState","newState","_isValidTransition","to","oldState","recordError","errorRecord","reset","avgLatency","recentErrors","validNextStates"],"version":3,"file":"index.js.map"}